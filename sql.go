//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	row                 Row
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerLiteral
	optArrayBounds      []IntegerLiteral
}

const any_operator = 57346
const IDENT = 57347
const FCONST = 57348
const SCONST = 57349
const BCONST = 57350
const XCONST = 57351
const Op = 57352
const ICONST = 57353
const PARAM = 57354
const TYPECAST = 57355
const DOT_DOT = 57356
const COLON_EQUALS = 57357
const EQUALS_GREATER = 57358
const LESS_EQUALS = 57359
const GREATER_EQUALS = 57360
const NOT_EQUALS = 57361
const ABORT_P = 57362
const ABSOLUTE_P = 57363
const ACCESS = 57364
const ACTION = 57365
const ADD_P = 57366
const ADMIN = 57367
const AFTER = 57368
const AGGREGATE = 57369
const ALL = 57370
const ALSO = 57371
const ALTER = 57372
const ALWAYS = 57373
const ANALYSE = 57374
const ANALYZE = 57375
const AND = 57376
const ANY = 57377
const ARRAY = 57378
const AS = 57379
const ASC = 57380
const ASSERTION = 57381
const ASSIGNMENT = 57382
const ASYMMETRIC = 57383
const AT = 57384
const ATTRIBUTE = 57385
const AUTHORIZATION = 57386
const BACKWARD = 57387
const BEFORE = 57388
const BEGIN_P = 57389
const BETWEEN = 57390
const BIGINT = 57391
const BINARY = 57392
const BIT = 57393
const BOOLEAN_P = 57394
const BOTH = 57395
const BY = 57396
const CACHE = 57397
const CALLED = 57398
const CASCADE = 57399
const CASCADED = 57400
const CASE = 57401
const CAST = 57402
const CATALOG_P = 57403
const CHAIN = 57404
const CHAR_P = 57405
const CHARACTER = 57406
const CHARACTERISTICS = 57407
const CHECK = 57408
const CHECKPOINT = 57409
const CLASS = 57410
const CLOSE = 57411
const CLUSTER = 57412
const COALESCE = 57413
const COLLATE = 57414
const COLLATION = 57415
const COLUMN = 57416
const COMMENT = 57417
const COMMENTS = 57418
const COMMIT = 57419
const COMMITTED = 57420
const CONCURRENTLY = 57421
const CONFIGURATION = 57422
const CONFLICT = 57423
const CONNECTION = 57424
const CONSTRAINT = 57425
const CONSTRAINTS = 57426
const CONTENT_P = 57427
const CONTINUE_P = 57428
const CONVERSION_P = 57429
const COPY = 57430
const COST = 57431
const CREATE = 57432
const CROSS = 57433
const CSV = 57434
const CUBE = 57435
const CURRENT_P = 57436
const CURRENT_CATALOG = 57437
const CURRENT_DATE = 57438
const CURRENT_ROLE = 57439
const CURRENT_SCHEMA = 57440
const CURRENT_TIME = 57441
const CURRENT_TIMESTAMP = 57442
const CURRENT_USER = 57443
const CURSOR = 57444
const CYCLE = 57445
const DATA_P = 57446
const DATABASE = 57447
const DAY_P = 57448
const DEALLOCATE = 57449
const DEC = 57450
const DECIMAL_P = 57451
const DECLARE = 57452
const DEFAULT = 57453
const DEFAULTS = 57454
const DEFERRABLE = 57455
const DEFERRED = 57456
const DEFINER = 57457
const DELETE_P = 57458
const DELIMITER = 57459
const DELIMITERS = 57460
const DESC = 57461
const DICTIONARY = 57462
const DISABLE_P = 57463
const DISCARD = 57464
const DISTINCT = 57465
const DO = 57466
const DOCUMENT_P = 57467
const DOMAIN_P = 57468
const DOUBLE_P = 57469
const DROP = 57470
const EACH = 57471
const ELSE = 57472
const ENABLE_P = 57473
const ENCODING = 57474
const ENCRYPTED = 57475
const END_P = 57476
const ENUM_P = 57477
const ESCAPE = 57478
const EVENT = 57479
const EXCEPT = 57480
const EXCLUDE = 57481
const EXCLUDING = 57482
const EXCLUSIVE = 57483
const EXECUTE = 57484
const EXISTS = 57485
const EXPLAIN = 57486
const EXTENSION = 57487
const EXTERNAL = 57488
const EXTRACT = 57489
const FALSE_P = 57490
const FAMILY = 57491
const FETCH = 57492
const FILTER = 57493
const FIRST_P = 57494
const FLOAT_P = 57495
const FOLLOWING = 57496
const FOR = 57497
const FORCE = 57498
const FOREIGN = 57499
const FORWARD = 57500
const FREEZE = 57501
const FROM = 57502
const FULL = 57503
const FUNCTION = 57504
const FUNCTIONS = 57505
const GLOBAL = 57506
const GRANT = 57507
const GRANTED = 57508
const GREATEST = 57509
const GROUP_P = 57510
const GROUPING = 57511
const HANDLER = 57512
const HAVING = 57513
const HEADER_P = 57514
const HOLD = 57515
const HOUR_P = 57516
const IDENTITY_P = 57517
const IF_P = 57518
const ILIKE = 57519
const IMMEDIATE = 57520
const IMMUTABLE = 57521
const IMPLICIT_P = 57522
const IMPORT_P = 57523
const IN_P = 57524
const INCLUDING = 57525
const INCREMENT = 57526
const INDEX = 57527
const INDEXES = 57528
const INHERIT = 57529
const INHERITS = 57530
const INITIALLY = 57531
const INLINE_P = 57532
const INNER_P = 57533
const INOUT = 57534
const INPUT_P = 57535
const INSENSITIVE = 57536
const INSERT = 57537
const INSTEAD = 57538
const INT_P = 57539
const INTEGER = 57540
const INTERSECT = 57541
const INTERVAL = 57542
const INTO = 57543
const INVOKER = 57544
const IS = 57545
const ISNULL = 57546
const ISOLATION = 57547
const JOIN = 57548
const KEY = 57549
const LABEL = 57550
const LANGUAGE = 57551
const LARGE_P = 57552
const LAST_P = 57553
const LATERAL_P = 57554
const LEADING = 57555
const LEAKPROOF = 57556
const LEAST = 57557
const LEFT = 57558
const LEVEL = 57559
const LIKE = 57560
const LIMIT = 57561
const LISTEN = 57562
const LOAD = 57563
const LOCAL = 57564
const LOCALTIME = 57565
const LOCALTIMESTAMP = 57566
const LOCATION = 57567
const LOCK_P = 57568
const LOCKED = 57569
const LOGGED = 57570
const MAPPING = 57571
const MATCH = 57572
const MATERIALIZED = 57573
const MAXVALUE = 57574
const MINUTE_P = 57575
const MINVALUE = 57576
const MODE = 57577
const MONTH_P = 57578
const MOVE = 57579
const NAME_P = 57580
const NAMES = 57581
const NATIONAL = 57582
const NATURAL = 57583
const NCHAR = 57584
const NEXT = 57585
const NO = 57586
const NONE = 57587
const NOT = 57588
const NOTHING = 57589
const NOTIFY = 57590
const NOTNULL = 57591
const NOWAIT = 57592
const NULL_P = 57593
const NULLIF = 57594
const NULLS_P = 57595
const NUMERIC = 57596
const OBJECT_P = 57597
const OF = 57598
const OFF = 57599
const OFFSET = 57600
const OIDS = 57601
const ON = 57602
const ONLY = 57603
const OPERATOR = 57604
const OPTION = 57605
const OPTIONS = 57606
const OR = 57607
const ORDER = 57608
const ORDINALITY = 57609
const OUT_P = 57610
const OUTER_P = 57611
const OVER = 57612
const OVERLAPS = 57613
const OVERLAY = 57614
const OWNED = 57615
const OWNER = 57616
const PARSER = 57617
const PARTIAL = 57618
const PARTITION = 57619
const PASSING = 57620
const PASSWORD = 57621
const PLACING = 57622
const PLANS = 57623
const POLICY = 57624
const POSITION = 57625
const PRECEDING = 57626
const PRECISION = 57627
const PRESERVE = 57628
const PREPARE = 57629
const PREPARED = 57630
const PRIMARY = 57631
const PRIOR = 57632
const PRIVILEGES = 57633
const PROCEDURAL = 57634
const PROCEDURE = 57635
const PROGRAM = 57636
const QUOTE = 57637
const RANGE = 57638
const READ = 57639
const REAL = 57640
const REASSIGN = 57641
const RECHECK = 57642
const RECURSIVE = 57643
const REF = 57644
const REFERENCES = 57645
const REFRESH = 57646
const REINDEX = 57647
const RELATIVE_P = 57648
const RELEASE = 57649
const RENAME = 57650
const REPEATABLE = 57651
const REPLACE = 57652
const REPLICA = 57653
const RESET = 57654
const RESTART = 57655
const RESTRICT = 57656
const RETURNING = 57657
const RETURNS = 57658
const REVOKE = 57659
const RIGHT = 57660
const ROLE = 57661
const ROLLBACK = 57662
const ROLLUP = 57663
const ROW = 57664
const ROWS = 57665
const RULE = 57666
const SAVEPOINT = 57667
const SCHEMA = 57668
const SCROLL = 57669
const SEARCH = 57670
const SECOND_P = 57671
const SECURITY = 57672
const SELECT = 57673
const SEQUENCE = 57674
const SEQUENCES = 57675
const SERIALIZABLE = 57676
const SERVER = 57677
const SESSION = 57678
const SESSION_USER = 57679
const SET = 57680
const SETS = 57681
const SETOF = 57682
const SHARE = 57683
const SHOW = 57684
const SIMILAR = 57685
const SIMPLE = 57686
const SKIP = 57687
const SMALLINT = 57688
const SNAPSHOT = 57689
const SOME = 57690
const SQL_P = 57691
const STABLE = 57692
const STANDALONE_P = 57693
const START = 57694
const STATEMENT = 57695
const STATISTICS = 57696
const STDIN = 57697
const STDOUT = 57698
const STORAGE = 57699
const STRICT_P = 57700
const STRIP_P = 57701
const SUBSTRING = 57702
const SYMMETRIC = 57703
const SYSID = 57704
const SYSTEM_P = 57705
const TABLE = 57706
const TABLES = 57707
const TABLESAMPLE = 57708
const TABLESPACE = 57709
const TEMP = 57710
const TEMPLATE = 57711
const TEMPORARY = 57712
const TEXT_P = 57713
const THEN = 57714
const TIME = 57715
const TIMESTAMP = 57716
const TO = 57717
const TRAILING = 57718
const TRANSACTION = 57719
const TRANSFORM = 57720
const TREAT = 57721
const TRIGGER = 57722
const TRIM = 57723
const TRUE_P = 57724
const TRUNCATE = 57725
const TRUSTED = 57726
const TYPE_P = 57727
const TYPES_P = 57728
const UNBOUNDED = 57729
const UNCOMMITTED = 57730
const UNENCRYPTED = 57731
const UNION = 57732
const UNIQUE = 57733
const UNKNOWN = 57734
const UNLISTEN = 57735
const UNLOGGED = 57736
const UNTIL = 57737
const UPDATE = 57738
const USER = 57739
const USING = 57740
const VACUUM = 57741
const VALID = 57742
const VALIDATE = 57743
const VALIDATOR = 57744
const VALUE_P = 57745
const VALUES = 57746
const VARCHAR = 57747
const VARIADIC = 57748
const VARYING = 57749
const VERBOSE = 57750
const VERSION_P = 57751
const VIEW = 57752
const VIEWS = 57753
const VOLATILE = 57754
const WHEN = 57755
const WHERE = 57756
const WHITESPACE_P = 57757
const WINDOW = 57758
const WITH = 57759
const WITHIN = 57760
const WITHOUT = 57761
const WORK = 57762
const WRAPPER = 57763
const WRITE = 57764
const XML_P = 57765
const XMLATTRIBUTES = 57766
const XMLCONCAT = 57767
const XMLELEMENT = 57768
const XMLEXISTS = 57769
const XMLFOREST = 57770
const XMLPARSE = 57771
const XMLPI = 57772
const XMLROOT = 57773
const XMLSERIALIZE = 57774
const YEAR_P = 57775
const YES_P = 57776
const ZONE = 57777
const NOT_LA = 57778
const NULLS_LA = 57779
const WITH_LA = 57780
const OP = 57781
const POSTFIXOP = 57782
const UMINUS = 57783

var yyToknames = []string{
	"any_operator",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
}
var yyStatenames = []string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:3024

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = []int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 227,
	456, 227,
	-2, 235,
	-1, 5,
	1, 230,
	454, 230,
	456, 230,
	-2, 234,
	-1, 13,
	1, 231,
	454, 231,
	456, 231,
	-2, 251,
	-1, 407,
	7, 415,
	15, 415,
	16, 415,
	453, 415,
	-2, 412,
	-1, 408,
	7, 416,
	15, 416,
	16, 416,
	453, 416,
	-2, 413,
	-1, 427,
	7, 748,
	15, 748,
	16, 748,
	453, 748,
	-2, 193,
	-1, 434,
	7, 41,
	-2, 696,
	-1, 435,
	7, 70,
	453, 70,
	-2, 697,
	-1, 436,
	7, 48,
	-2, 698,
	-1, 437,
	7, 70,
	64, 70,
	453, 70,
	-2, 699,
	-1, 438,
	7, 70,
	64, 70,
	453, 70,
	-2, 700,
	-1, 439,
	7, 37,
	-2, 702,
	-1, 440,
	7, 37,
	-2, 703,
	-1, 441,
	7, 50,
	-2, 706,
	-1, 442,
	7, 38,
	-2, 710,
	-1, 443,
	7, 39,
	-2, 711,
	-1, 445,
	7, 70,
	64, 70,
	453, 70,
	-2, 715,
	-1, 446,
	7, 37,
	-2, 718,
	-1, 447,
	7, 42,
	-2, 723,
	-1, 448,
	7, 40,
	-2, 726,
	-1, 449,
	7, 79,
	-2, 728,
	-1, 450,
	7, 79,
	-2, 729,
	-1, 451,
	7, 65,
	64, 65,
	453, 65,
	-2, 733,
	-1, 511,
	322, 321,
	323, 321,
	-2, 80,
	-1, 560,
	138, 235,
	150, 235,
	155, 235,
	199, 235,
	219, 235,
	258, 235,
	266, 235,
	390, 235,
	-2, 164,
	-1, 573,
	7, 399,
	453, 399,
	-2, 367,
	-1, 686,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 92,
	-1, 687,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 93,
	-1, 688,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 94,
	-1, 689,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 95,
	-1, 690,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 96,
	-1, 691,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 97,
	-1, 695,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 105,
	-1, 700,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 109,
	-1, 812,
	271, 335,
	-2, 338,
	-1, 821,
	15, 9,
	16, 9,
	-2, 398,
	-1, 891,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 107,
	-1, 892,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 111,
	-1, 897,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 113,
	-1, 925,
	271, 334,
	-2, 337,
	-1, 986,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 106,
	-1, 989,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 115,
	-1, 992,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 110,
	-1, 996,
	203, 0,
	204, 0,
	249, 0,
	-2, 128,
	-1, 1025,
	271, 336,
	-2, 339,
	-1, 1062,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 108,
	-1, 1063,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 112,
	-1, 1067,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 114,
	-1, 1068,
	203, 0,
	204, 0,
	249, 0,
	-2, 129,
	-1, 1072,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 132,
	-1, 1080,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 146,
	-1, 1081,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 147,
	-1, 1082,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 148,
	-1, 1083,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 149,
	-1, 1084,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 150,
	-1, 1085,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 151,
	-1, 1093,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 134,
	-1, 1120,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 116,
	-1, 1121,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 133,
	-1, 1122,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 135,
	-1, 1142,
	203, 0,
	-2, 155,
	-1, 1156,
	203, 0,
	-2, 156,
	-1, 1162,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 695,
}

const yyNprod = 843
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 13989

var yyAct = []int{

	378, 1161, 938, 1160, 1136, 561, 395, 1111, 1107, 606,
	801, 880, 1049, 398, 970, 14, 818, 29, 612, 998,
	27, 387, 4, 411, 876, 878, 569, 823, 709, 20,
	997, 814, 592, 883, 643, 29, 626, 520, 452, 32,
	486, 639, 564, 381, 375, 372, 522, 392, 803, 483,
	524, 974, 1171, 920, 1170, 1071, 596, 1169, 1158, 396,
	1130, 1071, 1123, 920, 1094, 1071, 1070, 920, 1043, 1071,
	962, 920, 18, 920, 953, 951, 1151, 920, 920, 526,
	950, 949, 948, 920, 920, 920, 925, 922, 921, 920,
	1138, 618, 923, 920, 617, 1090, 1023, 857, 799, 566,
	634, 523, 369, 565, 25, 12, 566, 8, 983, 525,
	565, 888, 1159, 608, 608, 1106, 524, 1104, 1099, 1098,
	1029, 959, 958, 955, 954, 946, 945, 944, 943, 931,
	924, 851, 607, 607, 796, 409, 613, 570, 369, 7,
	10, 410, 368, 940, 1144, 526, 392, 605, 609, 524,
	1139, 1128, 1019, 995, 967, 914, 905, 597, 600, 409,
	838, 828, 827, 350, 571, 615, 976, 590, 589, 588,
	587, 586, 585, 1064, 392, 525, 584, 524, 526, 583,
	11, 582, 572, 7, 549, 1141, 1118, 1117, 392, 1060,
	979, 524, 524, 570, 906, 536, 537, 538, 980, 482,
	877, 975, 1000, 608, 957, 956, 526, 889, 525, 1108,
	879, 941, 540, 936, 824, 593, 392, 853, 1116, 1000,
	526, 526, 607, 1010, 1011, 1012, 549, 499, 1000, 7,
	499, 893, 701, 563, 415, 845, 525, 844, 679, 351,
	1066, 454, 453, 456, 408, 356, 711, 17, 711, 630,
	525, 525, 621, 357, 848, 31, 1175, 1148, 902, 591,
	355, 455, 1102, 927, 497, 797, 558, 497, 412, 627,
	628, 1174, 826, 31, 18, 699, 963, 619, 480, 352,
	360, 513, 1126, 900, 1149, 1087, 856, 392, 359, 359,
	1000, 620, 968, 1054, 1010, 1011, 1012, 1053, 16, 552,
	993, 1050, 506, 1143, 1125, 707, 994, 392, 16, 971,
	524, 1065, 904, 544, 536, 537, 538, 495, 640, 1035,
	581, 359, 494, 354, 580, 613, 354, 363, 23, 1000,
	705, 540, 602, 601, 1133, 524, 5, 1051, 367, 526,
	1152, 524, 982, 524, 631, 549, 884, 1179, 371, 1000,
	349, 969, 932, 933, 542, 544, 1115, 358, 358, 524,
	362, 498, 409, 392, 498, 410, 524, 1178, 6, 525,
	526, 479, 526, 1155, 539, 18, 481, 365, 366, 1056,
	392, 546, 547, 524, 516, 1048, 898, 516, 516, 392,
	358, 903, 524, 507, 525, 526, 542, 360, 552, 810,
	525, 1173, 525, 414, 697, 511, 560, 413, 1088, 1014,
	567, 568, 526, 575, 576, 1127, 496, 973, 1089, 496,
	400, 526, 364, 24, 928, 525, 552, 548, 703, 360,
	647, 13, 478, 702, 19, 3, 648, 645, 708, 399,
	552, 717, 525, 541, 887, 696, 677, 382, 806, 1147,
	1101, 525, 1038, 825, 1135, 406, 386, 405, 391, 390,
	610, 485, 822, 934, 577, 385, 599, 383, 552, 623,
	594, 595, 1110, 860, 544, 859, 863, 820, 603, 545,
	1014, 527, 528, 529, 530, 531, 532, 916, 539, 988,
	632, 29, 512, 629, 361, 353, 824, 598, 491, 15,
	546, 547, 509, 604, 539, 616, 987, 622, 508, 502,
	489, 539, 26, 579, 505, 542, 636, 899, 519, 881,
	29, 545, 539, 1154, 21, 611, 614, 901, 22, 370,
	9, 2, 678, 1, 633, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 642, 0, 548, 0, 650, 529,
	530, 531, 532, 0, 539, 539, 539, 539, 539, 552,
	539, 0, 541, 0, 704, 625, 895, 0, 710, 641,
	698, 0, 543, 0, 706, 0, 805, 624, 811, 539,
	527, 528, 529, 530, 531, 532, 0, 574, 0, 716,
	715, 0, 492, 834, 835, 836, 837, 809, 821, 712,
	1057, 500, 795, 839, 716, 715, 800, 493, 527, 528,
	529, 530, 531, 532, 543, 552, 800, 501, 533, 534,
	535, 850, 527, 528, 529, 530, 531, 532, 532, 573,
	918, 490, 552, 0, 841, 842, 919, 0, 1006, 0,
	545, 552, 829, 830, 831, 832, 1007, 1008, 1009, 0,
	1001, 1002, 1003, 1004, 1005, 1006, 849, 0, 852, 854,
	840, 1003, 1004, 1005, 1006, 843, 0, 0, 650, 846,
	0, 847, 858, 0, 0, 610, 0, 0, 0, 885,
	0, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 0, 0, 515,
	0, 539, 515, 515, 0, 595, 594, 886, 0, 603,
	910, 910, 0, 0, 598, 0, 604, 1007, 1008, 1009,
	0, 1001, 1002, 1003, 1004, 1005, 1006, 0, 894, 31,
	0, 514, 0, 543, 517, 518, 0, 533, 534, 535,
	0, 527, 528, 529, 530, 531, 532, 0, 0, 0,
	0, 1146, 0, 0, 907, 907, 0, 808, 31, 649,
	1001, 1002, 1003, 1004, 1005, 1006, 662, 661, 664, 668,
	31, 0, 527, 528, 529, 530, 531, 532, 0, 373,
	373, 0, 0, 0, 392, 0, 663, 1000, 0, 0,
	0, 0, 0, 646, 0, 714, 0, 527, 528, 529,
	530, 531, 532, 915, 0, 539, 0, 0, 0, 539,
	714, 0, 0, 0, 527, 528, 529, 530, 531, 532,
	539, 0, 0, 527, 528, 529, 530, 531, 532, 0,
	926, 0, 0, 939, 539, 0, 0, 0, 0, 821,
	821, 0, 0, 0, 952, 0, 0, 929, 930, 0,
	935, 0, 0, 0, 0, 960, 539, 0, 0, 0,
	0, 0, 0, 0, 29, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 961, 0, 0, 965, 649,
	0, 0, 0, 539, 966, 0, 662, 661, 664, 668,
	0, 0, 539, 539, 0, 910, 910, 0, 539, 984,
	0, 0, 0, 0, 0, 913, 663, 1013, 0, 910,
	910, 910, 0, 646, 1013, 0, 0, 1018, 539, 981,
	1021, 0, 0, 0, 0, 0, 0, 716, 715, 650,
	0, 0, 0, 560, 0, 0, 0, 0, 539, 907,
	907, 0, 0, 539, 1030, 1031, 1032, 1039, 0, 0,
	1028, 821, 0, 907, 907, 907, 0, 0, 0, 1024,
	0, 0, 0, 0, 0, 1044, 0, 1042, 1045, 0,
	0, 650, 0, 539, 0, 0, 1047, 0, 1046, 0,
	0, 0, 0, 0, 0, 1052, 539, 539, 1055, 0,
	539, 1013, 1013, 539, 1061, 0, 0, 539, 0, 0,
	0, 0, 910, 910, 910, 910, 910, 910, 910, 910,
	910, 910, 910, 910, 910, 0, 1013, 1013, 1013, 650,
	1073, 0, 716, 715, 650, 1091, 1069, 539, 539, 0,
	0, 0, 0, 0, 539, 539, 552, 539, 0, 1058,
	1059, 539, 0, 1097, 0, 0, 907, 907, 907, 907,
	907, 907, 907, 907, 907, 907, 907, 907, 907, 0,
	1105, 0, 0, 539, 539, 1113, 1114, 0, 539, 539,
	0, 31, 0, 539, 0, 1013, 1013, 1013, 1013, 1013,
	1013, 1013, 1013, 1013, 1013, 1013, 1013, 1013, 0, 990,
	991, 1124, 0, 31, 539, 650, 539, 0, 0, 0,
	0, 539, 31, 1015, 1016, 1017, 0, 0, 487, 0,
	539, 0, 0, 539, 1134, 1137, 503, 1132, 510, 0,
	1119, 539, 539, 539, 0, 521, 910, 0, 0, 0,
	539, 0, 0, 714, 553, 554, 555, 556, 557, 1150,
	649, 539, 559, 1013, 910, 0, 1153, 662, 661, 664,
	668, 0, 650, 1166, 0, 1168, 1167, 1013, 1137, 1145,
	0, 0, 578, 0, 1172, 0, 539, 663, 650, 0,
	907, 0, 0, 0, 646, 1157, 0, 0, 0, 0,
	0, 1180, 649, 0, 0, 31, 0, 0, 907, 662,
	661, 664, 668, 0, 0, 0, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 663,
	0, 0, 0, 0, 0, 0, 646, 0, 1001, 1002,
	1003, 1004, 1005, 1006, 0, 0, 0, 0, 714, 0,
	649, 0, 0, 0, 0, 649, 0, 662, 661, 664,
	668, 0, 662, 661, 664, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 0,
	0, 0, 663, 0, 646, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 0, 392, 0, 0, 1000, 0,
	0, 373, 1010, 1011, 1012, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 0, 700, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 0, 662, 661, 664, 668, 0, 0, 0,
	1142, 0, 0, 0, 804, 0, 0, 0, 392, 0,
	0, 1000, 819, 663, 0, 1010, 1011, 1012, 1156, 0,
	646, 0, 0, 0, 833, 0, 0, 0, 392, 0,
	0, 524, 1020, 31, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 0, 0, 0, 0, 0, 0,
	662, 661, 664, 668, 0, 487, 0, 0, 0, 649,
	526, 0, 855, 0, 0, 0, 662, 661, 664, 668,
	663, 0, 521, 0, 0, 0, 31, 646, 882, 0,
	392, 0, 0, 524, 0, 0, 663, 536, 537, 538,
	525, 0, 0, 646, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 524, 540, 0, 0, 536, 537, 538,
	0, 0, 526, 0, 0, 0, 0, 0, 549, 0,
	0, 862, 0, 0, 540, 0, 0, 0, 873, 874,
	875, 0, 526, 0, 891, 892, 0, 0, 549, 897,
	0, 0, 525, 392, 0, 0, 524, 0, 0, 0,
	536, 537, 538, 0, 896, 392, 0, 0, 524, 0,
	0, 0, 525, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 526, 392, 0, 0, 524,
	0, 549, 0, 536, 537, 538, 0, 526, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1014, 0, 0, 0, 525, 0, 552, 526, 0,
	0, 0, 0, 0, 549, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 917, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 0, 0,
	0, 0, 0, 819, 819, 0, 0, 0, 0, 0,
	552, 0, 937, 0, 0, 0, 942, 544, 0, 0,
	0, 0, 0, 546, 547, 0, 0, 0, 0, 0,
	552, 890, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	544, 0, 0, 0, 0, 0, 0, 972, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 985, 986, 0,
	0, 989, 552, 0, 992, 541, 546, 547, 0, 548,
	0, 0, 996, 544, 0, 0, 0, 0, 0, 559,
	0, 542, 552, 0, 0, 541, 0, 1026, 1027, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	1033, 1034, 0, 861, 1036, 0, 0, 0, 0, 1040,
	0, 0, 548, 0, 542, 1007, 1008, 1009, 0, 1001,
	1002, 1003, 1004, 1005, 1006, 552, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 0,
	0, 882, 0, 545, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1062, 1063, 0, 552, 0,
	0, 1067, 1068, 545, 0, 0, 0, 1072, 1007, 1008,
	1009, 0, 1001, 1002, 1003, 1004, 1005, 1006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 1095, 527, 528, 529, 530, 531, 532, 0, 0,
	0, 0, 0, 0, 0, 1100, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 1112,
	0, 882, 882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 1121, 1122, 0, 543, 0, 0, 545,
	533, 534, 535, 0, 527, 528, 529, 530, 531, 532,
	0, 0, 0, 0, 1131, 0, 543, 0, 1129, 0,
	533, 534, 535, 0, 527, 528, 529, 530, 531, 532,
	0, 0, 0, 0, 1103, 0, 0, 0, 0, 0,
	0, 870, 871, 872, 1140, 864, 865, 866, 867, 868,
	869, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 0, 533, 534, 535, 1112, 527, 528, 529,
	530, 531, 532, 0, 0, 1096, 1165, 1165, 0, 527,
	528, 529, 530, 531, 532, 0, 0, 0, 0, 0,
	1165, 0, 543, 713, 0, 0, 533, 534, 535, 0,
	527, 528, 529, 530, 531, 532, 0, 1165, 33, 34,
	35, 36, 37, 38, 39, 40, 718, 41, 42, 43,
	719, 720, 721, 722, 723, 724, 725, 44, 45, 726,
	46, 47, 457, 48, 49, 50, 301, 302, 458, 303,
	304, 727, 51, 52, 53, 54, 55, 728, 729, 56,
	57, 305, 306, 58, 730, 59, 60, 61, 62, 307,
	731, 670, 732, 63, 64, 65, 66, 459, 67, 68,
	69, 733, 70, 71, 72, 73, 74, 75, 734, 460,
	76, 77, 78, 735, 736, 737, 671, 738, 739, 740,
	79, 80, 81, 82, 83, 84, 308, 309, 85, 741,
	86, 742, 87, 88, 89, 90, 91, 743, 92, 93,
	94, 744, 745, 95, 96, 97, 98, 99, 746, 100,
	101, 102, 747, 103, 104, 105, 748, 106, 107, 108,
	109, 310, 110, 111, 112, 311, 749, 113, 750, 114,
	115, 312, 116, 751, 117, 752, 118, 461, 753, 462,
	119, 120, 121, 754, 122, 313, 755, 314, 123, 756,
	124, 125, 126, 127, 128, 463, 129, 130, 131, 132,
	757, 133, 134, 135, 136, 137, 138, 758, 139, 464,
	315, 140, 141, 142, 143, 316, 317, 759, 318, 760,
	144, 465, 466, 145, 467, 146, 147, 148, 149, 150,
	761, 762, 151, 319, 468, 152, 469, 763, 153, 154,
	155, 764, 765, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 320, 470,
	321, 171, 172, 322, 766, 173, 174, 471, 175, 767,
	323, 176, 324, 177, 178, 179, 768, 180, 769, 770,
	181, 182, 183, 771, 772, 184, 325, 472, 185, 473,
	326, 186, 187, 188, 189, 190, 191, 192, 773, 193,
	194, 327, 195, 328, 198, 196, 197, 774, 199, 200,
	201, 202, 203, 204, 205, 206, 329, 207, 208, 209,
	210, 775, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 776, 222, 223, 474, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 777,
	235, 236, 237, 238, 239, 778, 240, 241, 331, 242,
	243, 475, 244, 245, 332, 246, 779, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 780,
	258, 259, 781, 260, 476, 261, 262, 263, 264, 265,
	782, 334, 335, 783, 784, 266, 267, 336, 268, 337,
	785, 269, 270, 271, 272, 273, 274, 275, 786, 787,
	276, 277, 278, 279, 280, 788, 789, 281, 282, 283,
	284, 285, 338, 339, 790, 286, 477, 287, 288, 289,
	290, 791, 792, 291, 793, 794, 292, 293, 294, 295,
	296, 297, 340, 341, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 802, 0, 0, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 718, 41, 42,
	43, 719, 720, 721, 722, 723, 724, 725, 44, 45,
	726, 46, 47, 457, 48, 49, 50, 301, 302, 458,
	303, 304, 727, 51, 52, 53, 54, 55, 728, 729,
	56, 57, 305, 306, 58, 730, 59, 60, 61, 62,
	307, 731, 670, 732, 63, 64, 65, 66, 459, 67,
	68, 69, 733, 70, 71, 72, 73, 74, 75, 734,
	460, 76, 77, 78, 735, 736, 737, 671, 738, 739,
	740, 79, 80, 81, 82, 83, 84, 308, 309, 85,
	741, 86, 742, 87, 88, 89, 90, 91, 743, 92,
	93, 94, 744, 745, 95, 96, 97, 98, 99, 746,
	100, 101, 102, 747, 103, 104, 105, 748, 106, 107,
	108, 109, 310, 110, 111, 112, 311, 749, 113, 750,
	114, 115, 312, 116, 751, 117, 752, 118, 461, 753,
	462, 119, 120, 121, 754, 122, 313, 755, 314, 123,
	756, 124, 125, 126, 127, 128, 463, 129, 130, 131,
	132, 757, 133, 134, 135, 136, 137, 138, 758, 139,
	464, 315, 140, 141, 142, 143, 316, 317, 759, 318,
	760, 144, 465, 466, 145, 467, 146, 147, 148, 149,
	150, 761, 762, 151, 319, 468, 152, 469, 763, 153,
	154, 155, 764, 765, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 320,
	470, 321, 171, 172, 322, 766, 173, 174, 471, 175,
	767, 323, 176, 324, 177, 178, 179, 768, 180, 769,
	770, 181, 182, 183, 771, 772, 184, 325, 472, 185,
	473, 326, 186, 187, 188, 189, 190, 191, 192, 773,
	193, 194, 327, 195, 328, 198, 196, 197, 774, 199,
	200, 201, 202, 203, 204, 205, 206, 329, 207, 208,
	209, 210, 775, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 776, 222, 223, 474, 224, 225,
	226, 330, 227, 228, 229, 230, 231, 232, 233, 234,
	777, 235, 236, 237, 238, 239, 778, 240, 241, 331,
	242, 243, 475, 244, 245, 332, 246, 779, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	780, 258, 259, 781, 260, 476, 261, 262, 263, 264,
	265, 782, 334, 335, 783, 784, 266, 267, 336, 268,
	337, 785, 269, 270, 271, 272, 273, 274, 275, 786,
	787, 276, 277, 278, 279, 280, 788, 789, 281, 282,
	283, 284, 285, 338, 339, 790, 286, 477, 287, 288,
	289, 290, 791, 792, 291, 793, 794, 292, 293, 294,
	295, 296, 297, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 407, 397, 410, 0, 0,
	392, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 815, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 457, 48, 49, 50, 301, 434,
	458, 435, 436, 0, 51, 52, 53, 54, 55, 404,
	428, 56, 57, 437, 438, 58, 0, 59, 60, 61,
	62, 429, 0, 416, 0, 63, 64, 65, 66, 459,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 460, 76, 77, 78, 426, 417, 422, 427, 418,
	419, 423, 79, 80, 81, 82, 83, 84, 439, 440,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 816, 0, 95, 96, 433, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 311, 402, 113,
	0, 114, 115, 441, 116, 0, 117, 0, 118, 461,
	0, 462, 119, 120, 121, 0, 122, 430, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 463, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 464, 315, 140, 141, 142, 143, 442, 443, 0,
	318, 0, 144, 465, 466, 145, 467, 146, 147, 148,
	149, 150, 0, 0, 151, 431, 468, 152, 469, 0,
	153, 154, 155, 420, 421, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	444, 470, 445, 171, 172, 322, 379, 173, 174, 471,
	175, 403, 323, 176, 446, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 472,
	185, 473, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 447, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 474, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 424, 240, 241,
	331, 242, 243, 475, 244, 245, 448, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 476, 261, 262, 263,
	264, 265, 0, 449, 450, 0, 0, 266, 267, 336,
	268, 337, 401, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 425, 0, 281,
	282, 283, 284, 285, 338, 451, 0, 286, 477, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 432, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 380, 0, 0, 0,
	0, 0, 0, 0, 376, 377, 817, 0, 0, 0,
	407, 397, 410, 384, 813, 392, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 457,
	48, 49, 50, 301, 434, 458, 435, 436, 0, 51,
	52, 53, 54, 55, 404, 428, 56, 57, 437, 438,
	58, 0, 59, 60, 61, 62, 429, 0, 416, 0,
	63, 64, 65, 66, 459, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 460, 76, 77, 78,
	426, 417, 422, 427, 418, 419, 423, 79, 80, 81,
	82, 83, 84, 439, 440, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 433, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 402, 113, 0, 114, 115, 441, 116,
	0, 117, 0, 118, 461, 0, 462, 119, 120, 121,
	0, 122, 430, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 463, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 464, 315, 140, 141,
	142, 143, 442, 443, 0, 318, 0, 144, 465, 466,
	145, 467, 146, 147, 148, 149, 150, 0, 0, 151,
	431, 468, 152, 469, 0, 153, 154, 155, 420, 421,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 444, 470, 445, 171, 172,
	322, 379, 173, 174, 471, 175, 403, 323, 176, 446,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 472, 185, 473, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 447, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 474, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 424, 240, 241, 331, 242, 243, 475, 244,
	245, 448, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 476, 261, 262, 263, 264, 265, 0, 449, 450,
	0, 0, 266, 267, 336, 268, 337, 401, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 425, 0, 281, 282, 283, 284, 285, 338,
	451, 0, 286, 477, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	432, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 380, 0, 0, 0, 0, 407, 397, 410, 376,
	377, 392, 409, 0, 0, 0, 0, 0, 384, 1092,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 457, 48, 49, 50, 301,
	434, 458, 435, 436, 0, 51, 52, 53, 54, 55,
	404, 428, 56, 57, 437, 438, 58, 0, 59, 60,
	61, 62, 429, 0, 416, 0, 63, 64, 65, 66,
	459, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 460, 76, 77, 78, 426, 417, 422, 427,
	418, 419, 423, 79, 80, 81, 82, 83, 84, 439,
	440, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 433, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 402,
	113, 0, 114, 115, 441, 116, 0, 117, 0, 118,
	461, 0, 462, 119, 120, 121, 0, 122, 430, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 463, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 464, 315, 140, 141, 142, 143, 442, 443,
	0, 318, 0, 144, 465, 466, 145, 467, 146, 147,
	148, 149, 150, 0, 0, 151, 431, 468, 152, 469,
	0, 153, 154, 155, 420, 421, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 444, 470, 445, 171, 172, 322, 379, 173, 174,
	471, 175, 403, 323, 176, 446, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	472, 185, 473, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 447,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 474,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 424, 240,
	241, 331, 242, 243, 475, 244, 245, 448, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 476, 261, 262,
	263, 264, 265, 0, 449, 450, 0, 0, 266, 267,
	336, 268, 337, 401, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 425, 0,
	281, 282, 283, 284, 285, 338, 451, 0, 286, 477,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 432, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 407, 397, 410, 376, 377, 392, 409, 0,
	0, 0, 0, 0, 384, 1022, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 457, 48, 49, 50, 301, 434, 458, 435, 436,
	0, 51, 52, 53, 54, 55, 404, 428, 56, 57,
	437, 438, 58, 0, 59, 60, 61, 62, 429, 0,
	416, 0, 63, 64, 65, 66, 459, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 460, 76,
	77, 78, 426, 417, 422, 427, 418, 419, 423, 79,
	80, 81, 82, 83, 84, 439, 440, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 433, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 311, 402, 113, 0, 114, 115,
	441, 116, 0, 117, 0, 118, 461, 0, 462, 119,
	120, 121, 0, 122, 430, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 463, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 464, 315,
	140, 141, 142, 143, 442, 443, 0, 318, 0, 144,
	465, 466, 145, 467, 146, 147, 148, 149, 150, 0,
	0, 151, 431, 468, 152, 469, 0, 153, 154, 155,
	420, 421, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 444, 470, 445,
	171, 172, 322, 379, 173, 174, 471, 175, 403, 323,
	176, 446, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 472, 185, 473, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 447, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 474, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 8, 235,
	236, 237, 238, 239, 424, 240, 241, 331, 242, 243,
	475, 244, 245, 448, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 10, 260, 476, 261, 262, 263, 264, 265, 0,
	449, 450, 0, 0, 266, 267, 336, 268, 337, 401,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 425, 0, 281, 282, 283, 284,
	285, 562, 451, 0, 286, 477, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 432, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 380, 0, 0, 0, 0, 407, 397,
	410, 376, 377, 392, 409, 0, 0, 0, 0, 0,
	384, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 457, 48, 49,
	50, 301, 434, 458, 435, 436, 0, 51, 52, 53,
	54, 55, 404, 428, 56, 57, 437, 438, 58, 0,
	59, 60, 61, 62, 429, 0, 416, 0, 63, 64,
	65, 66, 459, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 460, 76, 77, 78, 426, 417,
	422, 427, 418, 419, 423, 79, 80, 81, 82, 83,
	84, 439, 440, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	433, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	311, 402, 113, 0, 114, 115, 441, 116, 0, 117,
	0, 118, 461, 0, 462, 119, 120, 121, 0, 122,
	430, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	463, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 464, 315, 140, 141, 142, 143,
	442, 443, 0, 318, 0, 144, 465, 466, 145, 467,
	146, 147, 148, 149, 150, 0, 0, 151, 431, 468,
	152, 469, 0, 153, 154, 155, 420, 421, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 444, 470, 445, 171, 172, 322, 379,
	173, 174, 471, 175, 403, 323, 176, 446, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 472, 185, 473, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 447, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 474, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	424, 240, 241, 331, 242, 243, 475, 244, 245, 448,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 476,
	261, 262, 263, 264, 265, 0, 449, 450, 0, 0,
	266, 267, 336, 268, 337, 401, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	425, 0, 281, 282, 283, 284, 285, 338, 451, 0,
	286, 477, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 432, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 380,
	0, 0, 0, 0, 407, 397, 410, 376, 377, 392,
	409, 0, 0, 0, 0, 0, 384, 812, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 457, 48, 49, 50, 301, 434, 458,
	435, 436, 0, 51, 52, 53, 54, 55, 404, 428,
	56, 57, 437, 438, 58, 0, 59, 60, 61, 62,
	429, 0, 416, 0, 63, 64, 65, 66, 459, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	460, 76, 77, 78, 426, 417, 422, 427, 418, 419,
	423, 79, 80, 81, 82, 83, 84, 439, 440, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 433, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 311, 402, 113, 0,
	114, 115, 441, 116, 0, 117, 0, 118, 461, 0,
	462, 119, 120, 121, 0, 122, 430, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 463, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	464, 315, 140, 141, 142, 143, 442, 443, 0, 318,
	0, 144, 465, 466, 145, 467, 146, 147, 148, 149,
	150, 0, 0, 151, 431, 468, 152, 469, 0, 153,
	154, 155, 420, 421, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 444,
	470, 445, 171, 172, 322, 379, 173, 174, 471, 175,
	403, 323, 176, 446, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 472, 185,
	473, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 447, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 474, 224, 225,
	226, 394, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 424, 240, 241, 331,
	242, 243, 475, 244, 245, 448, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 476, 261, 262, 263, 264,
	265, 0, 449, 450, 0, 0, 266, 267, 336, 268,
	337, 401, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 425, 0, 281, 282,
	283, 284, 285, 338, 451, 0, 286, 477, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 432, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 380, 0, 0, 0, 0,
	407, 397, 410, 376, 377, 392, 409, 0, 0, 0,
	570, 807, 384, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 457,
	48, 49, 50, 301, 434, 458, 435, 436, 0, 51,
	52, 53, 54, 55, 404, 428, 56, 57, 437, 438,
	58, 0, 59, 60, 61, 62, 429, 0, 416, 0,
	63, 64, 65, 66, 459, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 460, 76, 77, 78,
	426, 417, 422, 427, 418, 419, 423, 79, 80, 81,
	82, 83, 84, 439, 440, 85, 488, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 433, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 402, 113, 0, 114, 115, 441, 116,
	0, 117, 0, 118, 461, 0, 462, 119, 120, 121,
	0, 122, 430, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 463, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 464, 315, 140, 141,
	142, 143, 442, 443, 0, 318, 0, 144, 465, 466,
	145, 467, 146, 147, 148, 149, 150, 0, 0, 151,
	431, 468, 152, 469, 0, 153, 154, 155, 420, 421,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 444, 470, 445, 171, 172,
	322, 379, 173, 174, 471, 175, 403, 323, 176, 446,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 472, 185, 473, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 447, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 474, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 424, 240, 241, 331, 242, 243, 475, 244,
	245, 448, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 476, 261, 262, 263, 264, 265, 0, 449, 450,
	0, 0, 266, 267, 336, 268, 337, 401, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 425, 0, 281, 282, 283, 284, 285, 338,
	451, 0, 286, 477, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	432, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 380, 0, 0, 0, 0, 407, 397, 410, 376,
	377, 392, 409, 0, 0, 0, 0, 0, 384, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 457, 48, 49, 50, 301,
	434, 458, 435, 436, 0, 51, 52, 53, 54, 55,
	404, 428, 56, 57, 437, 438, 58, 0, 59, 60,
	61, 62, 429, 0, 416, 0, 63, 64, 65, 66,
	459, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 460, 76, 77, 78, 426, 417, 422, 427,
	418, 419, 423, 79, 80, 81, 82, 83, 84, 439,
	440, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 433, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 402,
	113, 0, 114, 115, 441, 116, 0, 117, 0, 118,
	461, 0, 462, 119, 120, 121, 0, 122, 430, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 463, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 464, 315, 140, 141, 142, 143, 442, 443,
	0, 318, 0, 144, 465, 466, 145, 467, 146, 147,
	148, 149, 150, 0, 0, 151, 431, 468, 152, 469,
	0, 153, 154, 155, 420, 421, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 444, 470, 445, 171, 172, 322, 379, 173, 174,
	471, 175, 403, 323, 176, 446, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	472, 185, 473, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 447,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 474,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 424, 240,
	241, 331, 242, 243, 475, 244, 245, 448, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 476, 261, 262,
	263, 264, 265, 0, 449, 450, 0, 0, 266, 267,
	336, 268, 337, 401, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 425, 0,
	281, 282, 283, 284, 285, 338, 451, 0, 286, 477,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 432, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 0, 0, 0, 376, 377, 374, 0, 0,
	407, 397, 410, 0, 384, 392, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 504, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 457,
	48, 49, 50, 301, 434, 458, 435, 436, 0, 51,
	52, 53, 54, 55, 404, 428, 56, 57, 437, 438,
	58, 0, 59, 60, 61, 62, 429, 0, 416, 0,
	63, 64, 65, 66, 459, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 460, 76, 77, 78,
	426, 417, 422, 427, 418, 419, 423, 79, 80, 81,
	82, 83, 84, 439, 440, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 433, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 402, 113, 0, 114, 115, 441, 116,
	0, 117, 0, 118, 461, 0, 462, 119, 120, 121,
	0, 122, 430, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 463, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 464, 315, 140, 141,
	142, 143, 442, 443, 0, 318, 0, 144, 465, 466,
	145, 467, 146, 147, 148, 149, 150, 0, 0, 151,
	431, 468, 152, 469, 0, 153, 154, 155, 420, 421,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 444, 470, 445, 171, 172,
	322, 379, 173, 174, 471, 175, 403, 323, 176, 446,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 472, 185, 473, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 447, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 474, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 424, 240, 241, 331, 242, 243, 475, 244,
	245, 448, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 476, 261, 262, 263, 264, 265, 0, 449, 450,
	0, 0, 266, 267, 336, 268, 337, 401, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 425, 0, 281, 282, 283, 284, 285, 338,
	451, 0, 286, 477, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	432, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 380, 0, 0, 0, 0, 407, 397, 410, 376,
	377, 392, 409, 0, 0, 0, 0, 0, 384, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 457, 48, 49, 50, 301,
	434, 458, 435, 436, 0, 51, 52, 53, 54, 55,
	404, 428, 56, 57, 437, 438, 58, 0, 59, 60,
	61, 62, 429, 0, 416, 0, 63, 64, 65, 66,
	459, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 460, 76, 77, 1164, 426, 417, 422, 427,
	418, 419, 423, 79, 80, 81, 82, 83, 84, 439,
	440, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 433, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 402,
	113, 0, 114, 115, 441, 116, 0, 117, 0, 118,
	461, 0, 462, 119, 120, 121, 0, 122, 430, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 463, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 464, 315, 140, 141, 142, 143, 442, 443,
	0, 318, 0, 144, 465, 466, 145, 467, 146, 147,
	148, 149, 150, 0, 0, 151, 431, 468, 152, 469,
	0, 153, 154, 155, 420, 421, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 444, 470, 445, 171, 172, 322, 379, 173, 174,
	471, 175, 403, 323, 176, 446, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	472, 185, 473, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 447,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 474,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 424, 240,
	241, 331, 242, 243, 475, 244, 245, 448, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 476, 261, 262,
	263, 264, 265, 0, 449, 450, 0, 0, 266, 267,
	336, 268, 337, 401, 269, 270, 271, 272, 1163, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 425, 0,
	281, 282, 283, 284, 285, 338, 451, 0, 286, 477,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 432, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 407, 397, 410, 376, 377, 392, 409, 0,
	0, 0, 0, 0, 384, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 457, 48, 49, 50, 1162, 434, 458, 435, 436,
	0, 51, 52, 53, 54, 55, 404, 428, 56, 57,
	437, 438, 58, 0, 59, 60, 61, 62, 429, 0,
	416, 0, 63, 64, 65, 66, 459, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 460, 76,
	77, 1164, 426, 417, 422, 427, 418, 419, 423, 79,
	80, 81, 82, 83, 84, 439, 440, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 433, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 311, 402, 113, 0, 114, 115,
	441, 116, 0, 117, 0, 118, 461, 0, 462, 119,
	120, 121, 0, 122, 430, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 463, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 464, 315,
	140, 141, 142, 143, 442, 443, 0, 318, 0, 144,
	465, 466, 145, 467, 146, 147, 148, 149, 150, 0,
	0, 151, 431, 468, 152, 469, 0, 153, 154, 155,
	420, 421, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 444, 470, 445,
	171, 172, 322, 379, 173, 174, 471, 175, 403, 323,
	176, 446, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 472, 185, 473, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 447, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 474, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 424, 240, 241, 331, 242, 243,
	475, 244, 245, 448, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 476, 261, 262, 263, 264, 265, 0,
	449, 450, 0, 0, 266, 267, 336, 268, 337, 401,
	269, 270, 271, 272, 1163, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 425, 0, 281, 282, 283, 284,
	285, 338, 451, 0, 286, 477, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 432, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 380, 0, 0, 0, 0, 407, 397,
	410, 376, 377, 392, 409, 0, 0, 0, 0, 0,
	384, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 457, 48, 49,
	50, 301, 434, 458, 435, 436, 0, 51, 52, 53,
	54, 55, 404, 428, 56, 57, 437, 438, 58, 0,
	59, 60, 61, 62, 429, 0, 416, 0, 63, 64,
	65, 66, 459, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 460, 76, 77, 78, 426, 417,
	422, 427, 418, 419, 423, 79, 80, 81, 82, 83,
	84, 439, 440, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	433, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	311, 402, 113, 0, 114, 115, 441, 116, 0, 117,
	0, 118, 461, 0, 462, 119, 120, 121, 0, 122,
	430, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	463, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 464, 315, 140, 141, 142, 143,
	442, 443, 0, 318, 0, 144, 465, 466, 145, 467,
	146, 147, 148, 149, 150, 0, 0, 151, 431, 468,
	152, 469, 0, 153, 154, 155, 420, 421, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 444, 470, 445, 171, 172, 322, 379,
	173, 174, 471, 175, 403, 323, 176, 446, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 472, 185, 473, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 447, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 474, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	424, 240, 241, 331, 242, 243, 475, 244, 245, 448,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 476,
	261, 262, 263, 264, 265, 0, 449, 450, 0, 0,
	266, 267, 336, 268, 337, 401, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	425, 0, 281, 282, 283, 284, 285, 338, 451, 0,
	286, 477, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 432, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 380,
	0, 0, 0, 0, 407, 397, 410, 376, 377, 392,
	409, 0, 0, 0, 0, 0, 384, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 457, 48, 49, 50, 301, 434, 458,
	435, 436, 0, 51, 52, 53, 54, 55, 404, 428,
	56, 57, 437, 438, 58, 0, 59, 60, 61, 62,
	429, 0, 416, 0, 63, 64, 65, 66, 459, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	460, 76, 77, 78, 426, 417, 422, 427, 418, 419,
	423, 79, 80, 81, 82, 83, 84, 439, 440, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 433, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 311, 402, 113, 0,
	114, 115, 441, 116, 0, 117, 0, 118, 461, 0,
	462, 119, 120, 121, 0, 122, 430, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 463, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	464, 315, 140, 141, 142, 143, 442, 443, 0, 318,
	0, 144, 465, 466, 145, 467, 146, 147, 148, 149,
	150, 0, 0, 151, 431, 468, 152, 469, 0, 153,
	154, 155, 420, 421, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 444,
	470, 445, 171, 172, 322, 0, 173, 174, 471, 175,
	403, 323, 176, 446, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 472, 185,
	473, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 447, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 474, 224, 225,
	226, 912, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 424, 240, 241, 331,
	242, 243, 475, 244, 245, 448, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 476, 261, 262, 263, 264,
	265, 0, 449, 450, 0, 0, 266, 267, 336, 268,
	337, 401, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 425, 0, 281, 282,
	283, 284, 285, 338, 451, 0, 286, 477, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 432, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 0, 0, 0, 0, 0,
	407, 397, 410, 908, 909, 392, 409, 0, 0, 0,
	0, 0, 911, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 457,
	48, 49, 50, 301, 434, 458, 435, 436, 0, 51,
	52, 53, 54, 55, 404, 428, 56, 57, 437, 438,
	58, 0, 59, 60, 61, 62, 429, 0, 416, 0,
	63, 64, 65, 66, 459, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 460, 76, 77, 78,
	426, 417, 422, 427, 418, 419, 423, 79, 80, 81,
	82, 83, 84, 439, 440, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 433, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 402, 113, 0, 114, 115, 441, 116,
	0, 117, 0, 118, 461, 0, 462, 119, 120, 121,
	0, 122, 430, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 463, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 464, 315, 140, 141,
	142, 143, 442, 443, 0, 318, 0, 144, 0, 466,
	145, 467, 146, 147, 148, 149, 150, 0, 0, 151,
	431, 468, 152, 469, 0, 153, 154, 155, 420, 421,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 444, 470, 445, 171, 172,
	322, 0, 173, 174, 471, 175, 403, 323, 176, 446,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 472, 185, 473, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 447, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 474, 224, 225, 226, 912, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 424, 240, 241, 331, 242, 243, 475, 244,
	245, 448, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 476, 261, 262, 263, 264, 265, 0, 449, 450,
	0, 0, 266, 267, 336, 268, 337, 401, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 425, 0, 281, 282, 283, 284, 285, 338,
	451, 0, 286, 477, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	432, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 0, 0, 0, 0, 0, 407, 397, 410, 908,
	909, 392, 409, 0, 0, 0, 0, 0, 911, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 457, 48, 49, 50, 0,
	434, 458, 435, 436, 0, 51, 52, 53, 54, 55,
	404, 428, 56, 57, 437, 438, 58, 0, 59, 60,
	61, 62, 429, 0, 416, 0, 63, 64, 65, 66,
	459, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 460, 76, 77, 1164, 426, 417, 422, 427,
	418, 419, 423, 79, 80, 81, 82, 83, 84, 439,
	440, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 433, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 402,
	113, 0, 114, 115, 441, 116, 0, 117, 0, 118,
	461, 0, 462, 119, 120, 121, 0, 122, 430, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 464, 315, 140, 141, 142, 143, 442, 443,
	0, 318, 0, 144, 0, 0, 145, 467, 146, 147,
	148, 149, 150, 0, 0, 151, 431, 468, 152, 0,
	0, 153, 154, 155, 420, 421, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 444, 470, 445, 171, 172, 322, 379, 173, 174,
	0, 175, 403, 323, 176, 446, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	472, 185, 473, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 447,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 474,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 424, 240,
	241, 331, 242, 243, 0, 244, 245, 448, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 476, 261, 262,
	263, 264, 265, 0, 449, 450, 0, 0, 266, 267,
	336, 268, 337, 401, 269, 270, 271, 272, 1163, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 425, 0,
	281, 282, 283, 284, 285, 338, 451, 0, 286, 477,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 432, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 0, 0, 0,
	0, 0, 407, 397, 410, 376, 377, 392, 409, 0,
	0, 0, 0, 0, 384, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 457, 48, 49, 50, 0, 434, 458, 435, 436,
	0, 51, 52, 53, 54, 55, 404, 428, 56, 57,
	437, 438, 58, 0, 59, 60, 61, 62, 429, 0,
	416, 0, 63, 64, 65, 66, 459, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 460, 76,
	77, 78, 426, 417, 422, 427, 418, 419, 423, 79,
	80, 81, 82, 83, 84, 439, 440, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 433, 98, 99, 0, 100, 101,
	102, 0, 103, 0, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 311, 402, 113, 0, 114, 115,
	441, 116, 0, 117, 0, 118, 461, 0, 462, 119,
	120, 121, 0, 122, 430, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 0, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 464, 315,
	140, 141, 142, 143, 442, 443, 0, 318, 0, 144,
	0, 0, 145, 467, 146, 147, 148, 149, 150, 0,
	0, 151, 431, 468, 152, 0, 0, 153, 154, 155,
	420, 421, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 444, 470, 445,
	171, 172, 322, 379, 173, 174, 0, 175, 403, 323,
	176, 446, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 472, 185, 473, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 447, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 474, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 424, 240, 241, 331, 242, 243,
	0, 244, 245, 448, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 476, 261, 262, 263, 264, 265, 0,
	449, 450, 0, 0, 266, 267, 336, 268, 337, 401,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 425, 0, 281, 282, 283, 284,
	285, 338, 451, 0, 286, 477, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 432, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 0, 0, 0, 30, 0, 0, 0,
	0, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	384, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 0, 48, 49, 50, 301,
	302, 0, 303, 304, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 305, 306, 58, 0, 59, 60,
	61, 62, 307, 0, 0, 0, 63, 64, 65, 66,
	0, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 0, 76, 77, 78, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 97, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 0,
	113, 0, 114, 115, 312, 116, 0, 117, 0, 118,
	0, 0, 0, 119, 120, 121, 0, 122, 313, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 0, 315, 140, 141, 142, 143, 316, 317,
	0, 318, 0, 144, 0, 0, 145, 0, 146, 147,
	148, 149, 150, 0, 0, 151, 319, 0, 152, 0,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 0, 321, 171, 172, 322, 0, 173, 174,
	0, 175, 0, 323, 176, 324, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 325,
	0, 185, 0, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 329,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 0,
	224, 225, 226, 330, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 331, 242, 243, 0, 244, 245, 332, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 0, 261, 262,
	263, 264, 265, 0, 334, 335, 0, 0, 266, 267,
	336, 268, 337, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 338, 339, 0, 286, 0,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 0, 0, 0,
	30, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 940, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 0, 0, 0, 44, 45, 0, 46, 47, 0,
	48, 49, 50, 301, 302, 0, 303, 304, 0, 51,
	52, 53, 54, 55, 0, 0, 56, 57, 305, 306,
	58, 0, 59, 60, 61, 62, 307, 0, 0, 0,
	63, 64, 65, 66, 0, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 0, 76, 77, 78,
	0, 0, 0, 0, 0, 0, 0, 79, 80, 81,
	82, 83, 84, 308, 309, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 97, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 310, 110,
	111, 112, 311, 0, 113, 0, 114, 115, 312, 116,
	0, 117, 0, 118, 0, 0, 0, 119, 120, 121,
	0, 122, 313, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 0, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 0, 315, 140, 141,
	142, 143, 316, 317, 0, 318, 0, 144, 0, 0,
	145, 0, 146, 147, 148, 149, 150, 0, 0, 151,
	319, 0, 152, 0, 0, 153, 154, 155, 0, 0,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 320, 0, 321, 171, 172,
	322, 0, 173, 174, 0, 175, 0, 323, 176, 324,
	177, 178, 179, 0, 180, 0, 0, 181, 182, 183,
	0, 0, 184, 325, 0, 185, 0, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 329, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 0, 224, 225, 226, 330, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 0, 240, 241, 331, 242, 243, 0, 244,
	245, 332, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 0, 261, 262, 263, 264, 265, 0, 334, 335,
	0, 0, 266, 267, 336, 268, 337, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 0, 0, 281, 282, 283, 284, 285, 338,
	339, 0, 286, 0, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	341, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 0, 0, 0, 30, 0, 0, 392, 0, 0,
	1000, 0, 0, 0, 1010, 1011, 1012, 0, 484, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 999, 0, 0, 0, 0, 0, 0, 44, 45,
	0, 46, 47, 0, 48, 49, 50, 301, 302, 0,
	303, 304, 0, 51, 52, 53, 54, 55, 0, 0,
	56, 57, 305, 306, 58, 0, 59, 60, 61, 62,
	307, 0, 0, 0, 63, 64, 65, 66, 0, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	0, 76, 77, 78, 0, 0, 0, 0, 0, 0,
	0, 79, 80, 81, 82, 83, 84, 308, 309, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 97, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 310, 110, 111, 112, 311, 0, 113, 0,
	114, 115, 312, 116, 0, 117, 0, 118, 0, 0,
	0, 119, 120, 121, 0, 122, 313, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 0, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	0, 315, 140, 141, 142, 143, 316, 317, 0, 318,
	1014, 144, 0, 0, 145, 0, 146, 147, 148, 149,
	150, 0, 0, 151, 319, 0, 152, 0, 0, 153,
	154, 155, 0, 0, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 320,
	0, 321, 171, 172, 322, 0, 173, 174, 0, 175,
	0, 323, 176, 324, 177, 178, 179, 0, 180, 552,
	28, 181, 182, 183, 0, 0, 184, 325, 0, 185,
	0, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 329, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 0, 224, 225,
	226, 330, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 0, 240, 241, 331,
	242, 243, 0, 244, 245, 332, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 0, 261, 262, 263, 264,
	265, 0, 334, 335, 0, 0, 266, 267, 336, 268,
	337, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 0, 0, 281, 282,
	283, 284, 285, 338, 339, 0, 286, 0, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 30, 0, 1007, 1008, 1009,
	0, 1001, 1002, 1003, 1004, 1005, 1006, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 0, 0, 0, 44,
	45, 0, 46, 47, 0, 48, 49, 50, 301, 302,
	0, 303, 304, 0, 51, 52, 53, 54, 55, 0,
	0, 56, 57, 305, 306, 58, 0, 59, 60, 61,
	62, 307, 0, 0, 0, 63, 64, 65, 66, 0,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 0, 76, 77, 78, 0, 0, 0, 0, 0,
	0, 0, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 97, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 310, 110, 111, 112, 311, 0, 113,
	0, 114, 115, 312, 116, 0, 117, 0, 118, 0,
	0, 0, 119, 120, 121, 0, 122, 313, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 0, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 0, 315, 140, 141, 142, 143, 316, 317, 0,
	318, 0, 144, 0, 0, 145, 0, 146, 147, 148,
	149, 150, 0, 0, 151, 319, 0, 152, 0, 0,
	153, 154, 155, 0, 0, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 0, 321, 171, 172, 322, 0, 173, 174, 0,
	175, 0, 323, 176, 324, 177, 178, 179, 0, 180,
	0, 0, 181, 182, 183, 0, 0, 184, 325, 0,
	185, 0, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 0, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 0, 240, 241,
	331, 242, 243, 0, 244, 245, 332, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 0, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 0, 0, 281,
	282, 283, 284, 285, 338, 339, 0, 286, 0, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 30, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 0, 48, 49, 50, 301,
	302, 0, 303, 304, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 305, 306, 58, 0, 59, 60,
	61, 62, 307, 0, 0, 0, 63, 64, 65, 66,
	0, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 0, 76, 77, 78, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 97, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 0,
	113, 0, 114, 115, 312, 116, 0, 117, 0, 118,
	0, 0, 0, 119, 120, 121, 0, 122, 313, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 0, 315, 140, 141, 142, 143, 316, 317,
	0, 318, 0, 144, 0, 0, 145, 0, 146, 147,
	148, 149, 150, 0, 0, 151, 319, 0, 152, 0,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 0, 321, 171, 172, 322, 0, 173, 174,
	0, 175, 0, 323, 176, 324, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 325,
	0, 185, 0, 326, 186, 187, 188, 189, 0, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 0, 206, 329,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 0,
	224, 225, 226, 330, 0, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 331, 242, 243, 0, 244, 245, 332, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 0, 261, 262,
	263, 264, 265, 0, 334, 335, 0, 0, 266, 267,
	336, 268, 337, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 338, 339, 0, 286, 0,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 457, 48, 49, 50,
	0, 654, 458, 669, 660, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 673, 672, 58, 0, 59,
	60, 61, 62, 0, 0, 670, 0, 63, 64, 65,
	66, 459, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 460, 76, 77, 78, 0, 0, 0,
	671, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	658, 657, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 433,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 0, 110, 111, 112, 0,
	0, 113, 0, 114, 115, 656, 116, 0, 117, 0,
	118, 461, 0, 462, 119, 120, 121, 0, 122, 0,
	0, 0, 123, 0, 124, 125, 126, 127, 128, 463,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 464, 0, 140, 141, 142, 143, 651,
	652, 0, 0, 0, 144, 465, 466, 145, 467, 146,
	147, 148, 149, 150, 0, 0, 151, 0, 468, 152,
	469, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 675, 470, 676, 171, 172, 0, 0, 173,
	174, 471, 175, 0, 0, 176, 659, 177, 178, 179,
	0, 180, 0, 0, 181, 182, 183, 0, 0, 184,
	0, 472, 185, 473, 0, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 0, 195, 0, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	655, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	474, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 644, 242, 243, 475, 244, 245, 653, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 0, 0, 258, 259, 0, 260, 476, 261,
	262, 263, 264, 265, 0, 666, 665, 0, 0, 266,
	267, 0, 268, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 0, 674, 0, 286,
	477, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 0, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 457, 48, 49, 50, 0,
	654, 458, 669, 660, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 673, 672, 58, 0, 59, 60,
	61, 62, 0, 0, 670, 0, 63, 64, 65, 66,
	459, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 460, 76, 77, 78, 0, 0, 0, 671,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 658,
	657, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 433, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 0, 110, 111, 112, 0, 0,
	113, 0, 114, 115, 656, 116, 0, 117, 0, 118,
	461, 0, 462, 119, 120, 121, 0, 122, 0, 0,
	0, 123, 0, 124, 125, 126, 127, 128, 463, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 464, 0, 140, 141, 142, 143, 651, 652,
	0, 0, 0, 144, 465, 466, 145, 467, 146, 147,
	148, 149, 150, 0, 0, 151, 0, 468, 152, 469,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 675, 470, 676, 171, 172, 0, 0, 173, 174,
	471, 175, 0, 0, 176, 659, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 0,
	472, 185, 473, 0, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 0, 195, 0, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 655,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 474,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 242, 243, 475, 244, 245, 653, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 0, 0, 258, 259, 0, 260, 476, 261, 262,
	263, 264, 265, 0, 666, 665, 0, 0, 266, 267,
	0, 268, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 0, 674, 0, 286, 477,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 0, 0,
	392, 0, 0, 524, 298, 299, 300, 536, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 524, 0, 540, 0, 536, 537, 538, 0,
	0, 0, 526, 0, 0, 0, 0, 0, 549, 392,
	0, 0, 524, 540, 0, 0, 536, 537, 538, 0,
	0, 526, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 525, 540, 0, 0, 0, 392, 0, 0,
	524, 526, 0, 0, 536, 537, 538, 549, 0, 0,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 525, 0, 0, 0, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 524, 0, 0, 0, 536, 537, 538, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 637, 0, 0,
	0, 526, 0, 392, 0, 0, 524, 549, 0, 0,
	536, 537, 538, 0, 0, 0, 0, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 525, 0, 0, 0, 526, 544, 0, 0, 0,
	0, 549, 0, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 0, 542, 0,
	0, 0, 546, 547, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 638, 0,
	0, 0, 546, 547, 544, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 552, 0, 0, 541, 0, 0, 548, 0,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 541, 542, 0, 0, 548, 0,
	0, 0, 0, 0, 0, 0, 544, 0, 0, 0,
	0, 552, 0, 0, 541, 0, 0, 1177, 0, 0,
	0, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	0, 0, 546, 547, 0, 0, 978, 0, 0, 552,
	544, 392, 541, 0, 524, 0, 0, 542, 536, 537,
	538, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 546, 547, 977, 0,
	0, 0, 545, 526, 0, 0, 0, 0, 548, 549,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 545, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 552, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 1176, 0, 0,
	533, 534, 535, 0, 527, 528, 529, 530, 531, 532,
	0, 0, 0, 0, 1041, 543, 0, 0, 0, 533,
	534, 535, 545, 527, 528, 529, 530, 531, 532, 0,
	0, 0, 0, 1025, 0, 543, 0, 0, 0, 533,
	534, 535, 0, 527, 528, 529, 530, 531, 532, 0,
	0, 0, 0, 964, 0, 0, 545, 0, 544, 0,
	0, 0, 0, 543, 0, 0, 0, 533, 534, 535,
	0, 527, 528, 529, 530, 531, 532, 635, 0, 392,
	0, 798, 524, 0, 546, 547, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 0, 0, 543, 0, 549, 0, 533,
	534, 535, 0, 527, 528, 529, 530, 531, 532, 0,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 0, 552, 0, 0, 541, 0, 0, 543,
	0, 0, 0, 533, 534, 535, 0, 527, 528, 529,
	530, 531, 532, 551, 0, 0, 0, 0, 392, 0,
	0, 524, 0, 0, 0, 536, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 540, 524, 0, 550, 0, 536, 537, 538,
	526, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 947, 0, 0,
	0, 0, 526, 0, 545, 0, 0, 0, 549, 0,
	525, 0, 392, 0, 0, 524, 0, 0, 0, 536,
	537, 538, 0, 0, 0, 0, 544, 0, 0, 0,
	392, 0, 525, 524, 0, 0, 540, 536, 537, 538,
	0, 0, 0, 0, 526, 0, 0, 0, 0, 0,
	549, 0, 546, 547, 540, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 0, 0, 0, 542, 549, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 543, 548, 0,
	0, 533, 534, 535, 0, 527, 528, 529, 530, 531,
	532, 552, 0, 0, 541, 544, 0, 0, 0, 392,
	0, 0, 524, 0, 0, 0, 536, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 0, 0,
	0, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 0, 0, 0, 542, 549, 0, 0,
	0, 0, 0, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 544,
	0, 525, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 544, 0, 0,
	552, 0, 0, 541, 0, 546, 547, 0, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	542, 1037, 552, 546, 547, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 0, 541, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 552, 0, 0, 543, 544, 0, 0, 533,
	534, 535, 0, 527, 528, 529, 530, 531, 532, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 0, 0,
	0, 552, 0, 0, 543, 0, 0, 0, 533, 534,
	535, 0, 527, 528, 529, 530, 531, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 0, 0, 0,
	533, 534, 535, 0, 527, 528, 529, 530, 531, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 0,
	0, 0, 533, 534, 535, 0, 527, 528, 529, 530,
	531, 532, 545, 0, 0, 0, 543, 0, 0, 0,
	533, 534, 535, 0, 527, 528, 529, 530, 531, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 0, 533,
	534, 535, 0, 527, 528, 529, 530, 531, 532,
}
var yyPact = []int{

	-224, -1000, -351, -1000, -1000, -1000, 109, -224, 300, -353,
	10639, -290, -1000, -1000, 171, 299, 299, 299, 284, -312,
	-316, 5841, 5841, -1000, 18, -290, -1000, -247, 10205, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	5405, 139, 168, 167, 20, 22, 138, -1000, 6285, 150,
	7593, 25, -224, -1000, -1000, -224, -224, 7593, -1000, -1000,
	-1000, -356, -1000, 13368, -1000, -1000, 7593, 7593, 7593, 7593,
	7593, -5, -1000, -1000, 4097, -1000, -1000, -345, -270, -314,
	-1000, -1000, -1000, -289, -271, -345, -1000, -1000, -1000, 134,
	358, -1000, -1000, -1000, 7593, 173, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 165, -1000, -272, -274,
	-277, -281, -1000, -1000, -1000, -1000, -1000, -1000, -282, -283,
	-284, -285, -286, -26, -1000, -192, -1000, -192, -192, -296,
	-296, -295, -1000, -1000, 269, -192, -296, -1000, -1000, -306,
	-305, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 72, -356,
	-288, -1000, -1000, -1000, 11070, -363, -1000, 13432, -1000, -1000,
	-1000, -1000, -1000, -1000, 23, 16, -1000, 84, -1000, -89,
	-1000, -1000, -1000, 13432, -1000, 124, -1000, -1000, -1000, -53,
	13432, -1000, -1, 11070, 99, -1000, -1000, -1000, 99, -357,
	-1000, 12889, 158, 5841, 11932, 11070, -135, 7593, 7593, 7593,
	7593, 7593, 7593, 7593, 7593, 7593, 7593, 7593, 7593, 9337,
	7593, 7593, 7593, 227, 7593, -143, 182, -1000, -1000, 207,
	2349, -1000, -289, 346, 346, 328, 13539, 13539, -188, 12837,
	-352, -359, -290, -345, -1000, 1918, 7593, -1000, -1000, -1000,
	4969, 395, 4533, -345, 2780, -1000, -1000, -199, 13432, 2,
	-291, -292, 351, 351, 351, 351, 7593, 7593, 7593, 7593,
	7593, -1000, -293, -1000, -1000, -1000, -1000, 7593, -1000, -1000,
	351, -192, -192, -1000, -1000, 351, -1000, -136, -138, 351,
	-1000, 351, -1000, -84, 158, 7593, -323, 5405, -1000, -1000,
	-179, -1000, -53, -1000, 7593, -1000, -1000, -1000, -1000, -1000,
	-1000, 59, -360, -1000, 7593, 1431, -237, -1000, -1000, -204,
	7593, -1000, -1000, 310, 12351, -1000, -1000, -1000, -1000, -1000,
	-296, -1000, -1000, -1000, -1000, -1000, -295, -296, -296, -296,
	-1000, -1000, -1000, -1000, -1000, -305, -306, -1000, -1000, -192,
	-1000, -1000, -192, -192, -1000, 269, -192, -1000, -344, -228,
	103, 103, 179, 179, 179, 330, 136, 136, 136, 136,
	136, 136, 328, 13539, 13450, 1465, 7593, 7593, -144, 205,
	1338, 7593, -1000, 135, -1000, -1000, -1000, 152, -297, 8029,
	8029, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -298, 7593, -1000, 7593,
	-1000, -1000, -1000, -1000, 178, -364, -365, -1000, 13432, -1000,
	-324, -368, -1000, -1000, -194, 7593, 7593, -325, -1000, 13432,
	337, -1000, 83, -1000, 7593, -1000, 9771, -203, 7593, -326,
	-327, -328, -329, 13390, -372, -373, -374, -379, 7593, -380,
	-330, -1000, -1000, -331, -230, -231, -332, -333, 11070, -204,
	-384, -1000, -1000, -1000, 15, 12809, -1000, 11070, -1000, -237,
	-1000, -299, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 140, 141, 7593,
	-40, -1000, 13091, -261, -253, 306, -1000, -347, 2349, 7593,
	7593, 370, 353, 7593, 8029, 8029, 7593, 164, -1000, -1000,
	-1000, -1000, 146, -300, 7593, 11932, 10637, -1000, 8029, 8029,
	8029, 4097, -301, 1318, 3661, -361, -345, 12789, -1000, 7593,
	7593, -1000, -1000, -258, -1000, -1000, -334, 7593, -1000, -194,
	-194, -1000, 7593, 7593, 185, -1000, 7593, 13279, -1000, -1000,
	11501, 7593, 12770, -1000, -1000, -1000, -1000, 11932, -1000, -1000,
	-1000, -1000, -386, -1000, -1000, -216, -1000, -1000, -216, 261,
	-1000, 141, -1000, -1000, -1000, -1000, -1000, 381, -1000, -1000,
	130, 283, 13432, 7593, 91, 87, 7593, 374, -1000, 148,
	351, -261, -262, 2349, -1000, 322, 379, 7593, 7593, 37,
	277, 206, 379, 7593, 7593, 11932, 1486, -388, -1000, 7593,
	11932, 8029, 8029, 8029, 8029, 8029, 8029, 8029, 8029, 8029,
	8029, 8029, 8029, 8465, 162, 336, 336, 316, -362, 3225,
	7593, -390, -1000, 7593, -1000, -1000, 1453, 13432, -1000, 358,
	-1000, -335, -336, 13432, 13432, -1000, 13432, 7593, -15, -1000,
	1410, -1000, -337, -1000, -1000, -1000, -1000, 130, -339, -207,
	7593, 7593, -1000, 7593, 7593, -42, -1000, -1000, -265, -266,
	351, -1000, 379, 379, 7593, 7593, 7593, 379, 1486, -392,
	-1000, 11932, 379, -1000, 215, 215, 189, 189, 189, 336,
	774, 774, 774, 774, 774, 774, 316, 144, 159, -302,
	7593, -394, -1000, 379, -1000, 1390, -1000, -1000, -1000, -1000,
	13432, 8, 280, -1000, -1000, -207, -1000, -1000, 11070, 13432,
	-367, -1000, 13432, -1000, -1000, -303, 7593, -1000, -1000, -267,
	379, 379, 379, -1000, -1000, 8029, 143, -309, 11932, 297,
	-1000, -1000, -39, 7593, -1000, -381, -1000, 303, 7593, 368,
	13432, -1000, 1265, 8029, 11932, -396, -1000, -342, 7157, 7157,
	-404, 11070, -310, -1000, -400, -1000, 1265, -402, -1000, -1000,
	-1000, -1000, 8901, 117, -66, 12923, -1000, -1000, -1000, 362,
	-1000, -1000, 313, -1000, -1000, -1000, -1000, -1000, -1000, 6721,
	-1000,
}
var yyPgo = []int{

	0, 533, 531, 434, 21, 368, 336, 530, 529, 348,
	528, 5, 524, 11, 45, 757, 194, 44, 41, 523,
	519, 25, 37, 15, 424, 518, 516, 24, 18, 46,
	36, 514, 514, 28, 56, 513, 512, 279, 510, 260,
	245, 509, 508, 507, 502, 498, 239, 495, 253, 494,
	493, 492, 490, 490, 42, 233, 487, 10, 20, 6,
	487, 477, 476, 0, 475, 473, 14, 472, 7, 12,
	360, 32, 9, 469, 13, 467, 59, 466, 465, 464,
	463, 462, 27, 40, 461, 350, 43, 459, 458, 457,
	31, 16, 456, 455, 454, 8, 4, 2, 453, 452,
	450, 449, 3, 1, 26, 448, 447, 446, 444, 48,
	244, 39, 23, 38, 441, 439, 437, 268, 19, 34,
	436, 261, 243, 432, 242, 241, 430, 420, 407, 403,
	234, 30, 33, 403,
}
var yyR1 = []int{

	0, 1, 1, 26, 26, 26, 27, 27, 27, 61,
	13, 13, 13, 107, 107, 108, 108, 118, 118, 118,
	118, 118, 118, 132, 132, 132, 119, 119, 119, 119,
	119, 127, 127, 127, 127, 116, 34, 34, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 77,
	77, 126, 126, 128, 128, 124, 125, 120, 120, 129,
	129, 121, 122, 123, 123, 123, 123, 123, 123, 71,
	71, 28, 28, 130, 130, 130, 130, 72, 72, 72,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 89, 89, 89, 89, 89, 92, 92, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 19,
	19, 20, 20, 20, 20, 20, 18, 18, 18, 50,
	50, 50, 11, 11, 90, 90, 91, 91, 91, 131,
	131, 104, 104, 104, 105, 105, 2, 2, 4, 4,
	3, 3, 3, 3, 5, 5, 6, 6, 6, 6,
	6, 6, 6, 29, 70, 70, 70, 10, 10, 12,
	12, 23, 23, 24, 25, 25, 22, 22, 66, 66,
	67, 67, 68, 69, 69, 46, 46, 45, 45, 47,
	47, 48, 49, 49, 49, 49, 51, 51, 95, 95,
	94, 94, 96, 98, 98, 98, 97, 99, 99, 100,
	100, 101, 101, 101, 102, 102, 103, 103, 103, 103,
	103, 36, 36, 36, 36, 37, 37, 37, 37, 38,
	38, 39, 39, 40, 40, 41, 41, 42, 43, 43,
	43, 44, 30, 30, 31, 31, 7, 7, 21, 21,
	32, 32, 35, 35, 86, 86, 86, 87, 87, 88,
	65, 65, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 63, 63, 64, 64, 78, 81,
	81, 82, 80, 80, 79, 79, 106, 106, 54, 54,
	54, 54, 55, 55, 56, 56, 33, 33, 83, 83,
	84, 84, 85, 8, 8, 9, 9, 14, 14, 14,
	14, 52, 52, 58, 53, 53, 60, 57, 115, 115,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 76,
	74, 73, 59, 59, 59, 112, 112, 112, 133, 133,
	133, 133, 109, 109, 109, 109, 109, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114,
}
var yyR2 = []int{

	0, 1, 2, 1, 1, 0, 2, 2, 0, 1,
	1, 3, 2, 1, 2, 2, 3, 2, 3, 5,
	6, 2, 3, 3, 4, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 1, 1, 1, 1, 5, 2, 1, 1, 1,
	1, 5, 2, 2, 2, 1, 3, 3, 2, 1,
	0, 3, 0, 5, 2, 5, 2, 3, 3, 0,
	1, 3, 3, 5, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 1, 3, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 5, 6, 6, 7, 1,
	1, 4, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 3, 5, 6, 6, 4, 3, 1, 5, 1,
	1, 4, 1, 4, 1, 4, 1, 4, 1, 1,
	1, 1, 1, 1, 6, 4, 4, 4, 4, 1,
	3, 3, 4, 4, 7, 5, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 3, 1, 3, 3, 1,
	3, 3, 3, 2, 1, 3, 1, 1, 3, 3,
	1, 2, 4, 4, 1, 1, 9, 9, 1, 2,
	4, 4, 4, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 1, 3, 4, 3, 3, 0,
	1, 3, 1, 2, 0, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 2, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 2, 2, 0, 1, 4, 2, 2, 2, 2,
	2, 1, 2, 2, 4, 2, 2, 1, 1, 1,
	0, 2, 5, 2, 3, 1, 1, 1, 1, 3,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 0,
	5, 0, 5, 0, 4, 3, 5, 4, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 1, 4, 5, 1,
	2, 4, 2, 0, 1, 0, 1, 2, 2, 2,
	3, 5, 1, 2, 0, 2, 1, 0, 1, 1,
	1, 3, 3, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 2, 6, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}
var yyChk = []int{

	-1000, -1, -2, -3, -4, -6, -5, 453, 331, -7,
	364, 404, 456, -24, -23, 390, 199, 138, 266, -3,
	-4, -12, -10, 28, 123, 457, -36, -58, 261, -59,
	5, -110, -111, 20, 21, 22, 23, 24, 25, 26,
	27, 29, 30, 31, 39, 40, 42, 43, 45, 46,
	47, 54, 55, 56, 57, 58, 61, 62, 65, 67,
	68, 69, 70, 75, 76, 77, 78, 80, 81, 82,
	84, 85, 86, 87, 88, 89, 92, 93, 94, 102,
	103, 104, 105, 106, 107, 110, 112, 114, 115, 116,
	117, 118, 120, 121, 122, 125, 126, 127, 128, 129,
	131, 132, 133, 135, 136, 137, 139, 140, 141, 142,
	144, 145, 146, 149, 151, 152, 154, 156, 158, 162,
	163, 164, 166, 170, 172, 173, 174, 175, 176, 178,
	179, 180, 181, 183, 184, 185, 186, 187, 188, 190,
	193, 194, 195, 196, 202, 205, 207, 208, 209, 210,
	211, 214, 217, 220, 221, 222, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 243, 244, 247, 248, 250, 253, 255, 256, 257,
	259, 262, 263, 264, 267, 270, 273, 274, 275, 276,
	277, 278, 279, 281, 282, 284, 287, 288, 286, 290,
	291, 292, 293, 294, 295, 296, 297, 299, 300, 301,
	302, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 314, 316, 317, 319, 320, 321, 323, 324, 325,
	326, 327, 328, 329, 330, 332, 333, 334, 335, 336,
	338, 339, 341, 342, 344, 345, 347, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 362, 363,
	365, 367, 368, 369, 370, 371, 377, 378, 380, 383,
	384, 385, 386, 387, 388, 389, 392, 393, 394, 395,
	396, 399, 400, 401, 402, 403, 407, 409, 410, 411,
	412, 415, 418, 419, 420, 421, 422, 423, 433, 434,
	435, 48, 49, 51, 52, 63, 64, 71, 108, 109,
	143, 147, 153, 167, 169, 192, 197, 198, 200, 215,
	240, 242, 245, 252, 254, 268, 272, 283, 285, 298,
	322, 340, 346, 360, 373, 374, 379, 381, 404, 405,
	424, 425, 426, 427, 428, 429, 430, 431, 432, -85,
	453, -46, -37, -47, 155, -39, -40, -48, 219, 150,
	258, -49, -70, 28, 123, -70, -70, 54, 454, 454,
	-8, -9, -14, -15, 446, -17, 444, 445, -63, 246,
	436, -86, -106, -75, 453, -78, -92, -4, 143, 36,
	-87, -88, 10, 262, 322, -59, -76, 6, -74, -115,
	-127, 382, 148, 251, 59, -89, -93, 5, -110, 11,
	7, -112, -117, -128, -129, -130, 73, 96, 99, 100,
	223, 224, 97, 101, 337, 397, 95, 98, 60, 71,
	167, 215, 425, 127, 49, 51, 52, 63, 64, 108,
	109, 153, 197, 198, 240, 242, 254, 298, 346, 373,
	374, 405, -113, -124, -125, -121, -122, 44, 50, 79,
	91, 159, 161, 177, 191, 203, 204, 206, 216, 218,
	241, 249, 269, 271, 318, 343, 366, 408, -123, -9,
	260, -85, 446, -58, 453, -84, -83, -15, 111, -38,
	-37, -45, -46, -48, 155, 297, 396, 244, 341, 207,
	-40, -39, -41, -15, 28, -31, 152, 243, -42, -44,
	-15, -17, -51, 256, -5, -6, -4, -5, -5, -25,
	-22, -15, -29, 457, 13, 72, 42, 444, 445, 446,
	447, 448, 449, 440, 441, 442, 17, 18, 19, -63,
	34, 265, 218, 436, 177, 343, 203, 204, 249, 48,
	37, 5, 262, -15, -15, -15, -15, -15, 271, -15,
	-4, -11, 404, -55, -54, 455, 451, -4, -4, -104,
	451, 453, 453, -55, 453, -74, -74, -79, -15, -35,
	151, 155, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 285, -71, 407, -71, -71, -34, 453, -34, -77,
	453, 64, 63, -71, -34, 453, -72, 438, 419, 453,
	-72, 453, -28, 64, -29, 453, -58, 457, 454, 261,
	207, 341, -43, -73, 453, -76, -30, 322, 323, -50,
	250, 345, -52, -58, 457, 398, -26, 38, 119, -18,
	160, -14, -118, -119, 340, -116, -117, -126, -120, -130,
	-112, 197, 198, 346, 49, 298, 153, 109, 108, 254,
	52, -124, -125, -121, -122, 374, 373, 5, -110, 51,
	73, 98, 64, 63, 405, 240, 242, -107, -59, 373,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, 218, 177, 343, 48,
	-15, 375, 251, 246, 382, 148, 392, 123, 256, -33,
	361, 41, -109, 5, -110, -111, -113, -114, 28, 32,
	33, 34, 35, 36, 37, 38, 41, 53, 59, 60,
	66, 72, 74, 83, 90, 95, 96, 97, 99, 100,
	101, 111, 113, 119, 123, 124, 130, 134, 138, 148,
	150, 155, 157, 160, 165, 168, 171, 182, 189, 199,
	201, 212, 213, 219, 223, 224, 246, 251, 258, 260,
	261, 265, 266, 280, 289, 303, 315, 331, 337, 348,
	361, 364, 372, 375, 376, 382, 390, 391, 397, 398,
	406, 413, 414, 416, 417, -86, 322, 453, 454, 457,
	-54, -57, 446, -109, -15, -11, -105, 452, -15, -104,
	4, -11, 454, 454, -90, 28, 123, 446, -91, -15,
	-61, -112, -81, -82, 413, -98, 270, 453, 453, -76,
	-76, -76, -76, -15, -11, -11, -11, -11, 453, -11,
	-76, -71, -71, -76, 373, 373, -76, -76, 338, -18,
	-11, 454, -83, 396, -30, -15, 227, 457, -22, -64,
	-65, 262, 10, -62, 444, 445, 446, 447, 448, 449,
	440, 441, 442, 17, 18, 19, -27, 437, -21, 414,
	-13, -20, -15, -132, 36, -119, -34, -108, 455, 435,
	136, -15, -15, 375, -33, 361, 136, -15, 251, 382,
	148, 392, 123, 256, 160, 453, -16, -17, 444, 445,
	-63, 453, 322, -16, 453, -11, -56, -15, 452, 458,
	457, 452, 452, 457, 454, 454, -23, 457, -24, -90,
	-90, 454, 15, 16, -80, -82, 130, -15, -97, -59,
	453, 414, -15, 454, 454, 454, 454, 37, 454, 454,
	454, 454, -11, 454, 454, 454, 435, 435, 454, 454,
	-59, -21, 454, 261, 454, -58, -27, 453, 152, 211,
	-66, 168, -15, 457, 91, 241, 206, 37, 5, 451,
	451, -132, 36, 455, -57, -15, -15, 136, 136, -15,
	-16, -16, -15, 136, 160, 453, -15, -131, -118, 34,
	13, 444, 445, 446, 447, 448, 449, 440, 441, 442,
	17, 18, 19, -63, 203, -16, -16, -16, -11, 453,
	34, -11, 454, 457, -54, 454, -15, -15, -104, 454,
	-91, -23, -23, -15, -15, 134, -15, 372, -99, -59,
	-15, 454, -118, 454, -72, -72, -28, -66, 4, -69,
	171, 54, -13, 206, 206, -13, 5, 452, -76, -76,
	451, -57, -15, -15, 136, 34, 34, -15, -15, -131,
	454, 457, -15, -118, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, 123, 246, 256,
	457, -11, 454, -15, 454, -15, 452, -74, 454, 454,
	-15, -100, 277, 454, 454, -69, 454, -95, 416, -15,
	-67, -68, -15, -13, -13, 398, 260, 452, 452, -76,
	-15, -15, -15, 454, -118, 160, 123, 256, 453, -15,
	454, 454, -23, 54, -95, -94, -96, -59, 457, 453,
	-15, 452, -16, 160, 453, -131, 454, -101, 296, 323,
	-11, 457, 37, -68, -19, 5, -16, -131, 454, 454,
	-102, -103, 48, 387, 94, -15, -102, -96, -97, 457,
	454, 454, -103, 284, 154, 322, 284, 154, 5, 34,
	-103,
}
var yyDef = []int{

	0, -2, 1, 226, -2, -2, 252, 0, 250, 238,
	0, 0, 2, -2, 0, 246, 246, 246, 0, 0,
	235, 384, 0, 249, 247, 0, 239, 301, 0, 393,
	412, 413, 414, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 326,
	0, 310, 268, 265, 0, 307, 308, 269, 0, 0,
	0, 277, 0, 244, 245, 0, 0, 0, 228, 229,
	243, 383, 385, 389, 390, 80, 0, 0, 0, 0,
	0, 0, 159, 160, 0, 162, 163, 164, 704, 0,
	169, 170, 354, 575, 724, 366, 400, 401, 402, 0,
	0, 406, 407, 408, 365, 333, 177, -2, -2, 409,
	410, 398, 31, 32, 33, 34, 745, 179, 180, 182,
	184, 186, 188, 189, 190, 191, 192, -2, 0, 701,
	707, 713, 735, 491, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 714, -2, -2, -2, -2, -2,
	-2, -2, 417, 53, 54, 59, 60, 743, 744, 746,
	747, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 72, 243,
	0, 327, 302, 303, 0, 0, 380, 378, 379, 232,
	309, 233, 267, 270, 0, 0, 272, 0, 274, 0,
	305, 306, 311, 315, 316, 320, 324, 325, 313, 0,
	317, -2, 211, 0, 240, 234, 235, 241, 242, 253,
	254, 5, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 118, 120, 377,
	0, 388, 0, 84, 85, 99, 103, 104, 0, 212,
	-2, 0, 732, 165, 372, 0, 0, 166, 167, 168,
	0, 0, 0, -2, 0, 403, 405, 0, 364, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 56, 69, 64, 63, 46, 0, 45, 43,
	0, 70, 70, 68, 47, 0, 76, 0, 0, 0,
	74, 0, 62, 0, 208, 0, 0, 0, 382, 266,
	0, 275, 0, 318, 0, 411, 314, 322, 323, 271,
	209, 0, 276, 391, 0, 0, 8, 3, 4, 329,
	0, 386, 81, 25, 0, 26, 27, 28, 29, 30,
	37, 38, 39, 40, 41, 42, 50, 37, 37, 37,
	48, 51, 52, 57, 58, 79, 79, 415, 416, 70,
	745, 748, 70, 70, 65, 0, 70, 82, 13, 0,
	86, 87, 88, 89, 90, 91, -2, -2, -2, -2,
	-2, -2, 98, 101, 102, -2, 0, 0, 0, 377,
	-2, 0, 117, 0, 122, 124, 126, 0, 0, 0,
	0, 376, 387, 422, 423, 424, 425, 426, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 121, 0, 0, 374, 0,
	373, 368, 369, 397, 0, 0, 0, 223, 212, 224,
	0, 0, -2, 171, 252, 0, 0, 0, 214, 216,
	0, -2, 363, 359, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 67, 0, 0, 0, 0, 0, 0, 329,
	0, 304, 381, 273, 0, 0, 210, 0, 255, 8,
	356, 0, 340, 341, 342, 343, 344, 345, 346, 347,
	348, 349, 350, 351, 352, 353, 257, 0, 259, 0,
	206, 207, 10, 17, 21, 25, 35, 14, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 119, 123,
	125, 127, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 724, 0, 0, 0, 161, 213, 370, 0,
	0, 221, 222, 0, 355, -2, 0, 0, 251, 252,
	252, 175, 0, 0, 0, 360, 0, 0, 283, 284,
	288, 0, 0, 181, 183, 185, 187, 0, 195, 196,
	197, 198, 0, 36, 49, 79, 77, 78, 79, 72,
	71, 259, 248, 312, 319, 392, 256, 0, 6, 7,
	264, 0, 328, 0, 0, 0, 0, 0, 12, 0,
	0, 18, 22, 0, 15, 83, -2, 0, 0, -2,
	0, 0, -2, 0, 0, 0, -2, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 138, 139, 153, 0, 0,
	0, 0, 335, 0, 375, -2, 0, 213, 225, 172,
	215, 0, 0, 217, 218, 358, 362, 0, 290, 287,
	0, 178, 0, 55, 75, 73, 61, 264, 0, 279,
	0, 0, 201, 0, 0, 0, 11, 23, 0, 0,
	0, 16, -2, -2, 0, 0, 0, -2, -2, 0,
	130, 0, -2, 137, 140, 141, 142, 143, 144, 145,
	-2, -2, -2, -2, -2, -2, 152, 0, 0, 0,
	0, 0, 338, -2, 334, 213, 371, 404, 173, 174,
	361, 252, 0, 332, 194, 279, 357, 236, 0, 263,
	258, 260, 262, 202, 203, 0, 0, 24, 19, 0,
	-2, -2, -2, 131, 220, 0, 0, 0, 0, 213,
	337, 336, 293, 0, 237, 278, 280, 0, 0, 0,
	205, 20, -2, 0, 0, 0, 339, 0, 0, 0,
	289, 0, 0, 261, 0, 199, -2, 0, 157, 286,
	291, 294, -2, 667, 472, 0, 292, 281, 282, 0,
	204, 158, 0, 296, 297, 298, 299, 300, 200, 0,
	295,
}
var yyTok1 = []int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 448, 3, 3,
	453, 454, 446, 444, 457, 445, 455, 447, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 458, 456,
	440, 442, 441, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 451, 3, 452, 449,
}
var yyTok2 = []int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = []int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 443, 57783, 450, 0,
}

//line yaccpar:1

/*	parser for yacc output	*/

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

const yyFlag = -1000

func yyTokname(c int) string {
	// 4 is TOKSTART above
	if c >= 4 && c-4 < len(yyToknames) {
		if yyToknames[c-4] != "" {
			return yyToknames[c-4]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yylex1(lex yyLexer, lval *yySymType) int {
	c := 0
	char := lex.Lex(lval)
	if char <= 0 {
		c = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		c = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			c = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		c = yyTok3[i+0]
		if c == char {
			c = yyTok3[i+1]
			goto out
		}
	}

out:
	if c == 0 {
		c = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(c), uint(char))
	}
	return c
}

func yyParse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yychar), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar = yylex1(yylex, &yylval)
	}
	yyn += yychar
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yychar { /* valid shift */
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yychar {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error("syntax error")
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yychar))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}
			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		//line sql.y:365
		{
			yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
			yylex.(*sqlLex).stmt = yyS[yypt-0].sqlSelect
		}
	case 2:
		//line sql.y:370
		{
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
			yyVAL.sqlSelect.Semicolon = true
			yylex.(*sqlLex).stmt = yyS[yypt-1].sqlSelect
		}
	case 3:
		//line sql.y:377
		{
			yyVAL.str = "asc"
		}
	case 4:
		//line sql.y:378
		{
			yyVAL.str = "desc"
		}
	case 5:
		//line sql.y:379
		{
			yyVAL.str = ""
		}
	case 6:
		//line sql.y:382
		{
			yyVAL.str = "first"
		}
	case 7:
		//line sql.y:383
		{
			yyVAL.str = "last"
		}
	case 8:
		//line sql.y:384
		{
			yyVAL.str = ""
		}
	case 9:
		yyVAL.str = yyS[yypt-0].str
	case 10:
		//line sql.y:393
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 11:
		//line sql.y:397
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 12:
		//line sql.y:401
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 13:
		//line sql.y:408
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 14:
		//line sql.y:412
		{
			yyVAL.anyName = AnyName{yyS[yypt-1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyS[yypt-0].anyName...)
		}
	case 15:
		//line sql.y:419
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 16:
		//line sql.y:423
		{
			yyVAL.anyName = append(yyS[yypt-2].anyName, yyS[yypt-0].str)
		}
	case 17:
		//line sql.y:440
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 18:
		//line sql.y:445
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 19:
		//line sql.y:452
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerLiteral{yyS[yypt-1].iconst}
		}
	case 20:
		//line sql.y:458
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerLiteral{yyS[yypt-1].iconst}
		}
	case 21:
		//line sql.y:465
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 22:
		//line sql.y:470
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 23:
		//line sql.y:478
		{
			yyVAL.optArrayBounds = append(yyS[yypt-2].optArrayBounds, "")
		}
	case 24:
		//line sql.y:482
		{
			yyVAL.optArrayBounds = append(yyS[yypt-3].optArrayBounds, yyS[yypt-1].iconst)
		}
	case 25:
		//line sql.y:486
		{
			yyVAL.optArrayBounds = nil
		}
	case 26:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 27:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 28:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 29:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 30:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 31:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 32:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 33:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 34:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 35:
		//line sql.y:534
		{
			yyVAL.pgType = PgType{Name: yyS[yypt-1].str, TypeMods: yyS[yypt-0].fields}
		}
	case 36:
		//line sql.y:545
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 37:
		//line sql.y:546
		{
			yyVAL.fields = nil
		}
	case 38:
		//line sql.y:553
		{
			yyVAL.pgType = PgType{Name: "int"}
		}
	case 39:
		//line sql.y:557
		{
			yyVAL.pgType = PgType{Name: "integer"}
		}
	case 40:
		//line sql.y:561
		{
			yyVAL.pgType = PgType{Name: "smallint"}
		}
	case 41:
		//line sql.y:565
		{
			yyVAL.pgType = PgType{Name: "bigint"}
		}
	case 42:
		//line sql.y:569
		{
			yyVAL.pgType = PgType{Name: "real"}
		}
	case 43:
		//line sql.y:573
		{
			yyVAL.pgType = PgType{Name: "float"}
			if yyS[yypt-0].iconst != IntegerLiteral("") {
				yyVAL.pgType.TypeMods = []Expr{yyS[yypt-0].iconst}
			}
		}
	case 44:
		//line sql.y:580
		{
			yyVAL.pgType = PgType{Name: "double precision"}
		}
	case 45:
		//line sql.y:584
		{
			yyVAL.pgType = PgType{Name: "decimal", TypeMods: yyS[yypt-0].fields}
		}
	case 46:
		//line sql.y:588
		{
			yyVAL.pgType = PgType{Name: "dec", TypeMods: yyS[yypt-0].fields}
		}
	case 47:
		//line sql.y:592
		{
			yyVAL.pgType = PgType{Name: "numeric", TypeMods: yyS[yypt-0].fields}
		}
	case 48:
		//line sql.y:596
		{
			yyVAL.pgType = PgType{Name: "bool"}
		}
	case 49:
		//line sql.y:602
		{
			yyVAL.iconst = yyS[yypt-1].iconst
		}
	case 50:
		//line sql.y:606
		{
			yyVAL.iconst = IntegerLiteral("")
		}
	case 51:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 52:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 53:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 54:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 55:
		//line sql.y:620
		{
			yyVAL.pgType = PgType{}
			if yyS[yypt-3].boolean {
				yyVAL.pgType.Name = "varbit"
			} else {
				yyVAL.pgType.Name = "bit"
			}
			yyVAL.pgType.TypeMods = yyS[yypt-1].fields
		}
	case 56:
		//line sql.y:632
		{
			yyVAL.pgType = PgType{}
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varbit"}
			} else {
				yyVAL.pgType = PgType{Name: "bit"}
			}
		}
	case 57:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 58:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 59:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 60:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 61:
		//line sql.y:655
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.TypeMods = []Expr{yyS[yypt-2].iconst}
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 62:
		//line sql.y:663
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 63:
		//line sql.y:670
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 64:
		//line sql.y:678
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 65:
		//line sql.y:686
		{
			yyVAL.pgType = PgType{Name: "varchar"}
		}
	case 66:
		//line sql.y:690
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 67:
		//line sql.y:698
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 68:
		//line sql.y:706
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 69:
		//line sql.y:716
		{
			yyVAL.boolean = true
		}
	case 70:
		//line sql.y:720
		{
			yyVAL.boolean = false
		}
	case 71:
		//line sql.y:726
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 72:
		//line sql.y:730
		{
			yyVAL.str = ""
		}
	case 73:
		//line sql.y:739
		{
			yyVAL.pgType = PgType{Name: "timestamp", TypeMods: []Expr{yyS[yypt-2].iconst}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 74:
		//line sql.y:743
		{
			yyVAL.pgType = PgType{Name: "timestamp", WithTimeZone: yyS[yypt-0].boolean}
		}
	case 75:
		//line sql.y:747
		{
			yyVAL.pgType = PgType{Name: "time", TypeMods: []Expr{yyS[yypt-2].iconst}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 76:
		//line sql.y:751
		{
			yyVAL.pgType = PgType{Name: "time", WithTimeZone: yyS[yypt-0].boolean}
		}
	case 77:
		//line sql.y:761
		{
			yyVAL.boolean = true
		}
	case 78:
		//line sql.y:765
		{
			yyVAL.boolean = false
		}
	case 79:
		//line sql.y:769
		{
			yyVAL.boolean = false
		}
	case 80:
		yyVAL.expr = yyS[yypt-0].expr
	case 81:
		//line sql.y:810
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 82:
		//line sql.y:814
		{
			yyVAL.expr = CollateExpr{Expr: yyS[yypt-2].expr, Collation: yyS[yypt-0].anyName}
		}
	case 83:
		//line sql.y:818
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyS[yypt-4].expr, TimeZone: yyS[yypt-0].expr}
		}
	case 84:
		//line sql.y:831
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyS[yypt-0].expr}
		}
	case 85:
		//line sql.y:835
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyS[yypt-0].expr}
		}
	case 86:
		//line sql.y:839
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "+", Right: yyS[yypt-0].expr}
		}
	case 87:
		//line sql.y:843
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "-", Right: yyS[yypt-0].expr}
		}
	case 88:
		//line sql.y:847
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "*", Right: yyS[yypt-0].expr}
		}
	case 89:
		//line sql.y:851
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "/", Right: yyS[yypt-0].expr}
		}
	case 90:
		//line sql.y:855
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "%", Right: yyS[yypt-0].expr}
		}
	case 91:
		//line sql.y:859
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "^", Right: yyS[yypt-0].expr}
		}
	case 92:
		//line sql.y:863
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<", Right: yyS[yypt-0].expr}
		}
	case 93:
		//line sql.y:867
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">", Right: yyS[yypt-0].expr}
		}
	case 94:
		//line sql.y:871
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "=", Right: yyS[yypt-0].expr}
		}
	case 95:
		//line sql.y:875
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<=", Right: yyS[yypt-0].expr}
		}
	case 96:
		//line sql.y:879
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">=", Right: yyS[yypt-0].expr}
		}
	case 97:
		//line sql.y:883
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "!=", Right: yyS[yypt-0].expr}
		}
	case 98:
		//line sql.y:887
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].str, Right: yyS[yypt-0].expr}
		}
	case 99:
		//line sql.y:891
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].str, Expr: yyS[yypt-0].expr}
		}
	case 100:
		//line sql.y:895
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].str}
		}
	case 101:
		//line sql.y:899
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "and", Right: yyS[yypt-0].expr}
		}
	case 102:
		//line sql.y:903
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "or", Right: yyS[yypt-0].expr}
		}
	case 103:
		//line sql.y:907
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 104:
		//line sql.y:911
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 105:
		//line sql.y:915
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "like", Right: yyS[yypt-0].expr}
		}
	case 106:
		//line sql.y:919
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 107:
		//line sql.y:923
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not like", Right: yyS[yypt-0].expr}
		}
	case 108:
		//line sql.y:927
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 109:
		//line sql.y:931
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "ilike", Right: yyS[yypt-0].expr}
		}
	case 110:
		//line sql.y:935
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 111:
		//line sql.y:939
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not ilike", Right: yyS[yypt-0].expr}
		}
	case 112:
		//line sql.y:943
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 113:
		//line sql.y:948
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "similar to", Right: yyS[yypt-0].expr}
		}
	case 114:
		//line sql.y:952
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 115:
		//line sql.y:956
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "not similar to", Right: yyS[yypt-0].expr}
		}
	case 116:
		//line sql.y:960
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-6].expr, Operator: "not similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 117:
		//line sql.y:973
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-2].expr}
		}
	case 118:
		//line sql.y:977
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr}
		}
	case 119:
		//line sql.y:981
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-3].expr, Not: true}
		}
	case 120:
		//line sql.y:985
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr, Not: true}
		}
	case 121:
		//line sql.y:989
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].row, Operator: "overlaps", Right: yyS[yypt-0].row}
		}
	case 122:
		//line sql.y:993
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "true"}
		}
	case 123:
		//line sql.y:997
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "true"}
		}
	case 124:
		//line sql.y:1001
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "false"}
		}
	case 125:
		//line sql.y:1005
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "false"}
		}
	case 126:
		//line sql.y:1009
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "unknown"}
		}
	case 127:
		//line sql.y:1013
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "unknown"}
		}
	case 128:
		//line sql.y:1017
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: "is distinct from", Right: yyS[yypt-0].expr}
		}
	case 129:
		//line sql.y:1021
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: "is not distinct from", Right: yyS[yypt-0].expr}
		}
	case 130:
		//line sql.y:1025
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 131:
		//line sql.y:1029
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 132:
		//line sql.y:1033
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 133:
		//line sql.y:1037
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 134:
		//line sql.y:1041
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 135:
		//line sql.y:1045
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 136:
		//line sql.y:1068
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 137:
		//line sql.y:1072
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 138:
		//line sql.y:1076
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyS[yypt-0].expr}
		}
	case 139:
		//line sql.y:1080
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyS[yypt-0].expr}
		}
	case 140:
		//line sql.y:1084
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "+", Right: yyS[yypt-0].expr}
		}
	case 141:
		//line sql.y:1088
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "-", Right: yyS[yypt-0].expr}
		}
	case 142:
		//line sql.y:1092
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "*", Right: yyS[yypt-0].expr}
		}
	case 143:
		//line sql.y:1096
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "/", Right: yyS[yypt-0].expr}
		}
	case 144:
		//line sql.y:1100
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "%", Right: yyS[yypt-0].expr}
		}
	case 145:
		//line sql.y:1104
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "^", Right: yyS[yypt-0].expr}
		}
	case 146:
		//line sql.y:1108
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<", Right: yyS[yypt-0].expr}
		}
	case 147:
		//line sql.y:1112
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">", Right: yyS[yypt-0].expr}
		}
	case 148:
		//line sql.y:1116
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "=", Right: yyS[yypt-0].expr}
		}
	case 149:
		//line sql.y:1120
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<=", Right: yyS[yypt-0].expr}
		}
	case 150:
		//line sql.y:1124
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">=", Right: yyS[yypt-0].expr}
		}
	case 151:
		//line sql.y:1128
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "!=", Right: yyS[yypt-0].expr}
		}
	case 152:
		//line sql.y:1132
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].str, Right: yyS[yypt-0].expr}
		}
	case 153:
		//line sql.y:1136
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].str, Expr: yyS[yypt-0].expr}
		}
	case 154:
		//line sql.y:1140
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].str}
		}
	case 155:
		//line sql.y:1144
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: "is distinct from", Right: yyS[yypt-0].expr}
		}
	case 156:
		//line sql.y:1148
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: "is not distinct from", Right: yyS[yypt-0].expr}
		}
	case 157:
		//line sql.y:1152
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 158:
		//line sql.y:1156
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 159:
		//line sql.y:1182
		{
			yyVAL.expr = yyS[yypt-0].columnRef
		}
	case 160:
		//line sql.y:1183
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 161:
		//line sql.y:1189
		{
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-2].expr, Indirection: yyS[yypt-0].indirection}
		}
	case 162:
		//line sql.y:1192
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 163:
		//line sql.y:1193
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 164:
		//line sql.y:1195
		{
			yyVAL.expr = yyS[yypt-0].sqlSelect
		}
	case 165:
		//line sql.y:1199
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-1].sqlSelect, Indirection: yyS[yypt-0].indirection}
		}
	case 166:
		//line sql.y:1204
		{
			yyVAL.expr = ExistsExpr(*yyS[yypt-0].sqlSelect)
		}
	case 167:
		//line sql.y:1208
		{
			yyVAL.expr = ArraySubselect(*yyS[yypt-0].sqlSelect)
		}
	case 168:
		//line sql.y:1211
		{
			yyVAL.expr = ArrayConstructorExpr(yyS[yypt-0].arrayExpr)
		}
	case 169:
		//line sql.y:1215
		{
			yyVAL.expr = yyS[yypt-0].row
		}
	case 170:
		//line sql.y:1219
		{
			yyVAL.expr = yyS[yypt-0].row
		}
	case 171:
		//line sql.y:1230
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-2].str}
		}
	case 172:
		//line sql.y:1234
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-4].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 173:
		//line sql.y:1242
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 174:
		//line sql.y:1246
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Distinct: true, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 175:
		//line sql.y:1250
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-3].str, Star: true}
		}
	case 176:
		//line sql.y:1266
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyS[yypt-2].funcApplication, FilterClause: yyS[yypt-1].filterClause, OverClause: yyS[yypt-0].overClause}
		}
	case 177:
		//line sql.y:1270
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 178:
		//line sql.y:1283
		{
			yyVAL.expr = FuncApplication{Name: "collation for", Args: []FuncArg{{Expr: yyS[yypt-1].expr}}}
		}
	case 179:
		//line sql.y:1287
		{
			yyVAL.expr = FuncExprNoParens("current_date")
		}
	case 180:
		//line sql.y:1291
		{
			yyVAL.expr = FuncExprNoParens("current_time")
		}
	case 181:
		//line sql.y:1295
		{
			yyVAL.expr = FuncApplication{Name: "current_time", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 182:
		//line sql.y:1299
		{
			yyVAL.expr = FuncExprNoParens("current_timestamp")
		}
	case 183:
		//line sql.y:1303
		{
			yyVAL.expr = FuncApplication{Name: "current_timestamp", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 184:
		//line sql.y:1307
		{
			yyVAL.expr = FuncExprNoParens("localtime")
		}
	case 185:
		//line sql.y:1311
		{
			yyVAL.expr = FuncApplication{Name: "localtime", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 186:
		//line sql.y:1315
		{
			yyVAL.expr = FuncExprNoParens("localtimestamp")
		}
	case 187:
		//line sql.y:1319
		{
			yyVAL.expr = FuncApplication{Name: "localtimestamp", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 188:
		//line sql.y:1323
		{
			yyVAL.expr = FuncExprNoParens("current_role")
		}
	case 189:
		//line sql.y:1327
		{
			yyVAL.expr = FuncExprNoParens("current_user")
		}
	case 190:
		//line sql.y:1331
		{
			yyVAL.expr = FuncExprNoParens("session_user")
		}
	case 191:
		//line sql.y:1335
		{
			yyVAL.expr = FuncExprNoParens("user")
		}
	case 192:
		//line sql.y:1339
		{
			yyVAL.expr = FuncExprNoParens("current_catalog")
		}
	case 193:
		//line sql.y:1343
		{
			yyVAL.expr = FuncExprNoParens("current_schema")
		}
	case 194:
		//line sql.y:1347
		{
			yyVAL.expr = CastFunc{Expr: yyS[yypt-3].expr, Type: yyS[yypt-1].pgType}
		}
	case 195:
		//line sql.y:1363
		{
			fa := FuncApplication{Name: "coalesce"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 196:
		//line sql.y:1371
		{
			fa := FuncApplication{Name: "greatest"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 197:
		//line sql.y:1379
		{
			fa := FuncApplication{Name: "least"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 198:
		//line sql.y:1387
		{
			fa := FuncApplication{Name: "xmlconcat"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 199:
		//line sql.y:1413
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 200:
		//line sql.y:1417
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 201:
		//line sql.y:1423
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-2].expr, Join: ",", Right: yyS[yypt-0].expr}
		}
	case 202:
		//line sql.y:1427
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "cross join", Right: yyS[yypt-0].expr}
		}
	case 203:
		//line sql.y:1431
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "natural join", Right: yyS[yypt-0].expr}
		}
	case 204:
		//line sql.y:1435
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-6].expr, Join: "join", Right: yyS[yypt-4].expr, Using: yyS[yypt-1].identifiers}
		}
	case 205:
		//line sql.y:1439
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-4].expr, Join: "join", Right: yyS[yypt-2].expr, On: yyS[yypt-0].expr}
		}
	case 206:
		//line sql.y:1445
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 207:
		//line sql.y:1449
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 208:
		//line sql.y:1452
		{
			yyVAL.fromClause = nil
		}
	case 209:
		//line sql.y:1456
		{
			yyVAL.str = "nowait"
		}
	case 210:
		//line sql.y:1457
		{
			yyVAL.str = "skip locked"
		}
	case 211:
		//line sql.y:1458
		{
			yyVAL.str = ""
		}
	case 212:
		//line sql.y:1463
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 213:
		//line sql.y:1467
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 214:
		//line sql.y:1474
		{
			yyVAL.funcArgs = []FuncArg{yyS[yypt-0].funcArg}
		}
	case 215:
		//line sql.y:1478
		{
			yyVAL.funcArgs = append(yyS[yypt-2].funcArgs, yyS[yypt-0].funcArg)
		}
	case 216:
		//line sql.y:1484
		{
			yyVAL.funcArg = FuncArg{Expr: yyS[yypt-0].expr}
		}
	case 217:
		//line sql.y:1488
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: ":=", Expr: yyS[yypt-0].expr}
		}
	case 218:
		//line sql.y:1492
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: "=>", Expr: yyS[yypt-0].expr}
		}
	case 219:
		//line sql.y:1498
		{
			yyVAL.pgTypes = []PgType{yyS[yypt-0].pgType}
		}
	case 220:
		//line sql.y:1502
		{
			yyVAL.pgTypes = append(yyS[yypt-2].pgTypes, yyS[yypt-0].pgType)
		}
	case 221:
		//line sql.y:1508
		{
			yyVAL.arrayExpr = ArrayExpr(yyS[yypt-1].fields)
		}
	case 222:
		//line sql.y:1512
		{
			yyVAL.arrayExpr = yyS[yypt-1].arrayExpr
		}
	case 223:
		//line sql.y:1516
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 224:
		//line sql.y:1522
		{
			yyVAL.arrayExpr = ArrayExpr{yyS[yypt-0].arrayExpr}
		}
	case 225:
		//line sql.y:1526
		{
			yyVAL.arrayExpr = append(yyS[yypt-2].arrayExpr, yyS[yypt-0].arrayExpr)
		}
	case 226:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 227:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 228:
		//line sql.y:1582
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 229:
		//line sql.y:1586
		{
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 230:
		//line sql.y:1590
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 231:
		//line sql.y:1596
		{
			yyS[yypt-1].sqlSelect.OrderClause = yyS[yypt-0].orderClause
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 232:
		//line sql.y:1601
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-1].lockingClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-0].limitClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 233:
		//line sql.y:1608
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-1].limitClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-0].lockingClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 234:
		//line sql.y:1617
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 235:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 236:
		//line sql.y:1651
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 237:
		//line sql.y:1664
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyS[yypt-7].fields
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 238:
		//line sql.y:1676
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyS[yypt-0].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 239:
		//line sql.y:1682
		{
			ss := &SimpleSelect{}
			ss.Table = yyS[yypt-0].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 240:
		//line sql.y:1688
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 241:
		//line sql.y:1697
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 242:
		//line sql.y:1706
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 243:
		//line sql.y:1730
		{
			yyVAL.placeholder = nil
		}
	case 244:
		//line sql.y:1735
		{
			yyVAL.boolean = true
		}
	case 245:
		//line sql.y:1736
		{
			yyVAL.boolean = false
		}
	case 246:
		//line sql.y:1737
		{
			yyVAL.boolean = false
		}
	case 247:
		//line sql.y:1742
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 248:
		//line sql.y:1743
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 249:
		//line sql.y:1746
		{
			yyVAL.placeholder = nil
		}
	case 250:
		//line sql.y:1747
		{
			yyVAL.placeholder = nil
		}
	case 251:
		//line sql.y:1750
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 252:
		//line sql.y:1751
		{
			yyVAL.orderClause = nil
		}
	case 253:
		//line sql.y:1754
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 254:
		//line sql.y:1758
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyS[yypt-0].orderExpr}}
		}
	case 255:
		//line sql.y:1762
		{
			yyS[yypt-2].orderClause.Exprs = append(yyS[yypt-2].orderClause.Exprs, yyS[yypt-0].orderExpr)
			yyVAL.orderClause = yyS[yypt-2].orderClause
		}
	case 256:
		//line sql.y:1770
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-3].expr, Using: yyS[yypt-1].str, Nulls: yyS[yypt-0].str}
		}
	case 257:
		//line sql.y:1774
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-2].expr, Order: yyS[yypt-1].str, Nulls: yyS[yypt-0].str}
		}
	case 258:
		//line sql.y:1799
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyS[yypt-0].fields}
		}
	case 259:
		//line sql.y:1800
		{
			yyVAL.groupByClause = nil
		}
	case 260:
		//line sql.y:1804
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 261:
		//line sql.y:1808
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 262:
		yyVAL.expr = yyS[yypt-0].expr
	case 263:
		//line sql.y:1821
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 264:
		//line sql.y:1822
		{
			yyVAL.expr = nil
		}
	case 265:
		//line sql.y:1825
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 266:
		//line sql.y:1826
		{
			yyVAL.lockingClause = nil
		}
	case 267:
		//line sql.y:1829
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 268:
		//line sql.y:1830
		{
			yyVAL.lockingClause = nil
		}
	case 269:
		//line sql.y:1834
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyS[yypt-0].lockingItem}}
		}
	case 270:
		//line sql.y:1838
		{
			yyS[yypt-1].lockingClause.Locks = append(yyS[yypt-1].lockingClause.Locks, yyS[yypt-0].lockingItem)
			yyVAL.lockingClause = yyS[yypt-1].lockingClause
		}
	case 271:
		//line sql.y:1845
		{
			yyVAL.lockingItem = LockingItem{Strength: yyS[yypt-2].str, LockedRels: yyS[yypt-1].identifiers, WaitPolicy: yyS[yypt-0].str}
		}
	case 272:
		//line sql.y:1850
		{
			yyVAL.str = "update"
		}
	case 273:
		//line sql.y:1851
		{
			yyVAL.str = "no key update"
		}
	case 274:
		//line sql.y:1852
		{
			yyVAL.str = "share"
		}
	case 275:
		//line sql.y:1853
		{
			yyVAL.str = "key share"
		}
	case 276:
		//line sql.y:1856
		{
			yyVAL.identifiers = yyS[yypt-0].identifiers
		}
	case 277:
		//line sql.y:1857
		{
			yyVAL.identifiers = nil
		}
	case 278:
		//line sql.y:1865
		{
			yyVAL.windowDefinitions = yyS[yypt-0].windowDefinitions
		}
	case 279:
		//line sql.y:1868
		{
			yyVAL.windowDefinitions = nil
		}
	case 280:
		//line sql.y:1872
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyS[yypt-0].windowDefinition}
		}
	case 281:
		//line sql.y:1876
		{
			yyVAL.windowDefinitions = append(yyS[yypt-2].windowDefinitions, yyS[yypt-0].windowDefinition)
		}
	case 282:
		//line sql.y:1882
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyS[yypt-2].str, Specification: yyS[yypt-0].windowSpecification}
		}
	case 283:
		//line sql.y:1888
		{
			spec := yyS[yypt-0].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 284:
		//line sql.y:1893
		{
			yyVAL.overClause = &OverClause{Name: yyS[yypt-0].str}
		}
	case 285:
		//line sql.y:1896
		{
			yyVAL.overClause = nil
		}
	case 286:
		//line sql.y:1900
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyS[yypt-4].str, PartitionClause: yyS[yypt-3].partitionClause, OrderClause: yyS[yypt-2].orderClause, FrameClause: yyS[yypt-1].frameClause}
		}
	case 287:
		//line sql.y:1915
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 288:
		//line sql.y:1916
		{
			yyVAL.str = ""
		}
	case 289:
		//line sql.y:1919
		{
			yyVAL.partitionClause = PartitionClause(yyS[yypt-0].fields)
		}
	case 290:
		//line sql.y:1920
		{
			yyVAL.partitionClause = nil
		}
	case 291:
		//line sql.y:1931
		{
			yyS[yypt-0].frameClause.Mode = "range"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 292:
		//line sql.y:1936
		{
			yyS[yypt-0].frameClause.Mode = "rows"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 293:
		//line sql.y:1941
		{
			yyVAL.frameClause = nil
		}
	case 294:
		//line sql.y:1947
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-0].frameBound}
		}
	case 295:
		//line sql.y:1951
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-2].frameBound, End: yyS[yypt-0].frameBound}
		}
	case 296:
		//line sql.y:1962
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 297:
		//line sql.y:1966
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 298:
		//line sql.y:1970
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 299:
		//line sql.y:1974
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "preceding"}
		}
	case 300:
		//line sql.y:1978
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "following"}
		}
	case 301:
		//line sql.y:1986
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str}
		}
	case 302:
		//line sql.y:1990
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Star: true}
		}
	case 303:
		//line sql.y:1994
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str, Only: true}
		}
	case 304:
		//line sql.y:1998
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Only: true}
		}
	case 305:
		//line sql.y:2006
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-1].expr, Offset: yyS[yypt-0].expr}
		}
	case 306:
		//line sql.y:2010
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr, Offset: yyS[yypt-1].expr}
		}
	case 307:
		//line sql.y:2014
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr}
		}
	case 308:
		//line sql.y:2018
		{
			yyVAL.limitClause = &LimitClause{Offset: yyS[yypt-0].expr}
		}
	case 309:
		yyVAL.limitClause = yyS[yypt-0].limitClause
	case 310:
		//line sql.y:2025
		{
			yyVAL.limitClause = nil
		}
	case 311:
		//line sql.y:2029
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 312:
		//line sql.y:2034
		{
			yyVAL.expr = yyS[yypt-2].expr
		}
	case 313:
		//line sql.y:2040
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 314:
		//line sql.y:2045
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 315:
		//line sql.y:2050
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 316:
		//line sql.y:2052
		{
			yyVAL.expr = nil
		}
	case 317:
		//line sql.y:2057
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 318:
		//line sql.y:2066
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 319:
		//line sql.y:2067
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 320:
		//line sql.y:2068
		{
			yyVAL.expr = IntegerLiteral("1")
		}
	case 321:
		//line sql.y:2075
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 322:
		//line sql.y:2079
		{
			yyVAL.placeholder = 0
		}
	case 323:
		//line sql.y:2080
		{
			yyVAL.placeholder = 0
		}
	case 324:
		//line sql.y:2083
		{
			yyVAL.placeholder = 0
		}
	case 325:
		//line sql.y:2084
		{
			yyVAL.placeholder = 0
		}
	case 326:
		//line sql.y:2088
		{
			yyVAL.valuesClause = ValuesClause{yyS[yypt-0].valuesRow}
		}
	case 327:
		//line sql.y:2092
		{
			yyVAL.valuesClause = append(yyS[yypt-2].valuesClause, yyS[yypt-0].valuesRow)
		}
	case 328:
		//line sql.y:2109
		{
			yyVAL.whereClause = &WhereClause{Expr: yyS[yypt-0].expr}
		}
	case 329:
		//line sql.y:2110
		{
			yyVAL.whereClause = nil
		}
	case 330:
		//line sql.y:2119
		{
			panic("TODO")
		}
	case 331:
		//line sql.y:2120
		{
			yyVAL.placeholder = nil
		}
	case 332:
		//line sql.y:2125
		{
			yyVAL.filterClause = &FilterClause{Expr: yyS[yypt-1].expr}
		}
	case 333:
		//line sql.y:2128
		{
			yyVAL.filterClause = nil
		}
	case 334:
		//line sql.y:2140
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyS[yypt-1].fields}
		}
	case 335:
		//line sql.y:2144
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 336:
		//line sql.y:2148
		{
			yyVAL.row = Row{Exprs: append(yyS[yypt-3].fields, yyS[yypt-1].expr)}
		}
	case 337:
		//line sql.y:2154
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyS[yypt-1].fields}
		}
	case 338:
		//line sql.y:2158
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 339:
		//line sql.y:2164
		{
			yyVAL.row = Row{Exprs: append(yyS[yypt-3].fields, yyS[yypt-1].expr)}
		}
	case 340:
		//line sql.y:2170
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 341:
		//line sql.y:2171
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 342:
		//line sql.y:2174
		{
			yyVAL.str = "+"
		}
	case 343:
		//line sql.y:2175
		{
			yyVAL.str = "-"
		}
	case 344:
		//line sql.y:2176
		{
			yyVAL.str = "*"
		}
	case 345:
		//line sql.y:2177
		{
			yyVAL.str = "/"
		}
	case 346:
		//line sql.y:2178
		{
			yyVAL.str = "%"
		}
	case 347:
		//line sql.y:2179
		{
			yyVAL.str = "^"
		}
	case 348:
		//line sql.y:2180
		{
			yyVAL.str = "<"
		}
	case 349:
		//line sql.y:2181
		{
			yyVAL.str = ">"
		}
	case 350:
		//line sql.y:2182
		{
			yyVAL.str = "="
		}
	case 351:
		//line sql.y:2183
		{
			yyVAL.str = "<="
		}
	case 352:
		//line sql.y:2184
		{
			yyVAL.str = ">="
		}
	case 353:
		//line sql.y:2185
		{
			yyVAL.str = "<>"
		}
	case 354:
		//line sql.y:2188
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 355:
		//line sql.y:2189
		{
			yyVAL.str = yyS[yypt-1].str
		}
	case 356:
		//line sql.y:2192
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 357:
		//line sql.y:2193
		{
			yyVAL.str = yyS[yypt-1].str
		}
	case 358:
		//line sql.y:2205
		{
			yyVAL.expr = CaseExpr{CaseArg: yyS[yypt-3].expr, WhenClauses: yyS[yypt-2].whenClauses, Default: yyS[yypt-1].expr}
		}
	case 359:
		//line sql.y:2212
		{
			yyVAL.whenClauses = []WhenClause{yyS[yypt-0].whenClause}
		}
	case 360:
		//line sql.y:2216
		{
			yyVAL.whenClauses = append(yyS[yypt-1].whenClauses, yyS[yypt-0].whenClause)
		}
	case 361:
		//line sql.y:2222
		{
			yyVAL.whenClause = WhenClause{When: yyS[yypt-2].expr, Then: yyS[yypt-0].expr}
		}
	case 362:
		//line sql.y:2227
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 363:
		//line sql.y:2228
		{
			yyVAL.expr = nil
		}
	case 364:
		//line sql.y:2231
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 365:
		//line sql.y:2232
		{
			yyVAL.expr = nil
		}
	case 366:
		//line sql.y:2236
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-0].str}
		}
	case 367:
		//line sql.y:2240
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-1].str, Indirection: yyS[yypt-0].indirection}
		}
	case 368:
		//line sql.y:2248
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyS[yypt-0].str}
		}
	case 369:
		//line sql.y:2252
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 370:
		//line sql.y:2256
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-1].expr}
		}
	case 371:
		//line sql.y:2260
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-3].expr, UpperSubscript: yyS[yypt-1].expr}
		}
	case 372:
		//line sql.y:2265
		{
			yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
		}
	case 373:
		//line sql.y:2266
		{
			yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
		}
	case 374:
		//line sql.y:2269
		{
			yyVAL.indirection = nil
		}
	case 375:
		//line sql.y:2271
		{
			if yyS[yypt-1].indirection != nil {
				yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
			}
		}
	case 376:
		//line sql.y:2281
		{
			yyVAL.placeholder = nil
		}
	case 377:
		//line sql.y:2285
		{
			yyVAL.placeholder = nil
		}
	case 378:
		//line sql.y:2297
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 379:
		//line sql.y:2298
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 380:
		//line sql.y:2302
		{
			yyVAL.valuesRow = ValuesRow{yyS[yypt-0].expr}
		}
	case 381:
		//line sql.y:2306
		{
			yyVAL.valuesRow = append(yyS[yypt-2].valuesRow, yyS[yypt-0].expr)
		}
	case 382:
		//line sql.y:2317
		{
			yyVAL.valuesRow = yyS[yypt-1].valuesRow
		}
	case 383:
		//line sql.y:2328
		{
			yyVAL.fields = yyS[yypt-0].fields
		}
	case 384:
		//line sql.y:2329
		{
			yyVAL.fields = nil
		}
	case 385:
		//line sql.y:2332
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 386:
		//line sql.y:2334
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 387:
		//line sql.y:2340
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 388:
		//line sql.y:2344
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 389:
		yyVAL.expr = yyS[yypt-0].expr
	case 390:
		//line sql.y:2349
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 391:
		//line sql.y:2363
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 392:
		//line sql.y:2367
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 393:
		//line sql.y:2380
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 394:
		//line sql.y:2412
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 395:
		//line sql.y:2414
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 396:
		//line sql.y:2419
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 397:
		//line sql.y:2422
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 398:
		//line sql.y:2435
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 399:
		//line sql.y:2439
		{
			panic("TODO")
		}
	case 400:
		//line sql.y:2449
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 401:
		//line sql.y:2453
		{
			yyVAL.expr = FloatConst(yyS[yypt-0].str)
		}
	case 402:
		//line sql.y:2457
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 403:
		//line sql.y:2465
		{
			yyVAL.expr = ConstTypeExpr{Typename: PgType{Name: yyS[yypt-1].str}, Expr: yyS[yypt-0].expr}
		}
	case 404:
		//line sql.y:2469
		{
			pgType := PgType{Name: yyS[yypt-5].str}

			/*
			 * We must use func_arg_list and opt_sort_clause in the
			 * production to avoid reduce/reduce conflicts, but we
			 * don't actually wish to allow NamedArgExpr in this
			 * context, nor ORDER BY.
			 */

			for _, arg := range yyS[yypt-3].funcArgs {
				if arg.Name != "" {
					yylex.Error("type modifier cannot have parameter name")
				}

				pgType.TypeMods = append(pgType.TypeMods, Expr(arg))
			}

			if yyS[yypt-2].orderClause != nil {
				yylex.Error("type modifier cannot have ORDER BY")
			}

			yyVAL.expr = ConstTypeExpr{Typename: pgType, Expr: yyS[yypt-0].expr}
		}
	case 405:
		//line sql.y:2493
		{
			yyVAL.expr = ConstTypeExpr{Typename: yyS[yypt-1].pgType, Expr: yyS[yypt-0].expr}
		}
	case 406:
		//line sql.y:2501
		{
			yyVAL.expr = BoolLiteral(true)
		}
	case 407:
		//line sql.y:2505
		{
			yyVAL.expr = BoolLiteral(false)
		}
	case 408:
		//line sql.y:2509
		{
			yyVAL.expr = NullLiteral{}
		}
	case 409:
		//line sql.y:2513
		{
			yyVAL.iconst = IntegerLiteral(yyS[yypt-0].str)
		}
	case 410:
		//line sql.y:2514
		{
			yyVAL.expr = StringLiteral(yyS[yypt-0].str)
		}
	case 411:
		//line sql.y:2517
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 412:
		yyVAL.str = yyS[yypt-0].str
	case 413:
		yyVAL.str = yyS[yypt-0].str
	case 414:
		yyVAL.str = yyS[yypt-0].str
	case 415:
		yyVAL.str = yyS[yypt-0].str
	case 416:
		yyVAL.str = yyS[yypt-0].str
	case 417:
		yyVAL.str = yyS[yypt-0].str
	case 422:
		//line sql.y:2560
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 423:
		//line sql.y:2561
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 424:
		//line sql.y:2562
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 425:
		//line sql.y:2563
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 426:
		//line sql.y:2564
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 427:
		yyVAL.str = yyS[yypt-0].str
	case 428:
		yyVAL.str = yyS[yypt-0].str
	case 429:
		yyVAL.str = yyS[yypt-0].str
	case 430:
		yyVAL.str = yyS[yypt-0].str
	case 431:
		yyVAL.str = yyS[yypt-0].str
	case 432:
		yyVAL.str = yyS[yypt-0].str
	case 433:
		yyVAL.str = yyS[yypt-0].str
	case 434:
		yyVAL.str = yyS[yypt-0].str
	case 435:
		yyVAL.str = yyS[yypt-0].str
	case 436:
		yyVAL.str = yyS[yypt-0].str
	case 437:
		yyVAL.str = yyS[yypt-0].str
	case 438:
		yyVAL.str = yyS[yypt-0].str
	case 439:
		yyVAL.str = yyS[yypt-0].str
	case 440:
		yyVAL.str = yyS[yypt-0].str
	case 441:
		yyVAL.str = yyS[yypt-0].str
	case 442:
		yyVAL.str = yyS[yypt-0].str
	case 443:
		yyVAL.str = yyS[yypt-0].str
	case 444:
		yyVAL.str = yyS[yypt-0].str
	case 445:
		yyVAL.str = yyS[yypt-0].str
	case 446:
		yyVAL.str = yyS[yypt-0].str
	case 447:
		yyVAL.str = yyS[yypt-0].str
	case 448:
		yyVAL.str = yyS[yypt-0].str
	case 449:
		yyVAL.str = yyS[yypt-0].str
	case 450:
		yyVAL.str = yyS[yypt-0].str
	case 451:
		yyVAL.str = yyS[yypt-0].str
	case 452:
		yyVAL.str = yyS[yypt-0].str
	case 453:
		yyVAL.str = yyS[yypt-0].str
	case 454:
		yyVAL.str = yyS[yypt-0].str
	case 455:
		yyVAL.str = yyS[yypt-0].str
	case 456:
		yyVAL.str = yyS[yypt-0].str
	case 457:
		yyVAL.str = yyS[yypt-0].str
	case 458:
		yyVAL.str = yyS[yypt-0].str
	case 459:
		yyVAL.str = yyS[yypt-0].str
	case 460:
		yyVAL.str = yyS[yypt-0].str
	case 461:
		yyVAL.str = yyS[yypt-0].str
	case 462:
		yyVAL.str = yyS[yypt-0].str
	case 463:
		yyVAL.str = yyS[yypt-0].str
	case 464:
		yyVAL.str = yyS[yypt-0].str
	case 465:
		yyVAL.str = yyS[yypt-0].str
	case 466:
		yyVAL.str = yyS[yypt-0].str
	case 467:
		yyVAL.str = yyS[yypt-0].str
	case 468:
		yyVAL.str = yyS[yypt-0].str
	case 469:
		yyVAL.str = yyS[yypt-0].str
	case 470:
		yyVAL.str = yyS[yypt-0].str
	case 471:
		yyVAL.str = yyS[yypt-0].str
	case 472:
		yyVAL.str = yyS[yypt-0].str
	case 473:
		yyVAL.str = yyS[yypt-0].str
	case 474:
		yyVAL.str = yyS[yypt-0].str
	case 475:
		yyVAL.str = yyS[yypt-0].str
	case 476:
		yyVAL.str = yyS[yypt-0].str
	case 477:
		yyVAL.str = yyS[yypt-0].str
	case 478:
		yyVAL.str = yyS[yypt-0].str
	case 479:
		yyVAL.str = yyS[yypt-0].str
	case 480:
		yyVAL.str = yyS[yypt-0].str
	case 481:
		yyVAL.str = yyS[yypt-0].str
	case 482:
		yyVAL.str = yyS[yypt-0].str
	case 483:
		yyVAL.str = yyS[yypt-0].str
	case 484:
		yyVAL.str = yyS[yypt-0].str
	case 485:
		yyVAL.str = yyS[yypt-0].str
	case 486:
		yyVAL.str = yyS[yypt-0].str
	case 487:
		yyVAL.str = yyS[yypt-0].str
	case 488:
		yyVAL.str = yyS[yypt-0].str
	case 489:
		yyVAL.str = yyS[yypt-0].str
	case 490:
		yyVAL.str = yyS[yypt-0].str
	case 491:
		yyVAL.str = yyS[yypt-0].str
	case 492:
		yyVAL.str = yyS[yypt-0].str
	case 493:
		yyVAL.str = yyS[yypt-0].str
	case 494:
		yyVAL.str = yyS[yypt-0].str
	case 495:
		yyVAL.str = yyS[yypt-0].str
	case 496:
		yyVAL.str = yyS[yypt-0].str
	case 497:
		yyVAL.str = yyS[yypt-0].str
	case 498:
		yyVAL.str = yyS[yypt-0].str
	case 499:
		yyVAL.str = yyS[yypt-0].str
	case 500:
		yyVAL.str = yyS[yypt-0].str
	case 501:
		yyVAL.str = yyS[yypt-0].str
	case 502:
		yyVAL.str = yyS[yypt-0].str
	case 503:
		yyVAL.str = yyS[yypt-0].str
	case 504:
		yyVAL.str = yyS[yypt-0].str
	case 505:
		yyVAL.str = yyS[yypt-0].str
	case 506:
		yyVAL.str = yyS[yypt-0].str
	case 507:
		yyVAL.str = yyS[yypt-0].str
	case 508:
		yyVAL.str = yyS[yypt-0].str
	case 509:
		yyVAL.str = yyS[yypt-0].str
	case 510:
		yyVAL.str = yyS[yypt-0].str
	case 511:
		yyVAL.str = yyS[yypt-0].str
	case 512:
		yyVAL.str = yyS[yypt-0].str
	case 513:
		yyVAL.str = yyS[yypt-0].str
	case 514:
		yyVAL.str = yyS[yypt-0].str
	case 515:
		yyVAL.str = yyS[yypt-0].str
	case 516:
		yyVAL.str = yyS[yypt-0].str
	case 517:
		yyVAL.str = yyS[yypt-0].str
	case 518:
		yyVAL.str = yyS[yypt-0].str
	case 519:
		yyVAL.str = yyS[yypt-0].str
	case 520:
		yyVAL.str = yyS[yypt-0].str
	case 521:
		yyVAL.str = yyS[yypt-0].str
	case 522:
		yyVAL.str = yyS[yypt-0].str
	case 523:
		yyVAL.str = yyS[yypt-0].str
	case 524:
		yyVAL.str = yyS[yypt-0].str
	case 525:
		yyVAL.str = yyS[yypt-0].str
	case 526:
		yyVAL.str = yyS[yypt-0].str
	case 527:
		yyVAL.str = yyS[yypt-0].str
	case 528:
		yyVAL.str = yyS[yypt-0].str
	case 529:
		yyVAL.str = yyS[yypt-0].str
	case 530:
		yyVAL.str = yyS[yypt-0].str
	case 531:
		yyVAL.str = yyS[yypt-0].str
	case 532:
		yyVAL.str = yyS[yypt-0].str
	case 533:
		yyVAL.str = yyS[yypt-0].str
	case 534:
		yyVAL.str = yyS[yypt-0].str
	case 535:
		yyVAL.str = yyS[yypt-0].str
	case 536:
		yyVAL.str = yyS[yypt-0].str
	case 537:
		yyVAL.str = yyS[yypt-0].str
	case 538:
		yyVAL.str = yyS[yypt-0].str
	case 539:
		yyVAL.str = yyS[yypt-0].str
	case 540:
		yyVAL.str = yyS[yypt-0].str
	case 541:
		yyVAL.str = yyS[yypt-0].str
	case 542:
		yyVAL.str = yyS[yypt-0].str
	case 543:
		yyVAL.str = yyS[yypt-0].str
	case 544:
		yyVAL.str = yyS[yypt-0].str
	case 545:
		yyVAL.str = yyS[yypt-0].str
	case 546:
		yyVAL.str = yyS[yypt-0].str
	case 547:
		yyVAL.str = yyS[yypt-0].str
	case 548:
		yyVAL.str = yyS[yypt-0].str
	case 549:
		yyVAL.str = yyS[yypt-0].str
	case 550:
		yyVAL.str = yyS[yypt-0].str
	case 551:
		yyVAL.str = yyS[yypt-0].str
	case 552:
		yyVAL.str = yyS[yypt-0].str
	case 553:
		yyVAL.str = yyS[yypt-0].str
	case 554:
		yyVAL.str = yyS[yypt-0].str
	case 555:
		yyVAL.str = yyS[yypt-0].str
	case 556:
		yyVAL.str = yyS[yypt-0].str
	case 557:
		yyVAL.str = yyS[yypt-0].str
	case 558:
		yyVAL.str = yyS[yypt-0].str
	case 559:
		yyVAL.str = yyS[yypt-0].str
	case 560:
		yyVAL.str = yyS[yypt-0].str
	case 561:
		yyVAL.str = yyS[yypt-0].str
	case 562:
		yyVAL.str = yyS[yypt-0].str
	case 563:
		yyVAL.str = yyS[yypt-0].str
	case 564:
		yyVAL.str = yyS[yypt-0].str
	case 565:
		yyVAL.str = yyS[yypt-0].str
	case 566:
		yyVAL.str = yyS[yypt-0].str
	case 567:
		yyVAL.str = yyS[yypt-0].str
	case 568:
		yyVAL.str = yyS[yypt-0].str
	case 569:
		yyVAL.str = yyS[yypt-0].str
	case 570:
		yyVAL.str = yyS[yypt-0].str
	case 571:
		yyVAL.str = yyS[yypt-0].str
	case 572:
		yyVAL.str = yyS[yypt-0].str
	case 573:
		yyVAL.str = yyS[yypt-0].str
	case 574:
		yyVAL.str = yyS[yypt-0].str
	case 575:
		yyVAL.str = yyS[yypt-0].str
	case 576:
		yyVAL.str = yyS[yypt-0].str
	case 577:
		yyVAL.str = yyS[yypt-0].str
	case 578:
		yyVAL.str = yyS[yypt-0].str
	case 579:
		yyVAL.str = yyS[yypt-0].str
	case 580:
		yyVAL.str = yyS[yypt-0].str
	case 581:
		yyVAL.str = yyS[yypt-0].str
	case 582:
		yyVAL.str = yyS[yypt-0].str
	case 583:
		yyVAL.str = yyS[yypt-0].str
	case 584:
		yyVAL.str = yyS[yypt-0].str
	case 585:
		yyVAL.str = yyS[yypt-0].str
	case 586:
		yyVAL.str = yyS[yypt-0].str
	case 587:
		yyVAL.str = yyS[yypt-0].str
	case 588:
		yyVAL.str = yyS[yypt-0].str
	case 589:
		yyVAL.str = yyS[yypt-0].str
	case 590:
		yyVAL.str = yyS[yypt-0].str
	case 591:
		yyVAL.str = yyS[yypt-0].str
	case 592:
		yyVAL.str = yyS[yypt-0].str
	case 593:
		yyVAL.str = yyS[yypt-0].str
	case 594:
		yyVAL.str = yyS[yypt-0].str
	case 595:
		yyVAL.str = yyS[yypt-0].str
	case 596:
		yyVAL.str = yyS[yypt-0].str
	case 597:
		yyVAL.str = yyS[yypt-0].str
	case 598:
		yyVAL.str = yyS[yypt-0].str
	case 599:
		yyVAL.str = yyS[yypt-0].str
	case 600:
		yyVAL.str = yyS[yypt-0].str
	case 601:
		yyVAL.str = yyS[yypt-0].str
	case 602:
		yyVAL.str = yyS[yypt-0].str
	case 603:
		yyVAL.str = yyS[yypt-0].str
	case 604:
		yyVAL.str = yyS[yypt-0].str
	case 605:
		yyVAL.str = yyS[yypt-0].str
	case 606:
		yyVAL.str = yyS[yypt-0].str
	case 607:
		yyVAL.str = yyS[yypt-0].str
	case 608:
		yyVAL.str = yyS[yypt-0].str
	case 609:
		yyVAL.str = yyS[yypt-0].str
	case 610:
		yyVAL.str = yyS[yypt-0].str
	case 611:
		yyVAL.str = yyS[yypt-0].str
	case 612:
		yyVAL.str = yyS[yypt-0].str
	case 613:
		yyVAL.str = yyS[yypt-0].str
	case 614:
		yyVAL.str = yyS[yypt-0].str
	case 615:
		yyVAL.str = yyS[yypt-0].str
	case 616:
		yyVAL.str = yyS[yypt-0].str
	case 617:
		yyVAL.str = yyS[yypt-0].str
	case 618:
		yyVAL.str = yyS[yypt-0].str
	case 619:
		yyVAL.str = yyS[yypt-0].str
	case 620:
		yyVAL.str = yyS[yypt-0].str
	case 621:
		yyVAL.str = yyS[yypt-0].str
	case 622:
		yyVAL.str = yyS[yypt-0].str
	case 623:
		yyVAL.str = yyS[yypt-0].str
	case 624:
		yyVAL.str = yyS[yypt-0].str
	case 625:
		yyVAL.str = yyS[yypt-0].str
	case 626:
		yyVAL.str = yyS[yypt-0].str
	case 627:
		yyVAL.str = yyS[yypt-0].str
	case 628:
		yyVAL.str = yyS[yypt-0].str
	case 629:
		yyVAL.str = yyS[yypt-0].str
	case 630:
		yyVAL.str = yyS[yypt-0].str
	case 631:
		yyVAL.str = yyS[yypt-0].str
	case 632:
		yyVAL.str = yyS[yypt-0].str
	case 633:
		yyVAL.str = yyS[yypt-0].str
	case 634:
		yyVAL.str = yyS[yypt-0].str
	case 635:
		yyVAL.str = yyS[yypt-0].str
	case 636:
		yyVAL.str = yyS[yypt-0].str
	case 637:
		yyVAL.str = yyS[yypt-0].str
	case 638:
		yyVAL.str = yyS[yypt-0].str
	case 639:
		yyVAL.str = yyS[yypt-0].str
	case 640:
		yyVAL.str = yyS[yypt-0].str
	case 641:
		yyVAL.str = yyS[yypt-0].str
	case 642:
		yyVAL.str = yyS[yypt-0].str
	case 643:
		yyVAL.str = yyS[yypt-0].str
	case 644:
		yyVAL.str = yyS[yypt-0].str
	case 645:
		yyVAL.str = yyS[yypt-0].str
	case 646:
		yyVAL.str = yyS[yypt-0].str
	case 647:
		yyVAL.str = yyS[yypt-0].str
	case 648:
		yyVAL.str = yyS[yypt-0].str
	case 649:
		yyVAL.str = yyS[yypt-0].str
	case 650:
		yyVAL.str = yyS[yypt-0].str
	case 651:
		yyVAL.str = yyS[yypt-0].str
	case 652:
		yyVAL.str = yyS[yypt-0].str
	case 653:
		yyVAL.str = yyS[yypt-0].str
	case 654:
		yyVAL.str = yyS[yypt-0].str
	case 655:
		yyVAL.str = yyS[yypt-0].str
	case 656:
		yyVAL.str = yyS[yypt-0].str
	case 657:
		yyVAL.str = yyS[yypt-0].str
	case 658:
		yyVAL.str = yyS[yypt-0].str
	case 659:
		yyVAL.str = yyS[yypt-0].str
	case 660:
		yyVAL.str = yyS[yypt-0].str
	case 661:
		yyVAL.str = yyS[yypt-0].str
	case 662:
		yyVAL.str = yyS[yypt-0].str
	case 663:
		yyVAL.str = yyS[yypt-0].str
	case 664:
		yyVAL.str = yyS[yypt-0].str
	case 665:
		yyVAL.str = yyS[yypt-0].str
	case 666:
		yyVAL.str = yyS[yypt-0].str
	case 667:
		yyVAL.str = yyS[yypt-0].str
	case 668:
		yyVAL.str = yyS[yypt-0].str
	case 669:
		yyVAL.str = yyS[yypt-0].str
	case 670:
		yyVAL.str = yyS[yypt-0].str
	case 671:
		yyVAL.str = yyS[yypt-0].str
	case 672:
		yyVAL.str = yyS[yypt-0].str
	case 673:
		yyVAL.str = yyS[yypt-0].str
	case 674:
		yyVAL.str = yyS[yypt-0].str
	case 675:
		yyVAL.str = yyS[yypt-0].str
	case 676:
		yyVAL.str = yyS[yypt-0].str
	case 677:
		yyVAL.str = yyS[yypt-0].str
	case 678:
		yyVAL.str = yyS[yypt-0].str
	case 679:
		yyVAL.str = yyS[yypt-0].str
	case 680:
		yyVAL.str = yyS[yypt-0].str
	case 681:
		yyVAL.str = yyS[yypt-0].str
	case 682:
		yyVAL.str = yyS[yypt-0].str
	case 683:
		yyVAL.str = yyS[yypt-0].str
	case 684:
		yyVAL.str = yyS[yypt-0].str
	case 685:
		yyVAL.str = yyS[yypt-0].str
	case 686:
		yyVAL.str = yyS[yypt-0].str
	case 687:
		yyVAL.str = yyS[yypt-0].str
	case 688:
		yyVAL.str = yyS[yypt-0].str
	case 689:
		yyVAL.str = yyS[yypt-0].str
	case 690:
		yyVAL.str = yyS[yypt-0].str
	case 691:
		yyVAL.str = yyS[yypt-0].str
	case 692:
		yyVAL.str = yyS[yypt-0].str
	case 693:
		yyVAL.str = yyS[yypt-0].str
	case 694:
		yyVAL.str = yyS[yypt-0].str
	case 695:
		yyVAL.str = yyS[yypt-0].str
	case 696:
		yyVAL.str = yyS[yypt-0].str
	case 697:
		yyVAL.str = yyS[yypt-0].str
	case 698:
		yyVAL.str = yyS[yypt-0].str
	case 699:
		yyVAL.str = yyS[yypt-0].str
	case 700:
		yyVAL.str = yyS[yypt-0].str
	case 701:
		yyVAL.str = yyS[yypt-0].str
	case 702:
		yyVAL.str = yyS[yypt-0].str
	case 703:
		yyVAL.str = yyS[yypt-0].str
	case 704:
		yyVAL.str = yyS[yypt-0].str
	case 705:
		yyVAL.str = yyS[yypt-0].str
	case 706:
		yyVAL.str = yyS[yypt-0].str
	case 707:
		yyVAL.str = yyS[yypt-0].str
	case 708:
		yyVAL.str = yyS[yypt-0].str
	case 709:
		yyVAL.str = yyS[yypt-0].str
	case 710:
		yyVAL.str = yyS[yypt-0].str
	case 711:
		yyVAL.str = yyS[yypt-0].str
	case 712:
		yyVAL.str = yyS[yypt-0].str
	case 713:
		yyVAL.str = yyS[yypt-0].str
	case 714:
		yyVAL.str = yyS[yypt-0].str
	case 715:
		yyVAL.str = yyS[yypt-0].str
	case 716:
		yyVAL.str = yyS[yypt-0].str
	case 717:
		yyVAL.str = yyS[yypt-0].str
	case 718:
		yyVAL.str = yyS[yypt-0].str
	case 719:
		yyVAL.str = yyS[yypt-0].str
	case 720:
		yyVAL.str = yyS[yypt-0].str
	case 721:
		yyVAL.str = yyS[yypt-0].str
	case 722:
		yyVAL.str = yyS[yypt-0].str
	case 723:
		yyVAL.str = yyS[yypt-0].str
	case 724:
		yyVAL.str = yyS[yypt-0].str
	case 725:
		yyVAL.str = yyS[yypt-0].str
	case 726:
		yyVAL.str = yyS[yypt-0].str
	case 727:
		yyVAL.str = yyS[yypt-0].str
	case 728:
		yyVAL.str = yyS[yypt-0].str
	case 729:
		yyVAL.str = yyS[yypt-0].str
	case 730:
		yyVAL.str = yyS[yypt-0].str
	case 731:
		yyVAL.str = yyS[yypt-0].str
	case 732:
		yyVAL.str = yyS[yypt-0].str
	case 733:
		yyVAL.str = yyS[yypt-0].str
	case 734:
		yyVAL.str = yyS[yypt-0].str
	case 735:
		yyVAL.str = yyS[yypt-0].str
	case 736:
		yyVAL.str = yyS[yypt-0].str
	case 737:
		yyVAL.str = yyS[yypt-0].str
	case 738:
		yyVAL.str = yyS[yypt-0].str
	case 739:
		yyVAL.str = yyS[yypt-0].str
	case 740:
		yyVAL.str = yyS[yypt-0].str
	case 741:
		yyVAL.str = yyS[yypt-0].str
	case 742:
		yyVAL.str = yyS[yypt-0].str
	case 743:
		yyVAL.str = yyS[yypt-0].str
	case 744:
		yyVAL.str = yyS[yypt-0].str
	case 745:
		yyVAL.str = yyS[yypt-0].str
	case 746:
		yyVAL.str = yyS[yypt-0].str
	case 747:
		yyVAL.str = yyS[yypt-0].str
	case 748:
		yyVAL.str = yyS[yypt-0].str
	case 749:
		yyVAL.str = yyS[yypt-0].str
	case 750:
		yyVAL.str = yyS[yypt-0].str
	case 751:
		yyVAL.str = yyS[yypt-0].str
	case 752:
		yyVAL.str = yyS[yypt-0].str
	case 753:
		yyVAL.str = yyS[yypt-0].str
	case 754:
		yyVAL.str = yyS[yypt-0].str
	case 755:
		yyVAL.str = yyS[yypt-0].str
	case 756:
		yyVAL.str = yyS[yypt-0].str
	case 757:
		yyVAL.str = yyS[yypt-0].str
	case 758:
		yyVAL.str = yyS[yypt-0].str
	case 759:
		yyVAL.str = yyS[yypt-0].str
	case 760:
		yyVAL.str = yyS[yypt-0].str
	case 761:
		yyVAL.str = yyS[yypt-0].str
	case 762:
		yyVAL.str = yyS[yypt-0].str
	case 763:
		yyVAL.str = yyS[yypt-0].str
	case 764:
		yyVAL.str = yyS[yypt-0].str
	case 765:
		yyVAL.str = yyS[yypt-0].str
	case 766:
		yyVAL.str = yyS[yypt-0].str
	case 767:
		yyVAL.str = yyS[yypt-0].str
	case 768:
		yyVAL.str = yyS[yypt-0].str
	case 769:
		yyVAL.str = yyS[yypt-0].str
	case 770:
		yyVAL.str = yyS[yypt-0].str
	case 771:
		yyVAL.str = yyS[yypt-0].str
	case 772:
		yyVAL.str = yyS[yypt-0].str
	case 773:
		yyVAL.str = yyS[yypt-0].str
	case 774:
		yyVAL.str = yyS[yypt-0].str
	case 775:
		yyVAL.str = yyS[yypt-0].str
	case 776:
		yyVAL.str = yyS[yypt-0].str
	case 777:
		yyVAL.str = yyS[yypt-0].str
	case 778:
		yyVAL.str = yyS[yypt-0].str
	case 779:
		yyVAL.str = yyS[yypt-0].str
	case 780:
		yyVAL.str = yyS[yypt-0].str
	case 781:
		yyVAL.str = yyS[yypt-0].str
	case 782:
		yyVAL.str = yyS[yypt-0].str
	case 783:
		yyVAL.str = yyS[yypt-0].str
	case 784:
		yyVAL.str = yyS[yypt-0].str
	case 785:
		yyVAL.str = yyS[yypt-0].str
	case 786:
		yyVAL.str = yyS[yypt-0].str
	case 787:
		yyVAL.str = yyS[yypt-0].str
	case 788:
		yyVAL.str = yyS[yypt-0].str
	case 789:
		yyVAL.str = yyS[yypt-0].str
	case 790:
		yyVAL.str = yyS[yypt-0].str
	case 791:
		yyVAL.str = yyS[yypt-0].str
	case 792:
		yyVAL.str = yyS[yypt-0].str
	case 793:
		yyVAL.str = yyS[yypt-0].str
	case 794:
		yyVAL.str = yyS[yypt-0].str
	case 795:
		yyVAL.str = yyS[yypt-0].str
	case 796:
		yyVAL.str = yyS[yypt-0].str
	case 797:
		yyVAL.str = yyS[yypt-0].str
	case 798:
		yyVAL.str = yyS[yypt-0].str
	case 799:
		yyVAL.str = yyS[yypt-0].str
	case 800:
		yyVAL.str = yyS[yypt-0].str
	case 801:
		yyVAL.str = yyS[yypt-0].str
	case 802:
		yyVAL.str = yyS[yypt-0].str
	case 803:
		yyVAL.str = yyS[yypt-0].str
	case 804:
		yyVAL.str = yyS[yypt-0].str
	case 805:
		yyVAL.str = yyS[yypt-0].str
	case 806:
		yyVAL.str = yyS[yypt-0].str
	case 807:
		yyVAL.str = yyS[yypt-0].str
	case 808:
		yyVAL.str = yyS[yypt-0].str
	case 809:
		yyVAL.str = yyS[yypt-0].str
	case 810:
		yyVAL.str = yyS[yypt-0].str
	case 811:
		yyVAL.str = yyS[yypt-0].str
	case 812:
		yyVAL.str = yyS[yypt-0].str
	case 813:
		yyVAL.str = yyS[yypt-0].str
	case 814:
		yyVAL.str = yyS[yypt-0].str
	case 815:
		yyVAL.str = yyS[yypt-0].str
	case 816:
		yyVAL.str = yyS[yypt-0].str
	case 817:
		yyVAL.str = yyS[yypt-0].str
	case 818:
		yyVAL.str = yyS[yypt-0].str
	case 819:
		yyVAL.str = yyS[yypt-0].str
	case 820:
		yyVAL.str = yyS[yypt-0].str
	case 821:
		yyVAL.str = yyS[yypt-0].str
	case 822:
		yyVAL.str = yyS[yypt-0].str
	case 823:
		yyVAL.str = yyS[yypt-0].str
	case 824:
		yyVAL.str = yyS[yypt-0].str
	case 825:
		yyVAL.str = yyS[yypt-0].str
	case 826:
		yyVAL.str = yyS[yypt-0].str
	case 827:
		yyVAL.str = yyS[yypt-0].str
	case 828:
		yyVAL.str = yyS[yypt-0].str
	case 829:
		yyVAL.str = yyS[yypt-0].str
	case 830:
		yyVAL.str = yyS[yypt-0].str
	case 831:
		yyVAL.str = yyS[yypt-0].str
	case 832:
		yyVAL.str = yyS[yypt-0].str
	case 833:
		yyVAL.str = yyS[yypt-0].str
	case 834:
		yyVAL.str = yyS[yypt-0].str
	case 835:
		yyVAL.str = yyS[yypt-0].str
	case 836:
		yyVAL.str = yyS[yypt-0].str
	case 837:
		yyVAL.str = yyS[yypt-0].str
	case 838:
		yyVAL.str = yyS[yypt-0].str
	case 839:
		yyVAL.str = yyS[yypt-0].str
	case 840:
		yyVAL.str = yyS[yypt-0].str
	case 841:
		yyVAL.str = yyS[yypt-0].str
	case 842:
		yyVAL.str = yyS[yypt-0].str
	}
	goto yystack /* stack new state and value */
}

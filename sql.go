//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	row                 Row
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerConst
	optArrayBounds      []IntegerConst
	optInterval         *OptInterval
	intervalSecond      *IntervalSecond
	subqueryOp          SubqueryOp
	extractList         *ExtractList
	overlayList         OverlayList
	positionList        *PositionList
	substrList          SubstrList
}

const IDENT = 57346
const FCONST = 57347
const SCONST = 57348
const BCONST = 57349
const XCONST = 57350
const Op = 57351
const ICONST = 57352
const PARAM = 57353
const TYPECAST = 57354
const DOT_DOT = 57355
const COLON_EQUALS = 57356
const EQUALS_GREATER = 57357
const LESS_EQUALS = 57358
const GREATER_EQUALS = 57359
const NOT_EQUALS = 57360
const ABORT_P = 57361
const ABSOLUTE_P = 57362
const ACCESS = 57363
const ACTION = 57364
const ADD_P = 57365
const ADMIN = 57366
const AFTER = 57367
const AGGREGATE = 57368
const ALL = 57369
const ALSO = 57370
const ALTER = 57371
const ALWAYS = 57372
const ANALYSE = 57373
const ANALYZE = 57374
const AND = 57375
const ANY = 57376
const ARRAY = 57377
const AS = 57378
const ASC = 57379
const ASSERTION = 57380
const ASSIGNMENT = 57381
const ASYMMETRIC = 57382
const AT = 57383
const ATTRIBUTE = 57384
const AUTHORIZATION = 57385
const BACKWARD = 57386
const BEFORE = 57387
const BEGIN_P = 57388
const BETWEEN = 57389
const BIGINT = 57390
const BINARY = 57391
const BIT = 57392
const BOOLEAN_P = 57393
const BOTH = 57394
const BY = 57395
const CACHE = 57396
const CALLED = 57397
const CASCADE = 57398
const CASCADED = 57399
const CASE = 57400
const CAST = 57401
const CATALOG_P = 57402
const CHAIN = 57403
const CHAR_P = 57404
const CHARACTER = 57405
const CHARACTERISTICS = 57406
const CHECK = 57407
const CHECKPOINT = 57408
const CLASS = 57409
const CLOSE = 57410
const CLUSTER = 57411
const COALESCE = 57412
const COLLATE = 57413
const COLLATION = 57414
const COLUMN = 57415
const COMMENT = 57416
const COMMENTS = 57417
const COMMIT = 57418
const COMMITTED = 57419
const CONCURRENTLY = 57420
const CONFIGURATION = 57421
const CONFLICT = 57422
const CONNECTION = 57423
const CONSTRAINT = 57424
const CONSTRAINTS = 57425
const CONTENT_P = 57426
const CONTINUE_P = 57427
const CONVERSION_P = 57428
const COPY = 57429
const COST = 57430
const CREATE = 57431
const CROSS = 57432
const CSV = 57433
const CUBE = 57434
const CURRENT_P = 57435
const CURRENT_CATALOG = 57436
const CURRENT_DATE = 57437
const CURRENT_ROLE = 57438
const CURRENT_SCHEMA = 57439
const CURRENT_TIME = 57440
const CURRENT_TIMESTAMP = 57441
const CURRENT_USER = 57442
const CURSOR = 57443
const CYCLE = 57444
const DATA_P = 57445
const DATABASE = 57446
const DAY_P = 57447
const DEALLOCATE = 57448
const DEC = 57449
const DECIMAL_P = 57450
const DECLARE = 57451
const DEFAULT = 57452
const DEFAULTS = 57453
const DEFERRABLE = 57454
const DEFERRED = 57455
const DEFINER = 57456
const DELETE_P = 57457
const DELIMITER = 57458
const DELIMITERS = 57459
const DESC = 57460
const DICTIONARY = 57461
const DISABLE_P = 57462
const DISCARD = 57463
const DISTINCT = 57464
const DO = 57465
const DOCUMENT_P = 57466
const DOMAIN_P = 57467
const DOUBLE_P = 57468
const DROP = 57469
const EACH = 57470
const ELSE = 57471
const ENABLE_P = 57472
const ENCODING = 57473
const ENCRYPTED = 57474
const END_P = 57475
const ENUM_P = 57476
const ESCAPE = 57477
const EVENT = 57478
const EXCEPT = 57479
const EXCLUDE = 57480
const EXCLUDING = 57481
const EXCLUSIVE = 57482
const EXECUTE = 57483
const EXISTS = 57484
const EXPLAIN = 57485
const EXTENSION = 57486
const EXTERNAL = 57487
const EXTRACT = 57488
const FALSE_P = 57489
const FAMILY = 57490
const FETCH = 57491
const FILTER = 57492
const FIRST_P = 57493
const FLOAT_P = 57494
const FOLLOWING = 57495
const FOR = 57496
const FORCE = 57497
const FOREIGN = 57498
const FORWARD = 57499
const FREEZE = 57500
const FROM = 57501
const FULL = 57502
const FUNCTION = 57503
const FUNCTIONS = 57504
const GLOBAL = 57505
const GRANT = 57506
const GRANTED = 57507
const GREATEST = 57508
const GROUP_P = 57509
const GROUPING = 57510
const HANDLER = 57511
const HAVING = 57512
const HEADER_P = 57513
const HOLD = 57514
const HOUR_P = 57515
const IDENTITY_P = 57516
const IF_P = 57517
const ILIKE = 57518
const IMMEDIATE = 57519
const IMMUTABLE = 57520
const IMPLICIT_P = 57521
const IMPORT_P = 57522
const IN_P = 57523
const INCLUDING = 57524
const INCREMENT = 57525
const INDEX = 57526
const INDEXES = 57527
const INHERIT = 57528
const INHERITS = 57529
const INITIALLY = 57530
const INLINE_P = 57531
const INNER_P = 57532
const INOUT = 57533
const INPUT_P = 57534
const INSENSITIVE = 57535
const INSERT = 57536
const INSTEAD = 57537
const INT_P = 57538
const INTEGER = 57539
const INTERSECT = 57540
const INTERVAL = 57541
const INTO = 57542
const INVOKER = 57543
const IS = 57544
const ISNULL = 57545
const ISOLATION = 57546
const JOIN = 57547
const KEY = 57548
const LABEL = 57549
const LANGUAGE = 57550
const LARGE_P = 57551
const LAST_P = 57552
const LATERAL_P = 57553
const LEADING = 57554
const LEAKPROOF = 57555
const LEAST = 57556
const LEFT = 57557
const LEVEL = 57558
const LIKE = 57559
const LIMIT = 57560
const LISTEN = 57561
const LOAD = 57562
const LOCAL = 57563
const LOCALTIME = 57564
const LOCALTIMESTAMP = 57565
const LOCATION = 57566
const LOCK_P = 57567
const LOCKED = 57568
const LOGGED = 57569
const MAPPING = 57570
const MATCH = 57571
const MATERIALIZED = 57572
const MAXVALUE = 57573
const MINUTE_P = 57574
const MINVALUE = 57575
const MODE = 57576
const MONTH_P = 57577
const MOVE = 57578
const NAME_P = 57579
const NAMES = 57580
const NATIONAL = 57581
const NATURAL = 57582
const NCHAR = 57583
const NEXT = 57584
const NO = 57585
const NONE = 57586
const NOT = 57587
const NOTHING = 57588
const NOTIFY = 57589
const NOTNULL = 57590
const NOWAIT = 57591
const NULL_P = 57592
const NULLIF = 57593
const NULLS_P = 57594
const NUMERIC = 57595
const OBJECT_P = 57596
const OF = 57597
const OFF = 57598
const OFFSET = 57599
const OIDS = 57600
const ON = 57601
const ONLY = 57602
const OPERATOR = 57603
const OPTION = 57604
const OPTIONS = 57605
const OR = 57606
const ORDER = 57607
const ORDINALITY = 57608
const OUT_P = 57609
const OUTER_P = 57610
const OVER = 57611
const OVERLAPS = 57612
const OVERLAY = 57613
const OWNED = 57614
const OWNER = 57615
const PARSER = 57616
const PARTIAL = 57617
const PARTITION = 57618
const PASSING = 57619
const PASSWORD = 57620
const PLACING = 57621
const PLANS = 57622
const POLICY = 57623
const POSITION = 57624
const PRECEDING = 57625
const PRECISION = 57626
const PRESERVE = 57627
const PREPARE = 57628
const PREPARED = 57629
const PRIMARY = 57630
const PRIOR = 57631
const PRIVILEGES = 57632
const PROCEDURAL = 57633
const PROCEDURE = 57634
const PROGRAM = 57635
const QUOTE = 57636
const RANGE = 57637
const READ = 57638
const REAL = 57639
const REASSIGN = 57640
const RECHECK = 57641
const RECURSIVE = 57642
const REF = 57643
const REFERENCES = 57644
const REFRESH = 57645
const REINDEX = 57646
const RELATIVE_P = 57647
const RELEASE = 57648
const RENAME = 57649
const REPEATABLE = 57650
const REPLACE = 57651
const REPLICA = 57652
const RESET = 57653
const RESTART = 57654
const RESTRICT = 57655
const RETURNING = 57656
const RETURNS = 57657
const REVOKE = 57658
const RIGHT = 57659
const ROLE = 57660
const ROLLBACK = 57661
const ROLLUP = 57662
const ROW = 57663
const ROWS = 57664
const RULE = 57665
const SAVEPOINT = 57666
const SCHEMA = 57667
const SCROLL = 57668
const SEARCH = 57669
const SECOND_P = 57670
const SECURITY = 57671
const SELECT = 57672
const SEQUENCE = 57673
const SEQUENCES = 57674
const SERIALIZABLE = 57675
const SERVER = 57676
const SESSION = 57677
const SESSION_USER = 57678
const SET = 57679
const SETS = 57680
const SETOF = 57681
const SHARE = 57682
const SHOW = 57683
const SIMILAR = 57684
const SIMPLE = 57685
const SKIP = 57686
const SMALLINT = 57687
const SNAPSHOT = 57688
const SOME = 57689
const SQL_P = 57690
const STABLE = 57691
const STANDALONE_P = 57692
const START = 57693
const STATEMENT = 57694
const STATISTICS = 57695
const STDIN = 57696
const STDOUT = 57697
const STORAGE = 57698
const STRICT_P = 57699
const STRIP_P = 57700
const SUBSTRING = 57701
const SYMMETRIC = 57702
const SYSID = 57703
const SYSTEM_P = 57704
const TABLE = 57705
const TABLES = 57706
const TABLESAMPLE = 57707
const TABLESPACE = 57708
const TEMP = 57709
const TEMPLATE = 57710
const TEMPORARY = 57711
const TEXT_P = 57712
const THEN = 57713
const TIME = 57714
const TIMESTAMP = 57715
const TO = 57716
const TRAILING = 57717
const TRANSACTION = 57718
const TRANSFORM = 57719
const TREAT = 57720
const TRIGGER = 57721
const TRIM = 57722
const TRUE_P = 57723
const TRUNCATE = 57724
const TRUSTED = 57725
const TYPE_P = 57726
const TYPES_P = 57727
const UNBOUNDED = 57728
const UNCOMMITTED = 57729
const UNENCRYPTED = 57730
const UNION = 57731
const UNIQUE = 57732
const UNKNOWN = 57733
const UNLISTEN = 57734
const UNLOGGED = 57735
const UNTIL = 57736
const UPDATE = 57737
const USER = 57738
const USING = 57739
const VACUUM = 57740
const VALID = 57741
const VALIDATE = 57742
const VALIDATOR = 57743
const VALUE_P = 57744
const VALUES = 57745
const VARCHAR = 57746
const VARIADIC = 57747
const VARYING = 57748
const VERBOSE = 57749
const VERSION_P = 57750
const VIEW = 57751
const VIEWS = 57752
const VOLATILE = 57753
const WHEN = 57754
const WHERE = 57755
const WHITESPACE_P = 57756
const WINDOW = 57757
const WITH = 57758
const WITHIN = 57759
const WITHOUT = 57760
const WORK = 57761
const WRAPPER = 57762
const WRITE = 57763
const XML_P = 57764
const XMLATTRIBUTES = 57765
const XMLCONCAT = 57766
const XMLELEMENT = 57767
const XMLEXISTS = 57768
const XMLFOREST = 57769
const XMLPARSE = 57770
const XMLPI = 57771
const XMLROOT = 57772
const XMLSERIALIZE = 57773
const YEAR_P = 57774
const YES_P = 57775
const ZONE = 57776
const NOT_LA = 57777
const NULLS_LA = 57778
const WITH_LA = 57779
const OP = 57780
const POSTFIXOP = 57781
const UMINUS = 57782

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"';'",
	"','",
	"':'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:3298

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 291,
	455, 291,
	-2, 299,
	-1, 5,
	1, 294,
	453, 294,
	455, 294,
	-2, 298,
	-1, 13,
	1, 295,
	453, 295,
	455, 295,
	-2, 315,
	-1, 408,
	6, 488,
	14, 488,
	15, 488,
	452, 488,
	-2, 485,
	-1, 409,
	6, 489,
	14, 489,
	15, 489,
	452, 489,
	-2, 486,
	-1, 417,
	6, 82,
	452, 82,
	-2, 785,
	-1, 429,
	6, 821,
	14, 821,
	15, 821,
	452, 821,
	-2, 223,
	-1, 441,
	6, 46,
	-2, 769,
	-1, 442,
	6, 75,
	452, 75,
	-2, 770,
	-1, 443,
	6, 53,
	-2, 771,
	-1, 444,
	6, 75,
	63, 75,
	452, 75,
	-2, 772,
	-1, 445,
	6, 75,
	63, 75,
	452, 75,
	-2, 773,
	-1, 446,
	6, 42,
	-2, 775,
	-1, 447,
	6, 42,
	-2, 776,
	-1, 448,
	6, 55,
	-2, 779,
	-1, 449,
	6, 43,
	-2, 783,
	-1, 450,
	6, 44,
	-2, 784,
	-1, 452,
	6, 75,
	63, 75,
	452, 75,
	-2, 788,
	-1, 453,
	6, 42,
	-2, 791,
	-1, 454,
	6, 47,
	-2, 796,
	-1, 455,
	6, 45,
	-2, 799,
	-1, 456,
	6, 85,
	-2, 801,
	-1, 457,
	6, 85,
	-2, 802,
	-1, 458,
	6, 70,
	63, 70,
	452, 70,
	-2, 806,
	-1, 518,
	321, 385,
	322, 385,
	-2, 102,
	-1, 561,
	27, 407,
	34, 407,
	347, 407,
	-2, 421,
	-1, 572,
	137, 299,
	149, 299,
	154, 299,
	198, 299,
	218, 299,
	257, 299,
	265, 299,
	389, 299,
	-2, 194,
	-1, 585,
	6, 468,
	452, 468,
	-2, 436,
	-1, 709,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 114,
	-1, 710,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 115,
	-1, 711,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 116,
	-1, 712,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 117,
	-1, 713,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 118,
	-1, 714,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 119,
	-1, 718,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 127,
	-1, 724,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 131,
	-1, 860,
	270, 399,
	-2, 402,
	-1, 869,
	14, 9,
	15, 9,
	-2, 467,
	-1, 963,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 129,
	-1, 964,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 133,
	-1, 970,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 135,
	-1, 998,
	270, 398,
	-2, 401,
	-1, 1101,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 128,
	-1, 1104,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 137,
	-1, 1107,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 132,
	-1, 1111,
	202, 0,
	203, 0,
	248, 0,
	-2, 150,
	-1, 1118,
	27, 248,
	34, 248,
	347, 248,
	-2, 422,
	-1, 1123,
	270, 400,
	-2, 403,
	-1, 1161,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 174,
	-1, 1162,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 175,
	-1, 1163,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 176,
	-1, 1164,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 177,
	-1, 1165,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 178,
	-1, 1166,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 179,
	-1, 1201,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 130,
	-1, 1202,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 134,
	-1, 1206,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 136,
	-1, 1207,
	202, 0,
	203, 0,
	248, 0,
	-2, 151,
	-1, 1211,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 154,
	-1, 1212,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 156,
	-1, 1250,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 138,
	-1, 1251,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 155,
	-1, 1252,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 157,
	-1, 1258,
	202, 0,
	-2, 183,
	-1, 1275,
	202, 0,
	-2, 184,
	-1, 1286,
	47, 0,
	176, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 768,
}

const yyNprod = 916
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 15115

var yyAct = [...]int{

	378, 1017, 14, 1265, 1284, 1187, 395, 1241, 1083, 843,
	398, 563, 1237, 949, 615, 834, 631, 29, 1057, 375,
	876, 952, 581, 866, 947, 573, 1112, 576, 27, 1285,
	880, 459, 737, 862, 945, 29, 1056, 32, 734, 958,
	387, 4, 647, 1113, 527, 660, 493, 381, 20, 870,
	372, 611, 561, 529, 664, 531, 836, 490, 1087, 543,
	544, 545, 873, 1295, 1291, 1277, 1294, 1210, 1210, 1253,
	1233, 561, 1210, 992, 531, 18, 547, 1214, 625, 1209,
	992, 992, 1210, 1181, 533, 1116, 992, 1278, 992, 1075,
	556, 1066, 992, 1064, 992, 1063, 992, 1062, 992, 1061,
	992, 998, 992, 533, 992, 994, 993, 1267, 1173, 637,
	995, 992, 636, 1121, 532, 940, 561, 832, 578, 531,
	655, 369, 577, 543, 544, 545, 530, 25, 578, 616,
	874, 1097, 577, 532, 616, 12, 959, 1097, 997, 959,
	547, 8, 627, 531, 1283, 627, 1236, 1234, 533, 561,
	412, 1225, 531, 1220, 556, 1219, 1218, 1199, 1128, 1118,
	1072, 626, 1071, 1068, 626, 1067, 401, 1055, 1032, 1029,
	1027, 1025, 533, 1089, 10, 1024, 624, 829, 532, 628,
	1019, 533, 1023, 1022, 1012, 1004, 996, 932, 369, 875,
	561, 411, 872, 531, 411, 368, 582, 1203, 7, 1268,
	632, 1260, 532, 1231, 583, 1110, 1080, 416, 1088, 1054,
	461, 532, 460, 531, 11, 1011, 986, 984, 979, 551,
	392, 739, 533, 1033, 557, 616, 410, 1043, 1044, 1045,
	463, 619, 410, 919, 885, 462, 884, 350, 827, 634,
	609, 608, 533, 607, 1205, 553, 554, 606, 605, 604,
	603, 602, 532, 601, 600, 599, 598, 1033, 597, 596,
	549, 584, 627, 7, 7, 1270, 1000, 1248, 1247, 1198,
	1092, 582, 532, 1093, 489, 1108, 946, 1070, 1238, 1069,
	961, 626, 948, 551, 1020, 877, 881, 612, 557, 1246,
	1015, 555, 392, 934, 1010, 1033, 1033, 1009, 531, 1043,
	1044, 1045, 1008, 575, 562, 1007, 965, 548, 830, 553,
	554, 725, 17, 926, 873, 925, 1204, 413, 702, 355,
	651, 356, 351, 562, 549, 640, 506, 533, 352, 929,
	506, 357, 1138, 736, 877, 648, 649, 1299, 1135, 1272,
	392, 610, 736, 1033, 1298, 1223, 570, 1043, 1044, 1045,
	883, 743, 18, 1076, 409, 555, 1033, 532, 741, 392,
	360, 638, 1033, 504, 1115, 31, 1273, 504, 562, 392,
	487, 548, 1033, 16, 546, 513, 1043, 1044, 1045, 1134,
	518, 520, 874, 31, 939, 552, 5, 392, 359, 871,
	1033, 1081, 639, 1114, 1043, 1044, 1045, 1136, 1168, 1192,
	1171, 562, 1191, 523, 359, 16, 523, 523, 1188, 956,
	587, 588, 589, 1047, 1084, 652, 502, 1259, 1227, 1058,
	1109, 6, 1028, 978, 1086, 572, 661, 1245, 877, 579,
	580, 1059, 1228, 893, 1230, 411, 595, 594, 1143, 501,
	18, 875, 562, 354, 872, 632, 363, 1257, 359, 552,
	1082, 621, 620, 354, 531, 1189, 367, 358, 1279, 1095,
	505, 953, 617, 904, 505, 1303, 514, 1033, 623, 371,
	1005, 1006, 1049, 358, 1297, 349, 23, 531, 550, 410,
	411, 1302, 540, 541, 542, 1047, 534, 535, 536, 537,
	538, 539, 486, 877, 990, 546, 613, 614, 29, 531,
	991, 488, 1282, 1194, 622, 534, 535, 536, 537, 538,
	539, 546, 360, 532, 415, 503, 1001, 358, 546, 503,
	635, 1169, 414, 13, 19, 3, 400, 29, 533, 546,
	668, 1170, 485, 1047, 896, 669, 629, 877, 666, 701,
	633, 364, 550, 399, 1049, 749, 540, 541, 542, 654,
	534, 535, 536, 537, 538, 539, 360, 558, 532, 1048,
	1262, 700, 1047, 382, 15, 1229, 546, 546, 546, 546,
	546, 24, 546, 881, 839, 663, 536, 537, 538, 539,
	1047, 662, 362, 534, 535, 536, 537, 538, 539, 630,
	845, 748, 1049, 546, 1271, 844, 1222, 747, 738, 365,
	366, 1146, 897, 833, 908, 842, 882, 1264, 838, 748,
	859, 1049, 900, 833, 407, 747, 744, 386, 828, 406,
	391, 1049, 390, 905, 534, 535, 536, 537, 538, 539,
	913, 492, 915, 916, 917, 918, 879, 590, 1013, 1049,
	586, 871, 920, 591, 534, 535, 536, 537, 538, 539,
	1040, 1041, 1042, 967, 1034, 1035, 1036, 1037, 1038, 1039,
	931, 898, 735, 385, 895, 645, 646, 1195, 943, 618,
	383, 742, 922, 923, 643, 499, 508, 507, 642, 930,
	497, 1240, 672, 933, 935, 500, 942, 957, 1034, 1035,
	1036, 1037, 1038, 1039, 617, 740, 623, 564, 671, 585,
	941, 722, 868, 988, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	954, 955, 1040, 1041, 1042, 546, 1034, 1035, 1036, 1037,
	1038, 1039, 1039, 653, 539, 908, 908, 869, 519, 670,
	650, 960, 684, 361, 683, 353, 498, 614, 613, 522,
	516, 622, 522, 522, 905, 905, 968, 899, 641, 515,
	509, 966, 686, 841, 738, 982, 629, 685, 496, 911,
	1040, 1041, 1042, 903, 1034, 1035, 1036, 1037, 1038, 1039,
	572, 983, 1030, 901, 521, 373, 373, 524, 525, 1036,
	1037, 1038, 1039, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 892, 1034, 1035, 1036, 1037, 1038, 1039, 891,
	26, 593, 512, 657, 526, 950, 672, 1040, 1041, 1042,
	1281, 1034, 1035, 1036, 1037, 1038, 1039, 21, 22, 370,
	720, 9, 671, 2, 845, 723, 1, 985, 546, 844,
	0, 0, 546, 0, 0, 0, 31, 0, 0, 667,
	0, 0, 0, 0, 0, 0, 987, 0, 0, 0,
	0, 894, 0, 0, 0, 999, 0, 0, 546, 0,
	0, 719, 0, 670, 0, 31, 684, 0, 683, 0,
	0, 0, 0, 0, 0, 0, 691, 31, 0, 0,
	1018, 546, 0, 0, 0, 396, 686, 1002, 1003, 0,
	0, 685, 0, 546, 0, 1046, 0, 908, 908, 908,
	1014, 0, 0, 546, 746, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 905, 905, 905, 0,
	0, 0, 746, 0, 0, 1053, 1073, 546, 31, 0,
	0, 0, 0, 0, 0, 1065, 0, 29, 0, 0,
	572, 0, 546, 0, 0, 1074, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 546, 0, 908, 908, 1078,
	0, 546, 0, 1098, 0, 1099, 1094, 1079, 0, 0,
	0, 1046, 1046, 667, 0, 0, 905, 905, 0, 0,
	546, 748, 0, 0, 0, 0, 721, 747, 0, 0,
	0, 0, 0, 0, 845, 1130, 1131, 1127, 0, 844,
	0, 0, 1119, 0, 869, 869, 1122, 546, 1126, 0,
	691, 0, 546, 1142, 1129, 572, 1147, 0, 0, 1137,
	1139, 1140, 0, 0, 0, 908, 908, 908, 908, 908,
	908, 908, 908, 908, 908, 908, 908, 908, 0, 908,
	0, 1046, 1046, 1046, 905, 905, 905, 905, 905, 905,
	905, 905, 905, 905, 905, 905, 905, 1152, 905, 0,
	1150, 0, 0, 0, 0, 1176, 0, 1154, 0, 0,
	1174, 0, 0, 1185, 0, 0, 546, 845, 0, 1184,
	1186, 0, 844, 0, 1177, 0, 731, 0, 733, 0,
	1190, 546, 546, 1193, 1180, 546, 1046, 1046, 546, 0,
	0, 0, 546, 1200, 494, 0, 0, 0, 546, 0,
	0, 729, 510, 0, 517, 546, 546, 0, 0, 748,
	672, 528, 0, 546, 546, 747, 0, 1208, 0, 1217,
	565, 566, 567, 568, 569, 546, 671, 1182, 571, 546,
	1183, 869, 546, 0, 546, 0, 1046, 1046, 1046, 1046,
	1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 592,
	0, 1226, 0, 1046, 0, 0, 0, 672, 0, 546,
	546, 0, 31, 0, 672, 0, 0, 670, 0, 0,
	684, 1235, 683, 671, 0, 0, 0, 0, 980, 981,
	671, 0, 546, 546, 0, 1243, 1244, 546, 546, 0,
	686, 672, 546, 546, 0, 685, 546, 0, 0, 727,
	0, 0, 546, 0, 726, 1256, 0, 671, 908, 732,
	0, 0, 0, 546, 670, 0, 0, 684, 31, 683,
	546, 670, 0, 546, 684, 1266, 683, 905, 1263, 0,
	0, 546, 546, 546, 1254, 0, 0, 686, 1261, 1046,
	908, 672, 685, 975, 686, 977, 0, 0, 670, 685,
	546, 684, 0, 683, 0, 1280, 1046, 671, 1290, 905,
	0, 1293, 1292, 1274, 31, 1266, 0, 1276, 973, 0,
	546, 686, 0, 0, 373, 31, 685, 667, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 746, 724, 1296, 0, 670, 0,
	0, 684, 0, 683, 561, 0, 0, 531, 0, 0,
	0, 0, 0, 1304, 691, 0, 0, 0, 0, 0,
	0, 686, 837, 0, 667, 0, 685, 0, 0, 0,
	867, 667, 31, 0, 0, 728, 533, 0, 0, 0,
	0, 672, 0, 0, 890, 730, 902, 0, 912, 914,
	1050, 1051, 1052, 0, 31, 0, 0, 671, 667, 0,
	0, 691, 672, 0, 0, 0, 532, 0, 691, 0,
	0, 971, 0, 0, 392, 0, 976, 1033, 671, 0,
	494, 1043, 1044, 1045, 0, 0, 0, 936, 644, 0,
	0, 672, 0, 0, 0, 691, 0, 0, 670, 528,
	0, 684, 0, 683, 0, 951, 0, 671, 667, 0,
	1105, 1106, 0, 0, 0, 31, 0, 0, 0, 670,
	0, 686, 684, 0, 683, 0, 685, 0, 0, 0,
	1103, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 0, 0, 691, 0, 685, 670, 0,
	0, 684, 0, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 963, 964, 561, 878, 0, 531, 970,
	0, 686, 886, 887, 888, 889, 685, 0, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 0, 1172, 0, 0, 921, 0, 533, 0, 0,
	924, 0, 972, 556, 927, 0, 928, 0, 667, 0,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 937, 938, 0, 0, 0, 0, 532, 0, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	561, 0, 0, 531, 0, 691, 0, 543, 544, 545,
	0, 0, 0, 0, 0, 0, 562, 0, 667, 0,
	0, 0, 392, 0, 547, 1033, 691, 1047, 0, 1043,
	1044, 1045, 533, 31, 0, 0, 989, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 846,
	0, 0, 0, 0, 0, 691, 856, 857, 858, 0,
	0, 0, 532, 0, 0, 0, 0, 867, 867, 0,
	0, 0, 0, 31, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1016, 1049, 561, 0, 1021,
	531, 0, 551, 0, 543, 544, 545, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 0, 571, 0, 0, 0, 0, 0, 533,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 1258, 0, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	0, 0, 1085, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 1100, 1101, 551, 0, 1104,
	0, 0, 557, 1107, 0, 0, 0, 562, 0, 0,
	0, 0, 1111, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 0, 553, 554, 1124, 1125, 0, 534, 535,
	536, 537, 538, 539, 867, 0, 0, 0, 549, 1132,
	1133, 0, 0, 0, 0, 0, 0, 0, 0, 1144,
	0, 0, 0, 0, 1148, 0, 0, 0, 0, 0,
	0, 0, 1151, 0, 0, 1153, 0, 0, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 0, 551, 548, 0, 0, 552, 557,
	0, 0, 1178, 1179, 1040, 1041, 1042, 0, 1034, 1035,
	1036, 1037, 1038, 1039, 1049, 0, 0, 0, 0, 0,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	951, 0, 1096, 951, 0, 549, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 1201, 1202, 0, 0,
	0, 0, 1206, 1207, 0, 0, 0, 0, 1211, 1212,
	0, 0, 0, 0, 0, 1215, 555, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 562,
	0, 0, 548, 0, 0, 0, 0, 1141, 0, 1221,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 534,
	535, 536, 537, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1239, 1242, 0, 951, 951, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1250, 1251, 1252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 0, 0, 0, 0, 0, 550, 0, 1196, 1197,
	540, 541, 542, 0, 534, 535, 536, 537, 538, 539,
	0, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	1269, 0, 1040, 1041, 1042, 0, 1034, 1035, 1036, 1037,
	1038, 1039, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 1289, 1289, 0, 853,
	854, 855, 0, 847, 848, 849, 850, 851, 852, 0,
	1289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1289, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 540, 541, 542,
	745, 534, 535, 536, 537, 538, 539, 0, 0, 0,
	0, 1224, 0, 0, 1249, 33, 34, 35, 36, 37,
	38, 39, 40, 750, 41, 42, 43, 751, 752, 753,
	754, 755, 756, 757, 44, 45, 758, 46, 47, 464,
	48, 49, 50, 301, 302, 465, 303, 304, 759, 51,
	52, 53, 54, 55, 760, 761, 56, 57, 305, 306,
	58, 762, 59, 60, 61, 62, 307, 763, 693, 764,
	63, 64, 65, 66, 466, 67, 68, 69, 765, 70,
	71, 72, 73, 74, 75, 766, 467, 76, 77, 78,
	767, 768, 769, 694, 770, 771, 772, 79, 80, 81,
	82, 83, 84, 308, 309, 85, 773, 86, 774, 87,
	88, 89, 90, 91, 775, 92, 93, 94, 776, 777,
	95, 96, 97, 98, 99, 778, 100, 101, 102, 779,
	103, 104, 105, 780, 106, 107, 108, 109, 310, 110,
	111, 112, 311, 781, 113, 782, 114, 115, 312, 116,
	783, 117, 784, 118, 468, 785, 469, 119, 120, 121,
	786, 122, 313, 787, 314, 123, 788, 124, 125, 126,
	127, 128, 470, 129, 130, 131, 132, 789, 133, 134,
	135, 136, 137, 138, 790, 139, 471, 315, 140, 141,
	142, 143, 316, 317, 791, 318, 792, 144, 472, 473,
	145, 474, 146, 147, 148, 149, 150, 793, 794, 151,
	319, 475, 152, 476, 795, 153, 154, 155, 796, 797,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 320, 477, 321, 171, 172,
	322, 798, 173, 174, 478, 175, 799, 323, 176, 324,
	177, 178, 179, 800, 180, 801, 802, 181, 182, 183,
	803, 804, 184, 325, 479, 185, 480, 326, 186, 187,
	188, 189, 190, 191, 192, 805, 193, 194, 327, 195,
	328, 198, 196, 197, 806, 199, 200, 201, 202, 203,
	204, 205, 206, 329, 207, 208, 209, 210, 807, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	808, 222, 223, 481, 224, 225, 226, 330, 227, 228,
	229, 230, 231, 232, 233, 234, 809, 235, 236, 237,
	238, 239, 810, 240, 241, 331, 242, 243, 482, 244,
	245, 332, 246, 811, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 812, 258, 259, 813,
	260, 483, 261, 262, 263, 264, 265, 814, 334, 335,
	815, 816, 266, 267, 336, 268, 337, 817, 269, 270,
	271, 272, 273, 274, 275, 818, 819, 276, 277, 278,
	279, 280, 820, 821, 281, 282, 283, 284, 285, 338,
	339, 822, 286, 484, 287, 288, 289, 290, 823, 824,
	291, 825, 826, 292, 293, 294, 295, 296, 297, 340,
	341, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 835, 0, 0, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 750, 41, 42, 43, 751, 752,
	753, 754, 755, 756, 757, 44, 45, 758, 46, 47,
	464, 48, 49, 50, 301, 302, 465, 303, 304, 759,
	51, 52, 53, 54, 55, 760, 761, 56, 57, 305,
	306, 58, 762, 59, 60, 61, 62, 307, 763, 693,
	764, 63, 64, 65, 66, 466, 67, 68, 69, 765,
	70, 71, 72, 73, 74, 75, 766, 467, 76, 77,
	78, 767, 768, 769, 694, 770, 771, 772, 79, 80,
	81, 82, 83, 84, 308, 309, 85, 773, 86, 774,
	87, 88, 89, 90, 91, 775, 92, 93, 94, 776,
	777, 95, 96, 97, 98, 99, 778, 100, 101, 102,
	779, 103, 104, 105, 780, 106, 107, 108, 109, 310,
	110, 111, 112, 311, 781, 113, 782, 114, 115, 312,
	116, 783, 117, 784, 118, 468, 785, 469, 119, 120,
	121, 786, 122, 313, 787, 314, 123, 788, 124, 125,
	126, 127, 128, 470, 129, 130, 131, 132, 789, 133,
	134, 135, 136, 137, 138, 790, 139, 471, 315, 140,
	141, 142, 143, 316, 317, 791, 318, 792, 144, 472,
	473, 145, 474, 146, 147, 148, 149, 150, 793, 794,
	151, 319, 475, 152, 476, 795, 153, 154, 155, 796,
	797, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 320, 477, 321, 171,
	172, 322, 798, 173, 174, 478, 175, 799, 323, 176,
	324, 177, 178, 179, 800, 180, 801, 802, 181, 182,
	183, 803, 804, 184, 325, 479, 185, 480, 326, 186,
	187, 188, 189, 190, 191, 192, 805, 193, 194, 327,
	195, 328, 198, 196, 197, 806, 199, 200, 201, 202,
	203, 204, 205, 206, 329, 207, 208, 209, 210, 807,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 808, 222, 223, 481, 224, 225, 226, 330, 227,
	228, 229, 230, 231, 232, 233, 234, 809, 235, 236,
	237, 238, 239, 810, 240, 241, 331, 242, 243, 482,
	244, 245, 332, 246, 811, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 812, 258, 259,
	813, 260, 483, 261, 262, 263, 264, 265, 814, 334,
	335, 815, 816, 266, 267, 336, 268, 337, 817, 269,
	270, 271, 272, 273, 274, 275, 818, 819, 276, 277,
	278, 279, 280, 820, 821, 281, 282, 283, 284, 285,
	338, 339, 822, 286, 484, 287, 288, 289, 290, 823,
	824, 291, 825, 826, 292, 293, 294, 295, 296, 297,
	340, 341, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 408, 397, 411, 0, 0, 392, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 863, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 464, 48, 49, 50, 301, 441, 465, 442, 443,
	0, 51, 52, 53, 54, 55, 405, 430, 56, 57,
	444, 445, 58, 0, 59, 60, 61, 62, 436, 0,
	418, 0, 63, 64, 65, 66, 466, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 467, 76,
	77, 78, 428, 419, 424, 429, 420, 421, 425, 79,
	80, 81, 82, 83, 84, 446, 447, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	864, 0, 95, 96, 440, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 431, 403, 113, 0, 114, 115,
	448, 116, 0, 117, 0, 118, 468, 0, 469, 119,
	120, 121, 0, 122, 437, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 470, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 471, 315,
	140, 141, 142, 143, 449, 450, 0, 417, 0, 144,
	472, 473, 145, 474, 146, 147, 148, 149, 150, 0,
	0, 151, 438, 475, 152, 476, 0, 153, 154, 155,
	422, 423, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 451, 477, 452,
	171, 172, 322, 379, 173, 174, 478, 175, 404, 323,
	176, 453, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 479, 185, 480, 432,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	433, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 454, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 481, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 426, 240, 241, 331, 242, 243,
	482, 244, 245, 455, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 434, 0, 258,
	259, 0, 260, 483, 261, 262, 263, 264, 265, 0,
	456, 457, 0, 0, 266, 267, 435, 268, 337, 402,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 427, 0, 281, 282, 283, 284,
	285, 338, 458, 0, 286, 484, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 439, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 380, 0, 0, 0, 0, 0, 0,
	0, 376, 377, 865, 0, 0, 0, 408, 397, 411,
	384, 861, 392, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 464, 48, 49, 50,
	301, 441, 465, 442, 443, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 444, 445, 58, 0, 59,
	60, 61, 62, 436, 0, 418, 0, 63, 64, 65,
	66, 466, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 467, 76, 77, 78, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	446, 447, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 440,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 448, 116, 0, 117, 0,
	118, 468, 0, 469, 119, 120, 121, 0, 122, 437,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 470,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 471, 315, 140, 141, 142, 143, 449,
	450, 0, 417, 0, 144, 472, 473, 145, 474, 146,
	147, 148, 149, 150, 0, 0, 151, 438, 475, 152,
	476, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 451, 477, 452, 171, 172, 322, 379, 173,
	174, 478, 175, 404, 323, 176, 453, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 479, 185, 480, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 433, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	454, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	481, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 482, 244, 245, 455, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 434, 0, 258, 259, 0, 260, 483, 261,
	262, 263, 264, 265, 0, 456, 457, 0, 0, 266,
	267, 435, 268, 337, 402, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 458, 0, 286,
	484, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 439, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 380, 0,
	0, 0, 0, 408, 397, 411, 376, 377, 392, 410,
	0, 0, 0, 0, 0, 384, 1175, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 464, 48, 49, 50, 301, 441, 465, 442,
	443, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 444, 445, 58, 0, 59, 60, 61, 62, 436,
	0, 418, 0, 63, 64, 65, 66, 466, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 467,
	76, 77, 78, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 446, 447, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 440, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 448, 116, 0, 117, 0, 118, 468, 0, 469,
	119, 120, 121, 0, 122, 437, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 470, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 471,
	315, 140, 141, 142, 143, 449, 450, 0, 417, 0,
	144, 472, 473, 145, 474, 146, 147, 148, 149, 150,
	0, 0, 151, 438, 475, 152, 476, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 451, 477,
	452, 171, 172, 322, 379, 173, 174, 478, 175, 404,
	323, 176, 453, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 479, 185, 480,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 433, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 454, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 481, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 482, 244, 245, 455, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 434, 0,
	258, 259, 0, 260, 483, 261, 262, 263, 264, 265,
	0, 456, 457, 0, 0, 266, 267, 435, 268, 337,
	402, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 458, 0, 286, 484, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 439, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 380, 0, 0, 0, 0, 408,
	397, 411, 376, 377, 392, 410, 0, 0, 0, 0,
	0, 384, 1120, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 464, 48,
	49, 50, 301, 441, 465, 442, 443, 0, 51, 52,
	53, 54, 55, 405, 430, 56, 57, 444, 445, 58,
	0, 59, 60, 61, 62, 436, 0, 418, 0, 63,
	64, 65, 66, 466, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 467, 76, 77, 78, 428,
	419, 424, 429, 420, 421, 425, 79, 80, 81, 82,
	83, 84, 446, 447, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 440, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 431, 403, 113, 0, 114, 115, 448, 116, 0,
	117, 0, 118, 468, 0, 469, 119, 120, 121, 0,
	122, 437, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 470, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 471, 315, 140, 141, 142,
	143, 449, 450, 0, 417, 0, 144, 472, 473, 145,
	474, 146, 147, 148, 149, 150, 0, 0, 151, 438,
	475, 152, 476, 0, 153, 154, 155, 422, 423, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 451, 477, 452, 171, 172, 322,
	379, 173, 174, 478, 175, 404, 323, 176, 453, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 479, 185, 480, 432, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 433, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 454, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 481, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 8, 235, 236, 237, 238,
	239, 426, 240, 241, 331, 242, 243, 482, 244, 245,
	455, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 434, 0, 258, 259, 10, 260,
	483, 261, 262, 263, 264, 265, 0, 456, 457, 0,
	0, 266, 267, 435, 268, 337, 402, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 427, 0, 281, 282, 283, 284, 285, 574, 458,
	0, 286, 484, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 439,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	380, 0, 0, 0, 0, 408, 397, 411, 376, 377,
	392, 410, 0, 0, 0, 0, 0, 384, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 464, 48, 49, 50, 301, 441,
	465, 442, 443, 0, 51, 52, 53, 54, 55, 405,
	430, 56, 57, 444, 445, 58, 0, 59, 60, 61,
	62, 436, 0, 418, 0, 63, 64, 65, 66, 466,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 467, 76, 77, 78, 428, 419, 424, 429, 420,
	421, 425, 79, 80, 81, 82, 83, 84, 446, 447,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 440, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 431, 403, 113,
	0, 114, 115, 448, 116, 0, 117, 0, 118, 468,
	0, 469, 119, 120, 121, 0, 122, 437, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 470, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 471, 315, 140, 141, 142, 143, 449, 450, 0,
	417, 0, 144, 472, 473, 145, 474, 146, 147, 148,
	149, 150, 0, 0, 151, 438, 475, 152, 476, 0,
	153, 154, 155, 422, 423, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	451, 477, 452, 171, 172, 322, 379, 173, 174, 478,
	175, 404, 323, 176, 453, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 479,
	185, 480, 432, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 433, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 454, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 481, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 426, 240, 241,
	331, 242, 243, 482, 244, 245, 455, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	434, 0, 258, 259, 0, 260, 483, 261, 262, 263,
	264, 265, 0, 456, 457, 0, 0, 266, 267, 435,
	268, 337, 402, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 427, 0, 281,
	282, 283, 284, 285, 338, 458, 0, 286, 484, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 439, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 380, 0, 0, 0,
	0, 408, 397, 411, 376, 377, 392, 410, 0, 0,
	0, 0, 0, 384, 860, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	464, 48, 49, 50, 301, 441, 465, 442, 443, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 444,
	445, 58, 0, 59, 60, 61, 62, 436, 0, 418,
	0, 63, 64, 65, 66, 466, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 467, 76, 77,
	78, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 446, 447, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 440, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 448,
	116, 0, 117, 0, 118, 468, 0, 469, 119, 120,
	121, 0, 122, 437, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 470, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 471, 315, 140,
	141, 142, 143, 449, 450, 0, 417, 0, 144, 472,
	473, 145, 474, 146, 147, 148, 149, 150, 0, 0,
	151, 438, 475, 152, 476, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 451, 477, 452, 171,
	172, 322, 379, 173, 174, 478, 175, 404, 323, 176,
	453, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 479, 185, 480, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 433,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 454, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 481, 224, 225, 226, 394, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 482,
	244, 245, 455, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 434, 0, 258, 259,
	0, 260, 483, 261, 262, 263, 264, 265, 0, 456,
	457, 0, 0, 266, 267, 435, 268, 337, 402, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	338, 458, 0, 286, 484, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 439, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 380, 0, 0, 0, 0, 408, 397, 411,
	376, 377, 392, 410, 0, 0, 0, 582, 840, 384,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 464, 48, 49, 50,
	301, 441, 465, 442, 443, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 444, 445, 58, 0, 59,
	60, 61, 62, 436, 0, 418, 0, 63, 64, 65,
	66, 466, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 467, 76, 77, 78, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	446, 447, 85, 495, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 440,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 448, 116, 0, 117, 0,
	118, 468, 0, 469, 119, 120, 121, 0, 122, 437,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 470,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 471, 315, 140, 141, 142, 143, 449,
	450, 0, 417, 0, 144, 472, 473, 145, 474, 146,
	147, 148, 149, 150, 0, 0, 151, 438, 475, 152,
	476, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 451, 477, 452, 171, 172, 322, 379, 173,
	174, 478, 175, 404, 323, 176, 453, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 479, 185, 480, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 433, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	454, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	481, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 482, 244, 245, 455, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 434, 0, 258, 259, 0, 260, 483, 261,
	262, 263, 264, 265, 0, 456, 457, 0, 0, 266,
	267, 435, 268, 337, 402, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 458, 0, 286,
	484, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 439, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 380, 0,
	0, 0, 0, 408, 397, 411, 376, 377, 392, 410,
	0, 0, 0, 0, 0, 384, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 464, 48, 49, 50, 301, 441, 465, 442,
	443, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 444, 445, 58, 0, 59, 60, 61, 62, 436,
	0, 418, 0, 63, 64, 65, 66, 466, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 467,
	76, 77, 78, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 446, 447, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 440, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 448, 116, 0, 117, 0, 118, 468, 0, 469,
	119, 120, 121, 0, 122, 437, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 470, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 471,
	315, 140, 141, 142, 143, 449, 450, 0, 417, 0,
	144, 472, 473, 145, 474, 146, 147, 148, 149, 150,
	0, 0, 151, 438, 475, 152, 476, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 451, 477,
	452, 171, 172, 322, 379, 173, 174, 478, 175, 404,
	323, 176, 453, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 479, 185, 480,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 433, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 454, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 481, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 482, 244, 245, 455, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 434, 0,
	258, 259, 0, 260, 483, 261, 262, 263, 264, 265,
	0, 456, 457, 0, 0, 266, 267, 435, 268, 337,
	402, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 458, 0, 286, 484, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 439, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 380, 0, 0, 0, 0, 0,
	0, 0, 376, 377, 374, 0, 0, 408, 397, 411,
	0, 384, 392, 410, 0, 0, 0, 0, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	511, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 464, 48, 49, 50,
	301, 441, 465, 442, 443, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 444, 445, 58, 0, 59,
	60, 61, 62, 436, 0, 418, 0, 63, 64, 65,
	66, 466, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 467, 76, 77, 78, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	446, 447, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 440,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 448, 116, 0, 117, 0,
	118, 468, 0, 469, 119, 120, 121, 0, 122, 437,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 470,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 471, 315, 140, 141, 142, 143, 449,
	450, 0, 417, 0, 144, 472, 473, 145, 474, 146,
	147, 148, 149, 150, 0, 0, 151, 438, 475, 152,
	476, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 451, 477, 452, 171, 172, 322, 379, 173,
	174, 478, 175, 404, 323, 176, 453, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 479, 185, 480, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 433, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	454, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	481, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 482, 244, 245, 455, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 434, 0, 258, 259, 0, 260, 483, 261,
	262, 263, 264, 265, 0, 456, 457, 0, 0, 266,
	267, 435, 268, 337, 402, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 458, 0, 286,
	484, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 439, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 380, 0,
	0, 0, 0, 408, 397, 411, 376, 377, 392, 410,
	0, 0, 0, 0, 0, 384, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 464, 48, 49, 50, 301, 441, 465, 442,
	443, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 444, 445, 58, 0, 59, 60, 61, 62, 436,
	0, 418, 0, 63, 64, 65, 66, 466, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 467,
	76, 77, 1288, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 446, 447, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 440, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 448, 116, 0, 117, 0, 118, 468, 0, 469,
	119, 120, 121, 0, 122, 437, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 470, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 471,
	315, 140, 141, 142, 143, 449, 450, 0, 417, 0,
	144, 472, 473, 145, 474, 146, 147, 148, 149, 150,
	0, 0, 151, 438, 475, 152, 476, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 451, 477,
	452, 171, 172, 322, 379, 173, 174, 478, 175, 404,
	323, 176, 453, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 479, 185, 480,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 433, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 454, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 481, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 482, 244, 245, 455, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 434, 0,
	258, 259, 0, 260, 483, 261, 262, 263, 264, 265,
	0, 456, 457, 0, 0, 266, 267, 435, 268, 337,
	402, 269, 270, 271, 272, 1287, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 458, 0, 286, 484, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 439, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 380, 0, 0, 0, 0, 408,
	397, 411, 376, 377, 392, 410, 0, 0, 0, 0,
	0, 384, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 464, 48,
	49, 50, 1286, 441, 465, 442, 443, 0, 51, 52,
	53, 54, 55, 405, 430, 56, 57, 444, 445, 58,
	0, 59, 60, 61, 62, 436, 0, 418, 0, 63,
	64, 65, 66, 466, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 467, 76, 77, 1288, 428,
	419, 424, 429, 420, 421, 425, 79, 80, 81, 82,
	83, 84, 446, 447, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 440, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 431, 403, 113, 0, 114, 115, 448, 116, 0,
	117, 0, 118, 468, 0, 469, 119, 120, 121, 0,
	122, 437, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 470, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 471, 315, 140, 141, 142,
	143, 449, 450, 0, 417, 0, 144, 472, 473, 145,
	474, 146, 147, 148, 149, 150, 0, 0, 151, 438,
	475, 152, 476, 0, 153, 154, 155, 422, 423, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 451, 477, 452, 171, 172, 322,
	379, 173, 174, 478, 175, 404, 323, 176, 453, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 479, 185, 480, 432, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 433, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 454, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 481, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 426, 240, 241, 331, 242, 243, 482, 244, 245,
	455, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 434, 0, 258, 259, 0, 260,
	483, 261, 262, 263, 264, 265, 0, 456, 457, 0,
	0, 266, 267, 435, 268, 337, 402, 269, 270, 271,
	272, 1287, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 427, 0, 281, 282, 283, 284, 285, 338, 458,
	0, 286, 484, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 439,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	380, 0, 0, 0, 0, 408, 397, 411, 376, 377,
	392, 410, 0, 0, 0, 0, 0, 384, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 464, 48, 49, 50, 301, 441,
	465, 442, 443, 0, 51, 52, 53, 54, 55, 405,
	430, 56, 57, 444, 445, 58, 0, 59, 60, 61,
	62, 436, 0, 418, 0, 63, 64, 65, 66, 466,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 467, 76, 77, 78, 428, 419, 424, 429, 420,
	421, 425, 79, 80, 81, 82, 83, 84, 446, 447,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 440, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 431, 403, 113,
	0, 114, 115, 448, 116, 0, 117, 0, 118, 468,
	0, 469, 119, 120, 121, 0, 122, 437, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 470, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 471, 315, 140, 141, 142, 143, 449, 450, 0,
	417, 0, 144, 472, 473, 145, 474, 146, 147, 148,
	149, 150, 0, 0, 151, 438, 475, 152, 476, 0,
	153, 154, 155, 422, 423, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	451, 477, 452, 171, 172, 322, 379, 173, 174, 478,
	175, 404, 323, 176, 453, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 479,
	185, 480, 432, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 433, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 454, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 481, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 426, 240, 241,
	331, 242, 243, 482, 244, 245, 455, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	434, 0, 258, 259, 0, 260, 483, 261, 262, 263,
	264, 265, 0, 456, 457, 0, 0, 266, 267, 435,
	268, 337, 402, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 427, 0, 281,
	282, 283, 284, 285, 338, 458, 0, 286, 484, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 439, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 380, 0, 0, 0,
	0, 408, 397, 411, 376, 377, 392, 410, 0, 0,
	0, 0, 0, 384, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	464, 48, 49, 50, 301, 441, 465, 442, 443, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 444,
	445, 58, 0, 59, 60, 61, 62, 436, 0, 418,
	0, 63, 64, 65, 66, 466, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 467, 76, 77,
	78, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 446, 447, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 440, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 448,
	116, 0, 117, 0, 118, 468, 0, 469, 119, 120,
	121, 0, 122, 437, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 470, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 471, 315, 140,
	141, 142, 143, 449, 450, 0, 417, 0, 144, 472,
	473, 145, 474, 146, 147, 148, 149, 150, 0, 0,
	151, 438, 475, 152, 476, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 451, 477, 452, 171,
	172, 322, 0, 173, 174, 478, 175, 404, 323, 176,
	453, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 479, 185, 480, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 433,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 454, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 481, 224, 225, 226, 910, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 482,
	244, 245, 455, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 434, 0, 258, 259,
	0, 260, 483, 261, 262, 263, 264, 265, 0, 456,
	457, 0, 0, 266, 267, 435, 268, 337, 402, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	338, 458, 0, 286, 484, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 439, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 0, 0, 0, 0, 0, 408, 397, 411,
	906, 907, 392, 410, 0, 0, 0, 0, 0, 909,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 464, 48, 49, 50,
	301, 441, 465, 442, 443, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 444, 445, 58, 0, 59,
	60, 61, 62, 436, 0, 418, 0, 63, 64, 65,
	66, 466, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 467, 76, 77, 78, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	446, 447, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 440,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 448, 116, 0, 117, 0,
	118, 468, 0, 469, 119, 120, 121, 0, 122, 437,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 470,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 471, 315, 140, 141, 142, 143, 449,
	450, 0, 417, 0, 144, 0, 473, 145, 474, 146,
	147, 148, 149, 150, 0, 0, 151, 438, 475, 152,
	476, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 451, 477, 452, 171, 172, 322, 0, 173,
	174, 478, 175, 404, 323, 176, 453, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 479, 185, 480, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 433, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	454, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	481, 224, 225, 226, 910, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 482, 244, 245, 455, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 434, 0, 258, 259, 0, 260, 483, 261,
	262, 263, 264, 265, 0, 456, 457, 0, 0, 266,
	267, 435, 268, 337, 402, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 458, 0, 286,
	484, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 439, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 0, 0,
	0, 0, 0, 408, 397, 411, 906, 907, 392, 410,
	0, 0, 0, 0, 0, 909, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 464, 48, 49, 50, 0, 441, 465, 442,
	443, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 444, 445, 58, 0, 59, 60, 61, 62, 436,
	0, 418, 0, 63, 64, 65, 66, 466, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 467,
	76, 77, 1288, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 446, 447, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 440, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 448, 116, 0, 117, 0, 118, 468, 0, 469,
	119, 120, 121, 0, 122, 437, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 0, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 471,
	315, 140, 141, 142, 143, 449, 450, 0, 417, 0,
	144, 0, 0, 145, 474, 146, 147, 148, 149, 150,
	0, 0, 151, 438, 475, 152, 0, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 451, 477,
	452, 171, 172, 322, 379, 173, 174, 0, 175, 404,
	323, 176, 453, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 479, 185, 480,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 433, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 454, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 481, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 0, 244, 245, 455, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 434, 0,
	258, 259, 0, 260, 483, 261, 262, 263, 264, 265,
	0, 456, 457, 0, 0, 266, 267, 435, 268, 337,
	402, 269, 270, 271, 272, 1287, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 458, 0, 286, 484, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 439, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 0, 0, 0, 0, 0, 408,
	397, 411, 376, 377, 392, 410, 0, 0, 0, 0,
	0, 384, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 464, 48,
	49, 50, 0, 441, 465, 442, 443, 0, 51, 52,
	53, 54, 55, 405, 430, 56, 57, 444, 445, 58,
	0, 59, 60, 61, 62, 436, 0, 418, 0, 63,
	64, 65, 66, 466, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 467, 76, 77, 78, 428,
	419, 424, 429, 420, 421, 425, 79, 80, 81, 82,
	83, 84, 446, 447, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 440, 98, 99, 0, 100, 101, 102, 0, 103,
	0, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 431, 403, 113, 0, 114, 115, 448, 116, 0,
	117, 0, 118, 468, 0, 469, 119, 120, 121, 0,
	122, 437, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 0, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 471, 315, 140, 141, 142,
	143, 449, 450, 0, 417, 0, 144, 0, 0, 145,
	474, 146, 147, 148, 149, 150, 0, 0, 151, 438,
	475, 152, 0, 0, 153, 154, 155, 422, 423, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 451, 477, 452, 171, 172, 322,
	379, 173, 174, 0, 175, 404, 323, 176, 453, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 479, 185, 480, 432, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 433, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 454, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 481, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 426, 240, 241, 331, 242, 243, 0, 244, 245,
	455, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 434, 0, 258, 259, 0, 260,
	483, 261, 262, 263, 264, 265, 0, 456, 457, 0,
	0, 266, 267, 435, 268, 337, 402, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 427, 0, 281, 282, 283, 284, 285, 338, 458,
	0, 286, 484, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 439,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	0, 0, 0, 0, 0, 0, 30, 0, 376, 377,
	0, 846, 0, 0, 0, 0, 0, 384, 856, 857,
	858, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 0, 48, 49, 50, 301,
	302, 0, 303, 304, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 305, 306, 58, 0, 59, 60,
	61, 62, 307, 0, 0, 0, 63, 64, 65, 66,
	0, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 0, 76, 77, 78, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 97, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 0,
	113, 0, 114, 115, 312, 116, 0, 117, 0, 118,
	0, 0, 0, 119, 120, 121, 0, 122, 313, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 0, 315, 140, 141, 142, 143, 316, 317,
	0, 318, 0, 144, 0, 0, 145, 0, 146, 147,
	148, 149, 150, 0, 0, 151, 319, 0, 152, 0,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 0, 321, 171, 172, 322, 0, 173, 174,
	0, 175, 0, 323, 176, 324, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 325,
	0, 185, 0, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 329,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 0,
	224, 225, 226, 330, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 331, 242, 243, 0, 244, 245, 332, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 0, 261, 262,
	263, 264, 265, 0, 334, 335, 0, 0, 266, 267,
	336, 268, 337, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 338, 339, 0, 286, 0,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 30, 0, 0,
	0, 853, 854, 855, 0, 847, 848, 849, 850, 851,
	852, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 0, 48, 49, 50,
	301, 302, 0, 303, 304, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 305, 306, 58, 0, 59,
	60, 61, 62, 307, 0, 0, 0, 63, 64, 65,
	66, 0, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 0, 76, 77, 78, 0, 0, 0,
	0, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 97,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 310, 110, 111, 112, 311,
	0, 113, 0, 114, 115, 312, 116, 0, 117, 0,
	118, 0, 0, 0, 119, 120, 121, 0, 122, 313,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 0,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 0, 315, 140, 141, 142, 143, 316,
	317, 0, 318, 0, 144, 0, 0, 145, 0, 146,
	147, 148, 149, 150, 0, 0, 151, 319, 0, 152,
	0, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 0, 321, 171, 172, 322, 0, 173,
	174, 0, 175, 0, 323, 176, 324, 177, 178, 179,
	0, 180, 0, 0, 181, 182, 183, 0, 0, 184,
	325, 0, 185, 0, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	0, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 331, 242, 243, 0, 244, 245, 332, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 0, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 338, 339, 0, 286,
	0, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 0, 0,
	0, 30, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1019, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 0, 46, 47,
	0, 48, 49, 50, 301, 302, 0, 303, 304, 0,
	51, 52, 53, 54, 55, 0, 0, 56, 57, 305,
	306, 58, 0, 59, 60, 61, 62, 307, 0, 0,
	0, 63, 64, 65, 66, 0, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 0, 76, 77,
	78, 0, 0, 0, 0, 0, 0, 0, 79, 80,
	81, 82, 83, 84, 308, 309, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 97, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 310,
	110, 111, 112, 311, 0, 113, 0, 114, 115, 312,
	116, 0, 117, 0, 118, 0, 0, 0, 119, 120,
	121, 0, 122, 313, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 0, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 0, 315, 140,
	141, 142, 143, 316, 317, 0, 318, 0, 144, 0,
	0, 145, 0, 146, 147, 148, 149, 150, 0, 0,
	151, 319, 0, 152, 0, 0, 153, 154, 155, 0,
	0, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 320, 0, 321, 171,
	172, 322, 0, 173, 174, 0, 175, 0, 323, 176,
	324, 177, 178, 179, 0, 180, 0, 0, 181, 182,
	183, 0, 0, 184, 325, 0, 185, 0, 326, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 329, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 0, 224, 225, 226, 330, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 0, 240, 241, 331, 242, 243, 0,
	244, 245, 332, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 0, 261, 262, 263, 264, 265, 0, 334,
	335, 0, 0, 266, 267, 336, 268, 337, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 0, 0, 281, 282, 283, 284, 285,
	338, 339, 0, 286, 0, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 341, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 0, 0, 0, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 0, 0, 0, 44,
	45, 0, 46, 47, 0, 48, 49, 50, 301, 302,
	0, 303, 304, 0, 51, 52, 53, 54, 55, 0,
	0, 56, 57, 305, 306, 58, 0, 59, 60, 61,
	62, 307, 0, 0, 0, 63, 64, 65, 66, 0,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 0, 76, 77, 78, 0, 0, 0, 0, 0,
	0, 0, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 97, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 310, 110, 111, 112, 311, 0, 113,
	0, 114, 115, 312, 116, 0, 117, 0, 118, 0,
	0, 0, 119, 120, 121, 0, 122, 313, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 0, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 0, 315, 140, 141, 142, 143, 316, 317, 0,
	318, 0, 144, 0, 0, 145, 0, 146, 147, 148,
	149, 150, 0, 0, 151, 319, 0, 152, 0, 0,
	153, 154, 155, 0, 0, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 0, 321, 171, 172, 322, 0, 173, 174, 0,
	175, 0, 323, 176, 324, 177, 178, 179, 0, 180,
	0, 28, 181, 182, 183, 0, 0, 184, 325, 0,
	185, 0, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 0, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 0, 240, 241,
	331, 242, 243, 0, 244, 245, 332, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 0, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 0, 0, 281,
	282, 283, 284, 285, 338, 339, 0, 286, 0, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 30, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 0, 48, 49, 50, 301,
	302, 0, 303, 304, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 305, 306, 58, 0, 59, 60,
	61, 62, 307, 0, 0, 0, 63, 64, 65, 66,
	0, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 0, 76, 77, 78, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 97, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 0,
	113, 0, 114, 115, 312, 116, 0, 117, 0, 118,
	0, 0, 0, 119, 120, 121, 0, 122, 313, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 0, 315, 140, 141, 142, 143, 316, 317,
	0, 318, 0, 144, 0, 0, 145, 0, 146, 147,
	148, 149, 150, 0, 0, 151, 319, 0, 152, 0,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 0, 321, 171, 172, 322, 0, 173, 174,
	0, 175, 0, 323, 176, 324, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 325,
	0, 185, 0, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 329,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 0,
	224, 225, 226, 330, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 331, 242, 243, 0, 244, 245, 332, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 0, 261, 262,
	263, 264, 265, 0, 334, 335, 0, 0, 266, 267,
	336, 268, 337, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 338, 339, 0, 286, 0,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 30, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 0, 48, 49, 50,
	301, 302, 0, 303, 304, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 305, 306, 58, 0, 59,
	60, 61, 62, 307, 0, 0, 0, 63, 64, 65,
	66, 0, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 0, 76, 77, 78, 0, 0, 0,
	0, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 97,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 310, 110, 111, 112, 311,
	0, 113, 0, 114, 115, 312, 116, 0, 117, 0,
	118, 0, 0, 0, 119, 120, 121, 0, 122, 313,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 0,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 0, 315, 140, 141, 142, 143, 316,
	317, 0, 318, 0, 144, 0, 0, 145, 0, 146,
	147, 148, 149, 150, 0, 0, 151, 319, 0, 152,
	0, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 0, 321, 171, 172, 322, 0, 173,
	174, 0, 175, 0, 323, 176, 324, 177, 178, 179,
	0, 180, 0, 0, 181, 182, 183, 0, 0, 184,
	325, 0, 185, 0, 326, 186, 187, 188, 189, 0,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 0, 206,
	329, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	0, 224, 225, 226, 330, 0, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 331, 242, 243, 0, 244, 245, 332, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 0, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 338, 339, 0, 286,
	0, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 690, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 0,
	0, 0, 44, 45, 0, 46, 47, 464, 48, 49,
	50, 0, 676, 465, 692, 682, 0, 51, 52, 53,
	54, 55, 0, 0, 56, 57, 696, 695, 58, 0,
	59, 60, 61, 62, 0, 0, 693, 0, 63, 64,
	65, 66, 466, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 467, 76, 77, 78, 0, 0,
	0, 694, 0, 0, 0, 79, 80, 81, 82, 83,
	84, 680, 679, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	440, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 0, 110, 111, 112,
	0, 0, 113, 0, 114, 115, 678, 116, 0, 117,
	0, 118, 468, 0, 469, 119, 120, 121, 0, 122,
	0, 0, 0, 123, 0, 124, 125, 126, 127, 128,
	470, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 471, 0, 140, 141, 142, 143,
	673, 674, 0, 689, 0, 144, 472, 473, 145, 474,
	146, 147, 148, 149, 150, 0, 0, 151, 0, 475,
	152, 476, 0, 153, 154, 155, 0, 0, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 698, 477, 699, 171, 172, 0, 0,
	173, 174, 478, 175, 0, 0, 176, 681, 177, 178,
	179, 0, 180, 0, 0, 181, 182, 183, 0, 0,
	184, 0, 479, 185, 480, 0, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 0, 195, 0, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 677, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 481, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	0, 240, 241, 665, 242, 243, 482, 244, 245, 675,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 0, 0, 258, 259, 0, 260, 483,
	261, 262, 263, 264, 265, 0, 688, 687, 0, 0,
	266, 267, 0, 268, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	0, 0, 281, 282, 283, 284, 285, 0, 697, 0,
	286, 484, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 690, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 299, 300, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 464, 48, 49, 50,
	0, 676, 465, 692, 682, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 696, 695, 58, 0, 59,
	60, 61, 62, 0, 0, 693, 0, 63, 64, 65,
	66, 466, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 467, 76, 77, 78, 0, 0, 0,
	694, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	680, 679, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 440,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 0, 110, 111, 112, 0,
	0, 113, 0, 114, 115, 678, 116, 0, 117, 0,
	118, 468, 0, 469, 119, 120, 121, 0, 122, 0,
	0, 0, 123, 0, 124, 125, 126, 127, 128, 470,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 471, 0, 140, 141, 142, 143, 673,
	674, 0, 689, 0, 144, 472, 473, 145, 474, 146,
	147, 148, 149, 150, 0, 0, 151, 0, 475, 152,
	476, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 698, 477, 699, 171, 172, 0, 0, 173,
	174, 478, 175, 0, 0, 176, 681, 177, 178, 179,
	0, 180, 0, 0, 181, 182, 183, 0, 0, 184,
	0, 479, 185, 480, 0, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 0, 195, 0, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	677, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	481, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 0, 242, 243, 482, 244, 245, 675, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 0, 0, 258, 259, 0, 260, 483, 261,
	262, 263, 264, 265, 0, 688, 687, 0, 0, 266,
	267, 0, 268, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 0, 697, 0, 286,
	484, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 0, 0, 0, 0,
	0, 561, 0, 0, 531, 298, 299, 300, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	561, 0, 0, 531, 0, 547, 0, 543, 544, 545,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 556,
	561, 0, 0, 531, 547, 0, 0, 543, 544, 545,
	0, 0, 533, 0, 0, 0, 561, 0, 556, 531,
	0, 0, 0, 532, 547, 0, 0, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 561, 556, 0,
	531, 0, 532, 0, 543, 544, 545, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 561, 0, 0, 531,
	0, 547, 532, 543, 544, 545, 0, 0, 0, 533,
	0, 0, 0, 0, 0, 556, 561, 0, 532, 531,
	547, 0, 0, 543, 544, 545, 0, 0, 533, 0,
	0, 0, 0, 0, 556, 0, 0, 0, 0, 532,
	547, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 561, 556, 0, 531, 0, 532, 0,
	543, 544, 545, 0, 0, 0, 0, 0, 551, 0,
	0, 0, 0, 557, 0, 0, 0, 547, 532, 0,
	0, 658, 1102, 0, 0, 533, 0, 551, 0, 0,
	0, 556, 557, 0, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 549,
	0, 0, 557, 553, 554, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 553, 554, 0, 0, 0, 0, 0,
	555, 0, 0, 0, 551, 0, 0, 0, 549, 557,
	0, 0, 0, 562, 0, 0, 548, 0, 0, 555,
	0, 0, 659, 551, 0, 0, 0, 0, 557, 0,
	553, 554, 562, 0, 0, 548, 0, 0, 0, 555,
	0, 0, 0, 551, 0, 549, 0, 0, 557, 553,
	554, 0, 562, 0, 0, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 562, 553,
	554, 0, 0, 0, 0, 0, 555, 0, 0, 0,
	551, 0, 0, 0, 549, 557, 0, 0, 0, 562,
	0, 0, 548, 0, 552, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 554, 562, 0,
	0, 548, 0, 552, 0, 555, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 0, 0, 562, 0,
	0, 548, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 0, 0, 548, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 550, 0, 552,
	0, 540, 541, 542, 0, 534, 535, 536, 537, 538,
	539, 0, 0, 0, 0, 1213, 550, 0, 0, 552,
	540, 541, 542, 0, 534, 535, 536, 537, 538, 539,
	0, 0, 0, 0, 1149, 0, 550, 0, 0, 0,
	540, 541, 542, 0, 534, 535, 536, 537, 538, 539,
	0, 0, 0, 0, 1123, 0, 552, 0, 0, 0,
	534, 535, 536, 537, 538, 539, 0, 561, 0, 0,
	531, 0, 0, 550, 0, 0, 0, 540, 541, 542,
	0, 534, 535, 536, 537, 538, 539, 0, 0, 0,
	0, 1077, 550, 0, 0, 0, 540, 541, 542, 533,
	534, 535, 536, 537, 538, 539, 561, 0, 0, 531,
	831, 656, 550, 543, 544, 545, 540, 541, 542, 0,
	534, 535, 536, 537, 538, 539, 0, 0, 1216, 532,
	547, 0, 0, 0, 1091, 0, 0, 0, 533, 561,
	0, 0, 531, 0, 556, 0, 543, 544, 545, 550,
	0, 0, 0, 540, 541, 542, 0, 534, 535, 536,
	537, 538, 539, 547, 0, 0, 1090, 0, 532, 0,
	0, 533, 0, 0, 0, 0, 561, 556, 0, 531,
	0, 0, 0, 543, 544, 545, 0, 0, 0, 0,
	560, 0, 0, 969, 0, 561, 0, 0, 531, 0,
	547, 532, 543, 544, 545, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 556, 0, 0, 0, 0, 547,
	0, 0, 559, 0, 0, 0, 0, 533, 561, 0,
	0, 531, 0, 556, 0, 543, 544, 545, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1301, 0, 547, 0, 0, 0, 0, 532, 0, 0,
	533, 0, 0, 0, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 551, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	554, 0, 0, 0, 0, 0, 551, 0, 0, 0,
	0, 557, 0, 0, 549, 0, 0, 0, 0, 562,
	0, 1059, 0, 0, 0, 0, 1058, 0, 0, 0,
	0, 0, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 551, 0, 555, 0, 549, 557, 561,
	0, 0, 531, 0, 0, 0, 0, 0, 562, 0,
	0, 548, 551, 0, 0, 0, 0, 557, 0, 553,
	554, 0, 0, 0, 0, 0, 0, 0, 555, 0,
	1300, 533, 0, 0, 549, 0, 0, 0, 553, 554,
	0, 562, 0, 0, 548, 551, 0, 0, 0, 0,
	557, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 555, 0, 0, 0, 0,
	0, 553, 554, 0, 0, 0, 0, 0, 562, 0,
	0, 548, 0, 0, 555, 0, 549, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 562, 0, 0,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 555, 0, 0,
	0, 0, 552, 0, 0, 962, 0, 0, 0, 0,
	562, 0, 0, 548, 561, 0, 0, 531, 0, 0,
	0, 543, 544, 545, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 536, 537, 538, 539, 0, 547, 552,
	0, 1060, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 0, 556, 0, 0, 0, 561, 0, 552, 531,
	0, 0, 550, 543, 544, 545, 540, 541, 542, 0,
	534, 535, 536, 537, 538, 539, 532, 0, 0, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 552, 0, 0, 556, 550, 0, 0, 0, 540,
	541, 542, 0, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 0, 0, 561, 0, 0, 531, 532, 0,
	1145, 543, 544, 545, 0, 0, 0, 0, 0, 0,
	0, 562, 550, 0, 0, 0, 540, 541, 542, 0,
	534, 535, 536, 537, 538, 539, 533, 0, 0, 0,
	0, 550, 556, 0, 0, 540, 541, 542, 0, 534,
	535, 536, 537, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 0, 0, 0,
	0, 551, 0, 0, 550, 0, 557, 0, 540, 541,
	542, 0, 534, 535, 536, 537, 538, 539, 0, 0,
	0, 0, 0, 561, 0, 0, 531, 553, 554, 0,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 551, 0, 0, 0, 547, 557, 0,
	1026, 0, 0, 0, 0, 533, 0, 0, 0, 0,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 553,
	554, 0, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 532, 562, 561, 0, 548,
	531, 0, 0, 0, 543, 544, 545, 0, 0, 0,
	0, 551, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 547, 0, 0, 0, 555, 0, 0, 0, 533,
	0, 0, 0, 0, 0, 556, 0, 0, 562, 0,
	0, 548, 0, 534, 535, 536, 537, 538, 539, 0,
	0, 0, 549, 0, 0, 0, 1031, 0, 0, 532,
	561, 0, 0, 531, 0, 0, 0, 543, 544, 545,
	0, 0, 0, 0, 0, 0, 0, 552, 0, 0,
	0, 0, 0, 0, 547, 0, 0, 0, 0, 0,
	0, 0, 533, 0, 0, 0, 562, 0, 556, 0,
	551, 0, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 0, 532, 0, 0, 0, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 561, 0, 0, 531, 0,
	0, 549, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 0, 0, 533, 0, 557,
	550, 0, 555, 556, 540, 541, 542, 552, 534, 535,
	536, 537, 538, 539, 0, 562, 0, 0, 548, 0,
	553, 554, 0, 0, 0, 0, 0, 532, 0, 0,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	0, 0, 550, 0, 0, 0, 540, 541, 542, 0,
	534, 535, 536, 537, 538, 539, 0, 551, 0, 0,
	0, 0, 557, 0, 0, 0, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	0, 0, 548, 553, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 549, 0,
	550, 0, 0, 0, 540, 541, 542, 0, 534, 535,
	536, 537, 538, 539, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 551, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 554,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 550,
	0, 0, 0, 540, 541, 542, 0, 534, 535, 536,
	537, 538, 539, 0, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 0, 0,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 540, 541, 542,
	0, 534, 535, 536, 537, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 550, 0, 0, 0,
	540, 541, 542, 0, 534, 535, 536, 537, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 550, 0, 0, 0, 540, 541, 542, 0, 534,
	535, 536, 537, 538, 539,
}
var yyPact = [...]int{

	-189, -1000, -320, -1000, -1000, -1000, 175, -189, 449, -329,
	11231, -215, -1000, -1000, 299, 419, 419, 419, 403, -258,
	-265, 5999, 5999, -1000, 111, -215, -1000, -171, 10797, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	5563, 255, 289, 285, 120, 103, 239, -1000, 6443, 224,
	7751, 126, -189, -1000, -1000, -189, -189, 7751, -1000, -1000,
	-1000, -330, -1000, 13986, -1000, -1000, 7751, 7751, 7751, 7751,
	7751, 76, -1000, -1000, 4255, -1000, -1000, -322, -188, -254,
	-1000, -1000, -1000, -248, -191, -322, -1000, -1000, -1000, 188,
	474, 185, -1000, -1000, -1000, 7751, 287, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 282, -1000,
	-193, -194, -196, -197, -1000, -1000, -1000, -1000, -1000, -1000,
	-198, -199, -201, -202, -203, -204, -205, -209, -211, -212,
	57, -1000, -119, -1000, -119, -119, -227, -227, -221, -1000,
	-1000, 389, -119, -227, -1000, -1000, -276, -273, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 137, -330, -213, -1000, -1000,
	-1000, 11662, -344, -1000, 14528, -1000, -1000, -1000, -1000, -1000,
	-1000, 124, 101, -1000, 186, -1000, -15, -1000, -1000, -1000,
	14528, -1000, 222, -1000, -1000, -1000, 14, 14528, -1000, 71,
	11662, 207, -1000, -1000, -1000, 207, -336, -1000, 13514, 267,
	5999, 12524, 11662, -54, 7751, 7751, 7751, 7751, 7751, 7751,
	7751, 7751, 7751, 7751, 7751, 7751, 9495, 7751, 7751, 7751,
	654, 7751, -63, 974, -1000, -1000, 302, -231, 324, 2507,
	-1000, -1000, -214, -1000, -1000, 465, 465, 201, 14666, 14666,
	-144, 13457, -332, -339, -215, -322, -1000, 2076, 7751, -1000,
	-1000, -1000, 5127, 9932, 4691, -322, 2938, -1000, -1000, 209,
	469, -126, 14528, 81, -216, -218, 469, 469, 469, 469,
	7751, 429, 7751, 8187, 7751, 7751, 7751, 7751, 7751, 7751,
	-1000, -219, -1000, -1000, -1000, -1000, 7751, -1000, -1000, 469,
	-119, -119, -1000, -1000, 469, -1000, -57, -59, 469, -1000,
	469, -1000, -8, 267, 7751, -266, 5563, -1000, -1000, -102,
	-1000, 14, -1000, 7751, -1000, 469, 469, -1000, -1000, -1000,
	-1000, -1000, 158, -341, -1000, 7751, 1600, -160, -1000, -1000,
	-131, 7751, -1000, -1000, 426, 12943, -1000, -1000, -1000, -1000,
	-1000, -43, -318, -1000, -1000, -1000, -1000, -1000, -221, -227,
	-227, -227, -1000, -1000, -1000, -1000, -1000, -273, -276, -1000,
	-1000, -1000, -119, -1000, -1000, -119, -119, -1000, 389, -119,
	-1000, -315, -154, 131, 131, 286, 286, 286, 487, 1476,
	1476, 1476, 1476, 1476, 1476, 201, 14666, 14591, 14140, 7751,
	7751, -68, 293, -231, 13858, 7751, -1000, 1141, -1000, -1000,
	-1000, 264, -234, -1000, 8187, 8187, -1000, -1000, -1000, 4255,
	-235, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 9932, -1000, -236,
	7751, -1000, 7751, -1000, -1000, -1000, -1000, 43, -345, -346,
	-1000, 14528, -1000, -267, -1000, -316, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -352,
	-1000, -1000, -190, 7751, 7751, -268, -1000, 14528, 456, -1000,
	-1000, -69, -1000, -72, -77, -80, -1000, -237, -269, 161,
	-1000, 7751, -1000, 10363, -129, 7751, -270, -271, -278, -282,
	14464, -283, 263, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -284, 14317, -285, 378, -1000, 8187, 8187, 8187, 4255,
	-243, -286, 13967, -375, 14275, -354, -356, -358, -360, 7751,
	-362, -288, -1000, -1000, -290, -155, -157, -291, -293, 11662,
	-131, -364, -1000, -1000, -1000, 93, 13438, -1000, -1000, -1000,
	11662, -1000, -160, -1000, -246, -1000, 240, 247, 7751, -32,
	-1000, 13930, -180, -177, 424, -1000, 469, -1000, -323, 2507,
	-317, 7751, 7751, 13417, 1315, 7751, 8187, 8187, -1000, 7751,
	140, -1000, -1000, -1000, -1000, 261, -247, -1000, 7751, 12524,
	360, 331, -368, -1000, 4255, -294, 3819, -343, -322, 13401,
	-1000, 7751, 7751, -1000, -1000, -179, -1000, 9932, -1000, -295,
	7751, -1000, -190, -190, -1000, 7751, 7751, 144, 165, 100,
	6, 469, 474, 305, -1000, 7751, 14019, -1000, -1000, 12093,
	7751, 13381, -1000, -1000, -1000, -1000, 12524, -1000, 7751, -1000,
	260, 7751, -1000, 12524, 8187, 8187, 8187, 8187, 8187, 8187,
	8187, 8187, 8187, 8187, 8187, 8187, 8623, 276, 8187, -248,
	455, 455, 245, -348, 3383, -1000, 277, 260, 7751, 7751,
	12524, -1000, -1000, -1000, -1000, -370, -1000, -1000, -156, -1000,
	-1000, -156, 382, -1000, 247, -1000, -1000, -1000, -1000, -1000,
	9932, -1000, -1000, 238, 402, 14528, 7751, 197, 194, 7751,
	499, -1000, 216, 469, -180, -181, -296, 2507, -1000, -1000,
	442, 181, 7751, 7751, 62, 283, 211, 181, 7751, 7751,
	12524, 14375, -374, -1000, 7751, 7751, -1000, 13362, -1000, -376,
	-1000, 7751, -1000, -1000, 13477, 14528, -1000, -1000, 474, -1000,
	-297, -298, 14528, 14528, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -300, -1000, -1000, 14528, 7751, 69, -1000, 1638, -1000,
	-302, 14528, 277, 14528, -1000, 344, 344, 284, 284, 284,
	455, 350, 350, 350, 350, 350, 350, 245, 259, 310,
	-249, -1000, 1385, 7751, -383, -1000, -1000, -1000, 14528, 14528,
	-306, -1000, -1000, -1000, -1000, 238, -307, -137, 7751, 7751,
	-1000, 7751, 7751, 30, -1000, -1000, -183, -184, 469, -1000,
	-1000, 181, 181, 7751, 7751, 7751, 181, 14375, -384, -1000,
	12524, 181, 181, -1000, -1000, 1551, -1000, -1000, -1000, -1000,
	-1000, 14528, 87, 394, -1000, -1000, -1000, 8187, 258, -251,
	-1000, 12524, 107, -1000, -1000, -137, -1000, -1000, 11662, 14528,
	-349, -1000, 14528, -1000, -1000, -253, 7751, -1000, -1000, -186,
	181, 181, 181, -1000, -1000, -1000, 44, 7751, 1573, 8187,
	12524, -388, -1000, -1000, -369, -1000, 422, 7751, 498, 14528,
	-1000, -309, 7315, 7315, -375, 1573, -389, -1000, 11662, -272,
	-1000, -390, -1000, -1000, -1000, -1000, 9059, 191, 16, 13897,
	-1000, -1000, -1000, -1000, 477, -1000, 432, -1000, -1000, -1000,
	-1000, -1000, -1000, 6879, -1000,
}
var yyPgo = [...]int{

	0, 836, 833, 524, 40, 421, 386, 831, 829, 469,
	828, 25, 827, 13, 50, 763, 463, 19, 45, 820,
	815, 24, 44, 2, 516, 814, 813, 34, 16, 53,
	42, 812, 812, 38, 14, 811, 810, 809, 802, 783,
	782, 36, 18, 773, 769, 328, 768, 319, 321, 760,
	759, 758, 750, 746, 322, 745, 331, 743, 740, 738,
	733, 733, 27, 303, 703, 15, 28, 6, 703, 702,
	697, 11, 695, 0, 686, 8, 681, 7, 32, 5,
	582, 51, 78, 678, 10, 670, 895, 669, 663, 643,
	638, 636, 30, 46, 631, 475, 47, 622, 620, 619,
	33, 23, 617, 614, 607, 12, 3, 1, 606, 601,
	596, 594, 4, 29, 49, 20, 22, 574, 563, 561,
	39, 9, 557, 56, 354, 37, 150, 31, 545, 543,
	538, 317, 43, 54, 535, 235, 230, 532, 212, 210,
	530, 526, 522, 514, 207, 26, 21, 166, 514,
}
var yyR1 = [...]int{

	0, 1, 1, 26, 26, 26, 27, 27, 27, 69,
	13, 13, 13, 119, 119, 120, 120, 121, 121, 132,
	132, 132, 132, 132, 132, 146, 146, 146, 133, 133,
	133, 133, 133, 133, 133, 141, 141, 141, 141, 130,
	130, 34, 34, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 87, 87, 140, 140, 142, 142,
	138, 139, 134, 134, 143, 143, 135, 136, 137, 137,
	137, 137, 137, 137, 81, 81, 28, 28, 144, 144,
	144, 144, 147, 82, 82, 82, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	115, 115, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 99, 99, 99, 99, 99, 102, 102, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 19, 19, 20, 20, 20, 20,
	20, 18, 18, 18, 58, 58, 58, 122, 122, 122,
	122, 122, 122, 11, 11, 100, 100, 101, 101, 101,
	145, 145, 116, 116, 116, 117, 117, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 38, 39, 39, 40,
	43, 43, 44, 44, 44, 44, 44, 44, 41, 42,
	2, 2, 4, 4, 3, 3, 3, 3, 5, 5,
	6, 6, 6, 6, 6, 6, 6, 29, 80, 80,
	80, 10, 10, 12, 12, 23, 23, 24, 25, 25,
	22, 22, 75, 75, 76, 76, 77, 79, 79, 54,
	54, 53, 53, 55, 55, 56, 57, 57, 57, 57,
	59, 59, 105, 105, 104, 104, 106, 108, 108, 108,
	107, 109, 109, 110, 110, 111, 111, 111, 112, 112,
	113, 113, 113, 113, 113, 36, 36, 36, 36, 45,
	45, 45, 45, 46, 46, 47, 47, 48, 48, 49,
	49, 50, 51, 51, 51, 52, 30, 30, 31, 31,
	7, 7, 21, 21, 32, 32, 35, 35, 96, 96,
	96, 97, 97, 98, 72, 72, 72, 71, 71, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 73, 73, 74, 74, 78, 78, 88, 91, 91,
	92, 90, 90, 89, 89, 118, 118, 62, 62, 62,
	62, 63, 63, 64, 64, 33, 33, 93, 93, 94,
	94, 95, 8, 8, 9, 9, 14, 14, 14, 14,
	60, 60, 66, 61, 61, 68, 65, 129, 129, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	86, 84, 83, 83, 83, 67, 67, 67, 126, 126,
	126, 148, 148, 148, 148, 123, 123, 123, 123, 123,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 0, 2, 2, 0, 1,
	1, 3, 2, 1, 2, 2, 3, 1, 3, 2,
	3, 5, 6, 2, 3, 3, 4, 0, 1, 1,
	1, 1, 1, 2, 4, 1, 1, 1, 1, 2,
	3, 3, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 1, 1, 1, 1,
	5, 2, 1, 1, 1, 1, 5, 2, 2, 2,
	1, 3, 3, 2, 1, 0, 3, 0, 5, 2,
	5, 2, 1, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	1, 4, 1, 3, 3, 5, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 6, 3, 4, 1, 3, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 5, 6, 6, 7, 3, 4, 1,
	1, 4, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 3, 5, 6, 6, 4, 3, 1, 5, 1,
	1, 4, 1, 4, 1, 4, 1, 4, 1, 1,
	1, 1, 1, 1, 6, 4, 4, 4, 4, 6,
	4, 4, 4, 4, 1, 3, 3, 4, 4, 7,
	5, 2, 2, 0, 1, 2, 0, 1, 4, 1,
	2, 1, 2, 1, 3, 1, 3, 1, 3, 3,
	1, 3, 3, 3, 2, 1, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 2,
	3, 0, 3, 3, 2, 2, 1, 0, 2, 2,
	1, 1, 3, 3, 1, 2, 4, 4, 1, 1,
	9, 9, 1, 2, 4, 4, 4, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 1, 3,
	4, 3, 3, 0, 1, 3, 1, 2, 0, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	2, 0, 2, 0, 1, 3, 3, 2, 2, 0,
	6, 1, 0, 3, 0, 2, 2, 0, 1, 4,
	2, 2, 2, 2, 2, 1, 2, 2, 4, 2,
	2, 1, 1, 1, 0, 2, 5, 2, 3, 1,
	1, 1, 1, 3, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 0, 5, 0, 5, 0, 4, 3,
	5, 4, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 1, 4, 1, 3, 5, 1, 2,
	4, 2, 0, 1, 0, 1, 2, 2, 2, 3,
	5, 1, 2, 0, 2, 1, 0, 1, 1, 1,
	3, 3, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 2, 6, 2, 3, 5, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -2, -3, -4, -6, -5, 452, 330, -7,
	363, 403, 455, -24, -23, 389, 198, 137, 265, -3,
	-4, -12, -10, 27, 122, 456, -36, -66, 260, -67,
	4, -124, -125, 19, 20, 21, 22, 23, 24, 25,
	26, 28, 29, 30, 38, 39, 41, 42, 44, 45,
	46, 53, 54, 55, 56, 57, 60, 61, 64, 66,
	67, 68, 69, 74, 75, 76, 77, 79, 80, 81,
	83, 84, 85, 86, 87, 88, 91, 92, 93, 101,
	102, 103, 104, 105, 106, 109, 111, 113, 114, 115,
	116, 117, 119, 120, 121, 124, 125, 126, 127, 128,
	130, 131, 132, 134, 135, 136, 138, 139, 140, 141,
	143, 144, 145, 148, 150, 151, 153, 155, 157, 161,
	162, 163, 165, 169, 171, 172, 173, 174, 175, 177,
	178, 179, 180, 182, 183, 184, 185, 186, 187, 189,
	192, 193, 194, 195, 201, 204, 206, 207, 208, 209,
	210, 213, 216, 219, 220, 221, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 242, 243, 246, 247, 249, 252, 254, 255, 256,
	258, 261, 262, 263, 266, 269, 272, 273, 274, 275,
	276, 277, 278, 280, 281, 283, 286, 287, 285, 289,
	290, 291, 292, 293, 294, 295, 296, 298, 299, 300,
	301, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	312, 313, 315, 316, 318, 319, 320, 322, 323, 324,
	325, 326, 327, 328, 329, 331, 332, 333, 334, 335,
	337, 338, 340, 341, 343, 344, 346, 348, 349, 350,
	351, 352, 353, 354, 355, 356, 357, 358, 361, 362,
	364, 366, 367, 368, 369, 370, 376, 377, 379, 382,
	383, 384, 385, 386, 387, 388, 391, 392, 393, 394,
	395, 398, 399, 400, 401, 402, 406, 408, 409, 410,
	411, 414, 417, 418, 419, 420, 421, 422, 432, 433,
	434, 47, 48, 50, 51, 62, 63, 70, 107, 108,
	142, 146, 152, 166, 168, 191, 196, 197, 199, 214,
	239, 241, 244, 251, 253, 267, 271, 282, 284, 297,
	321, 339, 345, 359, 372, 373, 378, 380, 403, 404,
	423, 424, 425, 426, 427, 428, 429, 430, 431, -95,
	452, -54, -45, -55, 154, -47, -48, -56, 218, 149,
	257, -57, -80, 27, 122, -80, -80, 53, 453, 453,
	-8, -9, -14, -15, 445, -17, 443, 444, -73, 245,
	435, -96, -118, -85, 452, -88, -102, -4, 142, 35,
	-97, -98, 9, 261, 321, -67, -86, 5, -84, -129,
	-141, -147, 381, 147, 250, 58, -99, -103, 4, -124,
	10, 6, -126, -131, -142, -143, -144, 199, 72, 95,
	98, 99, 222, 223, 96, 100, 336, 396, 94, 97,
	59, 146, 271, 282, 359, 378, 70, 166, 214, 424,
	126, 48, 50, 51, 62, 63, 107, 108, 152, 196,
	197, 239, 241, 253, 297, 345, 372, 373, 404, -127,
	-138, -139, -135, -136, 43, 49, 78, 90, 158, 160,
	176, 190, 202, 203, 205, 215, 217, 240, 248, 268,
	270, 317, 342, 365, 407, -137, -9, 259, -95, 445,
	-66, 452, -94, -93, -15, 110, -46, -45, -53, -54,
	-56, 154, 296, 395, 243, 340, 206, -48, -47, -49,
	-15, 27, -31, 151, 242, -50, -52, -15, -17, -59,
	255, -5, -6, -4, -5, -5, -25, -22, -15, -29,
	456, 12, 71, 41, 443, 444, 445, 446, 447, 448,
	439, 440, 441, 16, 17, 18, -73, 33, 264, 217,
	435, 176, 342, 202, 203, 248, 47, 181, -122, 36,
	4, 9, 261, -71, -70, -15, -15, -15, -15, -15,
	270, -15, -4, -11, 403, -63, -62, 454, 450, -4,
	-4, -116, 450, 452, 452, -63, 452, -84, -84, -84,
	452, -89, -15, -35, 150, 154, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	284, -81, 406, -81, -81, -34, 452, -34, -87, 452,
	63, 62, -81, -34, 452, -82, 437, 418, 452, -82,
	452, -28, 63, -29, 452, -66, 456, 453, 260, 206,
	340, -51, -83, 452, -86, 443, 444, -30, 321, 322,
	-58, 249, 344, -60, -66, 456, 397, -26, 37, 118,
	-18, 159, -14, -132, -133, 339, -130, -131, -140, -134,
	-144, -147, -126, 196, 197, 345, 48, 297, 152, 108,
	107, 253, 51, -138, -139, -135, -136, 373, 372, 199,
	4, -124, 50, 72, 97, 63, 62, 404, 239, 241,
	-119, -67, 372, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, 217,
	176, 342, 47, 181, -15, 374, 250, 245, 381, 147,
	391, 122, 255, 124, -33, 360, 40, -78, -4, 452,
	-72, 34, 347, 27, -123, 4, -124, -125, -127, -128,
	27, 31, 32, 33, 34, 35, 36, 37, 40, 52,
	58, 59, 65, 71, 73, 82, 89, 94, 95, 96,
	98, 99, 100, 110, 112, 118, 122, 123, 129, 133,
	137, 147, 149, 154, 156, 159, 164, 167, 170, 181,
	188, 198, 200, 211, 212, 218, 222, 223, 245, 250,
	257, 259, 260, 264, 265, 279, 288, 302, 314, 330,
	336, 347, 360, 363, 371, 374, 375, 381, 389, 390,
	396, 397, 405, 412, 413, 415, 416, 452, -96, 321,
	452, 453, 456, -62, -65, 445, -123, -15, -11, -117,
	451, -15, -116, -121, -71, -67, 9, 443, 444, 445,
	446, 447, 448, 439, 440, 441, 16, 17, 18, -11,
	453, 453, -100, 27, 122, 445, -101, -15, -69, -126,
	-114, 432, 235, 105, 173, 232, -115, 328, -86, -91,
	-92, 412, -108, 269, 452, 452, -86, -86, -86, -86,
	-15, -37, -38, 4, 432, 235, 105, 173, 232, 328,
	-84, -39, -15, -43, -16, -17, 443, 444, -73, 452,
	321, -44, -15, -11, -15, -11, -11, -11, -11, 452,
	-11, -86, -81, -81, -86, 372, 372, -86, -86, 337,
	-18, -11, 453, -93, 395, -30, -15, -86, -86, 226,
	456, -22, -74, -71, 261, -27, 436, -21, 413, -13,
	-20, -15, -146, 35, -133, -114, 452, -34, -120, 454,
	-120, 434, 135, -15, -15, 374, -33, 360, -78, 135,
	-15, 250, 381, 147, 391, 122, 255, 124, 159, 452,
	-16, -16, -11, -4, 452, -121, 452, -11, -64, -15,
	451, 457, 456, 451, 451, 456, 453, 454, 453, -23,
	456, -24, -100, -100, 453, 14, 15, 374, 374, 374,
	374, 452, 453, -90, -92, 129, -15, -107, -67, 452,
	413, -15, 453, 453, 453, 453, 36, 453, 159, 453,
	-40, 279, 453, 12, 443, 444, 445, 446, 447, 448,
	439, 440, 441, 16, 17, 18, -73, 202, 181, 261,
	-16, -16, -16, -11, 452, 453, -41, -42, 159, 154,
	36, 453, 453, 453, 453, -11, 453, 453, 453, 434,
	434, 453, 453, -67, -21, 453, 260, 453, -66, -27,
	452, 151, 210, -75, 167, -15, 456, 90, 240, 205,
	36, 4, 450, 450, -146, 35, -86, 454, -34, -65,
	-15, -15, 135, 135, -15, -16, -16, -15, 135, 159,
	452, -15, -145, -132, 33, 33, 453, -15, 453, -11,
	453, 456, -62, 453, -15, -15, -116, -121, 453, -101,
	-23, -23, -15, -15, 235, 173, 232, -115, 232, -115,
	-115, -86, -84, 133, -15, 371, -109, -67, -15, 453,
	-132, -15, -41, -15, -132, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, 122, 245,
	255, 124, -16, 456, -11, 453, -42, -41, -15, -15,
	-132, 453, -82, -82, -28, -75, -121, -79, 170, 53,
	-13, 205, 205, -13, 4, 451, -86, -86, 450, 453,
	-65, -15, -15, 135, 33, 33, -15, -15, -145, 453,
	456, -15, -15, 453, 453, -15, 451, -84, 453, 453,
	453, -15, -110, 276, 453, 453, -42, 159, 122, 255,
	124, 452, -15, 453, 453, -79, 453, -105, 415, -15,
	-76, -77, -15, -13, -13, 397, 259, 451, 451, -86,
	-15, -15, -15, 453, -132, 453, -23, 53, -16, 159,
	452, -145, 453, -105, -104, -106, -67, 456, 452, -15,
	451, -111, 295, 322, -11, -16, -145, 453, 456, 36,
	-77, -19, 4, 453, -112, -113, 47, 386, 93, -15,
	-112, 453, -106, -107, 456, 453, -113, 283, 153, 321,
	283, 153, 4, 33, -113,
}
var yyDef = [...]int{

	0, -2, 1, 290, -2, -2, 316, 0, 314, 302,
	0, 0, 2, -2, 0, 310, 310, 310, 0, 0,
	299, 453, 0, 313, 311, 0, 303, 365, 0, 462,
	485, 486, 487, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 814, 815, 390,
	0, 374, 332, 329, 0, 371, 372, 333, 0, 0,
	0, 341, 0, 308, 309, 0, 0, 0, 292, 293,
	307, 452, 454, 458, 459, 102, 0, 0, 0, 0,
	0, 0, 189, 190, 0, 192, 193, 194, 777, 0,
	199, 200, 421, 648, 797, 435, 469, 470, 471, 0,
	0, 0, 477, 478, 479, 434, 397, 207, -2, -2,
	480, 481, 467, 35, 36, 37, 38, -2, 818, 209,
	210, 212, 214, 216, 218, 219, 220, 221, 222, -2,
	0, 778, 793, 794, 800, 803, 774, 780, 786, 808,
	564, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 787, -2, -2, -2, -2, -2, -2, -2, 490,
	58, 59, 64, 65, 816, 817, 819, 820, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 77, 307, 0, 391, 366,
	367, 0, 0, 449, 447, 448, 296, 373, 297, 331,
	334, 0, 0, 336, 0, 338, 0, 369, 370, 375,
	379, 380, 384, 388, 389, 377, 0, 381, -2, 246,
	0, 304, 298, 299, 305, 306, 317, 318, 5, 243,
	0, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 122, 0, 0, 249,
	0, 251, 0, 0, 140, 142, 446, 0, 0, 0,
	457, -2, 0, 247, 408, 106, 107, 121, 125, 126,
	0, 253, -2, 0, 805, 195, 441, 0, 0, 196,
	197, 198, 0, 0, 0, -2, 0, 472, 474, 99,
	0, 0, 433, 349, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 281, 287, 0, 0, 0, 0, 0,
	49, 61, 74, 69, 68, 51, 0, 50, 48, 0,
	75, 75, 73, 52, 0, 81, 0, 0, 0, 79,
	0, 67, 0, 243, 0, 0, 0, 451, 330, 0,
	339, 0, 382, 0, 482, 0, 0, 378, 386, 387,
	335, 244, 0, 340, 460, 0, 0, 8, 3, 4,
	393, 0, 455, 103, 27, 0, 28, 29, 30, 31,
	32, 99, 42, 43, 44, 45, 46, 47, 55, 42,
	42, 42, 53, 56, 57, 62, 63, 85, 85, 82,
	488, 489, 75, 818, 821, 75, 75, 70, 0, 75,
	104, 13, 0, 108, 109, 110, 111, 112, 113, -2,
	-2, -2, -2, -2, -2, 120, 123, 124, -2, 250,
	252, 0, 446, 0, -2, 0, 139, 0, 144, 146,
	148, 0, 0, 162, 0, 0, 445, 158, 425, 0,
	0, 404, 405, 406, 456, 495, 496, 497, 498, 499,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 0, 143, 0,
	0, 443, 0, 442, 437, 438, 466, 0, 0, 0,
	264, 253, 265, 0, 17, 0, 407, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	-2, 201, 316, 0, 0, 0, 255, 257, 0, -2,
	475, 86, 87, 88, 89, 90, 91, 100, 0, 432,
	428, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	276, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	797, 0, 253, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 72, 0, 0, 0, 0, 0, 0,
	393, 0, 368, 450, 337, 0, 0, 483, 484, 245,
	0, 319, 8, 423, 0, 321, 0, 323, 0, 241,
	242, 10, 19, 23, 27, 33, 0, 39, 42, 0,
	14, 0, 0, -2, -2, 0, 0, 0, 159, 0,
	-2, 141, 145, 147, 149, 0, 0, 163, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 191, 254,
	439, 0, 0, 262, 263, 0, 422, 0, -2, 0,
	0, 315, 316, 316, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 429, 0, 0, 347, 348, 352,
	0, 0, 211, 213, 215, 217, 0, 225, 0, 226,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	166, 167, 181, 0, 0, 228, 284, 285, 0, 0,
	0, 230, 231, 232, 233, 0, 41, 54, 85, 83,
	84, 85, 77, 76, 323, 312, 376, 383, 461, 320,
	0, 6, 7, 328, 0, 392, 0, 0, 0, 0,
	0, 12, 0, 0, 20, 24, 0, 0, 40, 15,
	105, -2, 0, 0, -2, 0, 0, -2, 0, 0,
	0, -2, 0, 260, 0, 0, 426, 0, -2, 0,
	399, 0, 444, -2, 0, 254, 266, 18, 202, 256,
	0, 0, 258, 259, 92, 93, 94, 95, 96, 97,
	98, 0, 476, 427, 431, 0, 354, 351, 0, 208,
	0, 267, 278, 279, 165, 168, 169, 170, 171, 172,
	173, -2, -2, -2, -2, -2, -2, 180, 0, 0,
	0, 187, 280, 0, 0, 402, 282, 283, 288, 289,
	0, 60, 80, 78, 66, 328, 0, 343, 0, 0,
	236, 0, 0, 0, 11, 25, 0, 0, 0, 34,
	16, -2, -2, 0, 0, 0, -2, -2, 0, 152,
	0, -2, -2, 161, 398, 254, 440, 473, 203, 204,
	101, 430, 316, 0, 396, 224, 277, 0, 0, 0,
	188, 0, 254, 401, 229, 343, 424, 300, 0, 327,
	322, 324, 326, 237, 238, 0, 0, 26, 21, 0,
	-2, -2, -2, 153, 261, 400, 357, 0, -2, 0,
	0, 0, 403, 301, 342, 344, 0, 0, 0, 240,
	22, 0, 0, 0, 353, -2, 0, 185, 0, 0,
	325, 0, 234, 350, 355, 358, -2, 740, 545, 0,
	356, 186, 345, 346, 0, 239, 0, 360, 361, 362,
	363, 364, 235, 0, 359,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 447, 3, 3,
	452, 453, 445, 443, 456, 444, 454, 446, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 457, 455,
	439, 441, 440, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 450, 3, 451, 448,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 442, 57782, 449, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lookahead func() int
}

func (p *yyParserImpl) Lookahead() int {
	return p.lookahead()
}

func yyNewParser() yyParser {
	p := &yyParserImpl{
		lookahead: func() int { return -1 },
	}
	return p
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yytoken := -1 // yychar translated into internal numbering
	yyrcvr.lookahead = func() int { return yychar }
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yychar = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar, yytoken = yylex1(yylex, &yylval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yychar = -1
		yytoken = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar, yytoken = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yychar = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:384
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:389
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yyVAL.sqlSelect.Semicolon = true
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:396
		{
			yyVAL.str = "asc"
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:397
		{
			yyVAL.str = "desc"
		}
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:398
		{
			yyVAL.str = ""
		}
	case 6:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:401
		{
			yyVAL.str = "first"
		}
	case 7:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:402
		{
			yyVAL.str = "last"
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:403
		{
			yyVAL.str = ""
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:412
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:416
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 12:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:420
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:427
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 14:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:431
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyDollar[2].anyName...)
		}
	case 15:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:438
		{
			yyVAL.anyName = AnyName{yyDollar[2].str}
		}
	case 16:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:442
		{
			yyVAL.anyName = append(yyDollar[1].anyName, yyDollar[3].str)
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:448
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:452
		{
			yyVAL.anyName = append(AnyName{yyDollar[1].str}, yyDollar[3].anyName...)
		}
	case 19:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:468
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayBounds = yyDollar[2].optArrayBounds
		}
	case 20:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:473
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyDollar[3].optArrayBounds
		}
	case 21:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:480
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyDollar[4].iconst}
		}
	case 22:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:486
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyDollar[5].iconst}
		}
	case 23:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:493
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:498
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:506
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, "")
		}
	case 26:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:510
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, yyDollar[3].iconst)
		}
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:514
		{
			yyVAL.optArrayBounds = nil
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:523
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, OptInterval: yyDollar[2].optInterval}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:527
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, TypeMods: []Expr{yyDollar[3].iconst}}
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:558
		{
			yyVAL.pgType = PgType{Name: AnyName{yyDollar[1].str}, TypeMods: yyDollar[2].fields}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:562
		{
			yyVAL.pgType = PgType{Name: append(AnyName{yyDollar[1].str}, yyDollar[2].anyName...), TypeMods: yyDollar[3].fields}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:567
		{
			yyVAL.fields = yyDollar[2].fields
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:568
		{
			yyVAL.fields = nil
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:575
		{
			yyVAL.pgType = PgType{Name: AnyName{"int"}}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:579
		{
			yyVAL.pgType = PgType{Name: AnyName{"integer"}}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:583
		{
			yyVAL.pgType = PgType{Name: AnyName{"smallint"}}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:587
		{
			yyVAL.pgType = PgType{Name: AnyName{"bigint"}}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:591
		{
			yyVAL.pgType = PgType{Name: AnyName{"real"}}
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:595
		{
			yyVAL.pgType = PgType{Name: AnyName{"float"}}
			if yyDollar[2].iconst != IntegerConst("") {
				yyVAL.pgType.TypeMods = []Expr{yyDollar[2].iconst}
			}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:602
		{
			yyVAL.pgType = PgType{Name: AnyName{"double precision"}}
		}
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:606
		{
			yyVAL.pgType = PgType{Name: AnyName{"decimal"}, TypeMods: yyDollar[2].fields}
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:610
		{
			yyVAL.pgType = PgType{Name: AnyName{"dec"}, TypeMods: yyDollar[2].fields}
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:614
		{
			yyVAL.pgType = PgType{Name: AnyName{"numeric"}, TypeMods: yyDollar[2].fields}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:618
		{
			yyVAL.pgType = PgType{Name: AnyName{"bool"}}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:624
		{
			yyVAL.iconst = yyDollar[2].iconst
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:628
		{
			yyVAL.iconst = IntegerConst("")
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:642
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType.Name = AnyName{"varbit"}
			} else {
				yyVAL.pgType.Name = AnyName{"bit"}
			}
			yyVAL.pgType.TypeMods = yyDollar[4].fields
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:654
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varbit"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"bit"}}
			}
		}
	case 66:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:677
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.TypeMods = []Expr{yyDollar[3].iconst}
			yyVAL.pgType.CharSet = yyDollar[5].str
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:685
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.CharSet = yyDollar[2].str
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:692
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:700
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:708
		{
			yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:712
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:720
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:728
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:738
		{
			yyVAL.boolean = true
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:742
		{
			yyVAL.boolean = false
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:748
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:752
		{
			yyVAL.str = ""
		}
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:761
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, TypeMods: []Expr{yyDollar[3].iconst}, WithTimeZone: yyDollar[5].boolean}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:765
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, WithTimeZone: yyDollar[2].boolean}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:769
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, TypeMods: []Expr{yyDollar[3].iconst}, WithTimeZone: yyDollar[5].boolean}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:773
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, WithTimeZone: yyDollar[2].boolean}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:782
		{
			yyVAL.boolean = true
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:786
		{
			yyVAL.boolean = false
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:790
		{
			yyVAL.boolean = false
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:796
		{
			yyVAL.optInterval = &OptInterval{Left: "year"}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:800
		{
			yyVAL.optInterval = &OptInterval{Left: "month"}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:804
		{
			yyVAL.optInterval = &OptInterval{Left: "day"}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:808
		{
			yyVAL.optInterval = &OptInterval{Left: "hour"}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:812
		{
			yyVAL.optInterval = &OptInterval{Left: "minute"}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:816
		{
			yyVAL.optInterval = &OptInterval{Second: yyDollar[1].intervalSecond}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:820
		{
			yyVAL.optInterval = &OptInterval{Left: "year", Right: "month"}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:824
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "hour"}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:828
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "minute"}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:832
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Second: yyDollar[3].intervalSecond}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:836
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Right: "minute"}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:840
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Second: yyDollar[3].intervalSecond}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:844
		{
			yyVAL.optInterval = &OptInterval{Left: "minute", Second: yyDollar[3].intervalSecond}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:848
		{
			yyVAL.optInterval = nil
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:854
		{
			yyVAL.intervalSecond = &IntervalSecond{}
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:858
		{
			yyVAL.intervalSecond = &IntervalSecond{Precision: yyDollar[3].iconst}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:894
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:898
		{
			yyVAL.expr = CollateExpr{Expr: yyDollar[1].expr, Collation: yyDollar[3].anyName}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:902
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyDollar[1].expr, TimeZone: yyDollar[5].expr}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:915
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyDollar[2].expr}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:919
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyDollar[2].expr}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:923
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"+"}, Right: yyDollar[3].expr}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:927
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"-"}, Right: yyDollar[3].expr}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:931
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"*"}, Right: yyDollar[3].expr}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:935
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"/"}, Right: yyDollar[3].expr}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:939
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"%"}, Right: yyDollar[3].expr}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:943
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"^"}, Right: yyDollar[3].expr}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:947
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<"}, Right: yyDollar[3].expr}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:951
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">"}, Right: yyDollar[3].expr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:955
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"="}, Right: yyDollar[3].expr}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:959
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<="}, Right: yyDollar[3].expr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:963
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">="}, Right: yyDollar[3].expr}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:967
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"!="}, Right: yyDollar[3].expr}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:971
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].anyName, Right: yyDollar[3].expr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:975
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].anyName, Expr: yyDollar[2].expr}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:979
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].anyName}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:983
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "and", Right: yyDollar[3].expr}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:987
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "or", Right: yyDollar[3].expr}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:991
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:995
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:999
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1003
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1007
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr}
		}
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1011
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1015
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr}
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1019
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1023
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1027
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1032
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1036
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1040
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr}
		}
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1044
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr, Escape: yyDollar[7].expr}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1057
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "null"}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1061
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "null"}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1065
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "null"}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1069
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "null"}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1073
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].row, Operator: AnyName{"overlaps"}, Right: yyDollar[3].row}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1077
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "true"}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1081
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "true"}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1085
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "false"}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1089
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "false"}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1093
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "unknown"}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1097
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "unknown"}
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1101
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is distinct from"}, Right: yyDollar[5].expr}
		}
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1105
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is not distinct from"}, Right: yyDollar[6].expr}
		}
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1109
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1113
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1117
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1121
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1125
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Symmetric: true, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1129
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Symmetric: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1133
		{
			yyVAL.expr = InExpr{Value: yyDollar[1].expr, In: yyDollar[3].expr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1137
		{
			yyVAL.expr = InExpr{Value: yyDollar[1].expr, Not: true, In: yyDollar[4].expr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1141
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyDollar[1].expr, Op: yyDollar[2].subqueryOp, Type: yyDollar[3].str, Query: yyDollar[4].sqlSelect}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1145
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyDollar[1].expr, Op: yyDollar[2].subqueryOp, Type: yyDollar[3].str, Query: ParenExpr{Expr: yyDollar[5].expr}}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1149
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "document"}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1153
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "document"}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1168
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1172
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1176
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyDollar[2].expr}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1180
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyDollar[2].expr}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1184
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"+"}, Right: yyDollar[3].expr}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1188
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"-"}, Right: yyDollar[3].expr}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1192
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"*"}, Right: yyDollar[3].expr}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1196
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"/"}, Right: yyDollar[3].expr}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1200
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"%"}, Right: yyDollar[3].expr}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1204
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"^"}, Right: yyDollar[3].expr}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1208
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<"}, Right: yyDollar[3].expr}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1212
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">"}, Right: yyDollar[3].expr}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1216
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"="}, Right: yyDollar[3].expr}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1220
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<="}, Right: yyDollar[3].expr}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1224
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">="}, Right: yyDollar[3].expr}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1228
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"!="}, Right: yyDollar[3].expr}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1232
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].anyName, Right: yyDollar[3].expr}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1236
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].anyName, Expr: yyDollar[2].expr}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1240
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].anyName}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1244
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is distinct from"}, Right: yyDollar[5].expr}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1248
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is not distinct from"}, Right: yyDollar[6].expr}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1252
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 186:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1256
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1260
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "document"}
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1264
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "document"}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1277
		{
			yyVAL.expr = yyDollar[1].columnRef
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1278
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1286
		{
			yyVAL.expr = ParenExpr{Expr: yyDollar[2].expr, Indirection: yyDollar[4].indirection}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1289
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1290
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1292
		{
			yyVAL.expr = yyDollar[1].sqlSelect
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1296
		{
			yyDollar[1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyDollar[1].sqlSelect, Indirection: yyDollar[2].indirection}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1301
		{
			yyVAL.expr = ExistsExpr(*yyDollar[2].sqlSelect)
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1305
		{
			yyVAL.expr = ArraySubselect(*yyDollar[2].sqlSelect)
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1308
		{
			yyVAL.expr = ArrayConstructorExpr(yyDollar[2].arrayExpr)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1312
		{
			yyVAL.expr = yyDollar[1].row
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1316
		{
			yyVAL.expr = yyDollar[1].row
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1327
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1331
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Args: yyDollar[3].funcArgs, OrderClause: yyDollar[4].orderClause}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1339
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 204:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1343
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Distinct: true, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1347
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Star: true}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1363
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyDollar[1].funcApplication, FilterClause: yyDollar[2].filterClause, OverClause: yyDollar[3].overClause}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1367
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1380
		{
			yyVAL.expr = FuncApplication{Name: "collation for", Args: []FuncArg{{Expr: yyDollar[4].expr}}}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1384
		{
			yyVAL.expr = FuncExprNoParens("current_date")
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1388
		{
			yyVAL.expr = FuncExprNoParens("current_time")
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1392
		{
			yyVAL.expr = FuncApplication{Name: "current_time", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1396
		{
			yyVAL.expr = FuncExprNoParens("current_timestamp")
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1400
		{
			yyVAL.expr = FuncApplication{Name: "current_timestamp", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1404
		{
			yyVAL.expr = FuncExprNoParens("localtime")
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1408
		{
			yyVAL.expr = FuncApplication{Name: "localtime", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1412
		{
			yyVAL.expr = FuncExprNoParens("localtimestamp")
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1416
		{
			yyVAL.expr = FuncApplication{Name: "localtimestamp", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1420
		{
			yyVAL.expr = FuncExprNoParens("current_role")
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1424
		{
			yyVAL.expr = FuncExprNoParens("current_user")
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1428
		{
			yyVAL.expr = FuncExprNoParens("session_user")
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1432
		{
			yyVAL.expr = FuncExprNoParens("user")
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1436
		{
			yyVAL.expr = FuncExprNoParens("current_catalog")
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1440
		{
			yyVAL.expr = FuncExprNoParens("current_schema")
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1444
		{
			yyVAL.expr = CastFunc{Name: "cast", Expr: yyDollar[3].expr, Type: yyDollar[5].pgType}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1448
		{
			yyVAL.expr = ExtractExpr(*yyDollar[3].extractList)
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1452
		{
			yyVAL.expr = OverlayExpr(yyDollar[3].overlayList)
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1456
		{
			yyVAL.expr = PositionExpr(*yyDollar[3].positionList)
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1460
		{
			if yyDollar[3].placeholder == nil {
				yyVAL.expr = FuncApplication{Name: "substring"}
			} else if se, ok := yyDollar[3].placeholder.(SubstrList); ok {
				yyVAL.expr = SubstrExpr(se)
			} else {
				var args []FuncArg
				for _, a := range yyDollar[3].placeholder.([]Expr) {
					args = append(args, FuncArg{Expr: a})
				}
				yyVAL.expr = FuncApplication{Name: "substring", Args: args}
			}
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1474
		{
			yyVAL.expr = CastFunc{Name: "treat", Expr: yyDollar[3].expr, Type: yyDollar[5].pgType}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1485
		{
			fa := FuncApplication{Name: "coalesce"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1493
		{
			fa := FuncApplication{Name: "greatest"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1501
		{
			fa := FuncApplication{Name: "least"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1509
		{
			fa := FuncApplication{Name: "xmlconcat"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1535
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1539
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1545
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: ",", Right: yyDollar[3].expr}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1549
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "cross join", Right: yyDollar[4].expr}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1553
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "natural join", Right: yyDollar[4].expr}
		}
	case 239:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1557
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, Using: yyDollar[6].identifiers}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1561
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, On: yyDollar[5].expr}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1567
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1571
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1574
		{
			yyVAL.fromClause = nil
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1578
		{
			yyVAL.str = "nowait"
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1579
		{
			yyVAL.str = "skip locked"
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1580
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1584
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{yyDollar[1].str}}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1588
		{
			yyVAL.subqueryOp = SubqueryOp{Operator: true, Name: yyDollar[3].anyName}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1592
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"like"}}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1596
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not like"}}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1600
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"ilike"}}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1604
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not ilike"}}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1618
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1622
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1629
		{
			yyVAL.funcArgs = []FuncArg{yyDollar[1].funcArg}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1633
		{
			yyVAL.funcArgs = append(yyDollar[1].funcArgs, yyDollar[3].funcArg)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1639
		{
			yyVAL.funcArg = FuncArg{Expr: yyDollar[1].expr}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1643
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: ":=", Expr: yyDollar[3].expr}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1647
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: "=>", Expr: yyDollar[3].expr}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1653
		{
			yyVAL.pgTypes = []PgType{yyDollar[1].pgType}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1657
		{
			yyVAL.pgTypes = append(yyDollar[1].pgTypes, yyDollar[3].pgType)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1663
		{
			yyVAL.arrayExpr = ArrayExpr(yyDollar[2].fields)
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1667
		{
			yyVAL.arrayExpr = yyDollar[2].arrayExpr
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1671
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1677
		{
			yyVAL.arrayExpr = ArrayExpr{yyDollar[1].arrayExpr}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1681
		{
			yyVAL.arrayExpr = append(yyDollar[1].arrayExpr, yyDollar[3].arrayExpr)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1687
		{
			yyVAL.extractList = &ExtractList{Extract: yyDollar[1].expr, Time: yyDollar[3].expr}
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1691
		{
			yyVAL.extractList = nil
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1699
		{
			yyVAL.expr = AnyName{yyDollar[1].str}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1700
		{
			yyVAL.expr = AnyName{"year"}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1701
		{
			yyVAL.expr = AnyName{"month"}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1702
		{
			yyVAL.expr = AnyName{"day"}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1703
		{
			yyVAL.expr = AnyName{"hour"}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1704
		{
			yyVAL.expr = AnyName{"minute"}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1705
		{
			yyVAL.expr = AnyName{"second"}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1706
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1716
		{
			yyVAL.overlayList = OverlayList{Dest: yyDollar[1].expr, Placing: yyDollar[2].expr, From: yyDollar[3].expr, For: yyDollar[4].expr}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1720
		{
			yyVAL.overlayList = OverlayList{Dest: yyDollar[1].expr, Placing: yyDollar[2].expr, From: yyDollar[3].expr}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1726
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1734
		{
			yyVAL.positionList = &PositionList{Substring: yyDollar[1].expr, String: yyDollar[3].expr}
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1737
		{
			yyVAL.positionList = nil
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1753
		{
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, From: yyDollar[2].expr, For: yyDollar[3].expr}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1757
		{
			/* not legal per SQL99, but might as well allow it */
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, From: yyDollar[3].expr, For: yyDollar[2].expr}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1761
		{
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, From: yyDollar[2].expr}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1765
		{
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, For: yyDollar[2].expr}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1769
		{
			yyVAL.placeholder = yyDollar[1].fields
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1773
		{
			yyVAL.placeholder = nil
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1779
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1785
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1841
		{
			yyDollar[2].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1845
		{
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1849
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1855
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1860
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[3].lockingClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[4].limitClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1867
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[3].limitClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[4].lockingClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1876
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 300:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1910
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyDollar[3].fields
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 301:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1923
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyDollar[2].fields
			ss.TargetList = yyDollar[3].fields
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1935
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyDollar[1].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1941
		{
			ss := &SimpleSelect{}
			ss.Table = yyDollar[2].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1947
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1956
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1965
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1989
		{
			yyVAL.placeholder = nil
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1994
		{
			yyVAL.boolean = true
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1995
		{
			yyVAL.boolean = false
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1996
		{
			yyVAL.boolean = false
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2001
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2002
		{
			yyVAL.fields = yyDollar[4].fields
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2005
		{
			yyVAL.placeholder = nil
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2006
		{
			yyVAL.placeholder = nil
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2009
		{
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2010
		{
			yyVAL.orderClause = nil
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2013
		{
			yyVAL.orderClause = yyDollar[3].orderClause
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2017
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyDollar[1].orderExpr}}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2021
		{
			yyDollar[1].orderClause.Exprs = append(yyDollar[1].orderClause.Exprs, yyDollar[3].orderExpr)
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2029
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Using: yyDollar[3].anyName, Nulls: yyDollar[4].str}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2033
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Order: yyDollar[2].str, Nulls: yyDollar[3].str}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2058
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyDollar[3].fields}
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2059
		{
			yyVAL.groupByClause = nil
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2063
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2067
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2080
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2081
		{
			yyVAL.expr = nil
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2084
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2085
		{
			yyVAL.lockingClause = nil
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2088
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2089
		{
			yyVAL.lockingClause = nil
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2093
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyDollar[1].lockingItem}}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2097
		{
			yyDollar[1].lockingClause.Locks = append(yyDollar[1].lockingClause.Locks, yyDollar[2].lockingItem)
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2104
		{
			yyVAL.lockingItem = LockingItem{Strength: yyDollar[1].str, LockedRels: yyDollar[2].identifiers, WaitPolicy: yyDollar[3].str}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2109
		{
			yyVAL.str = "update"
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2110
		{
			yyVAL.str = "no key update"
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2111
		{
			yyVAL.str = "share"
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2112
		{
			yyVAL.str = "key share"
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2115
		{
			yyVAL.identifiers = yyDollar[2].identifiers
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2116
		{
			yyVAL.identifiers = nil
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2124
		{
			yyVAL.windowDefinitions = yyDollar[2].windowDefinitions
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2127
		{
			yyVAL.windowDefinitions = nil
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2131
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyDollar[1].windowDefinition}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2135
		{
			yyVAL.windowDefinitions = append(yyDollar[1].windowDefinitions, yyDollar[3].windowDefinition)
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2141
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyDollar[1].str, Specification: yyDollar[3].windowSpecification}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2147
		{
			spec := yyDollar[2].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2152
		{
			yyVAL.overClause = &OverClause{Name: yyDollar[2].str}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2155
		{
			yyVAL.overClause = nil
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2159
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyDollar[2].str, PartitionClause: yyDollar[3].partitionClause, OrderClause: yyDollar[4].orderClause, FrameClause: yyDollar[5].frameClause}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2174
		{
			yyVAL.str = yyDollar[1].str
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2175
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2178
		{
			yyVAL.partitionClause = PartitionClause(yyDollar[3].fields)
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2179
		{
			yyVAL.partitionClause = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2190
		{
			yyDollar[2].frameClause.Mode = "range"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2195
		{
			yyDollar[2].frameClause.Mode = "rows"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2200
		{
			yyVAL.frameClause = nil
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2206
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[1].frameBound}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2210
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[2].frameBound, End: yyDollar[4].frameBound}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2221
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2225
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2229
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2233
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "preceding"}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2237
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "following"}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2245
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].str}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2249
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].str, Star: true}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2253
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[2].str, Only: true}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2257
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[3].str, Only: true}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2265
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr, Offset: yyDollar[2].expr}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2269
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[2].expr, Offset: yyDollar[1].expr}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2273
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2277
		{
			yyVAL.limitClause = &LimitClause{Offset: yyDollar[1].expr}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2284
		{
			yyVAL.limitClause = nil
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2288
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2293
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2299
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2304
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2309
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2311
		{
			yyVAL.expr = nil
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2316
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2325
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2326
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2327
		{
			yyVAL.expr = IntegerConst("1")
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2334
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2338
		{
			yyVAL.placeholder = 0
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2339
		{
			yyVAL.placeholder = 0
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2342
		{
			yyVAL.placeholder = 0
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2343
		{
			yyVAL.placeholder = 0
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2347
		{
			yyVAL.valuesClause = ValuesClause{yyDollar[2].valuesRow}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2351
		{
			yyVAL.valuesClause = append(yyDollar[1].valuesClause, yyDollar[3].valuesRow)
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2368
		{
			yyVAL.whereClause = &WhereClause{Expr: yyDollar[2].expr}
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2369
		{
			yyVAL.whereClause = nil
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2378
		{
			panic("TODO")
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2379
		{
			yyVAL.placeholder = nil
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2384
		{
			yyVAL.filterClause = &FilterClause{Expr: yyDollar[4].expr}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2387
		{
			yyVAL.filterClause = nil
		}
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2399
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyDollar[3].fields}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2403
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2407
		{
			yyVAL.row = Row{Exprs: append(yyDollar[2].fields, yyDollar[4].expr)}
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2413
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyDollar[3].fields}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2417
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2423
		{
			yyVAL.row = Row{Exprs: append(yyDollar[2].fields, yyDollar[4].expr)}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2428
		{
			yyVAL.str = "any"
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2429
		{
			yyVAL.str = "some"
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2430
		{
			yyVAL.str = "all"
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2433
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2434
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2437
		{
			yyVAL.str = "+"
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2438
		{
			yyVAL.str = "-"
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2439
		{
			yyVAL.str = "*"
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2440
		{
			yyVAL.str = "/"
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2441
		{
			yyVAL.str = "%"
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2442
		{
			yyVAL.str = "^"
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2443
		{
			yyVAL.str = "<"
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2444
		{
			yyVAL.str = ">"
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2445
		{
			yyVAL.str = "="
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2446
		{
			yyVAL.str = "<="
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2447
		{
			yyVAL.str = ">="
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2448
		{
			yyVAL.str = "<>"
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2451
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2452
		{
			yyVAL.anyName = yyDollar[3].anyName
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2455
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2456
		{
			yyVAL.anyName = yyDollar[3].anyName
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2460
		{
			yyVAL.expr = yyDollar[1].sqlSelect
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2464
		{
			yyVAL.expr = ValuesRow(yyDollar[2].fields)
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2477
		{
			yyVAL.expr = CaseExpr{CaseArg: yyDollar[2].expr, WhenClauses: yyDollar[3].whenClauses, Default: yyDollar[4].expr}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2484
		{
			yyVAL.whenClauses = []WhenClause{yyDollar[1].whenClause}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2488
		{
			yyVAL.whenClauses = append(yyDollar[1].whenClauses, yyDollar[2].whenClause)
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2494
		{
			yyVAL.whenClause = WhenClause{When: yyDollar[2].expr, Then: yyDollar[4].expr}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2499
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2500
		{
			yyVAL.expr = nil
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2503
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2504
		{
			yyVAL.expr = nil
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2508
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2512
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str, Indirection: yyDollar[2].indirection}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2520
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyDollar[2].str}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2524
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2528
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr}
		}
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2532
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr, UpperSubscript: yyDollar[4].expr}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2537
		{
			yyVAL.indirection = Indirection{yyDollar[1].indirectionEl}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2538
		{
			yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2541
		{
			yyVAL.indirection = nil
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2543
		{
			if yyDollar[1].indirection != nil {
				yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyDollar[2].indirectionEl}
			}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2553
		{
			yyVAL.placeholder = nil
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2557
		{
			yyVAL.placeholder = nil
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2569
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2570
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2574
		{
			yyVAL.valuesRow = ValuesRow{yyDollar[1].expr}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2578
		{
			yyVAL.valuesRow = append(yyDollar[1].valuesRow, yyDollar[3].expr)
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2589
		{
			yyVAL.valuesRow = yyDollar[2].valuesRow
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2600
		{
			yyVAL.fields = yyDollar[1].fields
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2601
		{
			yyVAL.fields = nil
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2604
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2606
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2612
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2616
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2621
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2635
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2639
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2652
		{
			yyVAL.str = yyDollar[1].str
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2684
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2686
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2691
		{
			yyVAL.str = yyDollar[1].str
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2694
		{
			yyVAL.str = yyDollar[1].str
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2707
		{
			yyVAL.str = yyDollar[1].str
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2711
		{
			panic("TODO")
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2721
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2725
		{
			yyVAL.expr = FloatConst(yyDollar[1].str)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2729
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2737
		{
			yyVAL.expr = ConstTypeExpr{Typename: PgType{Name: AnyName{yyDollar[1].str}}, Expr: yyDollar[2].expr}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2741
		{
			pgType := PgType{Name: AnyName{yyDollar[1].str}}

			/*
			 * We must use func_arg_list and opt_sort_clause in the
			 * production to avoid reduce/reduce conflicts, but we
			 * don't actually wish to allow NamedArgExpr in this
			 * context, nor ORDER BY.
			 */

			for _, arg := range yyDollar[3].funcArgs {
				if arg.Name != "" {
					yylex.Error("type modifier cannot have parameter name")
				}

				pgType.TypeMods = append(pgType.TypeMods, Expr(arg))
			}

			if yyDollar[4].orderClause != nil {
				yylex.Error("type modifier cannot have ORDER BY")
			}

			yyVAL.expr = ConstTypeExpr{Typename: pgType, Expr: yyDollar[6].expr}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2765
		{
			yyVAL.expr = ConstTypeExpr{Typename: yyDollar[1].pgType, Expr: yyDollar[2].expr}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2769
		{
			yyVAL.expr = ConstIntervalExpr{Value: yyDollar[2].expr, OptInterval: yyDollar[3].optInterval}
		}
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2773
		{
			yyVAL.expr = ConstIntervalExpr{Precision: yyDollar[3].iconst, Value: yyDollar[5].expr}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2777
		{
			yyVAL.expr = BoolConst(true)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2781
		{
			yyVAL.expr = BoolConst(false)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2785
		{
			yyVAL.expr = NullConst{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2789
		{
			yyVAL.iconst = IntegerConst(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2790
		{
			yyVAL.expr = StringConst(yyDollar[1].str)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2793
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2794
		{
			yyVAL.expr = "+" + yyDollar[2].iconst
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2795
		{
			yyVAL.expr = "-" + yyDollar[2].iconst
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2834
		{
			yyVAL.str = yyDollar[1].str
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2835
		{
			yyVAL.str = yyDollar[1].str
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2836
		{
			yyVAL.str = yyDollar[1].str
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2837
		{
			yyVAL.str = yyDollar[1].str
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2838
		{
			yyVAL.str = yyDollar[1].str
		}
	}
	goto yystack /* stack new state and value */
}

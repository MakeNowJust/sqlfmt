//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerLiteral
	optArrayBounds      []IntegerLiteral
}

const any_operator = 57346
const IDENT = 57347
const FCONST = 57348
const SCONST = 57349
const BCONST = 57350
const XCONST = 57351
const Op = 57352
const ICONST = 57353
const PARAM = 57354
const TYPECAST = 57355
const DOT_DOT = 57356
const COLON_EQUALS = 57357
const EQUALS_GREATER = 57358
const LESS_EQUALS = 57359
const GREATER_EQUALS = 57360
const NOT_EQUALS = 57361
const ABORT_P = 57362
const ABSOLUTE_P = 57363
const ACCESS = 57364
const ACTION = 57365
const ADD_P = 57366
const ADMIN = 57367
const AFTER = 57368
const AGGREGATE = 57369
const ALL = 57370
const ALSO = 57371
const ALTER = 57372
const ALWAYS = 57373
const ANALYSE = 57374
const ANALYZE = 57375
const AND = 57376
const ANY = 57377
const ARRAY = 57378
const AS = 57379
const ASC = 57380
const ASSERTION = 57381
const ASSIGNMENT = 57382
const ASYMMETRIC = 57383
const AT = 57384
const ATTRIBUTE = 57385
const AUTHORIZATION = 57386
const BACKWARD = 57387
const BEFORE = 57388
const BEGIN_P = 57389
const BETWEEN = 57390
const BIGINT = 57391
const BINARY = 57392
const BIT = 57393
const BOOLEAN_P = 57394
const BOTH = 57395
const BY = 57396
const CACHE = 57397
const CALLED = 57398
const CASCADE = 57399
const CASCADED = 57400
const CASE = 57401
const CAST = 57402
const CATALOG_P = 57403
const CHAIN = 57404
const CHAR_P = 57405
const CHARACTER = 57406
const CHARACTERISTICS = 57407
const CHECK = 57408
const CHECKPOINT = 57409
const CLASS = 57410
const CLOSE = 57411
const CLUSTER = 57412
const COALESCE = 57413
const COLLATE = 57414
const COLLATION = 57415
const COLUMN = 57416
const COMMENT = 57417
const COMMENTS = 57418
const COMMIT = 57419
const COMMITTED = 57420
const CONCURRENTLY = 57421
const CONFIGURATION = 57422
const CONFLICT = 57423
const CONNECTION = 57424
const CONSTRAINT = 57425
const CONSTRAINTS = 57426
const CONTENT_P = 57427
const CONTINUE_P = 57428
const CONVERSION_P = 57429
const COPY = 57430
const COST = 57431
const CREATE = 57432
const CROSS = 57433
const CSV = 57434
const CUBE = 57435
const CURRENT_P = 57436
const CURRENT_CATALOG = 57437
const CURRENT_DATE = 57438
const CURRENT_ROLE = 57439
const CURRENT_SCHEMA = 57440
const CURRENT_TIME = 57441
const CURRENT_TIMESTAMP = 57442
const CURRENT_USER = 57443
const CURSOR = 57444
const CYCLE = 57445
const DATA_P = 57446
const DATABASE = 57447
const DAY_P = 57448
const DEALLOCATE = 57449
const DEC = 57450
const DECIMAL_P = 57451
const DECLARE = 57452
const DEFAULT = 57453
const DEFAULTS = 57454
const DEFERRABLE = 57455
const DEFERRED = 57456
const DEFINER = 57457
const DELETE_P = 57458
const DELIMITER = 57459
const DELIMITERS = 57460
const DESC = 57461
const DICTIONARY = 57462
const DISABLE_P = 57463
const DISCARD = 57464
const DISTINCT = 57465
const DO = 57466
const DOCUMENT_P = 57467
const DOMAIN_P = 57468
const DOUBLE_P = 57469
const DROP = 57470
const EACH = 57471
const ELSE = 57472
const ENABLE_P = 57473
const ENCODING = 57474
const ENCRYPTED = 57475
const END_P = 57476
const ENUM_P = 57477
const ESCAPE = 57478
const EVENT = 57479
const EXCEPT = 57480
const EXCLUDE = 57481
const EXCLUDING = 57482
const EXCLUSIVE = 57483
const EXECUTE = 57484
const EXISTS = 57485
const EXPLAIN = 57486
const EXTENSION = 57487
const EXTERNAL = 57488
const EXTRACT = 57489
const FALSE_P = 57490
const FAMILY = 57491
const FETCH = 57492
const FILTER = 57493
const FIRST_P = 57494
const FLOAT_P = 57495
const FOLLOWING = 57496
const FOR = 57497
const FORCE = 57498
const FOREIGN = 57499
const FORWARD = 57500
const FREEZE = 57501
const FROM = 57502
const FULL = 57503
const FUNCTION = 57504
const FUNCTIONS = 57505
const GLOBAL = 57506
const GRANT = 57507
const GRANTED = 57508
const GREATEST = 57509
const GROUP_P = 57510
const GROUPING = 57511
const HANDLER = 57512
const HAVING = 57513
const HEADER_P = 57514
const HOLD = 57515
const HOUR_P = 57516
const IDENTITY_P = 57517
const IF_P = 57518
const ILIKE = 57519
const IMMEDIATE = 57520
const IMMUTABLE = 57521
const IMPLICIT_P = 57522
const IMPORT_P = 57523
const IN_P = 57524
const INCLUDING = 57525
const INCREMENT = 57526
const INDEX = 57527
const INDEXES = 57528
const INHERIT = 57529
const INHERITS = 57530
const INITIALLY = 57531
const INLINE_P = 57532
const INNER_P = 57533
const INOUT = 57534
const INPUT_P = 57535
const INSENSITIVE = 57536
const INSERT = 57537
const INSTEAD = 57538
const INT_P = 57539
const INTEGER = 57540
const INTERSECT = 57541
const INTERVAL = 57542
const INTO = 57543
const INVOKER = 57544
const IS = 57545
const ISNULL = 57546
const ISOLATION = 57547
const JOIN = 57548
const KEY = 57549
const LABEL = 57550
const LANGUAGE = 57551
const LARGE_P = 57552
const LAST_P = 57553
const LATERAL_P = 57554
const LEADING = 57555
const LEAKPROOF = 57556
const LEAST = 57557
const LEFT = 57558
const LEVEL = 57559
const LIKE = 57560
const LIMIT = 57561
const LISTEN = 57562
const LOAD = 57563
const LOCAL = 57564
const LOCALTIME = 57565
const LOCALTIMESTAMP = 57566
const LOCATION = 57567
const LOCK_P = 57568
const LOCKED = 57569
const LOGGED = 57570
const MAPPING = 57571
const MATCH = 57572
const MATERIALIZED = 57573
const MAXVALUE = 57574
const MINUTE_P = 57575
const MINVALUE = 57576
const MODE = 57577
const MONTH_P = 57578
const MOVE = 57579
const NAME_P = 57580
const NAMES = 57581
const NATIONAL = 57582
const NATURAL = 57583
const NCHAR = 57584
const NEXT = 57585
const NO = 57586
const NONE = 57587
const NOT = 57588
const NOTHING = 57589
const NOTIFY = 57590
const NOTNULL = 57591
const NOWAIT = 57592
const NULL_P = 57593
const NULLIF = 57594
const NULLS_P = 57595
const NUMERIC = 57596
const OBJECT_P = 57597
const OF = 57598
const OFF = 57599
const OFFSET = 57600
const OIDS = 57601
const ON = 57602
const ONLY = 57603
const OPERATOR = 57604
const OPTION = 57605
const OPTIONS = 57606
const OR = 57607
const ORDER = 57608
const ORDINALITY = 57609
const OUT_P = 57610
const OUTER_P = 57611
const OVER = 57612
const OVERLAPS = 57613
const OVERLAY = 57614
const OWNED = 57615
const OWNER = 57616
const PARSER = 57617
const PARTIAL = 57618
const PARTITION = 57619
const PASSING = 57620
const PASSWORD = 57621
const PLACING = 57622
const PLANS = 57623
const POLICY = 57624
const POSITION = 57625
const PRECEDING = 57626
const PRECISION = 57627
const PRESERVE = 57628
const PREPARE = 57629
const PREPARED = 57630
const PRIMARY = 57631
const PRIOR = 57632
const PRIVILEGES = 57633
const PROCEDURAL = 57634
const PROCEDURE = 57635
const PROGRAM = 57636
const QUOTE = 57637
const RANGE = 57638
const READ = 57639
const REAL = 57640
const REASSIGN = 57641
const RECHECK = 57642
const RECURSIVE = 57643
const REF = 57644
const REFERENCES = 57645
const REFRESH = 57646
const REINDEX = 57647
const RELATIVE_P = 57648
const RELEASE = 57649
const RENAME = 57650
const REPEATABLE = 57651
const REPLACE = 57652
const REPLICA = 57653
const RESET = 57654
const RESTART = 57655
const RESTRICT = 57656
const RETURNING = 57657
const RETURNS = 57658
const REVOKE = 57659
const RIGHT = 57660
const ROLE = 57661
const ROLLBACK = 57662
const ROLLUP = 57663
const ROW = 57664
const ROWS = 57665
const RULE = 57666
const SAVEPOINT = 57667
const SCHEMA = 57668
const SCROLL = 57669
const SEARCH = 57670
const SECOND_P = 57671
const SECURITY = 57672
const SELECT = 57673
const SEQUENCE = 57674
const SEQUENCES = 57675
const SERIALIZABLE = 57676
const SERVER = 57677
const SESSION = 57678
const SESSION_USER = 57679
const SET = 57680
const SETS = 57681
const SETOF = 57682
const SHARE = 57683
const SHOW = 57684
const SIMILAR = 57685
const SIMPLE = 57686
const SKIP = 57687
const SMALLINT = 57688
const SNAPSHOT = 57689
const SOME = 57690
const SQL_P = 57691
const STABLE = 57692
const STANDALONE_P = 57693
const START = 57694
const STATEMENT = 57695
const STATISTICS = 57696
const STDIN = 57697
const STDOUT = 57698
const STORAGE = 57699
const STRICT_P = 57700
const STRIP_P = 57701
const SUBSTRING = 57702
const SYMMETRIC = 57703
const SYSID = 57704
const SYSTEM_P = 57705
const TABLE = 57706
const TABLES = 57707
const TABLESAMPLE = 57708
const TABLESPACE = 57709
const TEMP = 57710
const TEMPLATE = 57711
const TEMPORARY = 57712
const TEXT_P = 57713
const THEN = 57714
const TIME = 57715
const TIMESTAMP = 57716
const TO = 57717
const TRAILING = 57718
const TRANSACTION = 57719
const TRANSFORM = 57720
const TREAT = 57721
const TRIGGER = 57722
const TRIM = 57723
const TRUE_P = 57724
const TRUNCATE = 57725
const TRUSTED = 57726
const TYPE_P = 57727
const TYPES_P = 57728
const UNBOUNDED = 57729
const UNCOMMITTED = 57730
const UNENCRYPTED = 57731
const UNION = 57732
const UNIQUE = 57733
const UNKNOWN = 57734
const UNLISTEN = 57735
const UNLOGGED = 57736
const UNTIL = 57737
const UPDATE = 57738
const USER = 57739
const USING = 57740
const VACUUM = 57741
const VALID = 57742
const VALIDATE = 57743
const VALIDATOR = 57744
const VALUE_P = 57745
const VALUES = 57746
const VARCHAR = 57747
const VARIADIC = 57748
const VARYING = 57749
const VERBOSE = 57750
const VERSION_P = 57751
const VIEW = 57752
const VIEWS = 57753
const VOLATILE = 57754
const WHEN = 57755
const WHERE = 57756
const WHITESPACE_P = 57757
const WINDOW = 57758
const WITH = 57759
const WITHIN = 57760
const WITHOUT = 57761
const WORK = 57762
const WRAPPER = 57763
const WRITE = 57764
const XML_P = 57765
const XMLATTRIBUTES = 57766
const XMLCONCAT = 57767
const XMLELEMENT = 57768
const XMLEXISTS = 57769
const XMLFOREST = 57770
const XMLPARSE = 57771
const XMLPI = 57772
const XMLROOT = 57773
const XMLSERIALIZE = 57774
const YEAR_P = 57775
const YES_P = 57776
const ZONE = 57777
const NOT_LA = 57778
const NULLS_LA = 57779
const WITH_LA = 57780
const OP = 57781
const POSTFIXOP = 57782
const UMINUS = 57783

var yyToknames = []string{
	"any_operator",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
}
var yyStatenames = []string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:2830

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = []int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 186,
	-2, 194,
	-1, 5,
	1, 189,
	454, 189,
	-2, 193,
	-1, 12,
	1, 190,
	454, 190,
	-2, 210,
	-1, 400,
	15, 365,
	16, 365,
	453, 365,
	-2, 362,
	-1, 401,
	15, 366,
	16, 366,
	453, 366,
	-2, 363,
	-1, 467,
	322, 280,
	323, 280,
	-2, 58,
	-1, 515,
	138, 194,
	150, 194,
	155, 194,
	199, 194,
	219, 194,
	258, 194,
	266, 194,
	390, 194,
	-2, 141,
	-1, 526,
	453, 352,
	-2, 320,
	-1, 602,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 70,
	-1, 603,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 71,
	-1, 604,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 72,
	-1, 605,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 73,
	-1, 606,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 74,
	-1, 607,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 75,
	-1, 611,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 83,
	-1, 616,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 87,
	-1, 737,
	453, 351,
	-2, 8,
	-1, 801,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 85,
	-1, 802,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 89,
	-1, 807,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 91,
	-1, 882,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 84,
	-1, 885,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 93,
	-1, 888,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 88,
	-1, 892,
	203, 0,
	204, 0,
	249, 0,
	-2, 105,
	-1, 951,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 86,
	-1, 952,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 90,
	-1, 956,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 92,
	-1, 957,
	203, 0,
	204, 0,
	249, 0,
	-2, 106,
	-1, 961,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 109,
	-1, 969,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 123,
	-1, 970,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 124,
	-1, 971,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 125,
	-1, 972,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 126,
	-1, 973,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 127,
	-1, 974,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 128,
	-1, 979,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 111,
	-1, 1004,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 94,
	-1, 1005,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 110,
	-1, 1006,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 112,
	-1, 1023,
	203, 0,
	-2, 132,
	-1, 1036,
	203, 0,
	-2, 133,
	-1, 1042,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 645,
}

const yyNprod = 793
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 12305

var yyAct = []int{

	377, 1041, 390, 834, 717, 789, 1017, 994, 934, 990,
	1040, 774, 411, 28, 31, 713, 13, 860, 894, 893,
	734, 523, 770, 26, 518, 772, 730, 777, 724, 791,
	28, 625, 476, 780, 549, 442, 562, 715, 864, 1051,
	371, 960, 1050, 1038, 1049, 960, 825, 1007, 566, 960,
	410, 439, 388, 17, 1031, 480, 391, 959, 946, 960,
	825, 852, 850, 825, 825, 849, 848, 825, 825, 847,
	388, 825, 827, 480, 826, 1019, 828, 520, 825, 751,
	368, 519, 520, 541, 482, 540, 519, 790, 557, 479,
	24, 879, 480, 798, 8, 1039, 989, 987, 986, 985,
	948, 947, 482, 925, 843, 829, 745, 402, 524, 368,
	7, 1022, 367, 836, 481, 1025, 1020, 1012, 891, 857,
	815, 482, 388, 781, 402, 480, 783, 10, 728, 492,
	493, 494, 481, 349, 525, 538, 536, 896, 535, 534,
	533, 532, 531, 7, 1001, 1000, 496, 480, 945, 869,
	524, 481, 870, 866, 482, 438, 771, 756, 799, 991,
	505, 773, 837, 832, 767, 768, 769, 11, 725, 792,
	747, 999, 623, 812, 16, 517, 482, 803, 953, 617,
	595, 355, 627, 627, 481, 896, 544, 478, 865, 455,
	553, 354, 401, 455, 351, 876, 889, 621, 810, 615,
	1028, 1055, 356, 30, 388, 784, 481, 480, 550, 551,
	1054, 492, 493, 494, 388, 350, 7, 896, 983, 727,
	30, 906, 907, 908, 17, 853, 453, 1029, 542, 388,
	453, 436, 480, 976, 358, 15, 482, 359, 955, 353,
	469, 358, 505, 839, 750, 543, 388, 462, 1010, 480,
	358, 939, 938, 492, 493, 494, 15, 935, 858, 1024,
	896, 482, 861, 5, 1009, 890, 481, 505, 814, 563,
	496, 450, 388, 353, 530, 896, 790, 919, 482, 906,
	907, 908, 480, 451, 505, 554, 480, 1014, 362, 500,
	1032, 481, 22, 795, 794, 619, 954, 936, 366, 872,
	618, 808, 17, 357, 508, 624, 813, 778, 481, 998,
	357, 482, 1059, 896, 348, 502, 503, 859, 480, 357,
	933, 370, 508, 454, 844, 845, 402, 454, 613, 388,
	498, 361, 896, 1058, 1035, 6, 816, 840, 463, 437,
	1053, 481, 359, 435, 12, 481, 941, 364, 365, 359,
	722, 18, 3, 587, 584, 583, 977, 480, 570, 569,
	568, 504, 374, 404, 633, 797, 978, 593, 380, 612,
	718, 500, 1027, 495, 508, 982, 922, 497, 452, 726,
	1016, 1011, 452, 363, 399, 384, 482, 23, 398, 441,
	723, 830, 527, 383, 782, 381, 500, 393, 546, 993,
	754, 753, 757, 863, 736, 822, 555, 910, 468, 755,
	552, 360, 498, 500, 352, 447, 481, 465, 545, 464,
	458, 445, 25, 529, 461, 559, 14, 475, 775, 1034,
	20, 620, 809, 21, 369, 9, 2, 498, 1, 502,
	503, 622, 811, 28, 495, 0, 725, 0, 0, 0,
	385, 4, 0, 0, 498, 501, 508, 0, 19, 0,
	495, 0, 0, 0, 539, 910, 508, 495, 0, 0,
	0, 0, 28, 0, 0, 0, 788, 0, 495, 0,
	0, 508, 0, 0, 594, 504, 483, 484, 485, 486,
	487, 488, 0, 556, 614, 0, 0, 0, 508, 565,
	0, 497, 805, 626, 483, 484, 485, 486, 487, 488,
	495, 495, 495, 495, 495, 495, 0, 0, 548, 632,
	564, 631, 0, 0, 508, 485, 486, 487, 488, 495,
	0, 571, 632, 0, 631, 0, 456, 501, 739, 740,
	741, 742, 712, 744, 628, 446, 721, 457, 499, 547,
	0, 712, 489, 490, 491, 449, 483, 484, 485, 486,
	487, 488, 501, 0, 823, 942, 526, 448, 0, 824,
	899, 900, 901, 902, 743, 0, 746, 0, 0, 501,
	748, 508, 737, 488, 0, 0, 0, 764, 765, 766,
	752, 758, 759, 760, 761, 762, 763, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 785, 786, 787, 779, 495, 571, 793,
	0, 902, 796, 537, 0, 471, 820, 820, 471, 471,
	499, 0, 0, 30, 489, 490, 491, 720, 483, 484,
	485, 486, 487, 488, 903, 904, 905, 804, 897, 898,
	899, 900, 901, 902, 0, 499, 0, 0, 372, 372,
	0, 0, 30, 483, 484, 485, 486, 487, 488, 0,
	0, 0, 499, 586, 30, 0, 489, 490, 491, 0,
	483, 484, 485, 486, 487, 488, 0, 0, 0, 0,
	984, 897, 898, 899, 900, 901, 902, 470, 0, 630,
	473, 474, 903, 904, 905, 0, 897, 898, 899, 900,
	901, 902, 630, 0, 0, 0, 0, 495, 0, 0,
	0, 495, 467, 0, 0, 388, 0, 0, 480, 0,
	835, 0, 0, 0, 0, 0, 495, 0, 388, 495,
	0, 480, 0, 0, 0, 0, 0, 838, 0, 0,
	495, 0, 831, 0, 28, 0, 0, 482, 841, 842,
	586, 0, 0, 897, 898, 899, 900, 901, 902, 851,
	482, 0, 0, 0, 0, 855, 856, 495, 0, 0,
	0, 0, 737, 737, 0, 0, 873, 481, 483, 484,
	485, 486, 487, 488, 0, 0, 0, 0, 0, 0,
	481, 0, 495, 495, 0, 820, 820, 871, 495, 0,
	0, 632, 472, 631, 880, 472, 472, 909, 0, 820,
	820, 820, 909, 0, 877, 878, 0, 0, 0, 0,
	0, 0, 0, 515, 495, 0, 0, 521, 522, 923,
	874, 0, 0, 0, 0, 875, 0, 915, 388, 0,
	918, 896, 0, 0, 0, 906, 907, 908, 927, 928,
	926, 0, 0, 495, 884, 931, 571, 0, 0, 932,
	0, 0, 914, 0, 0, 937, 0, 0, 940, 949,
	0, 0, 495, 495, 0, 0, 495, 909, 909, 495,
	737, 0, 632, 495, 631, 950, 0, 571, 820, 820,
	820, 820, 820, 820, 820, 820, 820, 820, 820, 820,
	820, 958, 909, 909, 909, 962, 0, 495, 495, 0,
	30, 495, 0, 0, 0, 495, 943, 944, 0, 0,
	495, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 988, 571, 0, 30, 0, 0, 571, 0, 0,
	996, 997, 495, 495, 1003, 0, 0, 495, 495, 0,
	0, 0, 495, 821, 909, 909, 909, 909, 909, 909,
	909, 909, 909, 909, 909, 909, 909, 508, 0, 1008,
	495, 0, 495, 0, 0, 0, 0, 443, 817, 817,
	508, 630, 0, 495, 1018, 459, 495, 466, 1015, 1013,
	0, 0, 1002, 0, 477, 495, 495, 495, 586, 0,
	820, 571, 0, 509, 510, 511, 512, 513, 0, 1030,
	514, 0, 495, 0, 909, 820, 0, 1033, 0, 30,
	0, 0, 1026, 0, 1018, 528, 1048, 909, 1047, 586,
	1046, 910, 0, 0, 1052, 1037, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	896, 1060, 0, 571, 906, 907, 908, 0, 0, 30,
	0, 0, 630, 0, 0, 0, 571, 388, 0, 0,
	480, 0, 0, 0, 586, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 616, 481,
	0, 886, 887, 0, 0, 0, 0, 388, 0, 0,
	480, 0, 0, 586, 0, 911, 912, 913, 716, 483,
	484, 485, 486, 487, 488, 0, 0, 817, 817, 735,
	738, 0, 483, 484, 485, 486, 487, 488, 443, 482,
	0, 817, 817, 817, 30, 749, 0, 0, 0, 0,
	388, 0, 0, 480, 0, 477, 0, 492, 493, 494,
	0, 776, 0, 883, 0, 586, 0, 0, 388, 481,
	0, 896, 0, 0, 496, 906, 907, 908, 586, 0,
	0, 0, 482, 0, 30, 0, 388, 0, 505, 480,
	0, 0, 895, 0, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 0, 0, 0,
	801, 802, 481, 0, 0, 807, 0, 0, 482, 0,
	817, 817, 817, 817, 817, 817, 817, 817, 817, 817,
	817, 817, 817, 806, 0, 0, 0, 0, 903, 904,
	905, 0, 897, 898, 899, 900, 901, 902, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1023, 0, 0, 0,
	0, 0, 800, 0, 0, 0, 0, 500, 0, 0,
	0, 1036, 0, 833, 0, 0, 0, 0, 0, 735,
	735, 0, 817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 502, 503, 0, 0, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 508,
	0, 910, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	0, 0, 0, 0, 0, 0, 0, 881, 882, 0,
	0, 885, 508, 0, 888, 497, 0, 0, 0, 0,
	0, 0, 892, 0, 0, 0, 0, 0, 0, 0,
	508, 0, 916, 917, 0, 0, 0, 0, 0, 0,
	920, 0, 0, 0, 0, 924, 0, 735, 508, 0,
	0, 0, 929, 930, 0, 0, 0, 903, 904, 905,
	0, 897, 898, 899, 900, 901, 902, 0, 0, 0,
	0, 776, 0, 0, 776, 0, 0, 0, 0, 0,
	0, 483, 484, 485, 486, 487, 488, 0, 0, 0,
	0, 951, 952, 501, 0, 0, 0, 956, 957, 0,
	0, 0, 0, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 979, 0, 0, 0, 0, 0, 0, 981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 992, 995, 0, 776, 776, 0, 0,
	0, 483, 484, 485, 486, 487, 488, 0, 0, 0,
	0, 1004, 1005, 1006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 499, 0, 0, 0,
	489, 490, 491, 0, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 854, 0, 0, 1021, 903, 904,
	905, 0, 897, 898, 899, 900, 901, 902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	483, 484, 485, 486, 487, 488, 1045, 1045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1045, 0, 0, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1045, 32, 33,
	34, 35, 36, 37, 38, 39, 634, 40, 41, 42,
	635, 636, 637, 638, 639, 640, 641, 43, 44, 642,
	45, 46, 412, 47, 48, 49, 300, 301, 413, 302,
	303, 643, 50, 51, 52, 53, 54, 644, 645, 55,
	56, 304, 305, 57, 646, 58, 59, 60, 61, 306,
	647, 414, 648, 62, 63, 64, 65, 415, 66, 67,
	68, 649, 69, 70, 71, 72, 73, 74, 650, 416,
	75, 76, 77, 651, 652, 653, 417, 654, 655, 656,
	78, 79, 80, 81, 82, 83, 307, 308, 84, 657,
	85, 658, 86, 87, 88, 89, 90, 659, 91, 92,
	93, 660, 661, 94, 95, 96, 97, 98, 662, 99,
	100, 101, 663, 102, 103, 104, 664, 105, 106, 107,
	108, 309, 109, 110, 111, 310, 665, 112, 666, 113,
	114, 311, 115, 667, 116, 668, 117, 418, 669, 419,
	118, 119, 120, 670, 121, 312, 671, 313, 122, 672,
	123, 124, 125, 126, 127, 420, 128, 129, 130, 131,
	673, 132, 133, 134, 135, 136, 137, 674, 138, 421,
	314, 139, 140, 141, 142, 315, 316, 675, 317, 676,
	143, 422, 423, 144, 424, 145, 146, 147, 148, 149,
	677, 678, 150, 318, 425, 151, 426, 679, 152, 153,
	154, 680, 681, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 319, 427,
	320, 170, 171, 321, 682, 172, 173, 428, 174, 683,
	322, 175, 323, 176, 177, 178, 684, 179, 685, 686,
	180, 181, 182, 687, 688, 183, 324, 429, 184, 430,
	325, 185, 186, 187, 188, 189, 190, 191, 689, 192,
	193, 326, 194, 327, 197, 195, 196, 690, 198, 199,
	200, 201, 202, 203, 204, 205, 328, 206, 207, 208,
	209, 691, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 692, 221, 222, 431, 223, 224, 225,
	329, 226, 227, 228, 229, 230, 231, 232, 233, 693,
	234, 235, 236, 237, 238, 694, 239, 240, 330, 241,
	242, 432, 243, 244, 331, 245, 695, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 332, 696,
	257, 258, 697, 259, 433, 260, 261, 262, 263, 264,
	698, 333, 334, 699, 700, 265, 266, 335, 267, 336,
	701, 268, 269, 270, 271, 272, 273, 274, 702, 703,
	275, 276, 277, 278, 279, 704, 705, 280, 281, 282,
	283, 284, 337, 338, 706, 285, 434, 286, 287, 288,
	289, 707, 708, 290, 709, 710, 291, 292, 293, 294,
	295, 296, 339, 340, 341, 342, 343, 344, 345, 346,
	347, 297, 298, 299, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 714, 0, 0, 0, 0, 32,
	33, 34, 35, 36, 37, 38, 39, 634, 40, 41,
	42, 635, 636, 637, 638, 639, 640, 641, 43, 44,
	642, 45, 46, 412, 47, 48, 49, 300, 301, 413,
	302, 303, 643, 50, 51, 52, 53, 54, 644, 645,
	55, 56, 304, 305, 57, 646, 58, 59, 60, 61,
	306, 647, 414, 648, 62, 63, 64, 65, 415, 66,
	67, 68, 649, 69, 70, 71, 72, 73, 74, 650,
	416, 75, 76, 77, 651, 652, 653, 417, 654, 655,
	656, 78, 79, 80, 81, 82, 83, 307, 308, 84,
	657, 85, 658, 86, 87, 88, 89, 90, 659, 91,
	92, 93, 660, 661, 94, 95, 96, 97, 98, 662,
	99, 100, 101, 663, 102, 103, 104, 664, 105, 106,
	107, 108, 309, 109, 110, 111, 310, 665, 112, 666,
	113, 114, 311, 115, 667, 116, 668, 117, 418, 669,
	419, 118, 119, 120, 670, 121, 312, 671, 313, 122,
	672, 123, 124, 125, 126, 127, 420, 128, 129, 130,
	131, 673, 132, 133, 134, 135, 136, 137, 674, 138,
	421, 314, 139, 140, 141, 142, 315, 316, 675, 317,
	676, 143, 422, 423, 144, 424, 145, 146, 147, 148,
	149, 677, 678, 150, 318, 425, 151, 426, 679, 152,
	153, 154, 680, 681, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 319,
	427, 320, 170, 171, 321, 682, 172, 173, 428, 174,
	683, 322, 175, 323, 176, 177, 178, 684, 179, 685,
	686, 180, 181, 182, 687, 688, 183, 324, 429, 184,
	430, 325, 185, 186, 187, 188, 189, 190, 191, 689,
	192, 193, 326, 194, 327, 197, 195, 196, 690, 198,
	199, 200, 201, 202, 203, 204, 205, 328, 206, 207,
	208, 209, 691, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 692, 221, 222, 431, 223, 224,
	225, 329, 226, 227, 228, 229, 230, 231, 232, 233,
	693, 234, 235, 236, 237, 238, 694, 239, 240, 330,
	241, 242, 432, 243, 244, 331, 245, 695, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 332,
	696, 257, 258, 697, 259, 433, 260, 261, 262, 263,
	264, 698, 333, 334, 699, 700, 265, 266, 335, 267,
	336, 701, 268, 269, 270, 271, 272, 273, 274, 702,
	703, 275, 276, 277, 278, 279, 704, 705, 280, 281,
	282, 283, 284, 337, 338, 706, 285, 434, 286, 287,
	288, 289, 707, 708, 290, 709, 710, 291, 292, 293,
	294, 295, 296, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 297, 298, 299, 400, 392, 403, 0, 0,
	388, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	32, 33, 34, 35, 36, 37, 38, 39, 731, 40,
	41, 42, 0, 0, 0, 0, 387, 0, 0, 43,
	44, 0, 45, 46, 412, 47, 48, 49, 300, 301,
	413, 302, 303, 0, 50, 51, 52, 53, 54, 397,
	405, 55, 56, 304, 305, 57, 0, 58, 59, 60,
	61, 406, 0, 414, 0, 62, 63, 64, 65, 415,
	66, 67, 68, 0, 69, 70, 71, 72, 73, 74,
	0, 416, 75, 76, 77, 0, 0, 0, 417, 0,
	0, 0, 78, 79, 80, 81, 82, 83, 307, 308,
	84, 0, 85, 0, 86, 87, 88, 89, 90, 0,
	91, 92, 93, 732, 0, 94, 95, 96, 97, 98,
	0, 99, 100, 101, 0, 102, 103, 104, 0, 105,
	106, 107, 108, 386, 109, 110, 111, 310, 395, 112,
	0, 113, 114, 311, 115, 0, 116, 0, 117, 418,
	0, 419, 118, 119, 120, 0, 121, 407, 0, 313,
	122, 0, 123, 124, 125, 126, 127, 420, 128, 129,
	130, 131, 0, 132, 133, 134, 135, 136, 137, 0,
	138, 421, 314, 139, 140, 141, 142, 315, 316, 0,
	317, 0, 143, 422, 423, 144, 424, 145, 146, 147,
	148, 149, 0, 0, 150, 408, 425, 151, 426, 0,
	152, 153, 154, 0, 0, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	319, 427, 320, 170, 171, 321, 378, 172, 173, 428,
	174, 396, 322, 175, 323, 176, 177, 178, 0, 179,
	0, 0, 389, 181, 182, 0, 0, 183, 324, 429,
	184, 430, 325, 185, 186, 187, 188, 189, 190, 191,
	0, 192, 193, 326, 194, 327, 197, 195, 196, 0,
	198, 199, 200, 201, 202, 203, 204, 205, 328, 206,
	207, 208, 209, 0, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 0, 221, 222, 431, 223,
	224, 225, 329, 226, 227, 228, 229, 230, 231, 232,
	233, 0, 234, 235, 236, 237, 238, 0, 239, 240,
	330, 241, 242, 432, 243, 244, 331, 245, 0, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	332, 0, 257, 258, 0, 259, 433, 260, 261, 262,
	263, 264, 0, 333, 334, 0, 0, 265, 266, 335,
	267, 336, 394, 268, 269, 270, 271, 272, 273, 274,
	0, 0, 275, 276, 277, 278, 279, 0, 0, 280,
	281, 282, 283, 284, 337, 338, 0, 285, 434, 286,
	287, 288, 289, 0, 0, 290, 0, 0, 291, 292,
	293, 294, 295, 296, 339, 409, 341, 342, 343, 344,
	345, 346, 347, 297, 298, 299, 379, 0, 0, 0,
	0, 0, 0, 0, 375, 376, 733, 0, 0, 0,
	400, 392, 403, 382, 729, 388, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 32, 33, 34, 35, 36,
	37, 38, 39, 0, 40, 41, 42, 0, 0, 0,
	0, 387, 0, 0, 43, 44, 0, 45, 46, 412,
	47, 48, 49, 300, 301, 413, 302, 303, 0, 50,
	51, 52, 53, 54, 397, 405, 55, 56, 304, 305,
	57, 0, 58, 59, 60, 61, 406, 0, 414, 0,
	62, 63, 64, 65, 415, 66, 67, 68, 0, 69,
	70, 71, 72, 73, 74, 0, 416, 75, 76, 77,
	0, 0, 0, 417, 0, 0, 0, 78, 79, 80,
	81, 82, 83, 307, 308, 84, 0, 85, 0, 86,
	87, 88, 89, 90, 0, 91, 92, 93, 0, 0,
	94, 95, 96, 97, 98, 0, 99, 100, 101, 0,
	102, 103, 104, 0, 105, 106, 107, 108, 386, 109,
	110, 111, 310, 395, 112, 0, 113, 114, 311, 115,
	0, 116, 0, 117, 418, 0, 419, 118, 119, 120,
	0, 121, 407, 0, 313, 122, 0, 123, 124, 125,
	126, 127, 420, 128, 129, 130, 131, 0, 132, 133,
	134, 135, 136, 137, 0, 138, 421, 314, 139, 140,
	141, 142, 315, 316, 0, 317, 0, 143, 422, 423,
	144, 424, 145, 146, 147, 148, 149, 0, 0, 150,
	408, 425, 151, 426, 0, 152, 153, 154, 0, 0,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 319, 427, 320, 170, 171,
	321, 378, 172, 173, 428, 174, 396, 322, 175, 323,
	176, 177, 178, 0, 179, 0, 0, 389, 181, 182,
	0, 0, 183, 324, 429, 184, 430, 325, 185, 186,
	187, 188, 189, 190, 191, 0, 192, 193, 326, 194,
	327, 197, 195, 196, 0, 198, 199, 200, 201, 202,
	203, 204, 205, 328, 206, 207, 208, 209, 0, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 221, 222, 431, 223, 224, 225, 329, 226, 227,
	228, 229, 230, 231, 232, 233, 0, 234, 235, 236,
	237, 238, 0, 239, 240, 330, 241, 242, 432, 243,
	244, 331, 245, 0, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 332, 0, 257, 258, 0,
	259, 433, 260, 261, 262, 263, 264, 0, 333, 334,
	0, 0, 265, 266, 335, 267, 336, 394, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 275, 276, 277,
	278, 279, 0, 0, 280, 281, 282, 283, 284, 337,
	338, 0, 285, 434, 286, 287, 288, 289, 0, 0,
	290, 0, 0, 291, 292, 293, 294, 295, 296, 339,
	409, 341, 342, 343, 344, 345, 346, 347, 297, 298,
	299, 379, 0, 0, 0, 0, 400, 392, 403, 375,
	376, 388, 402, 0, 0, 0, 524, 719, 382, 0,
	0, 32, 33, 34, 35, 36, 37, 38, 39, 0,
	40, 41, 42, 0, 0, 0, 0, 387, 0, 0,
	43, 44, 0, 45, 46, 412, 47, 48, 49, 300,
	301, 413, 302, 303, 0, 50, 51, 52, 53, 54,
	397, 405, 55, 56, 304, 305, 57, 0, 58, 59,
	60, 61, 406, 0, 414, 0, 62, 63, 64, 65,
	415, 66, 67, 68, 0, 69, 70, 71, 72, 73,
	74, 0, 416, 75, 76, 77, 0, 0, 0, 417,
	0, 0, 0, 78, 79, 80, 81, 82, 83, 307,
	308, 84, 0, 85, 0, 86, 87, 88, 89, 90,
	0, 91, 92, 93, 0, 0, 94, 95, 96, 97,
	98, 0, 99, 100, 101, 0, 102, 103, 104, 0,
	105, 106, 107, 108, 386, 109, 110, 111, 310, 395,
	112, 0, 113, 114, 311, 115, 0, 116, 0, 117,
	418, 0, 419, 118, 119, 120, 0, 121, 407, 0,
	313, 122, 0, 123, 124, 125, 126, 127, 420, 128,
	129, 130, 131, 0, 132, 133, 134, 135, 136, 137,
	0, 138, 421, 314, 139, 140, 141, 142, 315, 316,
	0, 317, 0, 143, 422, 423, 144, 424, 145, 146,
	147, 148, 149, 0, 0, 150, 408, 425, 151, 426,
	0, 152, 153, 154, 0, 0, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 319, 427, 320, 170, 171, 321, 378, 172, 173,
	428, 174, 396, 322, 175, 323, 176, 177, 178, 0,
	179, 0, 0, 389, 181, 182, 0, 0, 183, 324,
	429, 184, 430, 325, 185, 186, 187, 188, 189, 190,
	191, 0, 192, 193, 326, 194, 327, 197, 195, 196,
	0, 198, 199, 200, 201, 202, 203, 204, 205, 328,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 221, 222, 431,
	223, 224, 225, 329, 226, 227, 228, 229, 230, 231,
	232, 233, 8, 234, 235, 236, 237, 238, 0, 239,
	240, 330, 241, 242, 432, 243, 244, 331, 245, 0,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 332, 0, 257, 258, 10, 259, 433, 260, 261,
	262, 263, 264, 0, 333, 334, 0, 0, 265, 266,
	335, 267, 336, 394, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 275, 276, 277, 278, 279, 0, 0,
	280, 281, 282, 283, 284, 516, 338, 0, 285, 434,
	286, 287, 288, 289, 0, 0, 290, 0, 0, 291,
	292, 293, 294, 295, 296, 339, 409, 341, 342, 343,
	344, 345, 346, 347, 297, 298, 299, 379, 0, 0,
	0, 0, 400, 392, 403, 375, 376, 388, 402, 0,
	0, 0, 0, 0, 382, 0, 0, 32, 33, 34,
	35, 36, 37, 38, 39, 0, 40, 41, 42, 0,
	0, 0, 0, 387, 0, 0, 43, 44, 0, 45,
	46, 412, 47, 48, 49, 300, 301, 413, 302, 303,
	0, 50, 51, 52, 53, 54, 397, 405, 55, 56,
	304, 305, 57, 0, 58, 59, 60, 61, 406, 0,
	414, 0, 62, 63, 64, 65, 415, 66, 67, 68,
	0, 69, 70, 71, 72, 73, 74, 0, 416, 75,
	76, 77, 0, 0, 0, 417, 0, 0, 0, 78,
	79, 80, 81, 82, 83, 307, 308, 84, 444, 85,
	0, 86, 87, 88, 89, 90, 0, 91, 92, 93,
	0, 0, 94, 95, 96, 97, 98, 0, 99, 100,
	101, 0, 102, 103, 104, 0, 105, 106, 107, 108,
	386, 109, 110, 111, 310, 395, 112, 0, 113, 114,
	311, 115, 0, 116, 0, 117, 418, 0, 419, 118,
	119, 120, 0, 121, 407, 0, 313, 122, 0, 123,
	124, 125, 126, 127, 420, 128, 129, 130, 131, 0,
	132, 133, 134, 135, 136, 137, 0, 138, 421, 314,
	139, 140, 141, 142, 315, 316, 0, 317, 0, 143,
	422, 423, 144, 424, 145, 146, 147, 148, 149, 0,
	0, 150, 408, 425, 151, 426, 0, 152, 153, 154,
	0, 0, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 319, 427, 320,
	170, 171, 321, 378, 172, 173, 428, 174, 396, 322,
	175, 323, 176, 177, 178, 0, 179, 0, 0, 389,
	181, 182, 0, 0, 183, 324, 429, 184, 430, 325,
	185, 186, 187, 188, 189, 190, 191, 0, 192, 193,
	326, 194, 327, 197, 195, 196, 0, 198, 199, 200,
	201, 202, 203, 204, 205, 328, 206, 207, 208, 209,
	0, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 221, 222, 431, 223, 224, 225, 329,
	226, 227, 228, 229, 230, 231, 232, 233, 0, 234,
	235, 236, 237, 238, 0, 239, 240, 330, 241, 242,
	432, 243, 244, 331, 245, 0, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 332, 0, 257,
	258, 0, 259, 433, 260, 261, 262, 263, 264, 0,
	333, 334, 0, 0, 265, 266, 335, 267, 336, 394,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 275,
	276, 277, 278, 279, 0, 0, 280, 281, 282, 283,
	284, 337, 338, 0, 285, 434, 286, 287, 288, 289,
	0, 0, 290, 0, 0, 291, 292, 293, 294, 295,
	296, 339, 409, 341, 342, 343, 344, 345, 346, 347,
	297, 298, 299, 379, 0, 0, 0, 0, 400, 392,
	403, 375, 376, 388, 402, 0, 0, 0, 0, 0,
	382, 0, 0, 32, 33, 34, 35, 36, 37, 38,
	39, 0, 40, 41, 42, 0, 0, 0, 0, 387,
	0, 0, 43, 44, 0, 45, 46, 412, 47, 48,
	49, 300, 301, 413, 302, 303, 0, 50, 51, 52,
	53, 54, 397, 405, 55, 56, 304, 305, 57, 0,
	58, 59, 60, 61, 406, 0, 414, 0, 62, 63,
	64, 65, 415, 66, 67, 68, 0, 69, 70, 71,
	72, 73, 74, 0, 416, 75, 76, 77, 0, 0,
	0, 417, 0, 0, 0, 78, 79, 80, 81, 82,
	83, 307, 308, 84, 0, 85, 0, 86, 87, 88,
	89, 90, 0, 91, 92, 93, 0, 0, 94, 95,
	96, 97, 98, 0, 99, 100, 101, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 386, 109, 110, 111,
	310, 395, 112, 0, 113, 114, 311, 115, 0, 116,
	0, 117, 418, 0, 419, 118, 119, 120, 0, 121,
	407, 0, 313, 122, 0, 123, 124, 125, 126, 127,
	420, 128, 129, 130, 131, 0, 132, 133, 134, 135,
	136, 137, 0, 138, 421, 314, 139, 140, 141, 142,
	315, 316, 0, 317, 0, 143, 422, 423, 144, 424,
	145, 146, 147, 148, 149, 0, 0, 150, 408, 425,
	151, 426, 0, 152, 153, 154, 0, 0, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 319, 427, 320, 170, 171, 321, 378,
	172, 173, 428, 174, 396, 322, 175, 323, 176, 177,
	178, 0, 179, 0, 0, 389, 181, 182, 0, 0,
	183, 324, 429, 184, 430, 325, 185, 186, 187, 188,
	189, 190, 191, 0, 192, 193, 326, 194, 327, 197,
	195, 196, 0, 198, 199, 200, 201, 202, 203, 204,
	205, 328, 206, 207, 208, 209, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 221,
	222, 431, 223, 224, 225, 329, 226, 227, 228, 229,
	230, 231, 232, 233, 0, 234, 235, 236, 237, 238,
	0, 239, 240, 330, 241, 242, 432, 243, 244, 331,
	245, 0, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 332, 0, 257, 258, 0, 259, 433,
	260, 261, 262, 263, 264, 0, 333, 334, 0, 0,
	265, 266, 335, 267, 336, 394, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 275, 276, 277, 278, 279,
	0, 0, 280, 281, 282, 283, 284, 337, 338, 0,
	285, 434, 286, 287, 288, 289, 0, 0, 290, 0,
	0, 291, 292, 293, 294, 295, 296, 339, 409, 341,
	342, 343, 344, 345, 346, 347, 297, 298, 299, 379,
	0, 0, 0, 0, 0, 0, 0, 375, 376, 373,
	0, 0, 400, 392, 403, 0, 382, 388, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 32, 33, 34,
	35, 36, 37, 38, 39, 460, 40, 41, 42, 0,
	0, 0, 0, 387, 0, 0, 43, 44, 0, 45,
	46, 412, 47, 48, 49, 300, 301, 413, 302, 303,
	0, 50, 51, 52, 53, 54, 397, 405, 55, 56,
	304, 305, 57, 0, 58, 59, 60, 61, 406, 0,
	414, 0, 62, 63, 64, 65, 415, 66, 67, 68,
	0, 69, 70, 71, 72, 73, 74, 0, 416, 75,
	76, 77, 0, 0, 0, 417, 0, 0, 0, 78,
	79, 80, 81, 82, 83, 307, 308, 84, 0, 85,
	0, 86, 87, 88, 89, 90, 0, 91, 92, 93,
	0, 0, 94, 95, 96, 97, 98, 0, 99, 100,
	101, 0, 102, 103, 104, 0, 105, 106, 107, 108,
	386, 109, 110, 111, 310, 395, 112, 0, 113, 114,
	311, 115, 0, 116, 0, 117, 418, 0, 419, 118,
	119, 120, 0, 121, 407, 0, 313, 122, 0, 123,
	124, 125, 126, 127, 420, 128, 129, 130, 131, 0,
	132, 133, 134, 135, 136, 137, 0, 138, 421, 314,
	139, 140, 141, 142, 315, 316, 0, 317, 0, 143,
	422, 423, 144, 424, 145, 146, 147, 148, 149, 0,
	0, 150, 408, 425, 151, 426, 0, 152, 153, 154,
	0, 0, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 319, 427, 320,
	170, 171, 321, 378, 172, 173, 428, 174, 396, 322,
	175, 323, 176, 177, 178, 0, 179, 0, 0, 389,
	181, 182, 0, 0, 183, 324, 429, 184, 430, 325,
	185, 186, 187, 188, 189, 190, 191, 0, 192, 193,
	326, 194, 327, 197, 195, 196, 0, 198, 199, 200,
	201, 202, 203, 204, 205, 328, 206, 207, 208, 209,
	0, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 221, 222, 431, 223, 224, 225, 329,
	226, 227, 228, 229, 230, 231, 232, 233, 0, 234,
	235, 236, 237, 238, 0, 239, 240, 330, 241, 242,
	432, 243, 244, 331, 245, 0, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 332, 0, 257,
	258, 0, 259, 433, 260, 261, 262, 263, 264, 0,
	333, 334, 0, 0, 265, 266, 335, 267, 336, 394,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 275,
	276, 277, 278, 279, 0, 0, 280, 281, 282, 283,
	284, 337, 338, 0, 285, 434, 286, 287, 288, 289,
	0, 0, 290, 0, 0, 291, 292, 293, 294, 295,
	296, 339, 409, 341, 342, 343, 344, 345, 346, 347,
	297, 298, 299, 379, 0, 0, 0, 0, 400, 392,
	403, 375, 376, 388, 402, 0, 0, 0, 0, 0,
	382, 0, 0, 32, 33, 34, 35, 36, 37, 38,
	39, 0, 40, 41, 42, 0, 0, 0, 0, 387,
	0, 0, 43, 44, 0, 45, 46, 412, 47, 48,
	49, 300, 301, 413, 302, 303, 0, 50, 51, 52,
	53, 54, 397, 405, 55, 56, 304, 305, 57, 0,
	58, 59, 60, 61, 406, 0, 414, 0, 62, 63,
	64, 65, 415, 66, 67, 68, 0, 69, 70, 71,
	72, 73, 74, 0, 416, 75, 76, 1044, 0, 0,
	0, 417, 0, 0, 0, 78, 79, 80, 81, 82,
	83, 307, 308, 84, 0, 85, 0, 86, 87, 88,
	89, 90, 0, 91, 92, 93, 0, 0, 94, 95,
	96, 97, 98, 0, 99, 100, 101, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 386, 109, 110, 111,
	310, 395, 112, 0, 113, 114, 311, 115, 0, 116,
	0, 117, 418, 0, 419, 118, 119, 120, 0, 121,
	407, 0, 313, 122, 0, 123, 124, 125, 126, 127,
	420, 128, 129, 130, 131, 0, 132, 133, 134, 135,
	136, 137, 0, 138, 421, 314, 139, 140, 141, 142,
	315, 316, 0, 317, 0, 143, 422, 423, 144, 424,
	145, 146, 147, 148, 149, 0, 0, 150, 408, 425,
	151, 426, 0, 152, 153, 154, 0, 0, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 319, 427, 320, 170, 171, 321, 378,
	172, 173, 428, 174, 396, 322, 175, 323, 176, 177,
	178, 0, 179, 0, 0, 389, 181, 182, 0, 0,
	183, 324, 429, 184, 430, 325, 185, 186, 187, 188,
	189, 190, 191, 0, 192, 193, 326, 194, 327, 197,
	195, 196, 0, 198, 199, 200, 201, 202, 203, 204,
	205, 328, 206, 207, 208, 209, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 221,
	222, 431, 223, 224, 225, 329, 226, 227, 228, 229,
	230, 231, 232, 233, 0, 234, 235, 236, 237, 238,
	0, 239, 240, 330, 241, 242, 432, 243, 244, 331,
	245, 0, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 332, 0, 257, 258, 0, 259, 433,
	260, 261, 262, 263, 264, 0, 333, 334, 0, 0,
	265, 266, 335, 267, 336, 394, 268, 269, 270, 271,
	1043, 273, 274, 0, 0, 275, 276, 277, 278, 279,
	0, 0, 280, 281, 282, 283, 284, 337, 338, 0,
	285, 434, 286, 287, 288, 289, 0, 0, 290, 0,
	0, 291, 292, 293, 294, 295, 296, 339, 409, 341,
	342, 343, 344, 345, 346, 347, 297, 298, 299, 379,
	0, 0, 0, 0, 400, 392, 403, 375, 376, 388,
	402, 0, 0, 0, 0, 0, 382, 0, 0, 32,
	33, 34, 35, 36, 37, 38, 39, 0, 40, 41,
	42, 0, 0, 0, 0, 387, 0, 0, 43, 44,
	0, 45, 46, 412, 47, 48, 49, 1042, 301, 413,
	302, 303, 0, 50, 51, 52, 53, 54, 397, 405,
	55, 56, 304, 305, 57, 0, 58, 59, 60, 61,
	406, 0, 414, 0, 62, 63, 64, 65, 415, 66,
	67, 68, 0, 69, 70, 71, 72, 73, 74, 0,
	416, 75, 76, 1044, 0, 0, 0, 417, 0, 0,
	0, 78, 79, 80, 81, 82, 83, 307, 308, 84,
	0, 85, 0, 86, 87, 88, 89, 90, 0, 91,
	92, 93, 0, 0, 94, 95, 96, 97, 98, 0,
	99, 100, 101, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 386, 109, 110, 111, 310, 395, 112, 0,
	113, 114, 311, 115, 0, 116, 0, 117, 418, 0,
	419, 118, 119, 120, 0, 121, 407, 0, 313, 122,
	0, 123, 124, 125, 126, 127, 420, 128, 129, 130,
	131, 0, 132, 133, 134, 135, 136, 137, 0, 138,
	421, 314, 139, 140, 141, 142, 315, 316, 0, 317,
	0, 143, 422, 423, 144, 424, 145, 146, 147, 148,
	149, 0, 0, 150, 408, 425, 151, 426, 0, 152,
	153, 154, 0, 0, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 319,
	427, 320, 170, 171, 321, 378, 172, 173, 428, 174,
	396, 322, 175, 323, 176, 177, 178, 0, 179, 0,
	0, 389, 181, 182, 0, 0, 183, 324, 429, 184,
	430, 325, 185, 186, 187, 188, 189, 190, 191, 0,
	192, 193, 326, 194, 327, 197, 195, 196, 0, 198,
	199, 200, 201, 202, 203, 204, 205, 328, 206, 207,
	208, 209, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 221, 222, 431, 223, 224,
	225, 329, 226, 227, 228, 229, 230, 231, 232, 233,
	0, 234, 235, 236, 237, 238, 0, 239, 240, 330,
	241, 242, 432, 243, 244, 331, 245, 0, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 332,
	0, 257, 258, 0, 259, 433, 260, 261, 262, 263,
	264, 0, 333, 334, 0, 0, 265, 266, 335, 267,
	336, 394, 268, 269, 270, 271, 1043, 273, 274, 0,
	0, 275, 276, 277, 278, 279, 0, 0, 280, 281,
	282, 283, 284, 337, 338, 0, 285, 434, 286, 287,
	288, 289, 0, 0, 290, 0, 0, 291, 292, 293,
	294, 295, 296, 339, 409, 341, 342, 343, 344, 345,
	346, 347, 297, 298, 299, 379, 0, 0, 0, 0,
	400, 392, 403, 375, 376, 388, 402, 0, 0, 0,
	0, 0, 382, 0, 0, 32, 33, 34, 35, 36,
	37, 38, 39, 0, 40, 41, 42, 0, 0, 0,
	0, 387, 0, 0, 43, 44, 0, 45, 46, 412,
	47, 48, 49, 300, 301, 413, 302, 303, 0, 50,
	51, 52, 53, 54, 397, 405, 55, 56, 304, 305,
	57, 0, 58, 59, 60, 61, 406, 0, 414, 0,
	62, 63, 64, 65, 415, 66, 67, 68, 0, 69,
	70, 71, 72, 73, 74, 0, 416, 75, 76, 77,
	0, 0, 0, 417, 0, 0, 0, 78, 79, 80,
	81, 82, 83, 307, 308, 84, 0, 85, 0, 86,
	87, 88, 89, 90, 0, 91, 92, 93, 0, 0,
	94, 95, 96, 97, 98, 0, 99, 100, 101, 0,
	102, 103, 104, 0, 105, 106, 107, 108, 386, 109,
	110, 111, 310, 395, 112, 0, 113, 114, 311, 115,
	0, 116, 0, 117, 418, 0, 419, 118, 119, 120,
	0, 121, 407, 0, 313, 122, 0, 123, 124, 125,
	126, 127, 420, 128, 129, 130, 131, 0, 132, 133,
	134, 135, 136, 137, 0, 138, 421, 314, 139, 140,
	141, 142, 315, 316, 0, 317, 0, 143, 422, 423,
	144, 424, 145, 146, 147, 148, 149, 0, 0, 150,
	408, 425, 151, 426, 0, 152, 153, 154, 0, 0,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 319, 427, 320, 170, 171,
	321, 378, 172, 173, 428, 174, 396, 322, 175, 323,
	176, 177, 178, 0, 179, 0, 0, 389, 181, 182,
	0, 0, 183, 324, 429, 184, 430, 325, 185, 186,
	187, 188, 189, 190, 191, 0, 192, 193, 326, 194,
	327, 197, 195, 196, 0, 198, 199, 200, 201, 202,
	203, 204, 205, 328, 206, 207, 208, 209, 0, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	0, 221, 222, 431, 223, 224, 225, 329, 226, 227,
	228, 229, 230, 231, 232, 233, 0, 234, 235, 236,
	237, 238, 0, 239, 240, 330, 241, 242, 432, 243,
	244, 331, 245, 0, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 332, 0, 257, 258, 0,
	259, 433, 260, 261, 262, 263, 264, 0, 333, 334,
	0, 0, 265, 266, 335, 267, 336, 394, 268, 269,
	270, 271, 272, 273, 274, 0, 0, 275, 276, 277,
	278, 279, 0, 0, 280, 281, 282, 283, 284, 337,
	338, 0, 285, 434, 286, 287, 288, 289, 0, 0,
	290, 0, 0, 291, 292, 293, 294, 295, 296, 339,
	409, 341, 342, 343, 344, 345, 346, 347, 297, 298,
	299, 379, 0, 0, 0, 0, 400, 392, 403, 375,
	376, 388, 402, 0, 0, 0, 0, 0, 382, 0,
	0, 32, 33, 34, 35, 36, 37, 38, 39, 0,
	40, 41, 42, 0, 0, 0, 0, 387, 0, 0,
	43, 44, 0, 45, 46, 412, 47, 48, 49, 300,
	301, 413, 302, 303, 0, 50, 51, 52, 53, 54,
	397, 405, 55, 56, 304, 305, 57, 0, 58, 59,
	60, 61, 406, 0, 414, 0, 62, 63, 64, 65,
	415, 66, 67, 68, 0, 69, 70, 71, 72, 73,
	74, 0, 416, 75, 76, 77, 0, 0, 0, 417,
	0, 0, 0, 78, 79, 80, 81, 82, 83, 307,
	308, 84, 0, 85, 0, 86, 87, 88, 89, 90,
	0, 91, 92, 93, 0, 0, 94, 95, 96, 97,
	98, 0, 99, 100, 101, 0, 102, 103, 104, 0,
	105, 106, 107, 108, 386, 109, 110, 111, 310, 395,
	112, 0, 113, 114, 311, 115, 0, 116, 0, 117,
	418, 0, 419, 118, 119, 120, 0, 121, 407, 0,
	313, 122, 0, 123, 124, 125, 126, 127, 420, 128,
	129, 130, 131, 0, 132, 133, 134, 135, 136, 137,
	0, 138, 421, 314, 139, 140, 141, 142, 315, 316,
	0, 317, 0, 143, 422, 423, 144, 424, 145, 146,
	147, 148, 149, 0, 0, 150, 408, 425, 151, 426,
	0, 152, 153, 154, 0, 0, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 319, 427, 320, 170, 171, 321, 0, 172, 173,
	428, 174, 396, 322, 175, 323, 176, 177, 178, 0,
	179, 0, 0, 389, 181, 182, 0, 0, 183, 324,
	429, 184, 430, 325, 185, 186, 187, 188, 189, 190,
	191, 0, 192, 193, 326, 194, 327, 197, 195, 196,
	0, 198, 199, 200, 201, 202, 203, 204, 205, 328,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 221, 222, 431,
	223, 224, 225, 329, 226, 227, 228, 229, 230, 231,
	232, 233, 0, 234, 235, 236, 237, 238, 0, 239,
	240, 330, 241, 242, 432, 243, 244, 331, 245, 0,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 332, 0, 257, 258, 0, 259, 433, 260, 261,
	262, 263, 264, 0, 333, 334, 0, 0, 265, 266,
	335, 267, 336, 394, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 275, 276, 277, 278, 279, 0, 0,
	280, 281, 282, 283, 284, 337, 338, 0, 285, 434,
	286, 287, 288, 289, 0, 0, 290, 0, 0, 291,
	292, 293, 294, 295, 296, 339, 409, 341, 342, 343,
	344, 345, 346, 347, 297, 298, 299, 0, 0, 0,
	0, 0, 400, 392, 403, 818, 819, 388, 402, 0,
	0, 0, 0, 0, 382, 0, 0, 32, 33, 34,
	35, 36, 37, 38, 39, 0, 40, 41, 42, 0,
	0, 0, 0, 387, 0, 0, 43, 44, 0, 45,
	46, 412, 47, 48, 49, 300, 301, 413, 302, 303,
	0, 50, 51, 52, 53, 54, 397, 405, 55, 56,
	304, 305, 57, 0, 58, 59, 60, 61, 406, 0,
	414, 0, 62, 63, 64, 65, 415, 66, 67, 68,
	0, 69, 70, 71, 72, 73, 74, 0, 416, 75,
	76, 77, 0, 0, 0, 417, 0, 0, 0, 78,
	79, 80, 81, 82, 83, 307, 308, 84, 0, 85,
	0, 86, 87, 88, 89, 90, 0, 91, 92, 93,
	0, 0, 94, 95, 96, 97, 98, 0, 99, 100,
	101, 0, 102, 103, 104, 0, 105, 106, 107, 108,
	386, 109, 110, 111, 310, 395, 112, 0, 113, 114,
	311, 115, 0, 116, 0, 117, 418, 0, 419, 118,
	119, 120, 0, 121, 407, 0, 313, 122, 0, 123,
	124, 125, 126, 127, 420, 128, 129, 130, 131, 0,
	132, 133, 134, 135, 136, 137, 0, 138, 421, 314,
	139, 140, 141, 142, 315, 316, 0, 317, 0, 143,
	0, 423, 144, 424, 145, 146, 147, 148, 149, 0,
	0, 150, 408, 425, 151, 426, 0, 152, 153, 154,
	0, 0, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 319, 427, 320,
	170, 171, 321, 0, 172, 173, 428, 174, 396, 322,
	175, 323, 176, 177, 178, 0, 179, 0, 0, 389,
	181, 182, 0, 0, 183, 324, 429, 184, 430, 325,
	185, 186, 187, 188, 189, 190, 191, 0, 192, 193,
	326, 194, 327, 197, 195, 196, 0, 198, 199, 200,
	201, 202, 203, 204, 205, 328, 206, 207, 208, 209,
	0, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 221, 222, 431, 223, 224, 225, 329,
	226, 227, 228, 229, 230, 231, 232, 233, 0, 234,
	235, 236, 237, 238, 0, 239, 240, 330, 241, 242,
	432, 243, 244, 331, 245, 0, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 332, 0, 257,
	258, 0, 259, 433, 260, 261, 262, 263, 264, 0,
	333, 334, 0, 0, 265, 266, 335, 267, 336, 394,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 275,
	276, 277, 278, 279, 0, 0, 280, 281, 282, 283,
	284, 337, 338, 0, 285, 434, 286, 287, 288, 289,
	0, 0, 290, 0, 0, 291, 292, 293, 294, 295,
	296, 339, 409, 341, 342, 343, 344, 345, 346, 347,
	297, 298, 299, 0, 0, 0, 0, 0, 400, 392,
	403, 818, 819, 388, 402, 0, 0, 0, 0, 0,
	382, 0, 0, 32, 33, 34, 35, 36, 37, 38,
	39, 0, 40, 41, 42, 0, 0, 0, 0, 387,
	0, 0, 43, 44, 0, 45, 46, 412, 47, 48,
	49, 0, 301, 413, 302, 303, 0, 50, 51, 52,
	53, 54, 397, 405, 55, 56, 304, 305, 57, 0,
	58, 59, 60, 61, 406, 0, 414, 0, 62, 63,
	64, 65, 415, 66, 67, 68, 0, 69, 70, 71,
	72, 73, 74, 0, 416, 75, 76, 1044, 0, 0,
	0, 417, 0, 0, 0, 78, 79, 80, 81, 82,
	83, 307, 308, 84, 0, 85, 0, 86, 87, 88,
	89, 90, 0, 91, 92, 93, 0, 0, 94, 95,
	96, 97, 98, 0, 99, 100, 101, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 386, 109, 110, 111,
	310, 395, 112, 0, 113, 114, 311, 115, 0, 116,
	0, 117, 418, 0, 419, 118, 119, 120, 0, 121,
	407, 0, 313, 122, 0, 123, 124, 125, 126, 127,
	0, 128, 129, 130, 131, 0, 132, 133, 134, 135,
	136, 137, 0, 138, 421, 314, 139, 140, 141, 142,
	315, 316, 0, 317, 0, 143, 0, 0, 144, 424,
	145, 146, 147, 148, 149, 0, 0, 150, 408, 425,
	151, 0, 0, 152, 153, 154, 0, 0, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 319, 427, 320, 170, 171, 321, 378,
	172, 173, 0, 174, 396, 322, 175, 323, 176, 177,
	178, 0, 179, 0, 0, 389, 181, 182, 0, 0,
	183, 324, 429, 184, 430, 325, 185, 186, 187, 188,
	189, 190, 191, 0, 192, 193, 326, 194, 327, 197,
	195, 196, 0, 198, 199, 200, 201, 202, 203, 204,
	205, 328, 206, 207, 208, 209, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 221,
	222, 431, 223, 224, 225, 329, 226, 227, 228, 229,
	230, 231, 232, 233, 0, 234, 235, 236, 237, 238,
	0, 239, 240, 330, 241, 242, 0, 243, 244, 331,
	245, 0, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 332, 0, 257, 258, 0, 259, 433,
	260, 261, 262, 263, 264, 0, 333, 334, 0, 0,
	265, 266, 335, 267, 336, 394, 268, 269, 270, 271,
	1043, 273, 274, 0, 0, 275, 276, 277, 278, 279,
	0, 0, 280, 281, 282, 283, 284, 337, 338, 0,
	285, 434, 286, 287, 288, 289, 0, 0, 290, 0,
	0, 291, 292, 293, 294, 295, 296, 339, 409, 341,
	342, 343, 344, 345, 346, 347, 297, 298, 299, 0,
	0, 0, 0, 0, 400, 392, 403, 375, 376, 388,
	402, 0, 0, 0, 0, 0, 382, 0, 0, 32,
	33, 34, 35, 36, 37, 38, 39, 0, 40, 41,
	42, 0, 0, 0, 0, 387, 0, 0, 43, 44,
	0, 45, 46, 412, 47, 48, 49, 0, 301, 413,
	302, 303, 0, 50, 51, 52, 53, 54, 397, 405,
	55, 56, 304, 305, 57, 0, 58, 59, 60, 61,
	406, 0, 414, 0, 62, 63, 64, 65, 415, 66,
	67, 68, 0, 69, 70, 71, 72, 73, 74, 0,
	416, 75, 76, 77, 0, 0, 0, 417, 0, 0,
	0, 78, 79, 80, 81, 82, 83, 307, 308, 84,
	0, 85, 0, 86, 87, 88, 89, 90, 0, 91,
	92, 93, 0, 0, 94, 95, 96, 97, 98, 0,
	99, 100, 101, 0, 102, 0, 104, 0, 105, 106,
	107, 108, 386, 109, 110, 111, 310, 395, 112, 0,
	113, 114, 311, 115, 0, 116, 0, 117, 418, 0,
	419, 118, 119, 120, 0, 121, 407, 0, 313, 122,
	0, 123, 124, 125, 126, 127, 0, 128, 129, 130,
	131, 0, 132, 133, 134, 135, 136, 137, 0, 138,
	421, 314, 139, 140, 141, 142, 315, 316, 0, 317,
	0, 143, 0, 0, 144, 424, 145, 146, 147, 148,
	149, 0, 0, 150, 408, 425, 151, 0, 0, 152,
	153, 154, 0, 0, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 319,
	427, 320, 170, 171, 321, 378, 172, 173, 0, 174,
	396, 322, 175, 323, 176, 177, 178, 0, 179, 0,
	0, 389, 181, 182, 0, 0, 183, 324, 429, 184,
	430, 325, 185, 186, 187, 188, 189, 190, 191, 0,
	192, 193, 326, 194, 327, 197, 195, 196, 0, 198,
	199, 200, 201, 202, 203, 204, 205, 328, 206, 207,
	208, 209, 0, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 0, 221, 222, 431, 223, 224,
	225, 329, 226, 227, 228, 229, 230, 231, 232, 233,
	0, 234, 235, 236, 237, 238, 0, 239, 240, 330,
	241, 242, 0, 243, 244, 331, 245, 0, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 332,
	0, 257, 258, 0, 259, 433, 260, 261, 262, 263,
	264, 0, 333, 334, 0, 0, 265, 266, 335, 267,
	336, 394, 268, 269, 270, 271, 272, 273, 274, 0,
	0, 275, 276, 277, 278, 279, 0, 0, 280, 281,
	282, 283, 284, 337, 338, 0, 285, 434, 286, 287,
	288, 289, 0, 0, 290, 0, 0, 291, 292, 293,
	294, 295, 296, 339, 409, 341, 342, 343, 344, 345,
	346, 347, 297, 298, 299, 0, 0, 0, 29, 0,
	0, 0, 0, 375, 376, 0, 0, 0, 0, 0,
	0, 0, 382, 32, 33, 34, 35, 36, 37, 38,
	39, 0, 40, 41, 42, 0, 0, 0, 0, 0,
	0, 0, 43, 44, 0, 45, 46, 0, 47, 48,
	49, 300, 301, 0, 302, 303, 0, 50, 51, 52,
	53, 54, 0, 0, 55, 56, 304, 305, 57, 0,
	58, 59, 60, 61, 306, 0, 0, 0, 62, 63,
	64, 65, 0, 66, 67, 68, 0, 69, 70, 71,
	72, 73, 74, 0, 0, 75, 76, 77, 0, 0,
	0, 0, 0, 0, 0, 78, 79, 80, 81, 82,
	83, 307, 308, 84, 0, 85, 0, 86, 87, 88,
	89, 90, 0, 91, 92, 93, 0, 0, 94, 95,
	96, 97, 98, 0, 99, 100, 101, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 309, 109, 110, 111,
	310, 0, 112, 0, 113, 114, 311, 115, 0, 116,
	0, 117, 0, 0, 0, 118, 119, 120, 0, 121,
	312, 0, 313, 122, 0, 123, 124, 125, 126, 127,
	0, 128, 129, 130, 131, 0, 132, 133, 134, 135,
	136, 137, 0, 138, 0, 314, 139, 140, 141, 142,
	315, 316, 0, 317, 0, 143, 0, 0, 144, 0,
	145, 146, 147, 148, 149, 0, 0, 150, 318, 0,
	151, 0, 0, 152, 153, 154, 0, 0, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 319, 0, 320, 170, 171, 321, 0,
	172, 173, 0, 174, 0, 322, 175, 323, 176, 177,
	178, 0, 179, 0, 0, 180, 181, 182, 0, 0,
	183, 324, 0, 184, 0, 325, 185, 186, 187, 188,
	189, 190, 191, 0, 192, 193, 326, 194, 327, 197,
	195, 196, 0, 198, 199, 200, 201, 202, 203, 204,
	205, 328, 206, 207, 208, 209, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 221,
	222, 0, 223, 224, 225, 329, 226, 227, 228, 229,
	230, 231, 232, 233, 0, 234, 235, 236, 237, 238,
	0, 239, 240, 330, 241, 242, 0, 243, 244, 331,
	245, 0, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 332, 0, 257, 258, 0, 259, 0,
	260, 261, 262, 263, 264, 0, 333, 334, 0, 0,
	265, 266, 335, 267, 336, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 275, 276, 277, 278, 279,
	0, 0, 280, 281, 282, 283, 284, 337, 338, 0,
	285, 0, 286, 287, 288, 289, 0, 0, 290, 0,
	0, 291, 292, 293, 294, 295, 296, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 297, 298, 299, 0,
	0, 0, 29, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 836, 32, 33, 34,
	35, 36, 37, 38, 39, 0, 40, 41, 42, 0,
	0, 0, 0, 0, 0, 0, 43, 44, 0, 45,
	46, 0, 47, 48, 49, 300, 301, 0, 302, 303,
	0, 50, 51, 52, 53, 54, 0, 0, 55, 56,
	304, 305, 57, 0, 58, 59, 60, 61, 306, 0,
	0, 0, 62, 63, 64, 65, 0, 66, 67, 68,
	0, 69, 70, 71, 72, 73, 74, 0, 0, 75,
	76, 77, 0, 0, 0, 0, 0, 0, 0, 78,
	79, 80, 81, 82, 83, 307, 308, 84, 0, 85,
	0, 86, 87, 88, 89, 90, 0, 91, 92, 93,
	0, 0, 94, 95, 96, 97, 98, 0, 99, 100,
	101, 0, 102, 103, 104, 0, 105, 106, 107, 108,
	309, 109, 110, 111, 310, 0, 112, 0, 113, 114,
	311, 115, 0, 116, 0, 117, 0, 0, 0, 118,
	119, 120, 0, 121, 312, 0, 313, 122, 0, 123,
	124, 125, 126, 127, 0, 128, 129, 130, 131, 0,
	132, 133, 134, 135, 136, 137, 0, 138, 0, 314,
	139, 140, 141, 142, 315, 316, 0, 317, 0, 143,
	0, 0, 144, 0, 145, 146, 147, 148, 149, 0,
	0, 150, 318, 0, 151, 0, 0, 152, 153, 154,
	0, 0, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 319, 0, 320,
	170, 171, 321, 0, 172, 173, 0, 174, 0, 322,
	175, 323, 176, 177, 178, 0, 179, 0, 0, 180,
	181, 182, 0, 0, 183, 324, 0, 184, 0, 325,
	185, 186, 187, 188, 189, 190, 191, 0, 192, 193,
	326, 194, 327, 197, 195, 196, 0, 198, 199, 200,
	201, 202, 203, 204, 205, 328, 206, 207, 208, 209,
	0, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 0, 221, 222, 0, 223, 224, 225, 329,
	226, 227, 228, 229, 230, 231, 232, 233, 0, 234,
	235, 236, 237, 238, 0, 239, 240, 330, 241, 242,
	0, 243, 244, 331, 245, 0, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 332, 0, 257,
	258, 0, 259, 0, 260, 261, 262, 263, 264, 0,
	333, 334, 0, 0, 265, 266, 335, 267, 336, 0,
	268, 269, 270, 271, 272, 273, 274, 0, 0, 275,
	276, 277, 278, 279, 0, 0, 280, 281, 282, 283,
	284, 337, 338, 0, 285, 0, 286, 287, 288, 289,
	0, 0, 290, 0, 0, 291, 292, 293, 294, 295,
	296, 339, 340, 341, 342, 343, 344, 345, 346, 347,
	297, 298, 299, 0, 0, 0, 29, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	440, 32, 33, 34, 35, 36, 37, 38, 39, 0,
	40, 41, 42, 0, 0, 0, 0, 0, 0, 0,
	43, 44, 0, 45, 46, 0, 47, 48, 49, 300,
	301, 0, 302, 303, 0, 50, 51, 52, 53, 54,
	0, 0, 55, 56, 304, 305, 57, 0, 58, 59,
	60, 61, 306, 0, 0, 0, 62, 63, 64, 65,
	0, 66, 67, 68, 0, 69, 70, 71, 72, 73,
	74, 0, 0, 75, 76, 77, 0, 0, 0, 0,
	0, 0, 0, 78, 79, 80, 81, 82, 83, 307,
	308, 84, 0, 85, 0, 86, 87, 88, 89, 90,
	0, 91, 92, 93, 0, 0, 94, 95, 96, 97,
	98, 0, 99, 100, 101, 0, 102, 103, 104, 0,
	105, 106, 107, 108, 309, 109, 110, 111, 310, 0,
	112, 0, 113, 114, 311, 115, 0, 116, 0, 117,
	0, 0, 0, 118, 119, 120, 0, 121, 312, 0,
	313, 122, 0, 123, 124, 125, 126, 127, 0, 128,
	129, 130, 131, 0, 132, 133, 134, 135, 136, 137,
	0, 138, 0, 314, 139, 140, 141, 142, 315, 316,
	0, 317, 0, 143, 0, 0, 144, 0, 145, 146,
	147, 148, 149, 0, 0, 150, 318, 0, 151, 0,
	0, 152, 153, 154, 0, 0, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 319, 0, 320, 170, 171, 321, 0, 172, 173,
	0, 174, 0, 322, 175, 323, 176, 177, 178, 0,
	179, 0, 27, 180, 181, 182, 0, 0, 183, 324,
	0, 184, 0, 325, 185, 186, 187, 188, 189, 190,
	191, 0, 192, 193, 326, 194, 327, 197, 195, 196,
	0, 198, 199, 200, 201, 202, 203, 204, 205, 328,
	206, 207, 208, 209, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 0, 221, 222, 0,
	223, 224, 225, 329, 226, 227, 228, 229, 230, 231,
	232, 233, 0, 234, 235, 236, 237, 238, 0, 239,
	240, 330, 241, 242, 0, 243, 244, 331, 245, 0,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 332, 0, 257, 258, 0, 259, 0, 260, 261,
	262, 263, 264, 0, 333, 334, 0, 0, 265, 266,
	335, 267, 336, 0, 268, 269, 270, 271, 272, 273,
	274, 0, 0, 275, 276, 277, 278, 279, 0, 0,
	280, 281, 282, 283, 284, 337, 338, 0, 285, 0,
	286, 287, 288, 289, 0, 0, 290, 0, 0, 291,
	292, 293, 294, 295, 296, 339, 340, 341, 342, 343,
	344, 345, 346, 347, 297, 298, 299, 29, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 32, 33, 34, 35, 36, 37, 38, 39,
	0, 40, 41, 42, 0, 0, 0, 0, 0, 0,
	0, 43, 44, 0, 45, 46, 0, 47, 48, 49,
	300, 301, 0, 302, 303, 0, 50, 51, 52, 53,
	54, 0, 0, 55, 56, 304, 305, 57, 0, 58,
	59, 60, 61, 306, 0, 0, 0, 62, 63, 64,
	65, 0, 66, 67, 68, 0, 69, 70, 71, 72,
	73, 74, 0, 0, 75, 76, 77, 0, 0, 0,
	0, 0, 0, 0, 78, 79, 80, 81, 82, 83,
	307, 308, 84, 0, 85, 0, 86, 87, 88, 89,
	90, 0, 91, 92, 93, 0, 0, 94, 95, 96,
	97, 98, 0, 99, 100, 101, 0, 102, 103, 104,
	0, 105, 106, 107, 108, 309, 109, 110, 111, 310,
	0, 112, 0, 113, 114, 311, 115, 0, 116, 0,
	117, 0, 0, 0, 118, 119, 120, 0, 121, 312,
	0, 313, 122, 0, 123, 124, 125, 126, 127, 0,
	128, 129, 130, 131, 0, 132, 133, 134, 135, 136,
	137, 0, 138, 0, 314, 139, 140, 141, 142, 315,
	316, 0, 317, 0, 143, 0, 0, 144, 0, 145,
	146, 147, 148, 149, 0, 0, 150, 318, 0, 151,
	0, 0, 152, 153, 154, 0, 0, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 319, 0, 320, 170, 171, 321, 0, 172,
	173, 0, 174, 0, 322, 175, 323, 176, 177, 178,
	0, 179, 0, 0, 180, 181, 182, 0, 0, 183,
	324, 0, 184, 0, 325, 185, 186, 187, 188, 189,
	190, 191, 0, 192, 193, 326, 194, 327, 197, 195,
	196, 0, 198, 199, 200, 201, 202, 203, 204, 205,
	328, 206, 207, 208, 209, 0, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 0, 221, 222,
	0, 223, 224, 225, 329, 226, 227, 228, 229, 230,
	231, 232, 233, 0, 234, 235, 236, 237, 238, 0,
	239, 240, 330, 241, 242, 0, 243, 244, 331, 245,
	0, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 332, 0, 257, 258, 0, 259, 0, 260,
	261, 262, 263, 264, 0, 333, 334, 0, 0, 265,
	266, 335, 267, 336, 0, 268, 269, 270, 271, 272,
	273, 274, 0, 0, 275, 276, 277, 278, 279, 0,
	0, 280, 281, 282, 283, 284, 337, 338, 0, 285,
	0, 286, 287, 288, 289, 0, 0, 290, 0, 0,
	291, 292, 293, 294, 295, 296, 339, 340, 341, 342,
	343, 344, 345, 346, 347, 297, 298, 299, 29, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 32, 33, 34, 35, 36, 37, 38,
	39, 0, 40, 41, 42, 0, 0, 0, 0, 0,
	0, 0, 43, 44, 0, 45, 46, 0, 47, 48,
	49, 300, 301, 0, 302, 303, 0, 50, 51, 52,
	53, 54, 0, 0, 55, 56, 304, 305, 57, 0,
	58, 59, 60, 61, 306, 0, 0, 0, 62, 63,
	64, 65, 0, 66, 67, 68, 0, 69, 70, 71,
	72, 73, 74, 0, 0, 75, 76, 77, 0, 0,
	0, 0, 0, 0, 0, 78, 79, 80, 81, 82,
	83, 307, 308, 84, 0, 85, 0, 86, 87, 88,
	89, 90, 0, 91, 92, 93, 0, 0, 94, 95,
	96, 97, 98, 0, 99, 100, 101, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 309, 109, 110, 111,
	310, 0, 112, 0, 113, 114, 311, 115, 0, 116,
	0, 117, 0, 0, 0, 118, 119, 120, 0, 121,
	312, 0, 313, 122, 0, 123, 124, 125, 126, 127,
	0, 128, 129, 130, 131, 0, 132, 133, 134, 135,
	136, 137, 0, 138, 0, 314, 139, 140, 141, 142,
	315, 316, 0, 317, 0, 143, 0, 0, 144, 0,
	145, 146, 147, 148, 149, 0, 0, 150, 318, 0,
	151, 0, 0, 152, 153, 154, 0, 0, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 319, 0, 320, 170, 171, 321, 0,
	172, 173, 0, 174, 0, 322, 175, 323, 176, 177,
	178, 0, 179, 0, 0, 180, 181, 182, 0, 0,
	183, 324, 0, 184, 0, 325, 185, 186, 187, 188,
	0, 190, 191, 0, 192, 193, 326, 194, 327, 197,
	195, 196, 0, 198, 199, 200, 201, 202, 203, 0,
	205, 328, 206, 207, 208, 209, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 221,
	222, 0, 223, 224, 225, 329, 0, 227, 228, 229,
	230, 231, 232, 233, 0, 234, 235, 236, 237, 238,
	0, 239, 240, 330, 241, 242, 0, 243, 244, 331,
	245, 0, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 332, 0, 257, 258, 0, 259, 0,
	260, 261, 262, 263, 264, 0, 333, 334, 0, 0,
	265, 266, 335, 267, 336, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 275, 276, 277, 278, 279,
	0, 0, 280, 281, 282, 283, 284, 337, 338, 0,
	285, 0, 286, 287, 288, 289, 0, 0, 290, 0,
	0, 291, 292, 293, 294, 295, 296, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 297, 298, 299, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 32, 33, 34, 35, 36, 37,
	38, 39, 0, 40, 41, 42, 0, 0, 0, 0,
	0, 0, 0, 43, 44, 0, 45, 46, 412, 47,
	48, 49, 0, 575, 413, 0, 582, 0, 50, 51,
	52, 53, 54, 0, 0, 55, 56, 589, 588, 57,
	0, 58, 59, 60, 61, 0, 0, 414, 0, 62,
	63, 64, 65, 415, 66, 67, 68, 0, 69, 70,
	71, 72, 73, 74, 0, 416, 75, 76, 77, 0,
	0, 0, 417, 0, 0, 0, 78, 79, 80, 81,
	82, 83, 580, 579, 84, 0, 85, 0, 86, 87,
	88, 89, 90, 0, 91, 92, 93, 0, 0, 94,
	95, 578, 97, 98, 0, 99, 100, 101, 0, 102,
	103, 104, 0, 105, 106, 107, 108, 0, 109, 110,
	111, 0, 0, 112, 0, 113, 114, 577, 115, 0,
	116, 0, 117, 418, 0, 419, 118, 119, 120, 0,
	121, 0, 0, 0, 122, 0, 123, 124, 125, 126,
	127, 420, 128, 129, 130, 131, 0, 132, 133, 134,
	135, 136, 137, 0, 138, 421, 0, 139, 140, 141,
	142, 572, 573, 0, 0, 0, 143, 422, 423, 144,
	424, 145, 146, 147, 148, 149, 0, 0, 150, 0,
	425, 151, 426, 0, 152, 153, 154, 0, 0, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 591, 427, 592, 170, 171, 0,
	0, 172, 173, 428, 174, 0, 0, 175, 581, 176,
	177, 178, 0, 179, 0, 0, 180, 181, 182, 0,
	0, 183, 0, 429, 184, 430, 0, 185, 186, 187,
	188, 189, 190, 191, 0, 192, 193, 0, 194, 0,
	197, 195, 196, 0, 198, 199, 200, 201, 202, 203,
	204, 205, 576, 206, 207, 208, 209, 0, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 0,
	221, 222, 431, 223, 224, 225, 0, 226, 227, 228,
	229, 230, 231, 232, 233, 0, 234, 235, 236, 237,
	238, 0, 239, 240, 567, 241, 242, 432, 243, 244,
	574, 245, 0, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 0, 0, 257, 258, 0, 259,
	433, 260, 261, 262, 263, 264, 0, 0, 0, 0,
	0, 265, 266, 0, 267, 0, 0, 268, 269, 270,
	271, 272, 273, 274, 0, 0, 275, 276, 277, 278,
	279, 0, 0, 280, 281, 282, 283, 284, 0, 590,
	0, 285, 434, 286, 287, 288, 289, 0, 0, 290,
	0, 0, 291, 292, 293, 294, 295, 296, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 299,
	0, 0, 0, 32, 33, 34, 35, 36, 37, 38,
	39, 0, 40, 41, 42, 0, 0, 0, 0, 0,
	0, 0, 43, 44, 0, 45, 46, 412, 47, 48,
	49, 0, 575, 413, 0, 582, 0, 50, 51, 52,
	53, 54, 0, 0, 55, 56, 589, 588, 57, 0,
	58, 59, 60, 61, 0, 0, 414, 0, 62, 63,
	64, 65, 415, 66, 67, 68, 0, 69, 70, 71,
	72, 73, 74, 0, 416, 75, 76, 77, 0, 0,
	0, 417, 0, 0, 0, 78, 79, 80, 81, 82,
	83, 580, 579, 84, 0, 85, 0, 86, 87, 88,
	89, 90, 0, 91, 92, 93, 0, 0, 94, 95,
	578, 97, 98, 0, 99, 100, 101, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 0, 109, 110, 111,
	0, 0, 112, 0, 113, 114, 577, 115, 0, 116,
	0, 117, 418, 0, 419, 118, 119, 120, 0, 121,
	0, 0, 0, 122, 0, 123, 124, 125, 126, 127,
	420, 128, 129, 130, 131, 0, 132, 133, 134, 135,
	136, 137, 0, 138, 421, 0, 139, 140, 141, 142,
	572, 573, 0, 0, 0, 143, 422, 423, 144, 424,
	145, 146, 147, 148, 149, 0, 0, 150, 0, 425,
	151, 426, 0, 152, 153, 154, 0, 0, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 591, 427, 592, 170, 171, 0, 0,
	172, 173, 428, 174, 0, 0, 175, 581, 176, 177,
	178, 0, 179, 0, 0, 180, 181, 182, 0, 0,
	183, 0, 429, 184, 430, 0, 185, 186, 187, 188,
	189, 190, 191, 0, 192, 193, 0, 194, 0, 197,
	195, 196, 0, 198, 199, 200, 201, 202, 203, 204,
	205, 576, 206, 207, 208, 209, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 0, 221,
	222, 431, 223, 224, 225, 0, 226, 227, 228, 229,
	230, 231, 232, 233, 0, 234, 235, 236, 237, 238,
	0, 239, 240, 0, 241, 242, 432, 243, 244, 574,
	245, 0, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 0, 0, 257, 258, 0, 259, 433,
	260, 261, 262, 263, 264, 0, 0, 0, 0, 0,
	265, 266, 0, 267, 0, 0, 268, 269, 270, 271,
	272, 273, 274, 0, 0, 275, 276, 277, 278, 279,
	0, 0, 280, 281, 282, 283, 284, 0, 590, 0,
	285, 434, 286, 287, 288, 289, 0, 0, 290, 0,
	0, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	0, 0, 388, 0, 0, 480, 297, 298, 299, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 480, 0, 496, 0, 492, 493,
	494, 0, 0, 0, 482, 0, 0, 0, 0, 388,
	505, 0, 480, 0, 0, 496, 492, 493, 494, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 0, 505,
	0, 0, 0, 496, 481, 0, 0, 560, 0, 0,
	0, 482, 388, 0, 0, 480, 0, 505, 0, 492,
	493, 494, 0, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 481, 0, 0, 482, 0, 0, 868, 0, 0,
	505, 0, 388, 0, 0, 480, 0, 0, 0, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 496, 0, 0, 867,
	0, 0, 0, 0, 482, 0, 507, 0, 561, 0,
	505, 388, 0, 0, 480, 0, 0, 0, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 481, 496, 0, 0, 506, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 500, 505,
	0, 0, 0, 0, 0, 502, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 0,
	498, 0, 0, 481, 502, 503, 1057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	0, 0, 502, 503, 0, 0, 0, 0, 0, 500,
	0, 504, 0, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 508, 0, 0, 497, 0, 0,
	504, 0, 0, 0, 0, 502, 503, 0, 0, 0,
	0, 0, 0, 508, 0, 0, 497, 0, 504, 500,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 503, 0, 0, 0,
	0, 504, 0, 0, 0, 0, 0, 0, 500, 0,
	498, 0, 0, 388, 508, 0, 480, 497, 0, 0,
	492, 493, 494, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 503, 1056, 496, 0, 0,
	0, 504, 0, 0, 501, 482, 0, 0, 0, 498,
	0, 505, 388, 0, 508, 480, 0, 497, 0, 492,
	493, 494, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 481, 496, 0, 0, 846,
	504, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	505, 0, 0, 508, 0, 501, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 558, 499, 0,
	0, 0, 489, 490, 491, 0, 483, 484, 485, 486,
	487, 488, 0, 0, 0, 501, 711, 499, 0, 0,
	0, 489, 490, 491, 0, 483, 484, 485, 486, 487,
	488, 0, 0, 980, 0, 499, 0, 0, 0, 489,
	490, 491, 0, 483, 484, 485, 486, 487, 488, 0,
	0, 0, 0, 0, 501, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 489, 490, 491, 0, 483, 484, 485, 486,
	487, 488, 0, 0, 0, 0, 502, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 498, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 489, 490, 491, 0, 483, 484, 485, 486,
	487, 488, 0, 0, 0, 502, 503, 0, 0, 0,
	0, 0, 504, 0, 0, 0, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 508, 0, 499, 497, 0,
	0, 489, 490, 491, 0, 483, 484, 485, 486, 487,
	488, 0, 0, 0, 0, 0, 388, 0, 0, 480,
	0, 504, 0, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 508, 388, 0, 497, 480, 0,
	496, 0, 492, 493, 494, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 505, 388, 0, 0, 480, 496,
	0, 0, 492, 493, 494, 0, 0, 482, 0, 0,
	0, 0, 0, 505, 0, 0, 501, 0, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 505, 0, 0, 0, 481, 0, 0,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 0, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	0, 0, 0, 489, 490, 491, 0, 483, 484, 485,
	486, 487, 488, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 499, 502,
	503, 0, 489, 490, 491, 0, 483, 484, 485, 486,
	487, 488, 500, 0, 498, 0, 0, 0, 502, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 502, 503,
	0, 0, 0, 0, 0, 504, 0, 0, 0, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 508, 0,
	0, 497, 0, 0, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 0, 0,
	0, 0, 0, 0, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 499, 0, 0, 0, 489, 490, 491, 0,
	483, 484, 485, 486, 487, 488, 0, 0, 0, 0,
	0, 499, 0, 0, 0, 489, 490, 491, 0, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 499, 0, 0, 0, 489, 490, 491, 0, 483,
	484, 485, 486, 487, 488,
}
var yyPact = []int{

	-237, -1000, -1000, -1000, -1000, -1000, 36, -237, 264, -366,
	9091, -320, -1000, 84, 260, 260, 260, 244, -342, -345,
	4293, 4293, -1000, -29, -320, -1000, -291, 8657, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3857,
	91, 118, 116, -14, -21, 100, -1000, 4737, 95, 6045,
	-16, -237, -1000, -1000, -237, -237, 6045, -1000, -1000, -1000,
	-367, -1000, 11371, -1000, -1000, 6045, 6045, 6045, 6045, 6045,
	-1000, -1000, 3421, -1000, -1000, -369, -310, -343, -1000, -319,
	-369, -1000, -1000, -1000, -1000, -1000, -1000, 6045, 123, -1000,
	-1000, -1000, -1000, -1000, -311, -312, -313, -314, -315, -317,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -367, -318, -1000, -1000, -1000,
	9522, -371, -1000, 11816, -1000, -1000, -1000, -1000, -1000, -1000,
	-18, -33, -1000, 38, -1000, -155, -1000, -1000, -1000, 11816,
	-1000, 96, -1000, -1000, -1000, -114, 11816, -1000, -60, 9522,
	57, -1000, -1000, -1000, 57, -368, -1000, 11259, 109, 4293,
	10384, 9522, -193, 6045, 6045, 6045, 6045, 6045, 6045, 6045,
	6045, 6045, 6045, 6045, 6045, 7789, 6045, 6045, 6045, 151,
	6045, -196, 49, -1000, -1000, 142, 2109, -1000, -319, 305,
	305, 344, 11855, 11855, 11222, -374, -320, -369, -1000, 1678,
	6045, -1000, -1000, -1000, 2985, 346, -369, -245, 11816, -51,
	-325, 2540, 6045, 6045, 6045, 6045, 6045, 109, 6045, -348,
	3857, -1000, -1000, -226, -1000, -114, -1000, 6045, -1000, -1000,
	-1000, -1000, -1000, -1000, 17, -377, -1000, 6045, 147, -281,
	-1000, -1000, -253, 6045, -1000, -1000, 271, 10803, -1000, -1000,
	-1000, -330, -1000, -1000, -1000, -1000, -1000, -327, -80, -330,
	-330, -330, -1000, -1000, -1000, -1000, -1000, 23, -238, -238,
	-1000, 230, -238, -1000, -362, -277, 79, 79, 134, 134,
	134, 269, 219, 219, 219, 219, 219, 219, 344, 11855,
	11835, 1216, 6045, 6045, -198, 141, 1137, 6045, -1000, 50,
	-1000, -1000, -1000, 108, -333, 6481, 6481, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 112, -378, -380, -1000,
	11816, -1000, -349, 33, -1000, 6045, -1000, 8223, -252, -1000,
	-213, 6045, 6045, -350, -1000, 11816, 309, -1000, 11582, -385,
	-388, -389, -392, -253, -393, -1000, -1000, -1000, -36, 1180,
	-1000, 9522, -1000, -281, -1000, -334, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 106, 94, 6045, -53, -1000, 11332, -302, -299, 263,
	-1000, 6045, -1000, 315, -1000, -1000, -1000, -1000, 315, -1000,
	-143, -1000, -1000, -1000, -238, -238, -1000, -364, 2109, 6045,
	6045, 1067, 728, 6045, 6481, 6481, 6045, 60, -1000, -1000,
	-1000, -1000, 105, -335, 6045, 10384, 1198, -1000, 6481, 6481,
	6481, 838, -369, -1000, 6045, 6045, -1000, -1000, -301, -1000,
	143, -1000, 6045, 11543, -1000, -1000, 9953, 6045, -351, 6045,
	-1000, -213, -213, -1000, 6045, 6045, 10384, -1000, -1000, -1000,
	-1000, 94, -1000, -1000, -1000, -1000, -1000, 316, -1000, -1000,
	86, 243, 11816, 6045, 46, 45, 6045, 341, -1000, 113,
	315, -302, -303, -396, -353, -354, 9522, -1000, -1000, 2109,
	-1000, 273, 715, 6045, 6045, 42, 262, 204, 715, 6045,
	6045, 10384, 194, -397, -1000, 6045, 10384, 6481, 6481, 6481,
	6481, 6481, 6481, 6481, 6481, 6481, 6481, 6481, 6481, 6917,
	110, 300, 300, 247, 6045, -1000, 11241, 11816, -1000, -1000,
	11816, 6045, -59, -1000, 236, -1000, -1000, -355, -356, 11816,
	11816, -357, 86, -358, -257, 6045, 6045, -1000, 6045, 6045,
	-89, -1000, -1000, -307, -308, 315, -1000, -1000, 212, -1000,
	-1000, 715, 715, 6045, 6045, 6045, 715, 194, -407, -1000,
	10384, 715, -1000, 124, 124, 172, 172, 172, 300, 319,
	319, 319, 319, 319, 319, 247, 104, 125, -336, 715,
	-1000, 11816, -42, 233, -1000, -1000, -1000, -1000, -257, -1000,
	-1000, 9522, 11816, -381, -1000, 11816, -1000, -1000, -337, 6045,
	-1000, -1000, -341, -1000, 715, 715, 715, -1000, -1000, 6481,
	99, -338, 10384, -96, 6045, -1000, -402, -1000, 253, 6045,
	329, 11816, -1000, 1047, 6481, 10384, -411, -359, 5609, 5609,
	-410, 9522, -340, -1000, -412, -1000, 1047, -415, -1000, -1000,
	-1000, -1000, 7353, 56, -121, 11292, -1000, -1000, -1000, 328,
	-1000, -1000, 278, -1000, -1000, -1000, -1000, -1000, -1000, 5173,
	-1000,
}
var yyPgo = []int{

	0, 438, 436, 351, 450, 335, 263, 435, 434, 321,
	433, 4, 430, 11, 40, 637, 336, 362, 36, 429,
	428, 25, 32, 16, 337, 427, 425, 22, 5, 187,
	34, 424, 424, 31, 33, 423, 422, 194, 421, 191,
	181, 420, 419, 418, 417, 415, 215, 414, 202, 411,
	410, 408, 406, 406, 24, 175, 405, 15, 23, 2,
	405, 404, 402, 0, 401, 400, 17, 399, 7, 8,
	331, 29, 398, 397, 395, 56, 394, 393, 392, 391,
	390, 28, 35, 389, 314, 388, 26, 20, 385, 384,
	380, 9, 6, 3, 379, 376, 375, 372, 10, 1,
	21, 370, 368, 367, 365, 37, 192, 14, 50, 12,
	364, 363, 360, 359, 18, 48, 358, 355, 354, 353,
	19, 27, 353,
}
var yyR1 = []int{

	0, 1, 26, 26, 26, 27, 27, 27, 61, 13,
	13, 13, 103, 103, 104, 104, 114, 114, 114, 114,
	114, 114, 121, 121, 121, 115, 115, 115, 112, 34,
	34, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 76, 76, 116, 116, 117, 118, 119, 119,
	119, 119, 119, 119, 71, 71, 28, 28, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 85, 85, 85, 85,
	85, 88, 88, 89, 89, 89, 89, 89, 19, 19,
	20, 20, 20, 20, 20, 18, 18, 18, 50, 50,
	50, 11, 11, 86, 86, 87, 87, 87, 120, 120,
	100, 100, 100, 101, 101, 2, 2, 4, 4, 3,
	3, 3, 3, 5, 5, 6, 6, 6, 6, 6,
	6, 6, 29, 70, 70, 70, 10, 10, 12, 12,
	23, 23, 24, 25, 25, 22, 22, 66, 66, 67,
	67, 68, 69, 69, 46, 46, 45, 45, 47, 47,
	48, 49, 49, 49, 49, 51, 51, 91, 91, 90,
	90, 92, 94, 94, 94, 93, 95, 95, 96, 96,
	97, 97, 97, 98, 98, 99, 99, 99, 99, 99,
	36, 36, 36, 36, 37, 37, 37, 37, 38, 38,
	39, 39, 40, 40, 41, 41, 42, 43, 43, 43,
	44, 30, 30, 31, 31, 7, 7, 21, 21, 32,
	32, 35, 35, 65, 65, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 63, 63, 64,
	64, 77, 80, 80, 81, 79, 79, 78, 78, 102,
	102, 54, 54, 54, 54, 55, 55, 56, 56, 33,
	33, 82, 82, 83, 83, 84, 8, 8, 9, 9,
	14, 14, 14, 14, 52, 52, 58, 53, 53, 60,
	57, 111, 111, 74, 74, 74, 74, 74, 74, 75,
	73, 72, 59, 59, 59, 108, 108, 108, 122, 122,
	122, 122, 105, 105, 105, 105, 105, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110,
}
var yyR2 = []int{

	0, 1, 1, 1, 0, 2, 2, 0, 1, 1,
	3, 2, 1, 2, 2, 3, 2, 3, 5, 6,
	2, 3, 3, 4, 0, 1, 1, 1, 2, 3,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 1, 1, 5, 2, 2, 2,
	1, 3, 3, 2, 1, 0, 3, 0, 1, 3,
	3, 5, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 2, 4, 2, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 1, 3, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 5, 6, 6, 7, 1, 1, 4, 1,
	1, 1, 2, 2, 2, 2, 3, 5, 6, 6,
	4, 3, 1, 6, 4, 4, 4, 4, 1, 3,
	3, 4, 4, 7, 5, 2, 2, 0, 1, 2,
	0, 1, 3, 1, 3, 1, 3, 3, 1, 3,
	3, 3, 2, 1, 3, 1, 1, 3, 3, 1,
	2, 4, 4, 1, 1, 9, 9, 1, 2, 4,
	4, 4, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 3, 1, 3, 4, 3, 3, 0, 1,
	3, 1, 2, 0, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 2, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	2, 2, 0, 1, 4, 2, 2, 2, 2, 2,
	1, 2, 2, 4, 2, 2, 1, 1, 1, 0,
	2, 5, 2, 3, 1, 1, 1, 1, 3, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 0, 5,
	0, 5, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 1,
	4, 5, 1, 2, 4, 2, 0, 1, 0, 1,
	2, 2, 2, 3, 5, 1, 2, 0, 2, 1,
	0, 1, 1, 1, 3, 3, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}
var yyChk = []int{

	-1000, -1, -2, -3, -4, -6, -5, 453, 331, -7,
	364, 404, -24, -23, 390, 199, 138, 266, -3, -4,
	-12, -10, 28, 123, 456, -36, -58, 261, -59, 5,
	-106, -107, 20, 21, 22, 23, 24, 25, 26, 27,
	29, 30, 31, 39, 40, 42, 43, 45, 46, 47,
	54, 55, 56, 57, 58, 61, 62, 65, 67, 68,
	69, 70, 75, 76, 77, 78, 80, 81, 82, 84,
	85, 86, 87, 88, 89, 92, 93, 94, 102, 103,
	104, 105, 106, 107, 110, 112, 114, 115, 116, 117,
	118, 120, 121, 122, 125, 126, 127, 128, 129, 131,
	132, 133, 135, 136, 137, 139, 140, 141, 142, 144,
	145, 146, 149, 151, 152, 154, 156, 158, 162, 163,
	164, 166, 170, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 183, 184, 185, 186, 187, 188, 190, 193,
	194, 195, 196, 202, 205, 207, 208, 209, 210, 211,
	214, 217, 220, 221, 222, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	243, 244, 247, 248, 250, 253, 255, 256, 257, 259,
	262, 263, 264, 267, 270, 273, 274, 275, 276, 277,
	278, 279, 281, 282, 284, 287, 288, 286, 290, 291,
	292, 293, 294, 295, 296, 297, 299, 300, 301, 302,
	304, 305, 306, 307, 308, 309, 310, 311, 312, 313,
	314, 316, 317, 319, 320, 321, 323, 324, 325, 326,
	327, 328, 329, 330, 332, 333, 334, 335, 336, 338,
	339, 341, 342, 344, 345, 347, 349, 350, 351, 352,
	353, 354, 355, 356, 357, 358, 359, 362, 363, 365,
	367, 368, 369, 370, 371, 377, 378, 380, 383, 384,
	385, 386, 387, 388, 389, 392, 393, 394, 395, 396,
	399, 400, 401, 402, 403, 407, 409, 410, 411, 412,
	415, 418, 419, 420, 421, 422, 423, 433, 434, 435,
	48, 49, 51, 52, 63, 64, 71, 108, 109, 143,
	147, 153, 167, 169, 192, 197, 198, 200, 215, 240,
	242, 245, 252, 254, 268, 272, 283, 285, 298, 322,
	340, 346, 360, 373, 374, 379, 381, 404, 405, 424,
	425, 426, 427, 428, 429, 430, 431, 432, -84, 453,
	-46, -37, -47, 155, -39, -40, -48, 219, 150, 258,
	-49, -70, 28, 123, -70, -70, 54, 454, 454, -8,
	-9, -14, -15, 446, -17, 444, 445, -63, 246, 436,
	-102, -74, 453, -77, -88, -4, 143, 36, 10, 262,
	-59, -75, 6, -73, 382, 148, 251, 59, -85, -89,
	5, -106, 11, 7, -111, 60, 71, 167, 215, 425,
	-108, -109, 44, 50, 73, 79, 91, 98, 159, 161,
	177, 191, 203, 204, 206, 216, 218, 241, 249, 269,
	271, 318, 343, 366, 408, -9, 260, -84, 446, -58,
	453, -83, -82, -15, 111, -38, -37, -45, -46, -48,
	155, 297, 396, 244, 341, 207, -40, -39, -41, -15,
	28, -31, 152, 243, -42, -44, -15, -17, -51, 256,
	-5, -6, -4, -5, -5, -25, -22, -15, -29, 456,
	13, 72, 42, 444, 445, 446, 447, 448, 449, 440,
	441, 442, 17, 18, 19, -63, 34, 265, 218, 436,
	177, 343, 203, 204, 249, 48, 37, 5, 262, -15,
	-15, -15, -15, -15, -15, -4, 404, -55, -54, 455,
	451, -4, -4, -100, 451, 453, -55, -78, -15, -35,
	151, 453, 453, 453, 453, 453, 453, -29, 453, -58,
	456, 454, 261, 207, 341, -43, -72, 453, -75, -30,
	322, 323, -50, 250, 345, -52, -58, 456, 398, -26,
	38, 119, -18, 160, -14, -114, -115, 340, -112, -113,
	-116, -108, 197, 198, 346, 49, 298, 153, 127, 109,
	108, 254, 52, -117, -118, 5, -106, -119, 64, 63,
	405, 240, 242, -103, -59, 373, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, 218, 177, 343, 48, -15, 375, 251, 246,
	382, 148, 392, 123, 256, -33, 361, 41, -105, 5,
	-106, -107, -109, -110, 28, 32, 33, 34, 35, 36,
	37, 38, 41, 53, 59, 60, 66, 72, 74, 83,
	90, 95, 96, 97, 99, 100, 101, 111, 113, 119,
	123, 124, 130, 134, 138, 148, 150, 155, 157, 160,
	165, 168, 171, 182, 189, 199, 201, 212, 213, 219,
	223, 224, 246, 251, 258, 260, 261, 265, 266, 280,
	289, 303, 315, 331, 337, 348, 361, 364, 372, 375,
	376, 382, 390, 391, 397, 398, 406, 413, 414, 416,
	417, 454, -54, -57, 446, -105, -15, -11, -101, 452,
	-15, -100, 4, -80, -81, 413, -94, 270, 453, 454,
	-86, 28, 123, 446, -87, -15, -61, -108, -15, -11,
	-11, -11, -11, -18, -11, 454, -82, 396, -30, -15,
	227, 456, -22, -64, -65, 262, 10, -62, 444, 445,
	446, 447, 448, 449, 440, 441, 442, 17, 18, 19,
	-27, 437, -21, 414, -13, -20, -15, -121, 36, -115,
	-34, 453, -76, 453, 285, -34, -34, -34, 453, -28,
	64, -71, 407, -71, 64, 63, -71, -104, 455, 435,
	136, -15, -15, 375, -33, 361, 136, -15, 251, 382,
	148, 392, 123, 256, 160, 453, -16, -17, 444, 445,
	-63, -16, -56, 452, 457, 456, 452, 452, 456, 454,
	-79, -81, 130, -15, -93, -59, 453, 414, -23, 456,
	-24, -86, -86, 454, 15, 16, 37, 454, 454, 454,
	454, -21, 454, 261, 454, -58, -27, 453, 152, 211,
	-66, 168, -15, 456, 91, 241, 206, 37, 5, 451,
	451, -121, 36, -11, -75, -75, 338, -71, -71, 455,
	-57, -15, -15, 136, 136, -15, -16, -16, -15, 136,
	160, 453, -15, -120, -114, 34, 13, 444, 445, 446,
	447, 448, 449, 440, 441, 442, 17, 18, 19, -63,
	203, -16, -16, -16, 34, -54, -15, -15, -100, 134,
	-15, 372, -95, -59, -15, 454, -87, -23, -23, -15,
	-15, -114, -66, 4, -69, 171, 54, -13, 206, 206,
	-13, 5, 452, -75, -75, 451, 454, 454, 454, -59,
	-57, -15, -15, 136, 34, 34, -15, -15, -120, 454,
	456, -15, -114, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, 123, 246, 256, -15,
	452, -15, -96, 277, 454, 454, 454, 454, -69, 454,
	-91, 416, -15, -67, -68, -15, -13, -13, 398, 260,
	452, 452, -75, -28, -15, -15, -15, 454, -114, 160,
	123, 256, 453, -23, 54, -91, -90, -92, -59, 456,
	453, -15, 452, -16, 160, 453, -120, -97, 296, 323,
	-11, 456, 37, -68, -19, 5, -16, -120, 454, 454,
	-98, -99, 48, 387, 94, -15, -98, -92, -93, 456,
	454, 454, -99, 284, 154, 322, 284, 154, 5, 34,
	-99,
}
var yyDef = []int{

	0, -2, 1, 185, -2, -2, 211, 0, 209, 197,
	0, 0, -2, 0, 205, 205, 205, 0, 0, 194,
	337, 0, 208, 206, 0, 198, 260, 0, 346, 362,
	363, 364, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 393, 394,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 285, 0,
	269, 227, 224, 0, 266, 267, 228, 0, 0, 0,
	236, 0, 203, 204, 0, 0, 0, 187, 188, 202,
	336, 338, 342, 343, 58, 0, 0, 0, 0, 0,
	136, 137, 0, 139, 140, 141, 654, 0, 307, 525,
	319, 353, 354, 355, 356, 357, 358, 318, 292, 152,
	-2, -2, 359, 360, 0, 0, 651, 657, 663, 685,
	351, 367, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 202, 0, 286, 261, 262,
	0, 0, 333, 331, 332, 191, 268, 192, 226, 229,
	0, 0, 231, 0, 233, 0, 264, 265, 270, 274,
	275, 279, 283, 284, 272, 0, 276, -2, 170, 0,
	199, 193, 194, 200, 201, 212, 213, 4, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 0, 96, 98, 330, 0, 341, 0, 62,
	63, 77, 81, 82, 0, -2, 682, 142, 325, 0,
	0, 143, 144, 145, 0, 0, -2, 0, 317, 244,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 335, 225, 0, 234, 0, 277, 0, 361, 273,
	281, 282, 230, 168, 0, 235, 344, 0, 0, 7,
	2, 3, 288, 0, 339, 59, 24, 0, 25, 26,
	27, 30, 31, 32, 33, 34, 35, 43, 441, 30,
	30, 30, 41, 44, 45, 365, 366, 57, 55, 55,
	50, 0, 55, 60, 12, 0, 64, 65, 66, 67,
	68, 69, -2, -2, -2, -2, -2, -2, 76, 79,
	80, -2, 0, 0, 0, 330, -2, 0, 95, 0,
	99, 101, 103, 0, 0, 0, 0, 329, 340, 372,
	373, 374, 375, 376, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 327, 326, 321, 322, 350, 0, 0, 0, 182,
	171, 183, 0, 316, 312, 0, 151, 0, 0, 146,
	211, 0, 0, 0, 173, 175, 0, -2, 0, 0,
	0, 0, 0, 288, 0, 263, 334, 232, 0, 0,
	169, 0, 214, 7, 309, 0, 293, 294, 295, 296,
	297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
	216, 0, 218, 0, 165, 166, 9, 16, 20, 24,
	28, 0, 36, 0, 37, 38, 39, 40, 0, 47,
	0, 48, 54, 49, 55, 55, 53, 13, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 97, 100,
	102, 104, 0, 0, 0, 0, 0, 113, 0, 0,
	0, 0, 138, 323, 0, 0, 180, 181, 0, 308,
	0, 313, 0, 0, 242, 243, 247, 0, 0, 0,
	210, 211, 211, 150, 0, 0, 0, 154, 155, 156,
	157, 218, 207, 271, 278, 345, 215, 0, 5, 6,
	223, 0, 287, 0, 0, 0, 0, 0, 11, 0,
	0, 17, 21, 0, 0, 0, 0, 51, 52, 0,
	14, 61, -2, 0, 0, -2, 0, 0, -2, 0,
	0, 0, -2, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 115, 116, 130, 0, 328, 0, 172, 184, 311,
	315, 0, 249, 246, 0, 147, 174, 0, 0, 176,
	177, 0, 223, 0, 238, 0, 0, 160, 0, 0,
	0, 10, 22, 0, 0, 0, 29, 42, 57, 56,
	15, -2, -2, 0, 0, 0, -2, -2, 0, 107,
	0, -2, 114, 117, 118, 119, 120, 121, 122, -2,
	-2, -2, -2, -2, -2, 129, 0, 0, 0, -2,
	324, 314, 211, 0, 291, 148, 149, 153, 238, 310,
	195, 0, 222, 217, 219, 221, 161, 162, 0, 0,
	23, 18, 0, 46, -2, -2, -2, 108, 179, 0,
	0, 0, 0, 252, 0, 196, 237, 239, 0, 0,
	0, 164, 19, -2, 0, 0, 0, 0, 0, 0,
	248, 0, 0, 220, 0, 158, -2, 0, 134, 245,
	250, 253, -2, 617, 422, 0, 251, 240, 241, 0,
	163, 135, 0, 255, 256, 257, 258, 259, 159, 0,
	254,
}
var yyTok1 = []int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 448, 3, 3,
	453, 454, 446, 444, 456, 445, 455, 447, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 457, 3,
	440, 442, 441, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 451, 3, 452, 449,
}
var yyTok2 = []int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = []int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 443, 57783, 450, 0,
}

//line yaccpar:1

/*	parser for yacc output	*/

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

const yyFlag = -1000

func yyTokname(c int) string {
	// 4 is TOKSTART above
	if c >= 4 && c-4 < len(yyToknames) {
		if yyToknames[c-4] != "" {
			return yyToknames[c-4]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yylex1(lex yyLexer, lval *yySymType) int {
	c := 0
	char := lex.Lex(lval)
	if char <= 0 {
		c = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		c = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			c = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		c = yyTok3[i+0]
		if c == char {
			c = yyTok3[i+1]
			goto out
		}
	}

out:
	if c == 0 {
		c = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(c), uint(char))
	}
	return c
}

func yyParse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yychar), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar = yylex1(yylex, &yylval)
	}
	yyn += yychar
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yychar { /* valid shift */
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yychar {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error("syntax error")
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yychar))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}
			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		//line sql.y:356
		{
			yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
			yylex.(*sqlLex).stmt = yyS[yypt-0].sqlSelect
		}
	case 2:
		//line sql.y:362
		{
			yyVAL.str = "asc"
		}
	case 3:
		//line sql.y:363
		{
			yyVAL.str = "desc"
		}
	case 4:
		//line sql.y:364
		{
			yyVAL.str = ""
		}
	case 5:
		//line sql.y:367
		{
			yyVAL.str = "first"
		}
	case 6:
		//line sql.y:368
		{
			yyVAL.str = "last"
		}
	case 7:
		//line sql.y:369
		{
			yyVAL.str = ""
		}
	case 8:
		yyVAL.str = yyS[yypt-0].str
	case 9:
		//line sql.y:378
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 10:
		//line sql.y:382
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 11:
		//line sql.y:386
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 12:
		//line sql.y:393
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 13:
		//line sql.y:397
		{
			yyVAL.anyName = AnyName{yyS[yypt-1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyS[yypt-0].anyName...)
		}
	case 14:
		//line sql.y:404
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 15:
		//line sql.y:408
		{
			yyVAL.anyName = append(yyS[yypt-2].anyName, yyS[yypt-0].str)
		}
	case 16:
		//line sql.y:425
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 17:
		//line sql.y:430
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 18:
		//line sql.y:437
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerLiteral{yyS[yypt-1].iconst}
		}
	case 19:
		//line sql.y:443
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerLiteral{yyS[yypt-1].iconst}
		}
	case 20:
		//line sql.y:450
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 21:
		//line sql.y:455
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 22:
		//line sql.y:463
		{
			yyVAL.optArrayBounds = append(yyS[yypt-2].optArrayBounds, "")
		}
	case 23:
		//line sql.y:467
		{
			yyVAL.optArrayBounds = append(yyS[yypt-3].optArrayBounds, yyS[yypt-1].iconst)
		}
	case 24:
		//line sql.y:471
		{
			yyVAL.optArrayBounds = nil
		}
	case 25:
		//line sql.y:474
		{
			yyVAL.pgType = yyS[yypt-0].pgType
		}
	case 26:
		//line sql.y:475
		{
			yyVAL.pgType = yyS[yypt-0].pgType
		}
	case 27:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 28:
		//line sql.y:523
		{
			yyVAL.pgType = PgType{Name: yyS[yypt-1].str, TypeMods: yyS[yypt-0].fields}
		}
	case 29:
		//line sql.y:534
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 30:
		//line sql.y:535
		{
			yyVAL.fields = nil
		}
	case 31:
		//line sql.y:542
		{
			yyVAL.pgType = PgType{Name: "int"}
		}
	case 32:
		//line sql.y:546
		{
			yyVAL.pgType = PgType{Name: "integer"}
		}
	case 33:
		//line sql.y:550
		{
			yyVAL.pgType = PgType{Name: "smallint"}
		}
	case 34:
		//line sql.y:554
		{
			yyVAL.pgType = PgType{Name: "bigint"}
		}
	case 35:
		//line sql.y:558
		{
			yyVAL.pgType = PgType{Name: "real"}
		}
	case 36:
		//line sql.y:562
		{
			yyVAL.pgType = PgType{Name: "float"}
			if yyS[yypt-0].iconst != IntegerLiteral("") {
				yyVAL.pgType.TypeMods = []Expr{yyS[yypt-0].iconst}
			}
		}
	case 37:
		//line sql.y:569
		{
			yyVAL.pgType = PgType{Name: "double precision"}
		}
	case 38:
		//line sql.y:573
		{
			yyVAL.pgType = PgType{Name: "decimal", TypeMods: yyS[yypt-0].fields}
		}
	case 39:
		//line sql.y:577
		{
			yyVAL.pgType = PgType{Name: "dec", TypeMods: yyS[yypt-0].fields}
		}
	case 40:
		//line sql.y:581
		{
			yyVAL.pgType = PgType{Name: "numeric", TypeMods: yyS[yypt-0].fields}
		}
	case 41:
		//line sql.y:585
		{
			yyVAL.pgType = PgType{Name: "bool"}
		}
	case 42:
		//line sql.y:591
		{
			yyVAL.iconst = yyS[yypt-1].iconst
		}
	case 43:
		//line sql.y:595
		{
			yyVAL.iconst = IntegerLiteral("")
		}
	case 44:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 45:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 46:
		//line sql.y:620
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.TypeMods = []Expr{yyS[yypt-2].iconst}
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 47:
		//line sql.y:628
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 48:
		//line sql.y:635
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 49:
		//line sql.y:643
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 50:
		//line sql.y:651
		{
			yyVAL.pgType = PgType{Name: "varchar"}
		}
	case 51:
		//line sql.y:655
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 52:
		//line sql.y:663
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 53:
		//line sql.y:671
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 54:
		//line sql.y:681
		{
			yyVAL.boolean = true
		}
	case 55:
		//line sql.y:685
		{
			yyVAL.boolean = false
		}
	case 56:
		//line sql.y:691
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 57:
		//line sql.y:695
		{
			yyVAL.str = ""
		}
	case 58:
		yyVAL.expr = yyS[yypt-0].expr
	case 59:
		//line sql.y:739
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 60:
		//line sql.y:743
		{
			yyVAL.expr = CollateExpr{Expr: yyS[yypt-2].expr, Collation: yyS[yypt-0].anyName}
		}
	case 61:
		//line sql.y:747
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyS[yypt-4].expr, TimeZone: yyS[yypt-0].expr}
		}
	case 62:
		//line sql.y:760
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyS[yypt-0].expr}
		}
	case 63:
		//line sql.y:764
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyS[yypt-0].expr}
		}
	case 64:
		//line sql.y:768
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "+", Right: yyS[yypt-0].expr}
		}
	case 65:
		//line sql.y:772
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "-", Right: yyS[yypt-0].expr}
		}
	case 66:
		//line sql.y:776
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "*", Right: yyS[yypt-0].expr}
		}
	case 67:
		//line sql.y:780
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "/", Right: yyS[yypt-0].expr}
		}
	case 68:
		//line sql.y:784
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "%", Right: yyS[yypt-0].expr}
		}
	case 69:
		//line sql.y:788
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "^", Right: yyS[yypt-0].expr}
		}
	case 70:
		//line sql.y:792
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<", Right: yyS[yypt-0].expr}
		}
	case 71:
		//line sql.y:796
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">", Right: yyS[yypt-0].expr}
		}
	case 72:
		//line sql.y:800
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "=", Right: yyS[yypt-0].expr}
		}
	case 73:
		//line sql.y:804
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<=", Right: yyS[yypt-0].expr}
		}
	case 74:
		//line sql.y:808
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">=", Right: yyS[yypt-0].expr}
		}
	case 75:
		//line sql.y:812
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "!=", Right: yyS[yypt-0].expr}
		}
	case 76:
		//line sql.y:816
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].str, Right: yyS[yypt-0].expr}
		}
	case 77:
		//line sql.y:820
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].str, Expr: yyS[yypt-0].expr}
		}
	case 78:
		//line sql.y:824
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].str}
		}
	case 79:
		//line sql.y:828
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "and", Right: yyS[yypt-0].expr}
		}
	case 80:
		//line sql.y:832
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "or", Right: yyS[yypt-0].expr}
		}
	case 81:
		//line sql.y:836
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 82:
		//line sql.y:840
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 83:
		//line sql.y:844
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "like", Right: yyS[yypt-0].expr}
		}
	case 84:
		//line sql.y:848
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 85:
		//line sql.y:852
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not like", Right: yyS[yypt-0].expr}
		}
	case 86:
		//line sql.y:856
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 87:
		//line sql.y:860
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "ilike", Right: yyS[yypt-0].expr}
		}
	case 88:
		//line sql.y:864
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 89:
		//line sql.y:868
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not ilike", Right: yyS[yypt-0].expr}
		}
	case 90:
		//line sql.y:872
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 91:
		//line sql.y:877
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "similar to", Right: yyS[yypt-0].expr}
		}
	case 92:
		//line sql.y:881
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 93:
		//line sql.y:885
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "not similar to", Right: yyS[yypt-0].expr}
		}
	case 94:
		//line sql.y:889
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-6].expr, Operator: "not similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 95:
		//line sql.y:902
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-2].expr}
		}
	case 96:
		//line sql.y:906
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr}
		}
	case 97:
		//line sql.y:910
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-3].expr, Not: true}
		}
	case 98:
		//line sql.y:914
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr, Not: true}
		}
	case 99:
		//line sql.y:921
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "true"}
		}
	case 100:
		//line sql.y:925
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "true"}
		}
	case 101:
		//line sql.y:929
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "false"}
		}
	case 102:
		//line sql.y:933
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "false"}
		}
	case 103:
		//line sql.y:937
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "unknown"}
		}
	case 104:
		//line sql.y:941
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "unknown"}
		}
	case 105:
		//line sql.y:945
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: "is distinct from", Right: yyS[yypt-0].expr}
		}
	case 106:
		//line sql.y:949
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: "is not distinct from", Right: yyS[yypt-0].expr}
		}
	case 107:
		//line sql.y:953
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 108:
		//line sql.y:957
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 109:
		//line sql.y:961
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 110:
		//line sql.y:965
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 111:
		//line sql.y:969
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 112:
		//line sql.y:973
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 113:
		//line sql.y:996
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 114:
		//line sql.y:1000
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 115:
		//line sql.y:1004
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyS[yypt-0].expr}
		}
	case 116:
		//line sql.y:1008
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyS[yypt-0].expr}
		}
	case 117:
		//line sql.y:1012
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "+", Right: yyS[yypt-0].expr}
		}
	case 118:
		//line sql.y:1016
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "-", Right: yyS[yypt-0].expr}
		}
	case 119:
		//line sql.y:1020
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "*", Right: yyS[yypt-0].expr}
		}
	case 120:
		//line sql.y:1024
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "/", Right: yyS[yypt-0].expr}
		}
	case 121:
		//line sql.y:1028
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "%", Right: yyS[yypt-0].expr}
		}
	case 122:
		//line sql.y:1032
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "^", Right: yyS[yypt-0].expr}
		}
	case 123:
		//line sql.y:1036
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<", Right: yyS[yypt-0].expr}
		}
	case 124:
		//line sql.y:1040
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">", Right: yyS[yypt-0].expr}
		}
	case 125:
		//line sql.y:1044
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "=", Right: yyS[yypt-0].expr}
		}
	case 126:
		//line sql.y:1048
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<=", Right: yyS[yypt-0].expr}
		}
	case 127:
		//line sql.y:1052
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">=", Right: yyS[yypt-0].expr}
		}
	case 128:
		//line sql.y:1056
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "!=", Right: yyS[yypt-0].expr}
		}
	case 129:
		//line sql.y:1060
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].str, Right: yyS[yypt-0].expr}
		}
	case 130:
		//line sql.y:1064
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].str, Expr: yyS[yypt-0].expr}
		}
	case 131:
		//line sql.y:1068
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].str}
		}
	case 132:
		//line sql.y:1072
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: "is distinct from", Right: yyS[yypt-0].expr}
		}
	case 133:
		//line sql.y:1076
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: "is not distinct from", Right: yyS[yypt-0].expr}
		}
	case 134:
		//line sql.y:1080
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 135:
		//line sql.y:1084
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 136:
		//line sql.y:1110
		{
			yyVAL.expr = yyS[yypt-0].columnRef
		}
	case 137:
		//line sql.y:1111
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 138:
		//line sql.y:1117
		{
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-2].expr, Indirection: yyS[yypt-0].indirection}
		}
	case 139:
		//line sql.y:1120
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 140:
		//line sql.y:1121
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 141:
		//line sql.y:1123
		{
			yyVAL.expr = yyS[yypt-0].sqlSelect
		}
	case 142:
		//line sql.y:1127
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-1].sqlSelect, Indirection: yyS[yypt-0].indirection}
		}
	case 143:
		//line sql.y:1132
		{
			yyVAL.expr = ExistsExpr(*yyS[yypt-0].sqlSelect)
		}
	case 144:
		//line sql.y:1136
		{
			yyVAL.expr = ArraySubselect(*yyS[yypt-0].sqlSelect)
		}
	case 145:
		//line sql.y:1139
		{
			yyVAL.expr = ArrayConstructorExpr(yyS[yypt-0].arrayExpr)
		}
	case 146:
		//line sql.y:1152
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-2].str}
		}
	case 147:
		//line sql.y:1156
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-4].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 148:
		//line sql.y:1164
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 149:
		//line sql.y:1168
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Distinct: true, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 150:
		//line sql.y:1172
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-3].str, Star: true}
		}
	case 151:
		//line sql.y:1188
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyS[yypt-2].funcApplication, FilterClause: yyS[yypt-1].filterClause, OverClause: yyS[yypt-0].overClause}
		}
	case 152:
		//line sql.y:1192
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 153:
		//line sql.y:1222
		{
			yyVAL.expr = CastFunc{Expr: yyS[yypt-3].expr, Type: yyS[yypt-1].pgType}
		}
	case 154:
		//line sql.y:1238
		{
			fa := FuncApplication{Name: "coalesce"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 155:
		//line sql.y:1246
		{
			fa := FuncApplication{Name: "greatest"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 156:
		//line sql.y:1254
		{
			fa := FuncApplication{Name: "least"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 157:
		//line sql.y:1262
		{
			fa := FuncApplication{Name: "xmlconcat"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 158:
		//line sql.y:1288
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 159:
		//line sql.y:1292
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 160:
		//line sql.y:1298
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-2].expr, Join: ",", Right: yyS[yypt-0].expr}
		}
	case 161:
		//line sql.y:1302
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "cross join", Right: yyS[yypt-0].expr}
		}
	case 162:
		//line sql.y:1306
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "natural join", Right: yyS[yypt-0].expr}
		}
	case 163:
		//line sql.y:1310
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-6].expr, Join: "join", Right: yyS[yypt-4].expr, Using: yyS[yypt-1].identifiers}
		}
	case 164:
		//line sql.y:1314
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-4].expr, Join: "join", Right: yyS[yypt-2].expr, On: yyS[yypt-0].expr}
		}
	case 165:
		//line sql.y:1320
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 166:
		//line sql.y:1324
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 167:
		//line sql.y:1327
		{
			yyVAL.fromClause = nil
		}
	case 168:
		//line sql.y:1331
		{
			yyVAL.str = "nowait"
		}
	case 169:
		//line sql.y:1332
		{
			yyVAL.str = "skip locked"
		}
	case 170:
		//line sql.y:1333
		{
			yyVAL.str = ""
		}
	case 171:
		//line sql.y:1338
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 172:
		//line sql.y:1342
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 173:
		//line sql.y:1349
		{
			yyVAL.funcArgs = []FuncArg{yyS[yypt-0].funcArg}
		}
	case 174:
		//line sql.y:1353
		{
			yyVAL.funcArgs = append(yyS[yypt-2].funcArgs, yyS[yypt-0].funcArg)
		}
	case 175:
		//line sql.y:1359
		{
			yyVAL.funcArg = FuncArg{Expr: yyS[yypt-0].expr}
		}
	case 176:
		//line sql.y:1363
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: ":=", Expr: yyS[yypt-0].expr}
		}
	case 177:
		//line sql.y:1367
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: "=>", Expr: yyS[yypt-0].expr}
		}
	case 178:
		//line sql.y:1373
		{
			yyVAL.pgTypes = []PgType{yyS[yypt-0].pgType}
		}
	case 179:
		//line sql.y:1377
		{
			yyVAL.pgTypes = append(yyS[yypt-2].pgTypes, yyS[yypt-0].pgType)
		}
	case 180:
		//line sql.y:1383
		{
			yyVAL.arrayExpr = ArrayExpr(yyS[yypt-1].fields)
		}
	case 181:
		//line sql.y:1387
		{
			yyVAL.arrayExpr = yyS[yypt-1].arrayExpr
		}
	case 182:
		//line sql.y:1391
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 183:
		//line sql.y:1397
		{
			yyVAL.arrayExpr = ArrayExpr{yyS[yypt-0].arrayExpr}
		}
	case 184:
		//line sql.y:1401
		{
			yyVAL.arrayExpr = append(yyS[yypt-2].arrayExpr, yyS[yypt-0].arrayExpr)
		}
	case 185:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 186:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 187:
		//line sql.y:1457
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 188:
		//line sql.y:1461
		{
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 189:
		//line sql.y:1465
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 190:
		//line sql.y:1471
		{
			yyS[yypt-1].sqlSelect.OrderClause = yyS[yypt-0].orderClause
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 191:
		//line sql.y:1476
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-1].lockingClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-0].limitClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 192:
		//line sql.y:1483
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-1].limitClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-0].lockingClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 193:
		//line sql.y:1492
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 194:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 195:
		//line sql.y:1526
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 196:
		//line sql.y:1539
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyS[yypt-7].fields
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 197:
		//line sql.y:1551
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyS[yypt-0].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 198:
		//line sql.y:1557
		{
			ss := &SimpleSelect{}
			ss.Table = yyS[yypt-0].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 199:
		//line sql.y:1563
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 200:
		//line sql.y:1572
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 201:
		//line sql.y:1581
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 202:
		//line sql.y:1605
		{
			yyVAL.placeholder = nil
		}
	case 203:
		//line sql.y:1610
		{
			yyVAL.boolean = true
		}
	case 204:
		//line sql.y:1611
		{
			yyVAL.boolean = false
		}
	case 205:
		//line sql.y:1612
		{
			yyVAL.boolean = false
		}
	case 206:
		//line sql.y:1617
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 207:
		//line sql.y:1618
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 208:
		//line sql.y:1621
		{
			yyVAL.placeholder = nil
		}
	case 209:
		//line sql.y:1622
		{
			yyVAL.placeholder = nil
		}
	case 210:
		//line sql.y:1625
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 211:
		//line sql.y:1626
		{
			yyVAL.orderClause = nil
		}
	case 212:
		//line sql.y:1629
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 213:
		//line sql.y:1633
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyS[yypt-0].orderExpr}}
		}
	case 214:
		//line sql.y:1637
		{
			yyS[yypt-2].orderClause.Exprs = append(yyS[yypt-2].orderClause.Exprs, yyS[yypt-0].orderExpr)
			yyVAL.orderClause = yyS[yypt-2].orderClause
		}
	case 215:
		//line sql.y:1645
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-3].expr, Using: yyS[yypt-1].str, Nulls: yyS[yypt-0].str}
		}
	case 216:
		//line sql.y:1649
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-2].expr, Order: yyS[yypt-1].str, Nulls: yyS[yypt-0].str}
		}
	case 217:
		//line sql.y:1674
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyS[yypt-0].fields}
		}
	case 218:
		//line sql.y:1675
		{
			yyVAL.groupByClause = nil
		}
	case 219:
		//line sql.y:1679
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 220:
		//line sql.y:1683
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 221:
		yyVAL.expr = yyS[yypt-0].expr
	case 222:
		//line sql.y:1696
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 223:
		//line sql.y:1697
		{
			yyVAL.expr = nil
		}
	case 224:
		//line sql.y:1700
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 225:
		//line sql.y:1701
		{
			yyVAL.lockingClause = nil
		}
	case 226:
		//line sql.y:1704
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 227:
		//line sql.y:1705
		{
			yyVAL.lockingClause = nil
		}
	case 228:
		//line sql.y:1709
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyS[yypt-0].lockingItem}}
		}
	case 229:
		//line sql.y:1713
		{
			yyS[yypt-1].lockingClause.Locks = append(yyS[yypt-1].lockingClause.Locks, yyS[yypt-0].lockingItem)
			yyVAL.lockingClause = yyS[yypt-1].lockingClause
		}
	case 230:
		//line sql.y:1720
		{
			yyVAL.lockingItem = LockingItem{Strength: yyS[yypt-2].str, LockedRels: yyS[yypt-1].identifiers, WaitPolicy: yyS[yypt-0].str}
		}
	case 231:
		//line sql.y:1725
		{
			yyVAL.str = "update"
		}
	case 232:
		//line sql.y:1726
		{
			yyVAL.str = "no key update"
		}
	case 233:
		//line sql.y:1727
		{
			yyVAL.str = "share"
		}
	case 234:
		//line sql.y:1728
		{
			yyVAL.str = "key share"
		}
	case 235:
		//line sql.y:1731
		{
			yyVAL.identifiers = yyS[yypt-0].identifiers
		}
	case 236:
		//line sql.y:1732
		{
			yyVAL.identifiers = nil
		}
	case 237:
		//line sql.y:1740
		{
			yyVAL.windowDefinitions = yyS[yypt-0].windowDefinitions
		}
	case 238:
		//line sql.y:1743
		{
			yyVAL.windowDefinitions = nil
		}
	case 239:
		//line sql.y:1747
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyS[yypt-0].windowDefinition}
		}
	case 240:
		//line sql.y:1751
		{
			yyVAL.windowDefinitions = append(yyS[yypt-2].windowDefinitions, yyS[yypt-0].windowDefinition)
		}
	case 241:
		//line sql.y:1757
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyS[yypt-2].str, Specification: yyS[yypt-0].windowSpecification}
		}
	case 242:
		//line sql.y:1763
		{
			spec := yyS[yypt-0].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 243:
		//line sql.y:1768
		{
			yyVAL.overClause = &OverClause{Name: yyS[yypt-0].str}
		}
	case 244:
		//line sql.y:1771
		{
			yyVAL.overClause = nil
		}
	case 245:
		//line sql.y:1775
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyS[yypt-4].str, PartitionClause: yyS[yypt-3].partitionClause, OrderClause: yyS[yypt-2].orderClause, FrameClause: yyS[yypt-1].frameClause}
		}
	case 246:
		//line sql.y:1790
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 247:
		//line sql.y:1791
		{
			yyVAL.str = ""
		}
	case 248:
		//line sql.y:1794
		{
			yyVAL.partitionClause = PartitionClause(yyS[yypt-0].fields)
		}
	case 249:
		//line sql.y:1795
		{
			yyVAL.partitionClause = nil
		}
	case 250:
		//line sql.y:1806
		{
			yyS[yypt-0].frameClause.Mode = "range"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 251:
		//line sql.y:1811
		{
			yyS[yypt-0].frameClause.Mode = "rows"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 252:
		//line sql.y:1816
		{
			yyVAL.frameClause = nil
		}
	case 253:
		//line sql.y:1822
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-0].frameBound}
		}
	case 254:
		//line sql.y:1826
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-2].frameBound, End: yyS[yypt-0].frameBound}
		}
	case 255:
		//line sql.y:1837
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 256:
		//line sql.y:1841
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 257:
		//line sql.y:1845
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 258:
		//line sql.y:1849
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "preceding"}
		}
	case 259:
		//line sql.y:1853
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "following"}
		}
	case 260:
		//line sql.y:1861
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str}
		}
	case 261:
		//line sql.y:1865
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Star: true}
		}
	case 262:
		//line sql.y:1869
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str, Only: true}
		}
	case 263:
		//line sql.y:1873
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Only: true}
		}
	case 264:
		//line sql.y:1881
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-1].expr, Offset: yyS[yypt-0].expr}
		}
	case 265:
		//line sql.y:1885
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr, Offset: yyS[yypt-1].expr}
		}
	case 266:
		//line sql.y:1889
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr}
		}
	case 267:
		//line sql.y:1893
		{
			yyVAL.limitClause = &LimitClause{Offset: yyS[yypt-0].expr}
		}
	case 268:
		yyVAL.limitClause = yyS[yypt-0].limitClause
	case 269:
		//line sql.y:1900
		{
			yyVAL.limitClause = nil
		}
	case 270:
		//line sql.y:1904
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 271:
		//line sql.y:1909
		{
			yyVAL.expr = yyS[yypt-2].expr
		}
	case 272:
		//line sql.y:1915
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 273:
		//line sql.y:1920
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 274:
		//line sql.y:1925
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 275:
		//line sql.y:1927
		{
			yyVAL.expr = nil
		}
	case 276:
		//line sql.y:1932
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 277:
		//line sql.y:1941
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 278:
		//line sql.y:1942
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 279:
		//line sql.y:1943
		{
			yyVAL.expr = IntegerLiteral("1")
		}
	case 280:
		//line sql.y:1950
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 281:
		//line sql.y:1954
		{
			yyVAL.placeholder = 0
		}
	case 282:
		//line sql.y:1955
		{
			yyVAL.placeholder = 0
		}
	case 283:
		//line sql.y:1958
		{
			yyVAL.placeholder = 0
		}
	case 284:
		//line sql.y:1959
		{
			yyVAL.placeholder = 0
		}
	case 285:
		//line sql.y:1963
		{
			yyVAL.valuesClause = ValuesClause{yyS[yypt-0].valuesRow}
		}
	case 286:
		//line sql.y:1967
		{
			yyVAL.valuesClause = append(yyS[yypt-2].valuesClause, yyS[yypt-0].valuesRow)
		}
	case 287:
		//line sql.y:1984
		{
			yyVAL.whereClause = &WhereClause{Expr: yyS[yypt-0].expr}
		}
	case 288:
		//line sql.y:1985
		{
			yyVAL.whereClause = nil
		}
	case 289:
		//line sql.y:1994
		{
			panic("TODO")
		}
	case 290:
		//line sql.y:1995
		{
			yyVAL.placeholder = nil
		}
	case 291:
		//line sql.y:2000
		{
			yyVAL.filterClause = &FilterClause{Expr: yyS[yypt-1].expr}
		}
	case 292:
		//line sql.y:2003
		{
			yyVAL.filterClause = nil
		}
	case 293:
		//line sql.y:2007
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 294:
		//line sql.y:2008
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 295:
		//line sql.y:2011
		{
			yyVAL.str = "+"
		}
	case 296:
		//line sql.y:2012
		{
			yyVAL.str = "-"
		}
	case 297:
		//line sql.y:2013
		{
			yyVAL.str = "*"
		}
	case 298:
		//line sql.y:2014
		{
			yyVAL.str = "/"
		}
	case 299:
		//line sql.y:2015
		{
			yyVAL.str = "%"
		}
	case 300:
		//line sql.y:2016
		{
			yyVAL.str = "^"
		}
	case 301:
		//line sql.y:2017
		{
			yyVAL.str = "<"
		}
	case 302:
		//line sql.y:2018
		{
			yyVAL.str = ">"
		}
	case 303:
		//line sql.y:2019
		{
			yyVAL.str = "="
		}
	case 304:
		//line sql.y:2020
		{
			yyVAL.str = "<="
		}
	case 305:
		//line sql.y:2021
		{
			yyVAL.str = ">="
		}
	case 306:
		//line sql.y:2022
		{
			yyVAL.str = "<>"
		}
	case 307:
		//line sql.y:2025
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 308:
		//line sql.y:2026
		{
			yyVAL.str = yyS[yypt-1].str
		}
	case 309:
		//line sql.y:2029
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 310:
		//line sql.y:2030
		{
			yyVAL.str = yyS[yypt-1].str
		}
	case 311:
		//line sql.y:2042
		{
			yyVAL.expr = CaseExpr{CaseArg: yyS[yypt-3].expr, WhenClauses: yyS[yypt-2].whenClauses, Default: yyS[yypt-1].expr}
		}
	case 312:
		//line sql.y:2049
		{
			yyVAL.whenClauses = []WhenClause{yyS[yypt-0].whenClause}
		}
	case 313:
		//line sql.y:2053
		{
			yyVAL.whenClauses = append(yyS[yypt-1].whenClauses, yyS[yypt-0].whenClause)
		}
	case 314:
		//line sql.y:2059
		{
			yyVAL.whenClause = WhenClause{When: yyS[yypt-2].expr, Then: yyS[yypt-0].expr}
		}
	case 315:
		//line sql.y:2064
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 316:
		//line sql.y:2065
		{
			yyVAL.expr = nil
		}
	case 317:
		//line sql.y:2068
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 318:
		//line sql.y:2069
		{
			yyVAL.expr = nil
		}
	case 319:
		//line sql.y:2073
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-0].str}
		}
	case 320:
		//line sql.y:2077
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-1].str, Indirection: yyS[yypt-0].indirection}
		}
	case 321:
		//line sql.y:2085
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyS[yypt-0].str}
		}
	case 322:
		//line sql.y:2089
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 323:
		//line sql.y:2093
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-1].expr}
		}
	case 324:
		//line sql.y:2097
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-3].expr, UpperSubscript: yyS[yypt-1].expr}
		}
	case 325:
		//line sql.y:2102
		{
			yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
		}
	case 326:
		//line sql.y:2103
		{
			yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
		}
	case 327:
		//line sql.y:2106
		{
			yyVAL.indirection = nil
		}
	case 328:
		//line sql.y:2108
		{
			if yyS[yypt-1].indirection != nil {
				yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
			}
		}
	case 329:
		//line sql.y:2118
		{
			yyVAL.placeholder = nil
		}
	case 330:
		//line sql.y:2122
		{
			yyVAL.placeholder = nil
		}
	case 331:
		//line sql.y:2134
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 332:
		//line sql.y:2135
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 333:
		//line sql.y:2139
		{
			yyVAL.valuesRow = ValuesRow{yyS[yypt-0].expr}
		}
	case 334:
		//line sql.y:2143
		{
			yyVAL.valuesRow = append(yyS[yypt-2].valuesRow, yyS[yypt-0].expr)
		}
	case 335:
		//line sql.y:2154
		{
			yyVAL.valuesRow = yyS[yypt-1].valuesRow
		}
	case 336:
		//line sql.y:2165
		{
			yyVAL.fields = yyS[yypt-0].fields
		}
	case 337:
		//line sql.y:2166
		{
			yyVAL.fields = nil
		}
	case 338:
		//line sql.y:2169
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 339:
		//line sql.y:2171
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 340:
		//line sql.y:2177
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 341:
		//line sql.y:2181
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 342:
		yyVAL.expr = yyS[yypt-0].expr
	case 343:
		//line sql.y:2186
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 344:
		//line sql.y:2200
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 345:
		//line sql.y:2204
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 346:
		//line sql.y:2217
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 347:
		//line sql.y:2249
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 348:
		//line sql.y:2251
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 349:
		//line sql.y:2256
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 350:
		//line sql.y:2259
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 351:
		//line sql.y:2272
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 352:
		//line sql.y:2276
		{
			panic("TODO")
		}
	case 353:
		//line sql.y:2286
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 354:
		//line sql.y:2290
		{
			yyVAL.expr = FloatConst(yyS[yypt-0].str)
		}
	case 355:
		//line sql.y:2294
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 356:
		//line sql.y:2307
		{
			yyVAL.expr = BoolLiteral(true)
		}
	case 357:
		//line sql.y:2311
		{
			yyVAL.expr = BoolLiteral(false)
		}
	case 358:
		//line sql.y:2315
		{
			yyVAL.expr = NullLiteral{}
		}
	case 359:
		//line sql.y:2319
		{
			yyVAL.iconst = IntegerLiteral(yyS[yypt-0].str)
		}
	case 360:
		//line sql.y:2320
		{
			yyVAL.expr = StringLiteral(yyS[yypt-0].str)
		}
	case 361:
		//line sql.y:2323
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 362:
		yyVAL.str = yyS[yypt-0].str
	case 363:
		yyVAL.str = yyS[yypt-0].str
	case 364:
		yyVAL.str = yyS[yypt-0].str
	case 365:
		yyVAL.str = yyS[yypt-0].str
	case 366:
		yyVAL.str = yyS[yypt-0].str
	case 367:
		yyVAL.str = yyS[yypt-0].str
	case 372:
		//line sql.y:2366
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 373:
		//line sql.y:2367
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 374:
		//line sql.y:2368
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 375:
		//line sql.y:2369
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 376:
		//line sql.y:2370
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 377:
		yyVAL.str = yyS[yypt-0].str
	case 378:
		yyVAL.str = yyS[yypt-0].str
	case 379:
		yyVAL.str = yyS[yypt-0].str
	case 380:
		yyVAL.str = yyS[yypt-0].str
	case 381:
		yyVAL.str = yyS[yypt-0].str
	case 382:
		yyVAL.str = yyS[yypt-0].str
	case 383:
		yyVAL.str = yyS[yypt-0].str
	case 384:
		yyVAL.str = yyS[yypt-0].str
	case 385:
		yyVAL.str = yyS[yypt-0].str
	case 386:
		yyVAL.str = yyS[yypt-0].str
	case 387:
		yyVAL.str = yyS[yypt-0].str
	case 388:
		yyVAL.str = yyS[yypt-0].str
	case 389:
		yyVAL.str = yyS[yypt-0].str
	case 390:
		yyVAL.str = yyS[yypt-0].str
	case 391:
		yyVAL.str = yyS[yypt-0].str
	case 392:
		yyVAL.str = yyS[yypt-0].str
	case 393:
		yyVAL.str = yyS[yypt-0].str
	case 394:
		yyVAL.str = yyS[yypt-0].str
	case 395:
		yyVAL.str = yyS[yypt-0].str
	case 396:
		yyVAL.str = yyS[yypt-0].str
	case 397:
		yyVAL.str = yyS[yypt-0].str
	case 398:
		yyVAL.str = yyS[yypt-0].str
	case 399:
		yyVAL.str = yyS[yypt-0].str
	case 400:
		yyVAL.str = yyS[yypt-0].str
	case 401:
		yyVAL.str = yyS[yypt-0].str
	case 402:
		yyVAL.str = yyS[yypt-0].str
	case 403:
		yyVAL.str = yyS[yypt-0].str
	case 404:
		yyVAL.str = yyS[yypt-0].str
	case 405:
		yyVAL.str = yyS[yypt-0].str
	case 406:
		yyVAL.str = yyS[yypt-0].str
	case 407:
		yyVAL.str = yyS[yypt-0].str
	case 408:
		yyVAL.str = yyS[yypt-0].str
	case 409:
		yyVAL.str = yyS[yypt-0].str
	case 410:
		yyVAL.str = yyS[yypt-0].str
	case 411:
		yyVAL.str = yyS[yypt-0].str
	case 412:
		yyVAL.str = yyS[yypt-0].str
	case 413:
		yyVAL.str = yyS[yypt-0].str
	case 414:
		yyVAL.str = yyS[yypt-0].str
	case 415:
		yyVAL.str = yyS[yypt-0].str
	case 416:
		yyVAL.str = yyS[yypt-0].str
	case 417:
		yyVAL.str = yyS[yypt-0].str
	case 418:
		yyVAL.str = yyS[yypt-0].str
	case 419:
		yyVAL.str = yyS[yypt-0].str
	case 420:
		yyVAL.str = yyS[yypt-0].str
	case 421:
		yyVAL.str = yyS[yypt-0].str
	case 422:
		yyVAL.str = yyS[yypt-0].str
	case 423:
		yyVAL.str = yyS[yypt-0].str
	case 424:
		yyVAL.str = yyS[yypt-0].str
	case 425:
		yyVAL.str = yyS[yypt-0].str
	case 426:
		yyVAL.str = yyS[yypt-0].str
	case 427:
		yyVAL.str = yyS[yypt-0].str
	case 428:
		yyVAL.str = yyS[yypt-0].str
	case 429:
		yyVAL.str = yyS[yypt-0].str
	case 430:
		yyVAL.str = yyS[yypt-0].str
	case 431:
		yyVAL.str = yyS[yypt-0].str
	case 432:
		yyVAL.str = yyS[yypt-0].str
	case 433:
		yyVAL.str = yyS[yypt-0].str
	case 434:
		yyVAL.str = yyS[yypt-0].str
	case 435:
		yyVAL.str = yyS[yypt-0].str
	case 436:
		yyVAL.str = yyS[yypt-0].str
	case 437:
		yyVAL.str = yyS[yypt-0].str
	case 438:
		yyVAL.str = yyS[yypt-0].str
	case 439:
		yyVAL.str = yyS[yypt-0].str
	case 440:
		yyVAL.str = yyS[yypt-0].str
	case 441:
		yyVAL.str = yyS[yypt-0].str
	case 442:
		yyVAL.str = yyS[yypt-0].str
	case 443:
		yyVAL.str = yyS[yypt-0].str
	case 444:
		yyVAL.str = yyS[yypt-0].str
	case 445:
		yyVAL.str = yyS[yypt-0].str
	case 446:
		yyVAL.str = yyS[yypt-0].str
	case 447:
		yyVAL.str = yyS[yypt-0].str
	case 448:
		yyVAL.str = yyS[yypt-0].str
	case 449:
		yyVAL.str = yyS[yypt-0].str
	case 450:
		yyVAL.str = yyS[yypt-0].str
	case 451:
		yyVAL.str = yyS[yypt-0].str
	case 452:
		yyVAL.str = yyS[yypt-0].str
	case 453:
		yyVAL.str = yyS[yypt-0].str
	case 454:
		yyVAL.str = yyS[yypt-0].str
	case 455:
		yyVAL.str = yyS[yypt-0].str
	case 456:
		yyVAL.str = yyS[yypt-0].str
	case 457:
		yyVAL.str = yyS[yypt-0].str
	case 458:
		yyVAL.str = yyS[yypt-0].str
	case 459:
		yyVAL.str = yyS[yypt-0].str
	case 460:
		yyVAL.str = yyS[yypt-0].str
	case 461:
		yyVAL.str = yyS[yypt-0].str
	case 462:
		yyVAL.str = yyS[yypt-0].str
	case 463:
		yyVAL.str = yyS[yypt-0].str
	case 464:
		yyVAL.str = yyS[yypt-0].str
	case 465:
		yyVAL.str = yyS[yypt-0].str
	case 466:
		yyVAL.str = yyS[yypt-0].str
	case 467:
		yyVAL.str = yyS[yypt-0].str
	case 468:
		yyVAL.str = yyS[yypt-0].str
	case 469:
		yyVAL.str = yyS[yypt-0].str
	case 470:
		yyVAL.str = yyS[yypt-0].str
	case 471:
		yyVAL.str = yyS[yypt-0].str
	case 472:
		yyVAL.str = yyS[yypt-0].str
	case 473:
		yyVAL.str = yyS[yypt-0].str
	case 474:
		yyVAL.str = yyS[yypt-0].str
	case 475:
		yyVAL.str = yyS[yypt-0].str
	case 476:
		yyVAL.str = yyS[yypt-0].str
	case 477:
		yyVAL.str = yyS[yypt-0].str
	case 478:
		yyVAL.str = yyS[yypt-0].str
	case 479:
		yyVAL.str = yyS[yypt-0].str
	case 480:
		yyVAL.str = yyS[yypt-0].str
	case 481:
		yyVAL.str = yyS[yypt-0].str
	case 482:
		yyVAL.str = yyS[yypt-0].str
	case 483:
		yyVAL.str = yyS[yypt-0].str
	case 484:
		yyVAL.str = yyS[yypt-0].str
	case 485:
		yyVAL.str = yyS[yypt-0].str
	case 486:
		yyVAL.str = yyS[yypt-0].str
	case 487:
		yyVAL.str = yyS[yypt-0].str
	case 488:
		yyVAL.str = yyS[yypt-0].str
	case 489:
		yyVAL.str = yyS[yypt-0].str
	case 490:
		yyVAL.str = yyS[yypt-0].str
	case 491:
		yyVAL.str = yyS[yypt-0].str
	case 492:
		yyVAL.str = yyS[yypt-0].str
	case 493:
		yyVAL.str = yyS[yypt-0].str
	case 494:
		yyVAL.str = yyS[yypt-0].str
	case 495:
		yyVAL.str = yyS[yypt-0].str
	case 496:
		yyVAL.str = yyS[yypt-0].str
	case 497:
		yyVAL.str = yyS[yypt-0].str
	case 498:
		yyVAL.str = yyS[yypt-0].str
	case 499:
		yyVAL.str = yyS[yypt-0].str
	case 500:
		yyVAL.str = yyS[yypt-0].str
	case 501:
		yyVAL.str = yyS[yypt-0].str
	case 502:
		yyVAL.str = yyS[yypt-0].str
	case 503:
		yyVAL.str = yyS[yypt-0].str
	case 504:
		yyVAL.str = yyS[yypt-0].str
	case 505:
		yyVAL.str = yyS[yypt-0].str
	case 506:
		yyVAL.str = yyS[yypt-0].str
	case 507:
		yyVAL.str = yyS[yypt-0].str
	case 508:
		yyVAL.str = yyS[yypt-0].str
	case 509:
		yyVAL.str = yyS[yypt-0].str
	case 510:
		yyVAL.str = yyS[yypt-0].str
	case 511:
		yyVAL.str = yyS[yypt-0].str
	case 512:
		yyVAL.str = yyS[yypt-0].str
	case 513:
		yyVAL.str = yyS[yypt-0].str
	case 514:
		yyVAL.str = yyS[yypt-0].str
	case 515:
		yyVAL.str = yyS[yypt-0].str
	case 516:
		yyVAL.str = yyS[yypt-0].str
	case 517:
		yyVAL.str = yyS[yypt-0].str
	case 518:
		yyVAL.str = yyS[yypt-0].str
	case 519:
		yyVAL.str = yyS[yypt-0].str
	case 520:
		yyVAL.str = yyS[yypt-0].str
	case 521:
		yyVAL.str = yyS[yypt-0].str
	case 522:
		yyVAL.str = yyS[yypt-0].str
	case 523:
		yyVAL.str = yyS[yypt-0].str
	case 524:
		yyVAL.str = yyS[yypt-0].str
	case 525:
		yyVAL.str = yyS[yypt-0].str
	case 526:
		yyVAL.str = yyS[yypt-0].str
	case 527:
		yyVAL.str = yyS[yypt-0].str
	case 528:
		yyVAL.str = yyS[yypt-0].str
	case 529:
		yyVAL.str = yyS[yypt-0].str
	case 530:
		yyVAL.str = yyS[yypt-0].str
	case 531:
		yyVAL.str = yyS[yypt-0].str
	case 532:
		yyVAL.str = yyS[yypt-0].str
	case 533:
		yyVAL.str = yyS[yypt-0].str
	case 534:
		yyVAL.str = yyS[yypt-0].str
	case 535:
		yyVAL.str = yyS[yypt-0].str
	case 536:
		yyVAL.str = yyS[yypt-0].str
	case 537:
		yyVAL.str = yyS[yypt-0].str
	case 538:
		yyVAL.str = yyS[yypt-0].str
	case 539:
		yyVAL.str = yyS[yypt-0].str
	case 540:
		yyVAL.str = yyS[yypt-0].str
	case 541:
		yyVAL.str = yyS[yypt-0].str
	case 542:
		yyVAL.str = yyS[yypt-0].str
	case 543:
		yyVAL.str = yyS[yypt-0].str
	case 544:
		yyVAL.str = yyS[yypt-0].str
	case 545:
		yyVAL.str = yyS[yypt-0].str
	case 546:
		yyVAL.str = yyS[yypt-0].str
	case 547:
		yyVAL.str = yyS[yypt-0].str
	case 548:
		yyVAL.str = yyS[yypt-0].str
	case 549:
		yyVAL.str = yyS[yypt-0].str
	case 550:
		yyVAL.str = yyS[yypt-0].str
	case 551:
		yyVAL.str = yyS[yypt-0].str
	case 552:
		yyVAL.str = yyS[yypt-0].str
	case 553:
		yyVAL.str = yyS[yypt-0].str
	case 554:
		yyVAL.str = yyS[yypt-0].str
	case 555:
		yyVAL.str = yyS[yypt-0].str
	case 556:
		yyVAL.str = yyS[yypt-0].str
	case 557:
		yyVAL.str = yyS[yypt-0].str
	case 558:
		yyVAL.str = yyS[yypt-0].str
	case 559:
		yyVAL.str = yyS[yypt-0].str
	case 560:
		yyVAL.str = yyS[yypt-0].str
	case 561:
		yyVAL.str = yyS[yypt-0].str
	case 562:
		yyVAL.str = yyS[yypt-0].str
	case 563:
		yyVAL.str = yyS[yypt-0].str
	case 564:
		yyVAL.str = yyS[yypt-0].str
	case 565:
		yyVAL.str = yyS[yypt-0].str
	case 566:
		yyVAL.str = yyS[yypt-0].str
	case 567:
		yyVAL.str = yyS[yypt-0].str
	case 568:
		yyVAL.str = yyS[yypt-0].str
	case 569:
		yyVAL.str = yyS[yypt-0].str
	case 570:
		yyVAL.str = yyS[yypt-0].str
	case 571:
		yyVAL.str = yyS[yypt-0].str
	case 572:
		yyVAL.str = yyS[yypt-0].str
	case 573:
		yyVAL.str = yyS[yypt-0].str
	case 574:
		yyVAL.str = yyS[yypt-0].str
	case 575:
		yyVAL.str = yyS[yypt-0].str
	case 576:
		yyVAL.str = yyS[yypt-0].str
	case 577:
		yyVAL.str = yyS[yypt-0].str
	case 578:
		yyVAL.str = yyS[yypt-0].str
	case 579:
		yyVAL.str = yyS[yypt-0].str
	case 580:
		yyVAL.str = yyS[yypt-0].str
	case 581:
		yyVAL.str = yyS[yypt-0].str
	case 582:
		yyVAL.str = yyS[yypt-0].str
	case 583:
		yyVAL.str = yyS[yypt-0].str
	case 584:
		yyVAL.str = yyS[yypt-0].str
	case 585:
		yyVAL.str = yyS[yypt-0].str
	case 586:
		yyVAL.str = yyS[yypt-0].str
	case 587:
		yyVAL.str = yyS[yypt-0].str
	case 588:
		yyVAL.str = yyS[yypt-0].str
	case 589:
		yyVAL.str = yyS[yypt-0].str
	case 590:
		yyVAL.str = yyS[yypt-0].str
	case 591:
		yyVAL.str = yyS[yypt-0].str
	case 592:
		yyVAL.str = yyS[yypt-0].str
	case 593:
		yyVAL.str = yyS[yypt-0].str
	case 594:
		yyVAL.str = yyS[yypt-0].str
	case 595:
		yyVAL.str = yyS[yypt-0].str
	case 596:
		yyVAL.str = yyS[yypt-0].str
	case 597:
		yyVAL.str = yyS[yypt-0].str
	case 598:
		yyVAL.str = yyS[yypt-0].str
	case 599:
		yyVAL.str = yyS[yypt-0].str
	case 600:
		yyVAL.str = yyS[yypt-0].str
	case 601:
		yyVAL.str = yyS[yypt-0].str
	case 602:
		yyVAL.str = yyS[yypt-0].str
	case 603:
		yyVAL.str = yyS[yypt-0].str
	case 604:
		yyVAL.str = yyS[yypt-0].str
	case 605:
		yyVAL.str = yyS[yypt-0].str
	case 606:
		yyVAL.str = yyS[yypt-0].str
	case 607:
		yyVAL.str = yyS[yypt-0].str
	case 608:
		yyVAL.str = yyS[yypt-0].str
	case 609:
		yyVAL.str = yyS[yypt-0].str
	case 610:
		yyVAL.str = yyS[yypt-0].str
	case 611:
		yyVAL.str = yyS[yypt-0].str
	case 612:
		yyVAL.str = yyS[yypt-0].str
	case 613:
		yyVAL.str = yyS[yypt-0].str
	case 614:
		yyVAL.str = yyS[yypt-0].str
	case 615:
		yyVAL.str = yyS[yypt-0].str
	case 616:
		yyVAL.str = yyS[yypt-0].str
	case 617:
		yyVAL.str = yyS[yypt-0].str
	case 618:
		yyVAL.str = yyS[yypt-0].str
	case 619:
		yyVAL.str = yyS[yypt-0].str
	case 620:
		yyVAL.str = yyS[yypt-0].str
	case 621:
		yyVAL.str = yyS[yypt-0].str
	case 622:
		yyVAL.str = yyS[yypt-0].str
	case 623:
		yyVAL.str = yyS[yypt-0].str
	case 624:
		yyVAL.str = yyS[yypt-0].str
	case 625:
		yyVAL.str = yyS[yypt-0].str
	case 626:
		yyVAL.str = yyS[yypt-0].str
	case 627:
		yyVAL.str = yyS[yypt-0].str
	case 628:
		yyVAL.str = yyS[yypt-0].str
	case 629:
		yyVAL.str = yyS[yypt-0].str
	case 630:
		yyVAL.str = yyS[yypt-0].str
	case 631:
		yyVAL.str = yyS[yypt-0].str
	case 632:
		yyVAL.str = yyS[yypt-0].str
	case 633:
		yyVAL.str = yyS[yypt-0].str
	case 634:
		yyVAL.str = yyS[yypt-0].str
	case 635:
		yyVAL.str = yyS[yypt-0].str
	case 636:
		yyVAL.str = yyS[yypt-0].str
	case 637:
		yyVAL.str = yyS[yypt-0].str
	case 638:
		yyVAL.str = yyS[yypt-0].str
	case 639:
		yyVAL.str = yyS[yypt-0].str
	case 640:
		yyVAL.str = yyS[yypt-0].str
	case 641:
		yyVAL.str = yyS[yypt-0].str
	case 642:
		yyVAL.str = yyS[yypt-0].str
	case 643:
		yyVAL.str = yyS[yypt-0].str
	case 644:
		yyVAL.str = yyS[yypt-0].str
	case 645:
		yyVAL.str = yyS[yypt-0].str
	case 646:
		yyVAL.str = yyS[yypt-0].str
	case 647:
		yyVAL.str = yyS[yypt-0].str
	case 648:
		yyVAL.str = yyS[yypt-0].str
	case 649:
		yyVAL.str = yyS[yypt-0].str
	case 650:
		yyVAL.str = yyS[yypt-0].str
	case 651:
		yyVAL.str = yyS[yypt-0].str
	case 652:
		yyVAL.str = yyS[yypt-0].str
	case 653:
		yyVAL.str = yyS[yypt-0].str
	case 654:
		yyVAL.str = yyS[yypt-0].str
	case 655:
		yyVAL.str = yyS[yypt-0].str
	case 656:
		yyVAL.str = yyS[yypt-0].str
	case 657:
		yyVAL.str = yyS[yypt-0].str
	case 658:
		yyVAL.str = yyS[yypt-0].str
	case 659:
		yyVAL.str = yyS[yypt-0].str
	case 660:
		yyVAL.str = yyS[yypt-0].str
	case 661:
		yyVAL.str = yyS[yypt-0].str
	case 662:
		yyVAL.str = yyS[yypt-0].str
	case 663:
		yyVAL.str = yyS[yypt-0].str
	case 664:
		yyVAL.str = yyS[yypt-0].str
	case 665:
		yyVAL.str = yyS[yypt-0].str
	case 666:
		yyVAL.str = yyS[yypt-0].str
	case 667:
		yyVAL.str = yyS[yypt-0].str
	case 668:
		yyVAL.str = yyS[yypt-0].str
	case 669:
		yyVAL.str = yyS[yypt-0].str
	case 670:
		yyVAL.str = yyS[yypt-0].str
	case 671:
		yyVAL.str = yyS[yypt-0].str
	case 672:
		yyVAL.str = yyS[yypt-0].str
	case 673:
		yyVAL.str = yyS[yypt-0].str
	case 674:
		yyVAL.str = yyS[yypt-0].str
	case 675:
		yyVAL.str = yyS[yypt-0].str
	case 676:
		yyVAL.str = yyS[yypt-0].str
	case 677:
		yyVAL.str = yyS[yypt-0].str
	case 678:
		yyVAL.str = yyS[yypt-0].str
	case 679:
		yyVAL.str = yyS[yypt-0].str
	case 680:
		yyVAL.str = yyS[yypt-0].str
	case 681:
		yyVAL.str = yyS[yypt-0].str
	case 682:
		yyVAL.str = yyS[yypt-0].str
	case 683:
		yyVAL.str = yyS[yypt-0].str
	case 684:
		yyVAL.str = yyS[yypt-0].str
	case 685:
		yyVAL.str = yyS[yypt-0].str
	case 686:
		yyVAL.str = yyS[yypt-0].str
	case 687:
		yyVAL.str = yyS[yypt-0].str
	case 688:
		yyVAL.str = yyS[yypt-0].str
	case 689:
		yyVAL.str = yyS[yypt-0].str
	case 690:
		yyVAL.str = yyS[yypt-0].str
	case 691:
		yyVAL.str = yyS[yypt-0].str
	case 692:
		yyVAL.str = yyS[yypt-0].str
	case 693:
		yyVAL.str = yyS[yypt-0].str
	case 694:
		yyVAL.str = yyS[yypt-0].str
	case 695:
		yyVAL.str = yyS[yypt-0].str
	case 696:
		yyVAL.str = yyS[yypt-0].str
	case 697:
		yyVAL.str = yyS[yypt-0].str
	case 698:
		yyVAL.str = yyS[yypt-0].str
	case 699:
		yyVAL.str = yyS[yypt-0].str
	case 700:
		yyVAL.str = yyS[yypt-0].str
	case 701:
		yyVAL.str = yyS[yypt-0].str
	case 702:
		yyVAL.str = yyS[yypt-0].str
	case 703:
		yyVAL.str = yyS[yypt-0].str
	case 704:
		yyVAL.str = yyS[yypt-0].str
	case 705:
		yyVAL.str = yyS[yypt-0].str
	case 706:
		yyVAL.str = yyS[yypt-0].str
	case 707:
		yyVAL.str = yyS[yypt-0].str
	case 708:
		yyVAL.str = yyS[yypt-0].str
	case 709:
		yyVAL.str = yyS[yypt-0].str
	case 710:
		yyVAL.str = yyS[yypt-0].str
	case 711:
		yyVAL.str = yyS[yypt-0].str
	case 712:
		yyVAL.str = yyS[yypt-0].str
	case 713:
		yyVAL.str = yyS[yypt-0].str
	case 714:
		yyVAL.str = yyS[yypt-0].str
	case 715:
		yyVAL.str = yyS[yypt-0].str
	case 716:
		yyVAL.str = yyS[yypt-0].str
	case 717:
		yyVAL.str = yyS[yypt-0].str
	case 718:
		yyVAL.str = yyS[yypt-0].str
	case 719:
		yyVAL.str = yyS[yypt-0].str
	case 720:
		yyVAL.str = yyS[yypt-0].str
	case 721:
		yyVAL.str = yyS[yypt-0].str
	case 722:
		yyVAL.str = yyS[yypt-0].str
	case 723:
		yyVAL.str = yyS[yypt-0].str
	case 724:
		yyVAL.str = yyS[yypt-0].str
	case 725:
		yyVAL.str = yyS[yypt-0].str
	case 726:
		yyVAL.str = yyS[yypt-0].str
	case 727:
		yyVAL.str = yyS[yypt-0].str
	case 728:
		yyVAL.str = yyS[yypt-0].str
	case 729:
		yyVAL.str = yyS[yypt-0].str
	case 730:
		yyVAL.str = yyS[yypt-0].str
	case 731:
		yyVAL.str = yyS[yypt-0].str
	case 732:
		yyVAL.str = yyS[yypt-0].str
	case 733:
		yyVAL.str = yyS[yypt-0].str
	case 734:
		yyVAL.str = yyS[yypt-0].str
	case 735:
		yyVAL.str = yyS[yypt-0].str
	case 736:
		yyVAL.str = yyS[yypt-0].str
	case 737:
		yyVAL.str = yyS[yypt-0].str
	case 738:
		yyVAL.str = yyS[yypt-0].str
	case 739:
		yyVAL.str = yyS[yypt-0].str
	case 740:
		yyVAL.str = yyS[yypt-0].str
	case 741:
		yyVAL.str = yyS[yypt-0].str
	case 742:
		yyVAL.str = yyS[yypt-0].str
	case 743:
		yyVAL.str = yyS[yypt-0].str
	case 744:
		yyVAL.str = yyS[yypt-0].str
	case 745:
		yyVAL.str = yyS[yypt-0].str
	case 746:
		yyVAL.str = yyS[yypt-0].str
	case 747:
		yyVAL.str = yyS[yypt-0].str
	case 748:
		yyVAL.str = yyS[yypt-0].str
	case 749:
		yyVAL.str = yyS[yypt-0].str
	case 750:
		yyVAL.str = yyS[yypt-0].str
	case 751:
		yyVAL.str = yyS[yypt-0].str
	case 752:
		yyVAL.str = yyS[yypt-0].str
	case 753:
		yyVAL.str = yyS[yypt-0].str
	case 754:
		yyVAL.str = yyS[yypt-0].str
	case 755:
		yyVAL.str = yyS[yypt-0].str
	case 756:
		yyVAL.str = yyS[yypt-0].str
	case 757:
		yyVAL.str = yyS[yypt-0].str
	case 758:
		yyVAL.str = yyS[yypt-0].str
	case 759:
		yyVAL.str = yyS[yypt-0].str
	case 760:
		yyVAL.str = yyS[yypt-0].str
	case 761:
		yyVAL.str = yyS[yypt-0].str
	case 762:
		yyVAL.str = yyS[yypt-0].str
	case 763:
		yyVAL.str = yyS[yypt-0].str
	case 764:
		yyVAL.str = yyS[yypt-0].str
	case 765:
		yyVAL.str = yyS[yypt-0].str
	case 766:
		yyVAL.str = yyS[yypt-0].str
	case 767:
		yyVAL.str = yyS[yypt-0].str
	case 768:
		yyVAL.str = yyS[yypt-0].str
	case 769:
		yyVAL.str = yyS[yypt-0].str
	case 770:
		yyVAL.str = yyS[yypt-0].str
	case 771:
		yyVAL.str = yyS[yypt-0].str
	case 772:
		yyVAL.str = yyS[yypt-0].str
	case 773:
		yyVAL.str = yyS[yypt-0].str
	case 774:
		yyVAL.str = yyS[yypt-0].str
	case 775:
		yyVAL.str = yyS[yypt-0].str
	case 776:
		yyVAL.str = yyS[yypt-0].str
	case 777:
		yyVAL.str = yyS[yypt-0].str
	case 778:
		yyVAL.str = yyS[yypt-0].str
	case 779:
		yyVAL.str = yyS[yypt-0].str
	case 780:
		yyVAL.str = yyS[yypt-0].str
	case 781:
		yyVAL.str = yyS[yypt-0].str
	case 782:
		yyVAL.str = yyS[yypt-0].str
	case 783:
		yyVAL.str = yyS[yypt-0].str
	case 784:
		yyVAL.str = yyS[yypt-0].str
	case 785:
		yyVAL.str = yyS[yypt-0].str
	case 786:
		yyVAL.str = yyS[yypt-0].str
	case 787:
		yyVAL.str = yyS[yypt-0].str
	case 788:
		yyVAL.str = yyS[yypt-0].str
	case 789:
		yyVAL.str = yyS[yypt-0].str
	case 790:
		yyVAL.str = yyS[yypt-0].str
	case 791:
		yyVAL.str = yyS[yypt-0].str
	case 792:
		yyVAL.str = yyS[yypt-0].str
	}
	goto yystack /* stack new state and value */
}

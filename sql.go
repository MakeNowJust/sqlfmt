//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	row                 Row
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerConst
	optArrayBounds      []IntegerConst
	optInterval         *OptInterval
	intervalSecond      *IntervalSecond
	subqueryOp          SubqueryOp
}

const IDENT = 57346
const FCONST = 57347
const SCONST = 57348
const BCONST = 57349
const XCONST = 57350
const Op = 57351
const ICONST = 57352
const PARAM = 57353
const TYPECAST = 57354
const DOT_DOT = 57355
const COLON_EQUALS = 57356
const EQUALS_GREATER = 57357
const LESS_EQUALS = 57358
const GREATER_EQUALS = 57359
const NOT_EQUALS = 57360
const ABORT_P = 57361
const ABSOLUTE_P = 57362
const ACCESS = 57363
const ACTION = 57364
const ADD_P = 57365
const ADMIN = 57366
const AFTER = 57367
const AGGREGATE = 57368
const ALL = 57369
const ALSO = 57370
const ALTER = 57371
const ALWAYS = 57372
const ANALYSE = 57373
const ANALYZE = 57374
const AND = 57375
const ANY = 57376
const ARRAY = 57377
const AS = 57378
const ASC = 57379
const ASSERTION = 57380
const ASSIGNMENT = 57381
const ASYMMETRIC = 57382
const AT = 57383
const ATTRIBUTE = 57384
const AUTHORIZATION = 57385
const BACKWARD = 57386
const BEFORE = 57387
const BEGIN_P = 57388
const BETWEEN = 57389
const BIGINT = 57390
const BINARY = 57391
const BIT = 57392
const BOOLEAN_P = 57393
const BOTH = 57394
const BY = 57395
const CACHE = 57396
const CALLED = 57397
const CASCADE = 57398
const CASCADED = 57399
const CASE = 57400
const CAST = 57401
const CATALOG_P = 57402
const CHAIN = 57403
const CHAR_P = 57404
const CHARACTER = 57405
const CHARACTERISTICS = 57406
const CHECK = 57407
const CHECKPOINT = 57408
const CLASS = 57409
const CLOSE = 57410
const CLUSTER = 57411
const COALESCE = 57412
const COLLATE = 57413
const COLLATION = 57414
const COLUMN = 57415
const COMMENT = 57416
const COMMENTS = 57417
const COMMIT = 57418
const COMMITTED = 57419
const CONCURRENTLY = 57420
const CONFIGURATION = 57421
const CONFLICT = 57422
const CONNECTION = 57423
const CONSTRAINT = 57424
const CONSTRAINTS = 57425
const CONTENT_P = 57426
const CONTINUE_P = 57427
const CONVERSION_P = 57428
const COPY = 57429
const COST = 57430
const CREATE = 57431
const CROSS = 57432
const CSV = 57433
const CUBE = 57434
const CURRENT_P = 57435
const CURRENT_CATALOG = 57436
const CURRENT_DATE = 57437
const CURRENT_ROLE = 57438
const CURRENT_SCHEMA = 57439
const CURRENT_TIME = 57440
const CURRENT_TIMESTAMP = 57441
const CURRENT_USER = 57442
const CURSOR = 57443
const CYCLE = 57444
const DATA_P = 57445
const DATABASE = 57446
const DAY_P = 57447
const DEALLOCATE = 57448
const DEC = 57449
const DECIMAL_P = 57450
const DECLARE = 57451
const DEFAULT = 57452
const DEFAULTS = 57453
const DEFERRABLE = 57454
const DEFERRED = 57455
const DEFINER = 57456
const DELETE_P = 57457
const DELIMITER = 57458
const DELIMITERS = 57459
const DESC = 57460
const DICTIONARY = 57461
const DISABLE_P = 57462
const DISCARD = 57463
const DISTINCT = 57464
const DO = 57465
const DOCUMENT_P = 57466
const DOMAIN_P = 57467
const DOUBLE_P = 57468
const DROP = 57469
const EACH = 57470
const ELSE = 57471
const ENABLE_P = 57472
const ENCODING = 57473
const ENCRYPTED = 57474
const END_P = 57475
const ENUM_P = 57476
const ESCAPE = 57477
const EVENT = 57478
const EXCEPT = 57479
const EXCLUDE = 57480
const EXCLUDING = 57481
const EXCLUSIVE = 57482
const EXECUTE = 57483
const EXISTS = 57484
const EXPLAIN = 57485
const EXTENSION = 57486
const EXTERNAL = 57487
const EXTRACT = 57488
const FALSE_P = 57489
const FAMILY = 57490
const FETCH = 57491
const FILTER = 57492
const FIRST_P = 57493
const FLOAT_P = 57494
const FOLLOWING = 57495
const FOR = 57496
const FORCE = 57497
const FOREIGN = 57498
const FORWARD = 57499
const FREEZE = 57500
const FROM = 57501
const FULL = 57502
const FUNCTION = 57503
const FUNCTIONS = 57504
const GLOBAL = 57505
const GRANT = 57506
const GRANTED = 57507
const GREATEST = 57508
const GROUP_P = 57509
const GROUPING = 57510
const HANDLER = 57511
const HAVING = 57512
const HEADER_P = 57513
const HOLD = 57514
const HOUR_P = 57515
const IDENTITY_P = 57516
const IF_P = 57517
const ILIKE = 57518
const IMMEDIATE = 57519
const IMMUTABLE = 57520
const IMPLICIT_P = 57521
const IMPORT_P = 57522
const IN_P = 57523
const INCLUDING = 57524
const INCREMENT = 57525
const INDEX = 57526
const INDEXES = 57527
const INHERIT = 57528
const INHERITS = 57529
const INITIALLY = 57530
const INLINE_P = 57531
const INNER_P = 57532
const INOUT = 57533
const INPUT_P = 57534
const INSENSITIVE = 57535
const INSERT = 57536
const INSTEAD = 57537
const INT_P = 57538
const INTEGER = 57539
const INTERSECT = 57540
const INTERVAL = 57541
const INTO = 57542
const INVOKER = 57543
const IS = 57544
const ISNULL = 57545
const ISOLATION = 57546
const JOIN = 57547
const KEY = 57548
const LABEL = 57549
const LANGUAGE = 57550
const LARGE_P = 57551
const LAST_P = 57552
const LATERAL_P = 57553
const LEADING = 57554
const LEAKPROOF = 57555
const LEAST = 57556
const LEFT = 57557
const LEVEL = 57558
const LIKE = 57559
const LIMIT = 57560
const LISTEN = 57561
const LOAD = 57562
const LOCAL = 57563
const LOCALTIME = 57564
const LOCALTIMESTAMP = 57565
const LOCATION = 57566
const LOCK_P = 57567
const LOCKED = 57568
const LOGGED = 57569
const MAPPING = 57570
const MATCH = 57571
const MATERIALIZED = 57572
const MAXVALUE = 57573
const MINUTE_P = 57574
const MINVALUE = 57575
const MODE = 57576
const MONTH_P = 57577
const MOVE = 57578
const NAME_P = 57579
const NAMES = 57580
const NATIONAL = 57581
const NATURAL = 57582
const NCHAR = 57583
const NEXT = 57584
const NO = 57585
const NONE = 57586
const NOT = 57587
const NOTHING = 57588
const NOTIFY = 57589
const NOTNULL = 57590
const NOWAIT = 57591
const NULL_P = 57592
const NULLIF = 57593
const NULLS_P = 57594
const NUMERIC = 57595
const OBJECT_P = 57596
const OF = 57597
const OFF = 57598
const OFFSET = 57599
const OIDS = 57600
const ON = 57601
const ONLY = 57602
const OPERATOR = 57603
const OPTION = 57604
const OPTIONS = 57605
const OR = 57606
const ORDER = 57607
const ORDINALITY = 57608
const OUT_P = 57609
const OUTER_P = 57610
const OVER = 57611
const OVERLAPS = 57612
const OVERLAY = 57613
const OWNED = 57614
const OWNER = 57615
const PARSER = 57616
const PARTIAL = 57617
const PARTITION = 57618
const PASSING = 57619
const PASSWORD = 57620
const PLACING = 57621
const PLANS = 57622
const POLICY = 57623
const POSITION = 57624
const PRECEDING = 57625
const PRECISION = 57626
const PRESERVE = 57627
const PREPARE = 57628
const PREPARED = 57629
const PRIMARY = 57630
const PRIOR = 57631
const PRIVILEGES = 57632
const PROCEDURAL = 57633
const PROCEDURE = 57634
const PROGRAM = 57635
const QUOTE = 57636
const RANGE = 57637
const READ = 57638
const REAL = 57639
const REASSIGN = 57640
const RECHECK = 57641
const RECURSIVE = 57642
const REF = 57643
const REFERENCES = 57644
const REFRESH = 57645
const REINDEX = 57646
const RELATIVE_P = 57647
const RELEASE = 57648
const RENAME = 57649
const REPEATABLE = 57650
const REPLACE = 57651
const REPLICA = 57652
const RESET = 57653
const RESTART = 57654
const RESTRICT = 57655
const RETURNING = 57656
const RETURNS = 57657
const REVOKE = 57658
const RIGHT = 57659
const ROLE = 57660
const ROLLBACK = 57661
const ROLLUP = 57662
const ROW = 57663
const ROWS = 57664
const RULE = 57665
const SAVEPOINT = 57666
const SCHEMA = 57667
const SCROLL = 57668
const SEARCH = 57669
const SECOND_P = 57670
const SECURITY = 57671
const SELECT = 57672
const SEQUENCE = 57673
const SEQUENCES = 57674
const SERIALIZABLE = 57675
const SERVER = 57676
const SESSION = 57677
const SESSION_USER = 57678
const SET = 57679
const SETS = 57680
const SETOF = 57681
const SHARE = 57682
const SHOW = 57683
const SIMILAR = 57684
const SIMPLE = 57685
const SKIP = 57686
const SMALLINT = 57687
const SNAPSHOT = 57688
const SOME = 57689
const SQL_P = 57690
const STABLE = 57691
const STANDALONE_P = 57692
const START = 57693
const STATEMENT = 57694
const STATISTICS = 57695
const STDIN = 57696
const STDOUT = 57697
const STORAGE = 57698
const STRICT_P = 57699
const STRIP_P = 57700
const SUBSTRING = 57701
const SYMMETRIC = 57702
const SYSID = 57703
const SYSTEM_P = 57704
const TABLE = 57705
const TABLES = 57706
const TABLESAMPLE = 57707
const TABLESPACE = 57708
const TEMP = 57709
const TEMPLATE = 57710
const TEMPORARY = 57711
const TEXT_P = 57712
const THEN = 57713
const TIME = 57714
const TIMESTAMP = 57715
const TO = 57716
const TRAILING = 57717
const TRANSACTION = 57718
const TRANSFORM = 57719
const TREAT = 57720
const TRIGGER = 57721
const TRIM = 57722
const TRUE_P = 57723
const TRUNCATE = 57724
const TRUSTED = 57725
const TYPE_P = 57726
const TYPES_P = 57727
const UNBOUNDED = 57728
const UNCOMMITTED = 57729
const UNENCRYPTED = 57730
const UNION = 57731
const UNIQUE = 57732
const UNKNOWN = 57733
const UNLISTEN = 57734
const UNLOGGED = 57735
const UNTIL = 57736
const UPDATE = 57737
const USER = 57738
const USING = 57739
const VACUUM = 57740
const VALID = 57741
const VALIDATE = 57742
const VALIDATOR = 57743
const VALUE_P = 57744
const VALUES = 57745
const VARCHAR = 57746
const VARIADIC = 57747
const VARYING = 57748
const VERBOSE = 57749
const VERSION_P = 57750
const VIEW = 57751
const VIEWS = 57752
const VOLATILE = 57753
const WHEN = 57754
const WHERE = 57755
const WHITESPACE_P = 57756
const WINDOW = 57757
const WITH = 57758
const WITHIN = 57759
const WITHOUT = 57760
const WORK = 57761
const WRAPPER = 57762
const WRITE = 57763
const XML_P = 57764
const XMLATTRIBUTES = 57765
const XMLCONCAT = 57766
const XMLELEMENT = 57767
const XMLEXISTS = 57768
const XMLFOREST = 57769
const XMLPARSE = 57770
const XMLPI = 57771
const XMLROOT = 57772
const XMLSERIALIZE = 57773
const YEAR_P = 57774
const YES_P = 57775
const ZONE = 57776
const NOT_LA = 57777
const NULLS_LA = 57778
const WITH_LA = 57779
const OP = 57780
const POSTFIXOP = 57781
const UMINUS = 57782

var yyToknames = []string{
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
}
var yyStatenames = []string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:3157

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = []int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 259,
	455, 259,
	-2, 267,
	-1, 5,
	1, 262,
	453, 262,
	455, 262,
	-2, 266,
	-1, 13,
	1, 263,
	453, 263,
	455, 263,
	-2, 283,
	-1, 408,
	6, 456,
	14, 456,
	15, 456,
	452, 456,
	-2, 453,
	-1, 409,
	6, 457,
	14, 457,
	15, 457,
	452, 457,
	-2, 454,
	-1, 417,
	6, 82,
	452, 82,
	-2, 753,
	-1, 429,
	6, 789,
	14, 789,
	15, 789,
	452, 789,
	-2, 219,
	-1, 436,
	6, 46,
	-2, 737,
	-1, 437,
	6, 75,
	452, 75,
	-2, 738,
	-1, 438,
	6, 53,
	-2, 739,
	-1, 439,
	6, 75,
	63, 75,
	452, 75,
	-2, 740,
	-1, 440,
	6, 75,
	63, 75,
	452, 75,
	-2, 741,
	-1, 441,
	6, 42,
	-2, 743,
	-1, 442,
	6, 42,
	-2, 744,
	-1, 443,
	6, 55,
	-2, 747,
	-1, 444,
	6, 43,
	-2, 751,
	-1, 445,
	6, 44,
	-2, 752,
	-1, 447,
	6, 75,
	63, 75,
	452, 75,
	-2, 756,
	-1, 448,
	6, 42,
	-2, 759,
	-1, 449,
	6, 47,
	-2, 764,
	-1, 450,
	6, 45,
	-2, 767,
	-1, 451,
	6, 85,
	-2, 769,
	-1, 452,
	6, 85,
	-2, 770,
	-1, 453,
	6, 70,
	63, 70,
	452, 70,
	-2, 774,
	-1, 513,
	321, 353,
	322, 353,
	-2, 102,
	-1, 556,
	27, 375,
	34, 375,
	347, 375,
	-2, 389,
	-1, 567,
	137, 267,
	149, 267,
	154, 267,
	198, 267,
	218, 267,
	257, 267,
	265, 267,
	389, 267,
	-2, 190,
	-1, 580,
	6, 436,
	452, 436,
	-2, 404,
	-1, 699,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 114,
	-1, 700,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 115,
	-1, 701,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 116,
	-1, 702,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 117,
	-1, 703,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 118,
	-1, 704,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 119,
	-1, 708,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 127,
	-1, 714,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 131,
	-1, 849,
	270, 367,
	-2, 370,
	-1, 858,
	14, 9,
	15, 9,
	-2, 435,
	-1, 928,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 129,
	-1, 929,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 133,
	-1, 935,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 135,
	-1, 968,
	270, 366,
	-2, 369,
	-1, 1037,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 128,
	-1, 1040,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 137,
	-1, 1043,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 132,
	-1, 1047,
	202, 0,
	203, 0,
	248, 0,
	-2, 150,
	-1, 1075,
	27, 239,
	34, 239,
	347, 239,
	-2, 390,
	-1, 1080,
	270, 368,
	-2, 371,
	-1, 1128,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 130,
	-1, 1129,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 134,
	-1, 1133,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 136,
	-1, 1134,
	202, 0,
	203, 0,
	248, 0,
	-2, 151,
	-1, 1138,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 154,
	-1, 1146,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 172,
	-1, 1147,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 173,
	-1, 1148,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 174,
	-1, 1149,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 175,
	-1, 1150,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 176,
	-1, 1151,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 177,
	-1, 1159,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 156,
	-1, 1188,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 138,
	-1, 1189,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 155,
	-1, 1190,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 157,
	-1, 1210,
	202, 0,
	-2, 181,
	-1, 1224,
	202, 0,
	-2, 182,
	-1, 1230,
	47, 0,
	176, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 736,
}

const yyNprod = 884
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 14554

var yyAct = []int{

	378, 987, 1229, 1204, 1048, 914, 1228, 1179, 1175, 865,
	14, 855, 823, 568, 576, 1019, 454, 398, 1114, 571,
	910, 1049, 917, 912, 401, 621, 726, 869, 27, 923,
	723, 851, 416, 522, 654, 832, 637, 488, 650, 381,
	601, 387, 4, 825, 372, 1023, 524, 18, 1239, 20,
	605, 1137, 32, 1238, 859, 1226, 1237, 485, 1137, 962,
	1198, 964, 862, 962, 558, 1191, 965, 1161, 1137, 615,
	962, 1136, 1219, 556, 1137, 456, 526, 1108, 1206, 1073,
	962, 455, 962, 1011, 1002, 1000, 962, 962, 962, 999,
	998, 997, 962, 962, 962, 556, 963, 968, 526, 395,
	962, 962, 538, 539, 540, 528, 627, 1156, 1078, 626,
	29, 905, 821, 573, 645, 525, 369, 572, 392, 542,
	25, 1051, 573, 606, 12, 1033, 572, 528, 29, 606,
	863, 924, 1033, 551, 967, 527, 8, 924, 1227, 1174,
	617, 1172, 617, 556, 1167, 1166, 526, 1165, 1126, 1085,
	538, 539, 540, 1075, 1008, 1007, 1004, 527, 396, 616,
	1025, 616, 1003, 995, 994, 993, 992, 542, 982, 10,
	974, 966, 897, 411, 614, 528, 618, 818, 577, 622,
	7, 551, 369, 368, 410, 989, 1212, 1207, 411, 864,
	1196, 578, 861, 1071, 556, 1024, 410, 526, 1046, 1130,
	1016, 981, 956, 954, 943, 527, 728, 606, 609, 11,
	392, 884, 874, 1051, 873, 350, 816, 1061, 1062, 1063,
	624, 599, 556, 598, 597, 526, 528, 596, 595, 594,
	593, 592, 591, 579, 1132, 7, 1209, 1186, 970, 1185,
	526, 1125, 1028, 577, 1029, 484, 617, 911, 1006, 1005,
	526, 1051, 926, 1176, 528, 913, 527, 990, 7, 985,
	870, 602, 546, 1184, 899, 616, 980, 552, 501, 528,
	979, 570, 978, 977, 930, 715, 501, 891, 890, 528,
	692, 725, 355, 725, 527, 866, 732, 5, 548, 549,
	630, 641, 1095, 730, 1092, 862, 894, 866, 1243, 527,
	1051, 600, 1216, 544, 830, 499, 638, 639, 819, 527,
	546, 1242, 1170, 499, 356, 552, 351, 357, 565, 872,
	1044, 712, 18, 1012, 482, 557, 373, 373, 526, 1217,
	359, 628, 17, 360, 550, 354, 548, 549, 1153, 352,
	1194, 458, 412, 457, 515, 413, 359, 557, 1039, 508,
	543, 544, 392, 1093, 1091, 1051, 629, 528, 497, 1061,
	1062, 1063, 556, 863, 904, 526, 359, 409, 1119, 1118,
	1066, 16, 392, 1017, 541, 1051, 1131, 1115, 31, 1061,
	1062, 1063, 550, 835, 1211, 375, 642, 527, 866, 860,
	845, 846, 847, 16, 528, 557, 31, 1020, 543, 358,
	589, 1183, 500, 1065, 518, 1193, 1045, 518, 518, 921,
	500, 1022, 942, 944, 651, 358, 590, 582, 583, 584,
	496, 354, 864, 1100, 527, 861, 567, 526, 547, 622,
	574, 575, 1018, 611, 610, 358, 1201, 526, 360, 1116,
	509, 1241, 367, 363, 23, 1220, 557, 1031, 918, 866,
	710, 1247, 349, 1051, 360, 713, 1051, 498, 526, 371,
	18, 1154, 1066, 975, 976, 498, 528, 362, 410, 411,
	971, 1155, 1246, 1195, 557, 1223, 547, 13, 483, 1121,
	603, 604, 481, 415, 365, 366, 527, 414, 612, 400,
	541, 709, 6, 607, 19, 3, 527, 658, 480, 613,
	659, 656, 399, 738, 553, 690, 541, 529, 530, 531,
	532, 533, 534, 541, 382, 625, 828, 1215, 866, 1169,
	1103, 545, 619, 871, 541, 535, 536, 537, 623, 529,
	530, 531, 532, 533, 534, 1203, 407, 960, 364, 24,
	386, 406, 870, 961, 644, 1065, 391, 390, 653, 487,
	868, 661, 1052, 1053, 1054, 1055, 1056, 1057, 983, 660,
	586, 541, 541, 541, 541, 541, 385, 541, 620, 545,
	652, 737, 608, 535, 536, 537, 383, 529, 530, 531,
	532, 533, 534, 632, 15, 1178, 29, 1214, 541, 737,
	822, 827, 831, 848, 727, 907, 729, 559, 733, 857,
	822, 932, 674, 724, 1066, 817, 731, 736, 673, 958,
	880, 881, 882, 883, 557, 29, 711, 635, 636, 585,
	885, 643, 860, 514, 1066, 736, 633, 691, 529, 530,
	531, 532, 533, 534, 581, 909, 640, 1122, 896, 503,
	1058, 1059, 1060, 833, 1052, 1053, 1054, 1055, 1056, 1057,
	517, 887, 888, 517, 517, 489, 529, 530, 531, 532,
	533, 534, 895, 505, 898, 512, 634, 580, 900, 494,
	502, 495, 523, 531, 532, 533, 534, 361, 834, 906,
	661, 560, 561, 562, 563, 564, 534, 1057, 660, 566,
	919, 492, 353, 493, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	587, 908, 511, 922, 631, 541, 920, 510, 504, 491,
	607, 925, 613, 26, 948, 948, 604, 603, 588, 507,
	612, 674, 647, 1054, 1055, 1056, 1057, 673, 521, 915,
	933, 1222, 952, 931, 867, 21, 513, 619, 22, 370,
	875, 876, 877, 878, 9, 727, 2, 1, 0, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 886, 0,
	567, 953, 0, 889, 0, 0, 0, 892, 0, 893,
	721, 0, 1058, 1059, 1060, 0, 1052, 1053, 1054, 1055,
	1056, 1057, 0, 0, 902, 903, 529, 530, 531, 532,
	533, 534, 1058, 1059, 1060, 719, 1052, 1053, 1054, 1055,
	1056, 1057, 0, 842, 843, 844, 0, 836, 837, 838,
	839, 840, 841, 0, 0, 0, 0, 541, 0, 0,
	373, 541, 0, 957, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	0, 714, 955, 0, 31, 516, 0, 541, 519, 520,
	0, 0, 969, 0, 0, 0, 0, 0, 676, 662,
	675, 0, 657, 0, 0, 0, 0, 0, 826, 0,
	541, 833, 0, 31, 972, 973, 856, 1052, 1053, 1054,
	1055, 1056, 1057, 0, 681, 31, 984, 0, 1001, 0,
	879, 0, 541, 717, 0, 0, 0, 0, 716, 0,
	0, 0, 0, 722, 0, 0, 834, 541, 0, 1010,
	0, 0, 735, 0, 858, 0, 0, 0, 1015, 541,
	541, 489, 948, 948, 1014, 0, 541, 1035, 901, 0,
	735, 737, 1030, 0, 0, 1064, 31, 948, 948, 948,
	523, 0, 1064, 0, 0, 0, 916, 0, 0, 0,
	541, 0, 0, 1070, 0, 0, 0, 0, 661, 0,
	1076, 0, 988, 0, 1034, 0, 660, 736, 1079, 940,
	1083, 0, 1086, 1087, 1088, 0, 0, 541, 1094, 1096,
	1097, 567, 541, 0, 1009, 0, 567, 676, 662, 675,
	1099, 657, 0, 1084, 938, 29, 0, 0, 0, 0,
	0, 0, 0, 0, 928, 929, 0, 0, 1107, 674,
	935, 661, 541, 681, 0, 673, 1112, 0, 1117, 660,
	0, 1120, 833, 0, 1111, 0, 0, 541, 541, 718,
	0, 541, 1064, 1064, 541, 0, 1127, 0, 541, 720,
	737, 1135, 1113, 948, 948, 948, 948, 948, 948, 948,
	948, 948, 948, 948, 948, 948, 0, 834, 1064, 1064,
	1064, 661, 674, 1139, 1109, 541, 661, 1110, 673, 660,
	1032, 833, 541, 541, 660, 1157, 736, 0, 0, 1104,
	541, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 1164, 0, 0, 541, 936, 0, 945,
	945, 0, 941, 0, 0, 0, 834, 0, 0, 0,
	0, 0, 674, 0, 1181, 1182, 959, 674, 673, 541,
	541, 1173, 0, 673, 541, 541, 0, 0, 951, 541,
	1098, 1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064, 1064,
	1064, 1064, 1064, 1064, 0, 0, 0, 856, 856, 1192,
	541, 0, 661, 541, 0, 556, 0, 0, 526, 541,
	660, 0, 0, 0, 0, 986, 0, 0, 541, 991,
	1200, 541, 1202, 0, 31, 0, 0, 1123, 1124, 541,
	541, 541, 0, 0, 948, 858, 858, 528, 541, 0,
	0, 1213, 0, 0, 0, 0, 0, 0, 0, 541,
	0, 1064, 948, 674, 1221, 1218, 0, 1225, 1021, 673,
	0, 661, 1236, 1235, 1234, 1064, 0, 527, 0, 660,
	0, 1036, 1037, 1240, 541, 1040, 0, 661, 937, 1043,
	31, 0, 0, 0, 0, 660, 0, 1047, 939, 0,
	1248, 0, 0, 0, 566, 0, 0, 0, 0, 1074,
	0, 0, 31, 0, 0, 0, 1081, 1082, 0, 0,
	0, 0, 674, 31, 0, 856, 1205, 0, 673, 0,
	1089, 1090, 0, 0, 1187, 676, 662, 675, 674, 657,
	1101, 1038, 735, 0, 673, 1105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 681, 0, 858, 0, 0, 0, 945, 945, 1205,
	0, 0, 0, 0, 0, 0, 0, 916, 0, 0,
	916, 0, 945, 945, 945, 31, 0, 0, 676, 662,
	675, 0, 657, 1128, 1129, 1041, 1042, 0, 0, 1133,
	1134, 0, 0, 0, 0, 1138, 0, 31, 0, 0,
	1067, 1068, 1069, 0, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1159, 0, 0,
	0, 0, 0, 1162, 31, 0, 0, 0, 676, 662,
	675, 0, 657, 676, 662, 675, 0, 657, 0, 0,
	0, 735, 0, 0, 0, 0, 0, 1168, 0, 0,
	0, 0, 0, 0, 681, 0, 0, 557, 0, 681,
	1177, 1180, 0, 916, 916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 1189, 1190, 945, 945,
	945, 945, 945, 945, 945, 945, 945, 945, 945, 945,
	945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1197, 0, 0, 0, 0, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 676,
	662, 675, 0, 657, 0, 0, 0, 0, 0, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 681, 0, 0, 0, 0,
	0, 1180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1233, 1233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 0, 0, 676, 662,
	675, 0, 657, 0, 31, 0, 0, 0, 0, 0,
	0, 0, 1233, 0, 676, 662, 675, 0, 657, 0,
	0, 0, 0, 0, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 945,
	681, 0, 0, 0, 0, 0, 0, 31, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 945, 0, 529,
	530, 531, 532, 533, 534, 0, 0, 1210, 0, 0,
	0, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1224, 33, 34, 35, 36,
	37, 38, 39, 40, 739, 41, 42, 43, 740, 741,
	742, 743, 744, 745, 746, 44, 45, 747, 46, 47,
	459, 48, 49, 50, 301, 302, 460, 303, 304, 748,
	51, 52, 53, 54, 55, 749, 750, 56, 57, 305,
	306, 58, 751, 59, 60, 61, 62, 307, 752, 683,
	753, 63, 64, 65, 66, 461, 67, 68, 69, 754,
	70, 71, 72, 73, 74, 75, 755, 462, 76, 77,
	78, 756, 757, 758, 684, 759, 760, 761, 79, 80,
	81, 82, 83, 84, 308, 309, 85, 762, 86, 763,
	87, 88, 89, 90, 91, 764, 92, 93, 94, 765,
	766, 95, 96, 97, 98, 99, 767, 100, 101, 102,
	768, 103, 104, 105, 769, 106, 107, 108, 109, 310,
	110, 111, 112, 311, 770, 113, 771, 114, 115, 312,
	116, 772, 117, 773, 118, 463, 774, 464, 119, 120,
	121, 775, 122, 313, 776, 314, 123, 777, 124, 125,
	126, 127, 128, 465, 129, 130, 131, 132, 778, 133,
	134, 135, 136, 137, 138, 779, 139, 466, 315, 140,
	141, 142, 143, 316, 317, 780, 318, 781, 144, 467,
	468, 145, 469, 146, 147, 148, 149, 150, 782, 783,
	151, 319, 470, 152, 471, 784, 153, 154, 155, 785,
	786, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 320, 472, 321, 171,
	172, 322, 787, 173, 174, 473, 175, 788, 323, 176,
	324, 177, 178, 179, 789, 180, 790, 791, 181, 182,
	183, 792, 793, 184, 325, 474, 185, 475, 326, 186,
	187, 188, 189, 190, 191, 192, 794, 193, 194, 327,
	195, 328, 198, 196, 197, 795, 199, 200, 201, 202,
	203, 204, 205, 206, 329, 207, 208, 209, 210, 796,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 797, 222, 223, 476, 224, 225, 226, 330, 227,
	228, 229, 230, 231, 232, 233, 234, 798, 235, 236,
	237, 238, 239, 799, 240, 241, 331, 242, 243, 477,
	244, 245, 332, 246, 800, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 801, 258, 259,
	802, 260, 478, 261, 262, 263, 264, 265, 803, 334,
	335, 804, 805, 266, 267, 336, 268, 337, 806, 269,
	270, 271, 272, 273, 274, 275, 807, 808, 276, 277,
	278, 279, 280, 809, 810, 281, 282, 283, 284, 285,
	338, 339, 811, 286, 479, 287, 288, 289, 290, 812,
	813, 291, 814, 815, 292, 293, 294, 295, 296, 297,
	340, 341, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 0, 0, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 739, 41, 42, 43, 740,
	741, 742, 743, 744, 745, 746, 44, 45, 747, 46,
	47, 459, 48, 49, 50, 301, 302, 460, 303, 304,
	748, 51, 52, 53, 54, 55, 749, 750, 56, 57,
	305, 306, 58, 751, 59, 60, 61, 62, 307, 752,
	683, 753, 63, 64, 65, 66, 461, 67, 68, 69,
	754, 70, 71, 72, 73, 74, 75, 755, 462, 76,
	77, 78, 756, 757, 758, 684, 759, 760, 761, 79,
	80, 81, 82, 83, 84, 308, 309, 85, 762, 86,
	763, 87, 88, 89, 90, 91, 764, 92, 93, 94,
	765, 766, 95, 96, 97, 98, 99, 767, 100, 101,
	102, 768, 103, 104, 105, 769, 106, 107, 108, 109,
	310, 110, 111, 112, 311, 770, 113, 771, 114, 115,
	312, 116, 772, 117, 773, 118, 463, 774, 464, 119,
	120, 121, 775, 122, 313, 776, 314, 123, 777, 124,
	125, 126, 127, 128, 465, 129, 130, 131, 132, 778,
	133, 134, 135, 136, 137, 138, 779, 139, 466, 315,
	140, 141, 142, 143, 316, 317, 780, 318, 781, 144,
	467, 468, 145, 469, 146, 147, 148, 149, 150, 782,
	783, 151, 319, 470, 152, 471, 784, 153, 154, 155,
	785, 786, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 320, 472, 321,
	171, 172, 322, 787, 173, 174, 473, 175, 788, 323,
	176, 324, 177, 178, 179, 789, 180, 790, 791, 181,
	182, 183, 792, 793, 184, 325, 474, 185, 475, 326,
	186, 187, 188, 189, 190, 191, 192, 794, 193, 194,
	327, 195, 328, 198, 196, 197, 795, 199, 200, 201,
	202, 203, 204, 205, 206, 329, 207, 208, 209, 210,
	796, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 797, 222, 223, 476, 224, 225, 226, 330,
	227, 228, 229, 230, 231, 232, 233, 234, 798, 235,
	236, 237, 238, 239, 799, 240, 241, 331, 242, 243,
	477, 244, 245, 332, 246, 800, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 801, 258,
	259, 802, 260, 478, 261, 262, 263, 264, 265, 803,
	334, 335, 804, 805, 266, 267, 336, 268, 337, 806,
	269, 270, 271, 272, 273, 274, 275, 807, 808, 276,
	277, 278, 279, 280, 809, 810, 281, 282, 283, 284,
	285, 338, 339, 811, 286, 479, 287, 288, 289, 290,
	812, 813, 291, 814, 815, 292, 293, 294, 295, 296,
	297, 340, 341, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 408, 397, 411, 0, 0, 392, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 852, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 459, 48, 49, 50, 301, 436, 460, 437,
	438, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 439, 440, 58, 0, 59, 60, 61, 62, 431,
	0, 418, 0, 63, 64, 65, 66, 461, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 462,
	76, 77, 78, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 441, 442, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 853, 0, 95, 96, 435, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 311, 403, 113, 0, 114,
	115, 443, 116, 0, 117, 0, 118, 463, 0, 464,
	119, 120, 121, 0, 122, 432, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 465, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 466,
	315, 140, 141, 142, 143, 444, 445, 0, 417, 0,
	144, 467, 468, 145, 469, 146, 147, 148, 149, 150,
	0, 0, 151, 433, 470, 152, 471, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 446, 472,
	447, 171, 172, 322, 379, 173, 174, 473, 175, 404,
	323, 176, 448, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 474, 185, 475,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 449, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 476, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 477, 244, 245, 450, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 478, 261, 262, 263, 264, 265,
	0, 451, 452, 0, 0, 266, 267, 336, 268, 337,
	402, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 453, 0, 286, 479, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 434, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 380, 0, 0, 0, 0, 0,
	0, 0, 376, 377, 854, 0, 0, 0, 408, 397,
	411, 384, 850, 392, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 459, 48, 49,
	50, 301, 436, 460, 437, 438, 0, 51, 52, 53,
	54, 55, 405, 430, 56, 57, 439, 440, 58, 0,
	59, 60, 61, 62, 431, 0, 418, 0, 63, 64,
	65, 66, 461, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 462, 76, 77, 78, 428, 419,
	424, 429, 420, 421, 425, 79, 80, 81, 82, 83,
	84, 441, 442, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	435, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	311, 403, 113, 0, 114, 115, 443, 116, 0, 117,
	0, 118, 463, 0, 464, 119, 120, 121, 0, 122,
	432, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	465, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 466, 315, 140, 141, 142, 143,
	444, 445, 0, 417, 0, 144, 467, 468, 145, 469,
	146, 147, 148, 149, 150, 0, 0, 151, 433, 470,
	152, 471, 0, 153, 154, 155, 422, 423, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 446, 472, 447, 171, 172, 322, 379,
	173, 174, 473, 175, 404, 323, 176, 448, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 474, 185, 475, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 449, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 476, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	426, 240, 241, 331, 242, 243, 477, 244, 245, 450,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 478,
	261, 262, 263, 264, 265, 0, 451, 452, 0, 0,
	266, 267, 336, 268, 337, 402, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	427, 0, 281, 282, 283, 284, 285, 338, 453, 0,
	286, 479, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 434, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 380,
	0, 0, 0, 0, 408, 397, 411, 376, 377, 392,
	410, 0, 0, 0, 0, 0, 384, 1158, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 459, 48, 49, 50, 301, 436, 460,
	437, 438, 0, 51, 52, 53, 54, 55, 405, 430,
	56, 57, 439, 440, 58, 0, 59, 60, 61, 62,
	431, 0, 418, 0, 63, 64, 65, 66, 461, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	462, 76, 77, 78, 428, 419, 424, 429, 420, 421,
	425, 79, 80, 81, 82, 83, 84, 441, 442, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 435, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 311, 403, 113, 0,
	114, 115, 443, 116, 0, 117, 0, 118, 463, 0,
	464, 119, 120, 121, 0, 122, 432, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 465, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	466, 315, 140, 141, 142, 143, 444, 445, 0, 417,
	0, 144, 467, 468, 145, 469, 146, 147, 148, 149,
	150, 0, 0, 151, 433, 470, 152, 471, 0, 153,
	154, 155, 422, 423, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 446,
	472, 447, 171, 172, 322, 379, 173, 174, 473, 175,
	404, 323, 176, 448, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 474, 185,
	475, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 449, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 476, 224, 225,
	226, 394, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 426, 240, 241, 331,
	242, 243, 477, 244, 245, 450, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 478, 261, 262, 263, 264,
	265, 0, 451, 452, 0, 0, 266, 267, 336, 268,
	337, 402, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 427, 0, 281, 282,
	283, 284, 285, 338, 453, 0, 286, 479, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 434, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 380, 0, 0, 0, 0,
	408, 397, 411, 376, 377, 392, 410, 0, 0, 0,
	0, 0, 384, 1077, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 459,
	48, 49, 50, 301, 436, 460, 437, 438, 0, 51,
	52, 53, 54, 55, 405, 430, 56, 57, 439, 440,
	58, 0, 59, 60, 61, 62, 431, 0, 418, 0,
	63, 64, 65, 66, 461, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 462, 76, 77, 78,
	428, 419, 424, 429, 420, 421, 425, 79, 80, 81,
	82, 83, 84, 441, 442, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 435, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 403, 113, 0, 114, 115, 443, 116,
	0, 117, 0, 118, 463, 0, 464, 119, 120, 121,
	0, 122, 432, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 465, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 466, 315, 140, 141,
	142, 143, 444, 445, 0, 417, 0, 144, 467, 468,
	145, 469, 146, 147, 148, 149, 150, 0, 0, 151,
	433, 470, 152, 471, 0, 153, 154, 155, 422, 423,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 446, 472, 447, 171, 172,
	322, 379, 173, 174, 473, 175, 404, 323, 176, 448,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 474, 185, 475, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 449, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 476, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 8, 235, 236, 237,
	238, 239, 426, 240, 241, 331, 242, 243, 477, 244,
	245, 450, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 10,
	260, 478, 261, 262, 263, 264, 265, 0, 451, 452,
	0, 0, 266, 267, 336, 268, 337, 402, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 427, 0, 281, 282, 283, 284, 285, 569,
	453, 0, 286, 479, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	434, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 380, 0, 0, 0, 0, 408, 397, 411, 376,
	377, 392, 410, 0, 0, 0, 0, 0, 384, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 459, 48, 49, 50, 301,
	436, 460, 437, 438, 0, 51, 52, 53, 54, 55,
	405, 430, 56, 57, 439, 440, 58, 0, 59, 60,
	61, 62, 431, 0, 418, 0, 63, 64, 65, 66,
	461, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 462, 76, 77, 78, 428, 419, 424, 429,
	420, 421, 425, 79, 80, 81, 82, 83, 84, 441,
	442, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 435, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 403,
	113, 0, 114, 115, 443, 116, 0, 117, 0, 118,
	463, 0, 464, 119, 120, 121, 0, 122, 432, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 465, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 466, 315, 140, 141, 142, 143, 444, 445,
	0, 417, 0, 144, 467, 468, 145, 469, 146, 147,
	148, 149, 150, 0, 0, 151, 433, 470, 152, 471,
	0, 153, 154, 155, 422, 423, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 446, 472, 447, 171, 172, 322, 379, 173, 174,
	473, 175, 404, 323, 176, 448, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	474, 185, 475, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 449,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 476,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 426, 240,
	241, 331, 242, 243, 477, 244, 245, 450, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 478, 261, 262,
	263, 264, 265, 0, 451, 452, 0, 0, 266, 267,
	336, 268, 337, 402, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 427, 0,
	281, 282, 283, 284, 285, 338, 453, 0, 286, 479,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 434, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 408, 397, 411, 376, 377, 392, 410, 0,
	0, 0, 0, 0, 384, 849, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 459, 48, 49, 50, 301, 436, 460, 437, 438,
	0, 51, 52, 53, 54, 55, 405, 430, 56, 57,
	439, 440, 58, 0, 59, 60, 61, 62, 431, 0,
	418, 0, 63, 64, 65, 66, 461, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 462, 76,
	77, 78, 428, 419, 424, 429, 420, 421, 425, 79,
	80, 81, 82, 83, 84, 441, 442, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 435, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 311, 403, 113, 0, 114, 115,
	443, 116, 0, 117, 0, 118, 463, 0, 464, 119,
	120, 121, 0, 122, 432, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 465, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 466, 315,
	140, 141, 142, 143, 444, 445, 0, 417, 0, 144,
	467, 468, 145, 469, 146, 147, 148, 149, 150, 0,
	0, 151, 433, 470, 152, 471, 0, 153, 154, 155,
	422, 423, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 446, 472, 447,
	171, 172, 322, 379, 173, 174, 473, 175, 404, 323,
	176, 448, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 474, 185, 475, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 449, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 476, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 426, 240, 241, 331, 242, 243,
	477, 244, 245, 450, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 478, 261, 262, 263, 264, 265, 0,
	451, 452, 0, 0, 266, 267, 336, 268, 337, 402,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 427, 0, 281, 282, 283, 284,
	285, 338, 453, 0, 286, 479, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 434, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 380, 0, 0, 0, 0, 408, 397,
	411, 376, 377, 392, 410, 0, 0, 0, 577, 829,
	384, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 459, 48, 49,
	50, 301, 436, 460, 437, 438, 0, 51, 52, 53,
	54, 55, 405, 430, 56, 57, 439, 440, 58, 0,
	59, 60, 61, 62, 431, 0, 418, 0, 63, 64,
	65, 66, 461, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 462, 76, 77, 78, 428, 419,
	424, 429, 420, 421, 425, 79, 80, 81, 82, 83,
	84, 441, 442, 85, 490, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	435, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	311, 403, 113, 0, 114, 115, 443, 116, 0, 117,
	0, 118, 463, 0, 464, 119, 120, 121, 0, 122,
	432, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	465, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 466, 315, 140, 141, 142, 143,
	444, 445, 0, 417, 0, 144, 467, 468, 145, 469,
	146, 147, 148, 149, 150, 0, 0, 151, 433, 470,
	152, 471, 0, 153, 154, 155, 422, 423, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 446, 472, 447, 171, 172, 322, 379,
	173, 174, 473, 175, 404, 323, 176, 448, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 474, 185, 475, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 449, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 476, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	426, 240, 241, 331, 242, 243, 477, 244, 245, 450,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 478,
	261, 262, 263, 264, 265, 0, 451, 452, 0, 0,
	266, 267, 336, 268, 337, 402, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	427, 0, 281, 282, 283, 284, 285, 338, 453, 0,
	286, 479, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 434, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 380,
	0, 0, 0, 0, 408, 397, 411, 376, 377, 392,
	410, 0, 0, 0, 0, 0, 384, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 459, 48, 49, 50, 301, 436, 460,
	437, 438, 0, 51, 52, 53, 54, 55, 405, 430,
	56, 57, 439, 440, 58, 0, 59, 60, 61, 62,
	431, 0, 418, 0, 63, 64, 65, 66, 461, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	462, 76, 77, 78, 428, 419, 424, 429, 420, 421,
	425, 79, 80, 81, 82, 83, 84, 441, 442, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 435, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 311, 403, 113, 0,
	114, 115, 443, 116, 0, 117, 0, 118, 463, 0,
	464, 119, 120, 121, 0, 122, 432, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 465, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	466, 315, 140, 141, 142, 143, 444, 445, 0, 417,
	0, 144, 467, 468, 145, 469, 146, 147, 148, 149,
	150, 0, 0, 151, 433, 470, 152, 471, 0, 153,
	154, 155, 422, 423, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 446,
	472, 447, 171, 172, 322, 379, 173, 174, 473, 175,
	404, 323, 176, 448, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 474, 185,
	475, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 449, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 476, 224, 225,
	226, 394, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 426, 240, 241, 331,
	242, 243, 477, 244, 245, 450, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 478, 261, 262, 263, 264,
	265, 0, 451, 452, 0, 0, 266, 267, 336, 268,
	337, 402, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 427, 0, 281, 282,
	283, 284, 285, 338, 453, 0, 286, 479, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 434, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 380, 0, 0, 0, 0,
	0, 0, 0, 376, 377, 374, 0, 0, 408, 397,
	411, 0, 384, 392, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 506, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 459, 48, 49,
	50, 301, 436, 460, 437, 438, 0, 51, 52, 53,
	54, 55, 405, 430, 56, 57, 439, 440, 58, 0,
	59, 60, 61, 62, 431, 0, 418, 0, 63, 64,
	65, 66, 461, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 462, 76, 77, 78, 428, 419,
	424, 429, 420, 421, 425, 79, 80, 81, 82, 83,
	84, 441, 442, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	435, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	311, 403, 113, 0, 114, 115, 443, 116, 0, 117,
	0, 118, 463, 0, 464, 119, 120, 121, 0, 122,
	432, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	465, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 466, 315, 140, 141, 142, 143,
	444, 445, 0, 417, 0, 144, 467, 468, 145, 469,
	146, 147, 148, 149, 150, 0, 0, 151, 433, 470,
	152, 471, 0, 153, 154, 155, 422, 423, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 446, 472, 447, 171, 172, 322, 379,
	173, 174, 473, 175, 404, 323, 176, 448, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 474, 185, 475, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 449, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 476, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	426, 240, 241, 331, 242, 243, 477, 244, 245, 450,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 478,
	261, 262, 263, 264, 265, 0, 451, 452, 0, 0,
	266, 267, 336, 268, 337, 402, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	427, 0, 281, 282, 283, 284, 285, 338, 453, 0,
	286, 479, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 434, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 380,
	0, 0, 0, 0, 408, 397, 411, 376, 377, 392,
	410, 0, 0, 0, 0, 0, 384, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 459, 48, 49, 50, 301, 436, 460,
	437, 438, 0, 51, 52, 53, 54, 55, 405, 430,
	56, 57, 439, 440, 58, 0, 59, 60, 61, 62,
	431, 0, 418, 0, 63, 64, 65, 66, 461, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	462, 76, 77, 1232, 428, 419, 424, 429, 420, 421,
	425, 79, 80, 81, 82, 83, 84, 441, 442, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 435, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 311, 403, 113, 0,
	114, 115, 443, 116, 0, 117, 0, 118, 463, 0,
	464, 119, 120, 121, 0, 122, 432, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 465, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	466, 315, 140, 141, 142, 143, 444, 445, 0, 417,
	0, 144, 467, 468, 145, 469, 146, 147, 148, 149,
	150, 0, 0, 151, 433, 470, 152, 471, 0, 153,
	154, 155, 422, 423, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 446,
	472, 447, 171, 172, 322, 379, 173, 174, 473, 175,
	404, 323, 176, 448, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 474, 185,
	475, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 449, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 476, 224, 225,
	226, 394, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 426, 240, 241, 331,
	242, 243, 477, 244, 245, 450, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 478, 261, 262, 263, 264,
	265, 0, 451, 452, 0, 0, 266, 267, 336, 268,
	337, 402, 269, 270, 271, 272, 1231, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 427, 0, 281, 282,
	283, 284, 285, 338, 453, 0, 286, 479, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 434, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 380, 0, 0, 0, 0,
	408, 397, 411, 376, 377, 392, 410, 0, 0, 0,
	0, 0, 384, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 459,
	48, 49, 50, 1230, 436, 460, 437, 438, 0, 51,
	52, 53, 54, 55, 405, 430, 56, 57, 439, 440,
	58, 0, 59, 60, 61, 62, 431, 0, 418, 0,
	63, 64, 65, 66, 461, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 462, 76, 77, 1232,
	428, 419, 424, 429, 420, 421, 425, 79, 80, 81,
	82, 83, 84, 441, 442, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 435, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 403, 113, 0, 114, 115, 443, 116,
	0, 117, 0, 118, 463, 0, 464, 119, 120, 121,
	0, 122, 432, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 465, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 466, 315, 140, 141,
	142, 143, 444, 445, 0, 417, 0, 144, 467, 468,
	145, 469, 146, 147, 148, 149, 150, 0, 0, 151,
	433, 470, 152, 471, 0, 153, 154, 155, 422, 423,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 446, 472, 447, 171, 172,
	322, 379, 173, 174, 473, 175, 404, 323, 176, 448,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 474, 185, 475, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 449, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 476, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 426, 240, 241, 331, 242, 243, 477, 244,
	245, 450, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 478, 261, 262, 263, 264, 265, 0, 451, 452,
	0, 0, 266, 267, 336, 268, 337, 402, 269, 270,
	271, 272, 1231, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 427, 0, 281, 282, 283, 284, 285, 338,
	453, 0, 286, 479, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	434, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 380, 0, 0, 0, 0, 408, 397, 411, 376,
	377, 392, 410, 0, 0, 0, 0, 0, 384, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 459, 48, 49, 50, 301,
	436, 460, 437, 438, 0, 51, 52, 53, 54, 55,
	405, 430, 56, 57, 439, 440, 58, 0, 59, 60,
	61, 62, 431, 0, 418, 0, 63, 64, 65, 66,
	461, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 462, 76, 77, 78, 428, 419, 424, 429,
	420, 421, 425, 79, 80, 81, 82, 83, 84, 441,
	442, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 435, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 403,
	113, 0, 114, 115, 443, 116, 0, 117, 0, 118,
	463, 0, 464, 119, 120, 121, 0, 122, 432, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 465, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 466, 315, 140, 141, 142, 143, 444, 445,
	0, 417, 0, 144, 467, 468, 145, 469, 146, 147,
	148, 149, 150, 0, 0, 151, 433, 470, 152, 471,
	0, 153, 154, 155, 422, 423, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 446, 472, 447, 171, 172, 322, 379, 173, 174,
	473, 175, 404, 323, 176, 448, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	474, 185, 475, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 449,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 476,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 426, 240,
	241, 331, 242, 243, 477, 244, 245, 450, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 478, 261, 262,
	263, 264, 265, 0, 451, 452, 0, 0, 266, 267,
	336, 268, 337, 402, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 427, 0,
	281, 282, 283, 284, 285, 338, 453, 0, 286, 479,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 434, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 408, 397, 411, 376, 377, 392, 410, 0,
	0, 0, 0, 0, 384, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 459, 48, 49, 50, 301, 436, 460, 437, 438,
	0, 51, 52, 53, 54, 55, 405, 430, 56, 57,
	439, 440, 58, 0, 59, 60, 61, 62, 431, 0,
	418, 0, 63, 64, 65, 66, 461, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 462, 76,
	77, 78, 428, 419, 424, 429, 420, 421, 425, 79,
	80, 81, 82, 83, 84, 441, 442, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 435, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 311, 403, 113, 0, 114, 115,
	443, 116, 0, 117, 0, 118, 463, 0, 464, 119,
	120, 121, 0, 122, 432, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 465, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 466, 315,
	140, 141, 142, 143, 444, 445, 0, 417, 0, 144,
	467, 468, 145, 469, 146, 147, 148, 149, 150, 0,
	0, 151, 433, 470, 152, 471, 0, 153, 154, 155,
	422, 423, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 446, 472, 447,
	171, 172, 322, 0, 173, 174, 473, 175, 404, 323,
	176, 448, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 474, 185, 475, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 449, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 476, 224, 225, 226, 950,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 426, 240, 241, 331, 242, 243,
	477, 244, 245, 450, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 478, 261, 262, 263, 264, 265, 0,
	451, 452, 0, 0, 266, 267, 336, 268, 337, 402,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 427, 0, 281, 282, 283, 284,
	285, 338, 453, 0, 286, 479, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 434, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 0, 0, 0, 0, 0, 408, 397,
	411, 946, 947, 392, 410, 0, 0, 0, 0, 0,
	949, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 459, 48, 49,
	50, 301, 436, 460, 437, 438, 0, 51, 52, 53,
	54, 55, 405, 430, 56, 57, 439, 440, 58, 0,
	59, 60, 61, 62, 431, 0, 418, 0, 63, 64,
	65, 66, 461, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 462, 76, 77, 78, 428, 419,
	424, 429, 420, 421, 425, 79, 80, 81, 82, 83,
	84, 441, 442, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	435, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	311, 403, 113, 0, 114, 115, 443, 116, 0, 117,
	0, 118, 463, 0, 464, 119, 120, 121, 0, 122,
	432, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	465, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 466, 315, 140, 141, 142, 143,
	444, 445, 0, 417, 0, 144, 0, 468, 145, 469,
	146, 147, 148, 149, 150, 0, 0, 151, 433, 470,
	152, 471, 0, 153, 154, 155, 422, 423, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 446, 472, 447, 171, 172, 322, 0,
	173, 174, 473, 175, 404, 323, 176, 448, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 474, 185, 475, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 449, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 476, 224, 225, 226, 950, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	426, 240, 241, 331, 242, 243, 477, 244, 245, 450,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 478,
	261, 262, 263, 264, 265, 0, 451, 452, 0, 0,
	266, 267, 336, 268, 337, 402, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	427, 0, 281, 282, 283, 284, 285, 338, 453, 0,
	286, 479, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 434, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 0,
	0, 0, 0, 0, 408, 397, 411, 946, 947, 392,
	410, 0, 0, 0, 0, 0, 949, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 459, 48, 49, 50, 0, 436, 460,
	437, 438, 0, 51, 52, 53, 54, 55, 405, 430,
	56, 57, 439, 440, 58, 0, 59, 60, 61, 62,
	431, 0, 418, 0, 63, 64, 65, 66, 461, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	462, 76, 77, 1232, 428, 419, 424, 429, 420, 421,
	425, 79, 80, 81, 82, 83, 84, 441, 442, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 435, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 311, 403, 113, 0,
	114, 115, 443, 116, 0, 117, 0, 118, 463, 0,
	464, 119, 120, 121, 0, 122, 432, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 0, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	466, 315, 140, 141, 142, 143, 444, 445, 0, 417,
	0, 144, 0, 0, 145, 469, 146, 147, 148, 149,
	150, 0, 0, 151, 433, 470, 152, 0, 0, 153,
	154, 155, 422, 423, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 446,
	472, 447, 171, 172, 322, 379, 173, 174, 0, 175,
	404, 323, 176, 448, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 474, 185,
	475, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 449, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 476, 224, 225,
	226, 394, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 426, 240, 241, 331,
	242, 243, 0, 244, 245, 450, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 478, 261, 262, 263, 264,
	265, 0, 451, 452, 0, 0, 266, 267, 336, 268,
	337, 402, 269, 270, 271, 272, 1231, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 427, 0, 281, 282,
	283, 284, 285, 338, 453, 0, 286, 479, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 434, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 0, 0, 0, 0, 0,
	408, 397, 411, 376, 377, 392, 410, 0, 0, 0,
	0, 0, 384, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 459,
	48, 49, 50, 0, 436, 460, 437, 438, 0, 51,
	52, 53, 54, 55, 405, 430, 56, 57, 439, 440,
	58, 0, 59, 60, 61, 62, 431, 0, 418, 0,
	63, 64, 65, 66, 461, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 462, 76, 77, 78,
	428, 419, 424, 429, 420, 421, 425, 79, 80, 81,
	82, 83, 84, 441, 442, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 435, 98, 99, 0, 100, 101, 102, 0,
	103, 0, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 403, 113, 0, 114, 115, 443, 116,
	0, 117, 0, 118, 463, 0, 464, 119, 120, 121,
	0, 122, 432, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 0, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 466, 315, 140, 141,
	142, 143, 444, 445, 0, 417, 0, 144, 0, 0,
	145, 469, 146, 147, 148, 149, 150, 0, 0, 151,
	433, 470, 152, 0, 0, 153, 154, 155, 422, 423,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 446, 472, 447, 171, 172,
	322, 379, 173, 174, 0, 175, 404, 323, 176, 448,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 474, 185, 475, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 449, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 476, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 426, 240, 241, 331, 242, 243, 0, 244,
	245, 450, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 478, 261, 262, 263, 264, 265, 0, 451, 452,
	0, 0, 266, 267, 336, 268, 337, 402, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 427, 0, 281, 282, 283, 284, 285, 338,
	453, 0, 286, 479, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	434, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 0, 0, 0, 0, 0, 0, 30, 0, 376,
	377, 0, 835, 0, 0, 0, 0, 0, 384, 845,
	846, 847, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 0, 48, 49, 50,
	301, 302, 0, 303, 304, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 305, 306, 58, 0, 59,
	60, 61, 62, 307, 0, 0, 0, 63, 64, 65,
	66, 0, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 0, 76, 77, 78, 0, 0, 0,
	0, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 97,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 310, 110, 111, 112, 311,
	0, 113, 0, 114, 115, 312, 116, 0, 117, 0,
	118, 0, 0, 0, 119, 120, 121, 0, 122, 313,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 0,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 0, 315, 140, 141, 142, 143, 316,
	317, 0, 318, 0, 144, 0, 0, 145, 0, 146,
	147, 148, 149, 150, 0, 0, 151, 319, 0, 152,
	0, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 0, 321, 171, 172, 322, 0, 173,
	174, 0, 175, 0, 323, 176, 324, 177, 178, 179,
	0, 180, 0, 0, 181, 182, 183, 0, 0, 184,
	325, 0, 185, 0, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	0, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 331, 242, 243, 0, 244, 245, 332, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 0, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 338, 339, 0, 286,
	0, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 30, 0,
	0, 0, 842, 843, 844, 0, 836, 837, 838, 839,
	840, 841, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 0,
	0, 0, 44, 45, 0, 46, 47, 0, 48, 49,
	50, 301, 302, 0, 303, 304, 0, 51, 52, 53,
	54, 55, 0, 0, 56, 57, 305, 306, 58, 0,
	59, 60, 61, 62, 307, 0, 0, 0, 63, 64,
	65, 66, 0, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 0, 76, 77, 78, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 81, 82, 83,
	84, 308, 309, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	97, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 310, 110, 111, 112,
	311, 0, 113, 0, 114, 115, 312, 116, 0, 117,
	0, 118, 0, 0, 0, 119, 120, 121, 0, 122,
	313, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	0, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 0, 315, 140, 141, 142, 143,
	316, 317, 0, 318, 0, 144, 0, 0, 145, 0,
	146, 147, 148, 149, 150, 0, 0, 151, 319, 0,
	152, 0, 0, 153, 154, 155, 0, 0, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 320, 0, 321, 171, 172, 322, 0,
	173, 174, 0, 175, 0, 323, 176, 324, 177, 178,
	179, 0, 180, 0, 0, 181, 182, 183, 0, 0,
	184, 325, 0, 185, 0, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 329, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 0, 224, 225, 226, 330, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	0, 240, 241, 331, 242, 243, 0, 244, 245, 332,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 0,
	261, 262, 263, 264, 265, 0, 334, 335, 0, 0,
	266, 267, 336, 268, 337, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	0, 0, 281, 282, 283, 284, 285, 338, 339, 0,
	286, 0, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 341, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 0,
	0, 0, 30, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 989, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 0, 0, 0, 44, 45, 0, 46,
	47, 0, 48, 49, 50, 301, 302, 0, 303, 304,
	0, 51, 52, 53, 54, 55, 0, 0, 56, 57,
	305, 306, 58, 0, 59, 60, 61, 62, 307, 0,
	0, 0, 63, 64, 65, 66, 0, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 0, 76,
	77, 78, 0, 0, 0, 0, 0, 0, 0, 79,
	80, 81, 82, 83, 84, 308, 309, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 97, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	310, 110, 111, 112, 311, 0, 113, 0, 114, 115,
	312, 116, 0, 117, 0, 118, 0, 0, 0, 119,
	120, 121, 0, 122, 313, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 0, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 0, 315,
	140, 141, 142, 143, 316, 317, 0, 318, 0, 144,
	0, 0, 145, 0, 146, 147, 148, 149, 150, 0,
	0, 151, 319, 0, 152, 0, 0, 153, 154, 155,
	0, 0, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 320, 0, 321,
	171, 172, 322, 0, 173, 174, 0, 175, 0, 323,
	176, 324, 177, 178, 179, 0, 180, 0, 0, 181,
	182, 183, 0, 0, 184, 325, 0, 185, 0, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 329, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 0, 224, 225, 226, 330,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 0, 240, 241, 331, 242, 243,
	0, 244, 245, 332, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 0, 261, 262, 263, 264, 265, 0,
	334, 335, 0, 0, 266, 267, 336, 268, 337, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 0, 0, 281, 282, 283, 284,
	285, 338, 339, 0, 286, 0, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 341, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 0, 0, 0, 30, 0, 0, 392,
	0, 0, 1051, 0, 0, 0, 1061, 1062, 1063, 0,
	486, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 1072, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 0, 48, 49, 50, 301,
	302, 0, 303, 304, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 305, 306, 58, 0, 59, 60,
	61, 62, 307, 0, 0, 0, 63, 64, 65, 66,
	0, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 0, 76, 77, 78, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 97, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 0,
	113, 0, 114, 115, 312, 116, 0, 117, 0, 118,
	0, 0, 0, 119, 120, 121, 0, 122, 313, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 0, 315, 140, 141, 142, 143, 316, 317,
	0, 318, 1065, 144, 0, 0, 145, 0, 146, 147,
	148, 149, 150, 0, 0, 151, 319, 0, 152, 0,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 0, 321, 171, 172, 322, 0, 173, 174,
	0, 175, 0, 323, 176, 324, 177, 178, 179, 0,
	180, 1066, 28, 181, 182, 183, 0, 0, 184, 325,
	0, 185, 0, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 329,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 0,
	224, 225, 226, 330, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 331, 242, 243, 0, 244, 245, 332, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 0, 261, 262,
	263, 264, 265, 0, 334, 335, 0, 0, 266, 267,
	336, 268, 337, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 338, 339, 0, 286, 0,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 30, 0, 1058,
	1059, 1060, 0, 1052, 1053, 1054, 1055, 1056, 1057, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 0, 48, 49, 50,
	301, 302, 0, 303, 304, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 305, 306, 58, 0, 59,
	60, 61, 62, 307, 0, 0, 0, 63, 64, 65,
	66, 0, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 0, 76, 77, 78, 0, 0, 0,
	0, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 97,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 310, 110, 111, 112, 311,
	0, 113, 0, 114, 115, 312, 116, 0, 117, 0,
	118, 0, 0, 0, 119, 120, 121, 0, 122, 313,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 0,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 0, 315, 140, 141, 142, 143, 316,
	317, 0, 318, 0, 144, 0, 0, 145, 0, 146,
	147, 148, 149, 150, 0, 0, 151, 319, 0, 152,
	0, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 0, 321, 171, 172, 322, 0, 173,
	174, 0, 175, 0, 323, 176, 324, 177, 178, 179,
	0, 180, 0, 0, 181, 182, 183, 0, 0, 184,
	325, 0, 185, 0, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	0, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 331, 242, 243, 0, 244, 245, 332, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 0, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 338, 339, 0, 286,
	0, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 30, 0,
	0, 392, 0, 0, 1051, 0, 0, 0, 1061, 1062,
	1063, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 1050, 0, 0, 0, 0,
	0, 0, 44, 45, 0, 46, 47, 0, 48, 49,
	50, 301, 302, 0, 303, 304, 0, 51, 52, 53,
	54, 55, 0, 0, 56, 57, 305, 306, 58, 0,
	59, 60, 61, 62, 307, 0, 0, 0, 63, 64,
	65, 66, 0, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 0, 76, 77, 78, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 81, 82, 83,
	84, 308, 309, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	97, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 310, 110, 111, 112,
	311, 0, 113, 0, 114, 115, 312, 116, 0, 117,
	0, 118, 0, 0, 0, 119, 120, 121, 0, 122,
	313, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	0, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 0, 315, 140, 141, 142, 143,
	316, 317, 0, 318, 1065, 144, 0, 0, 145, 0,
	146, 147, 148, 149, 150, 0, 0, 151, 319, 0,
	152, 0, 0, 153, 154, 155, 0, 0, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 320, 0, 321, 171, 172, 322, 0,
	173, 174, 0, 175, 0, 323, 176, 324, 177, 178,
	179, 0, 180, 1066, 0, 181, 182, 183, 0, 0,
	184, 325, 0, 185, 0, 326, 186, 187, 188, 189,
	0, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 0,
	206, 329, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 0, 224, 225, 226, 330, 0, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	0, 240, 241, 331, 242, 243, 0, 244, 245, 332,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 0,
	261, 262, 263, 264, 265, 0, 334, 335, 0, 0,
	266, 267, 336, 268, 337, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	0, 0, 281, 282, 283, 284, 285, 338, 339, 0,
	286, 0, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 341, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 680,
	0, 1058, 1059, 1060, 0, 1052, 1053, 1054, 1055, 1056,
	1057, 0, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	0, 0, 0, 44, 45, 0, 46, 47, 459, 48,
	49, 50, 0, 666, 460, 682, 672, 0, 51, 52,
	53, 54, 55, 0, 0, 56, 57, 686, 685, 58,
	0, 59, 60, 61, 62, 0, 0, 683, 0, 63,
	64, 65, 66, 461, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 462, 76, 77, 78, 0,
	0, 0, 684, 0, 0, 0, 79, 80, 81, 82,
	83, 84, 670, 669, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 435, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 0, 110, 111,
	112, 0, 0, 113, 0, 114, 115, 668, 116, 0,
	117, 0, 118, 463, 0, 464, 119, 120, 121, 0,
	122, 0, 0, 0, 123, 0, 124, 125, 126, 127,
	128, 465, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 466, 0, 140, 141, 142,
	143, 663, 664, 0, 679, 0, 144, 467, 468, 145,
	469, 146, 147, 148, 149, 150, 0, 0, 151, 0,
	470, 152, 471, 0, 153, 154, 155, 0, 0, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 688, 472, 689, 171, 172, 0,
	0, 173, 174, 473, 175, 0, 0, 176, 671, 177,
	178, 179, 0, 180, 0, 0, 181, 182, 183, 0,
	0, 184, 0, 474, 185, 475, 0, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 0, 195, 0,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 667, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 476, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 0, 240, 241, 655, 242, 243, 477, 244, 245,
	665, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 0, 0, 258, 259, 0, 260,
	478, 261, 262, 263, 264, 265, 0, 678, 677, 0,
	0, 266, 267, 0, 268, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 0, 0, 281, 282, 283, 284, 285, 0, 687,
	0, 286, 479, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 299, 300,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 0,
	0, 0, 44, 45, 0, 46, 47, 459, 48, 49,
	50, 0, 666, 460, 682, 672, 0, 51, 52, 53,
	54, 55, 0, 0, 56, 57, 686, 685, 58, 0,
	59, 60, 61, 62, 0, 0, 683, 0, 63, 64,
	65, 66, 461, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 462, 76, 77, 78, 0, 0,
	0, 684, 0, 0, 0, 79, 80, 81, 82, 83,
	84, 670, 669, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	435, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 0, 110, 111, 112,
	0, 0, 113, 0, 114, 115, 668, 116, 0, 117,
	0, 118, 463, 0, 464, 119, 120, 121, 0, 122,
	0, 0, 0, 123, 0, 124, 125, 126, 127, 128,
	465, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 466, 0, 140, 141, 142, 143,
	663, 664, 0, 679, 0, 144, 467, 468, 145, 469,
	146, 147, 148, 149, 150, 0, 0, 151, 0, 470,
	152, 471, 0, 153, 154, 155, 0, 0, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 688, 472, 689, 171, 172, 0, 0,
	173, 174, 473, 175, 0, 0, 176, 671, 177, 178,
	179, 0, 180, 0, 0, 181, 182, 183, 0, 0,
	184, 0, 474, 185, 475, 0, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 0, 195, 0, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 667, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 476, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	0, 240, 241, 0, 242, 243, 477, 244, 245, 665,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 0, 0, 258, 259, 0, 260, 478,
	261, 262, 263, 264, 265, 0, 678, 677, 0, 0,
	266, 267, 0, 268, 0, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	0, 0, 281, 282, 283, 284, 285, 0, 687, 0,
	286, 479, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 0, 0, 0,
	0, 0, 556, 0, 0, 526, 298, 299, 300, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 556, 0, 0, 526, 0, 542, 0, 538, 539,
	540, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	551, 556, 0, 0, 526, 542, 0, 0, 538, 539,
	540, 0, 0, 528, 0, 0, 0, 556, 0, 551,
	526, 0, 0, 0, 527, 542, 0, 0, 0, 0,
	0, 0, 0, 528, 0, 0, 0, 0, 556, 551,
	0, 526, 0, 527, 0, 538, 539, 540, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 0,
	526, 0, 542, 527, 538, 539, 540, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 551, 556, 0, 527,
	526, 542, 0, 0, 538, 539, 540, 0, 0, 528,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 556,
	527, 542, 526, 0, 0, 0, 0, 0, 0, 528,
	0, 0, 0, 0, 556, 551, 0, 526, 0, 527,
	0, 538, 539, 540, 0, 0, 0, 0, 0, 546,
	0, 528, 0, 0, 552, 0, 0, 0, 542, 527,
	0, 0, 0, 934, 0, 0, 528, 0, 546, 0,
	0, 0, 551, 552, 0, 548, 549, 0, 0, 0,
	0, 527, 0, 0, 0, 0, 0, 0, 546, 0,
	544, 0, 0, 552, 548, 549, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	0, 0, 0, 0, 548, 549, 0, 0, 0, 0,
	0, 550, 0, 0, 0, 546, 0, 0, 0, 544,
	552, 0, 0, 0, 557, 0, 0, 543, 0, 0,
	550, 0, 0, 0, 546, 927, 0, 0, 0, 552,
	0, 548, 549, 557, 0, 0, 543, 0, 0, 0,
	550, 0, 0, 0, 546, 0, 544, 0, 0, 552,
	548, 549, 0, 557, 0, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 0, 0, 0, 557,
	548, 549, 0, 0, 0, 0, 0, 550, 0, 0,
	0, 546, 0, 0, 0, 544, 552, 0, 0, 0,
	557, 0, 0, 543, 0, 547, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 549, 557,
	0, 0, 543, 0, 547, 0, 550, 0, 0, 0,
	0, 0, 544, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 543, 0, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 543,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 0,
	547, 0, 535, 536, 537, 0, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 1199, 545, 0, 0,
	547, 535, 536, 537, 0, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 1171, 0, 545, 0, 0,
	0, 535, 536, 537, 0, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 1160, 0, 547, 0, 0,
	0, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 535, 536,
	537, 0, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 1106, 545, 0, 0, 0, 535, 536, 537,
	0, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 1080, 0, 545, 0, 0, 0, 535, 536, 537,
	0, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 1013, 0, 556, 0, 0, 526, 0, 0, 0,
	538, 539, 540, 529, 530, 531, 532, 533, 534, 0,
	545, 0, 0, 0, 535, 536, 537, 542, 529, 530,
	531, 532, 533, 534, 0, 528, 556, 0, 820, 526,
	0, 551, 0, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 0, 0, 526, 0, 0,
	542, 538, 539, 540, 648, 527, 0, 0, 528, 0,
	0, 0, 0, 0, 551, 0, 0, 0, 542, 0,
	0, 0, 1027, 0, 0, 0, 528, 556, 0, 0,
	526, 0, 551, 0, 538, 539, 540, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 1026, 0, 527, 0, 0, 528,
	0, 0, 555, 0, 0, 551, 0, 556, 0, 0,
	526, 0, 0, 0, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 0, 0, 527,
	0, 542, 0, 0, 554, 0, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 0,
	546, 0, 0, 0, 0, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	0, 0, 0, 0, 0, 0, 548, 549, 1245, 0,
	0, 0, 0, 546, 0, 0, 0, 0, 552, 0,
	0, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 552, 0, 0, 548,
	549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 550, 0, 544, 0, 0, 548, 549, 0,
	0, 0, 0, 0, 546, 557, 0, 0, 543, 552,
	0, 0, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	548, 549, 0, 0, 0, 0, 556, 0, 557, 526,
	0, 543, 0, 550, 546, 544, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 0,
	548, 549, 0, 0, 551, 0, 550, 0, 1244, 0,
	0, 0, 0, 0, 0, 544, 547, 0, 556, 557,
	0, 526, 543, 0, 0, 538, 539, 540, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 0, 550, 0, 0, 547,
	528, 0, 0, 0, 0, 0, 551, 0, 0, 557,
	0, 0, 543, 0, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 646, 0, 0, 0, 0, 545,
	0, 0, 0, 535, 536, 537, 0, 529, 530, 531,
	532, 533, 534, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 0, 552, 0,
	547, 0, 545, 0, 0, 0, 535, 536, 537, 0,
	529, 530, 531, 532, 533, 534, 0, 0, 0, 0,
	545, 0, 0, 0, 535, 536, 537, 0, 529, 530,
	531, 532, 533, 534, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 0,
	552, 0, 0, 545, 0, 0, 0, 535, 536, 537,
	0, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 548, 549, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 544, 556, 0, 0,
	526, 0, 0, 545, 538, 539, 540, 535, 536, 537,
	0, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 542, 0, 0, 996, 0, 0, 550, 0, 528,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 556,
	557, 0, 526, 543, 0, 0, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	0, 0, 0, 542, 0, 0, 0, 556, 0, 547,
	526, 528, 0, 0, 538, 539, 540, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 0,
	526, 542, 0, 0, 538, 539, 540, 0, 0, 528,
	0, 527, 0, 0, 556, 551, 0, 526, 0, 0,
	0, 538, 539, 540, 0, 0, 0, 0, 0, 528,
	0, 547, 0, 0, 0, 551, 0, 0, 0, 527,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 527,
	1102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 545, 0, 546, 0, 527, 0, 0, 552,
	529, 530, 531, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 546, 0, 0, 0,
	0, 552, 0, 0, 545, 0, 0, 0, 535, 536,
	537, 0, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 548, 549, 546, 0, 550, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 544, 0, 557,
	0, 0, 543, 0, 546, 0, 0, 0, 0, 552,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 544, 552, 0, 550, 0,
	548, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 544, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 550, 0, 0, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 545, 0, 0, 0, 535, 536, 537,
	0, 529, 530, 531, 532, 533, 534, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 535,
	536, 537, 0, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 535, 536, 537,
	0, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 535, 536, 537,
	0, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	545, 0, 0, 0, 535, 536, 537, 0, 529, 530,
	531, 532, 533, 534,
}
var yyPact = []int{

	-194, -1000, -331, -1000, -1000, -1000, 195, -194, 417, -336,
	10762, -237, -1000, -1000, 181, 416, 416, 416, 389, -270,
	-271, 5530, 5530, -1000, 65, -237, -1000, -200, 10328, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	5094, 197, 267, 266, 62, 76, 217, -1000, 5974, 198,
	7282, 89, -194, -1000, -1000, -194, -194, 7282, -1000, -1000,
	-1000, -341, -1000, 13578, -1000, -1000, 7282, 7282, 7282, 7282,
	7282, 48, -1000, -1000, 3786, -1000, -1000, -328, -217, -272,
	-1000, -1000, -1000, -261, -219, -328, -1000, -1000, -1000, 182,
	463, 167, -1000, -1000, -1000, 7282, 250, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 262, -1000,
	-220, -221, -222, -223, -1000, -1000, -1000, -1000, -1000, -1000,
	-224, -225, -228, -229, -231, 17, -1000, -145, -1000, -145,
	-145, -245, -245, -244, -1000, -1000, 371, -145, -245, -1000,
	-1000, -278, -276, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	116, -341, -232, -1000, -1000, -1000, 11193, -347, -1000, 14040,
	-1000, -1000, -1000, -1000, -1000, -1000, 70, 71, -1000, 150,
	-1000, -50, -1000, -1000, -1000, 14040, -1000, 174, -1000, -1000,
	-1000, -15, 14040, -1000, 42, 11193, 173, -1000, -1000, -1000,
	173, -342, -1000, 13487, 255, 5530, 12055, 11193, -92, 7282,
	7282, 7282, 7282, 7282, 7282, 7282, 7282, 7282, 7282, 7282,
	7282, 9026, 7282, 7282, 7282, 274, 7282, -99, 658, -1000,
	-1000, 243, -246, 259, 2038, -1000, -1000, -236, -1000, -1000,
	446, 446, 316, 14088, 14088, -144, 13045, -337, -344, -237,
	-328, -1000, 1607, 7282, -1000, -1000, -1000, 4658, 9463, 4222,
	-328, 2469, -1000, -1000, 190, 458, -152, 14040, 50, -238,
	-240, 458, 458, 458, 458, 7282, 7282, 7282, 7282, 7282,
	-1000, -241, -1000, -1000, -1000, -1000, 7282, -1000, -1000, 458,
	-145, -145, -1000, -1000, 458, -1000, -94, -95, 458, -1000,
	458, -1000, -41, 255, 7282, -281, 5094, -1000, -1000, -131,
	-1000, -15, -1000, 7282, -1000, 458, 458, -1000, -1000, -1000,
	-1000, -1000, 138, -345, -1000, 7282, 374, -189, -1000, -1000,
	-158, 7282, -1000, -1000, 413, 12474, -1000, -1000, -1000, -1000,
	-1000, -43, -323, -1000, -1000, -1000, -1000, -1000, -244, -245,
	-245, -245, -1000, -1000, -1000, -1000, -1000, -276, -278, -1000,
	-1000, -1000, -145, -1000, -1000, -145, -145, -1000, 371, -145,
	-1000, -317, -182, 228, 228, 238, 238, 238, 425, 13737,
	13737, 13737, 13737, 13737, 13737, 316, 14088, 14068, 13030, 7282,
	7282, -100, 241, -246, 12948, 7282, -1000, 857, -1000, -1000,
	-1000, 253, -248, 7718, 7718, -1000, -1000, -1000, 3786, -249,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9463, -1000, -250, 7282,
	-1000, 7282, -1000, -1000, -1000, -1000, 86, -355, -390, -1000,
	14040, -1000, -282, -1000, -320, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -356, -1000,
	-1000, -218, 7282, 7282, -283, -1000, 14040, 449, -1000, -1000,
	-101, -1000, -102, -104, -108, -1000, -251, -285, 130, -1000,
	7282, -1000, 9894, -156, 7282, -287, -288, -289, -290, 13998,
	-362, -363, -364, -368, 7282, -369, -291, -1000, -1000, -297,
	-185, -186, -298, -299, 11193, -158, -370, -1000, -1000, -1000,
	63, 13008, -1000, -1000, -1000, 11193, -1000, -189, -1000, -252,
	-1000, 222, 230, 7282, -45, -1000, 13538, -208, -206, 412,
	-1000, 458, -1000, -329, 2038, -322, 7282, 7282, 1156, 213,
	7282, 7718, 7718, -1000, 7282, 185, -1000, -1000, -1000, -1000,
	247, -254, 7282, 12055, 11622, -1000, 7718, 7718, 7718, 3786,
	-259, 10760, -374, -1000, 3786, -300, 3350, -348, -328, 12988,
	-1000, 7282, 7282, -1000, -1000, -207, -1000, 9463, -1000, -304,
	7282, -1000, -218, -218, -1000, 7282, 7282, 119, 121, 60,
	-31, 458, 463, 290, -1000, 7282, 13789, -1000, -1000, 11624,
	7282, 12969, -1000, -1000, -1000, -1000, 12055, -1000, -1000, -1000,
	-1000, -376, -1000, -1000, -172, -1000, -1000, -172, 366, -1000,
	230, -1000, -1000, -1000, -1000, -1000, 9463, -1000, -1000, 207,
	386, 14040, 7282, 164, 163, 7282, 475, -1000, 186, 458,
	-208, -209, -305, 2038, -1000, -1000, 415, 353, 7282, 7282,
	64, 343, 201, 353, 7282, 7282, 12055, 14105, -382, -1000,
	7282, 12055, 7718, 7718, 7718, 7718, 7718, 7718, 7718, 7718,
	7718, 7718, 7718, 7718, 8154, 216, -261, 441, 441, 444,
	-349, 2914, 7282, -1000, 12932, -1000, -386, -1000, 7282, -1000,
	-1000, 13454, 14040, -1000, -1000, 463, -1000, -306, -308, 14040,
	14040, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -309, -1000,
	-1000, 14040, 7282, 36, -1000, 12912, -1000, -312, -1000, -1000,
	-1000, -1000, 207, -314, -162, 7282, 7282, -1000, 7282, 7282,
	4, -1000, -1000, -212, -214, 458, -1000, -1000, 353, 353,
	7282, 7282, 7282, 353, 14105, -388, -1000, 12055, 353, -1000,
	288, 288, 239, 239, 239, 441, 109, 109, 109, 109,
	109, 109, 444, 246, 218, -262, 7282, -393, -1000, 353,
	-1000, -1000, 12893, -1000, -1000, -1000, -1000, -1000, 14040, 57,
	383, -1000, -1000, -162, -1000, -1000, 11193, 14040, -378, -1000,
	14040, -1000, -1000, -265, 7282, -1000, -1000, -215, 353, 353,
	353, -1000, -1000, 7718, 225, -266, 12055, 134, -1000, -1000,
	7, 7282, -1000, -384, -1000, 409, 7282, 471, 14040, -1000,
	363, 7718, 12055, -398, -1000, -315, 6846, 6846, -397, 11193,
	-267, -1000, -400, -1000, 363, -405, -1000, -1000, -1000, -1000,
	8590, 158, -23, 13505, -1000, -1000, -1000, 468, -1000, -1000,
	418, -1000, -1000, -1000, -1000, -1000, -1000, 6410, -1000,
}
var yyPgo = []int{

	0, 757, 756, 494, 41, 492, 287, 754, 749, 459,
	748, 13, 745, 5, 44, 304, 413, 385, 38, 741,
	739, 23, 33, 10, 470, 738, 732, 20, 25, 46,
	36, 729, 729, 30, 50, 728, 723, 339, 719, 282,
	314, 718, 717, 714, 712, 693, 316, 692, 317, 677,
	636, 623, 621, 621, 19, 271, 609, 12, 28, 99,
	609, 599, 597, 64, 596, 0, 595, 15, 585, 7,
	26, 18, 467, 40, 69, 583, 17, 576, 158, 572,
	566, 560, 558, 550, 27, 37, 549, 452, 39, 547,
	546, 541, 31, 11, 540, 536, 535, 8, 3, 1,
	523, 520, 519, 517, 6, 2, 54, 9, 14, 516,
	514, 505, 29, 35, 504, 43, 367, 52, 342, 16,
	503, 502, 501, 345, 21, 34, 500, 343, 341, 498,
	81, 75, 497, 489, 487, 483, 32, 4, 22, 24,
	483,
}
var yyR1 = []int{

	0, 1, 1, 26, 26, 26, 27, 27, 27, 61,
	13, 13, 13, 111, 111, 112, 112, 113, 113, 124,
	124, 124, 124, 124, 124, 138, 138, 138, 125, 125,
	125, 125, 125, 125, 125, 133, 133, 133, 133, 122,
	122, 34, 34, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 79, 79, 132, 132, 134, 134,
	130, 131, 126, 126, 135, 135, 127, 128, 129, 129,
	129, 129, 129, 129, 73, 73, 28, 28, 136, 136,
	136, 136, 139, 74, 74, 74, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	107, 107, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 91, 91, 91,
	91, 91, 94, 94, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 19, 19, 20, 20, 20,
	20, 20, 18, 18, 18, 50, 50, 50, 114, 114,
	114, 114, 114, 114, 11, 11, 92, 92, 93, 93,
	93, 137, 137, 108, 108, 108, 109, 109, 2, 2,
	4, 4, 3, 3, 3, 3, 5, 5, 6, 6,
	6, 6, 6, 6, 6, 29, 72, 72, 72, 10,
	10, 12, 12, 23, 23, 24, 25, 25, 22, 22,
	67, 67, 68, 68, 69, 71, 71, 46, 46, 45,
	45, 47, 47, 48, 49, 49, 49, 49, 51, 51,
	97, 97, 96, 96, 98, 100, 100, 100, 99, 101,
	101, 102, 102, 103, 103, 103, 104, 104, 105, 105,
	105, 105, 105, 36, 36, 36, 36, 37, 37, 37,
	37, 38, 38, 39, 39, 40, 40, 41, 41, 42,
	43, 43, 43, 44, 30, 30, 31, 31, 7, 7,
	21, 21, 32, 32, 35, 35, 88, 88, 88, 89,
	89, 90, 64, 64, 64, 63, 63, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 65,
	65, 66, 66, 70, 70, 80, 83, 83, 84, 82,
	82, 81, 81, 110, 110, 54, 54, 54, 54, 55,
	55, 56, 56, 33, 33, 85, 85, 86, 86, 87,
	8, 8, 9, 9, 14, 14, 14, 14, 52, 52,
	58, 53, 53, 60, 57, 121, 121, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 78, 76,
	75, 75, 75, 59, 59, 59, 118, 118, 118, 140,
	140, 140, 140, 115, 115, 115, 115, 115, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120,
}
var yyR2 = []int{

	0, 1, 2, 1, 1, 0, 2, 2, 0, 1,
	1, 3, 2, 1, 2, 2, 3, 1, 3, 2,
	3, 5, 6, 2, 3, 3, 4, 0, 1, 1,
	1, 1, 1, 2, 4, 1, 1, 1, 1, 2,
	3, 3, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 1, 1, 1, 1,
	5, 2, 1, 1, 1, 1, 5, 2, 2, 2,
	1, 3, 3, 2, 1, 0, 3, 0, 5, 2,
	5, 2, 1, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	1, 4, 1, 3, 3, 5, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 6, 1, 3, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 5, 6, 6, 7, 1, 1, 4, 1, 1,
	1, 2, 2, 2, 2, 1, 1, 3, 5, 6,
	6, 4, 3, 1, 5, 1, 1, 4, 1, 4,
	1, 4, 1, 4, 1, 1, 1, 1, 1, 1,
	6, 4, 4, 4, 4, 1, 3, 3, 4, 4,
	7, 5, 2, 2, 0, 1, 2, 0, 1, 4,
	1, 2, 1, 2, 1, 3, 1, 3, 1, 3,
	3, 1, 3, 3, 3, 2, 1, 3, 1, 1,
	3, 3, 1, 2, 4, 4, 1, 1, 9, 9,
	1, 2, 4, 4, 4, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 3, 1, 3, 4, 3,
	3, 0, 1, 3, 1, 2, 0, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 2, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 2, 2, 0, 1, 4, 2, 2,
	2, 2, 2, 1, 2, 2, 4, 2, 2, 1,
	1, 1, 0, 2, 5, 2, 3, 1, 1, 1,
	1, 3, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 0, 5, 0, 5, 0, 4, 3, 5, 4,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 1, 4, 1, 3, 5, 1, 2, 4, 2,
	0, 1, 0, 1, 2, 2, 2, 3, 5, 1,
	2, 0, 2, 1, 0, 1, 1, 1, 3, 3,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	2, 6, 2, 3, 5, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var yyChk = []int{

	-1000, -1, -2, -3, -4, -6, -5, 452, 330, -7,
	363, 403, 455, -24, -23, 389, 198, 137, 265, -3,
	-4, -12, -10, 27, 122, 456, -36, -58, 260, -59,
	4, -116, -117, 19, 20, 21, 22, 23, 24, 25,
	26, 28, 29, 30, 38, 39, 41, 42, 44, 45,
	46, 53, 54, 55, 56, 57, 60, 61, 64, 66,
	67, 68, 69, 74, 75, 76, 77, 79, 80, 81,
	83, 84, 85, 86, 87, 88, 91, 92, 93, 101,
	102, 103, 104, 105, 106, 109, 111, 113, 114, 115,
	116, 117, 119, 120, 121, 124, 125, 126, 127, 128,
	130, 131, 132, 134, 135, 136, 138, 139, 140, 141,
	143, 144, 145, 148, 150, 151, 153, 155, 157, 161,
	162, 163, 165, 169, 171, 172, 173, 174, 175, 177,
	178, 179, 180, 182, 183, 184, 185, 186, 187, 189,
	192, 193, 194, 195, 201, 204, 206, 207, 208, 209,
	210, 213, 216, 219, 220, 221, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 242, 243, 246, 247, 249, 252, 254, 255, 256,
	258, 261, 262, 263, 266, 269, 272, 273, 274, 275,
	276, 277, 278, 280, 281, 283, 286, 287, 285, 289,
	290, 291, 292, 293, 294, 295, 296, 298, 299, 300,
	301, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	312, 313, 315, 316, 318, 319, 320, 322, 323, 324,
	325, 326, 327, 328, 329, 331, 332, 333, 334, 335,
	337, 338, 340, 341, 343, 344, 346, 348, 349, 350,
	351, 352, 353, 354, 355, 356, 357, 358, 361, 362,
	364, 366, 367, 368, 369, 370, 376, 377, 379, 382,
	383, 384, 385, 386, 387, 388, 391, 392, 393, 394,
	395, 398, 399, 400, 401, 402, 406, 408, 409, 410,
	411, 414, 417, 418, 419, 420, 421, 422, 432, 433,
	434, 47, 48, 50, 51, 62, 63, 70, 107, 108,
	142, 146, 152, 166, 168, 191, 196, 197, 199, 214,
	239, 241, 244, 251, 253, 267, 271, 282, 284, 297,
	321, 339, 345, 359, 372, 373, 378, 380, 403, 404,
	423, 424, 425, 426, 427, 428, 429, 430, 431, -87,
	452, -46, -37, -47, 154, -39, -40, -48, 218, 149,
	257, -49, -72, 27, 122, -72, -72, 53, 453, 453,
	-8, -9, -14, -15, 445, -17, 443, 444, -65, 245,
	435, -88, -110, -77, 452, -80, -94, -4, 142, 35,
	-89, -90, 9, 261, 321, -59, -78, 5, -76, -121,
	-133, -139, 381, 147, 250, 58, -91, -95, 4, -116,
	10, 6, -118, -123, -134, -135, -136, 199, 72, 95,
	98, 99, 222, 223, 96, 100, 336, 396, 94, 97,
	59, 70, 166, 214, 424, 126, 48, 50, 51, 62,
	63, 107, 108, 152, 196, 197, 239, 241, 253, 297,
	345, 372, 373, 404, -119, -130, -131, -127, -128, 43,
	49, 78, 90, 158, 160, 176, 190, 202, 203, 205,
	215, 217, 240, 248, 268, 270, 317, 342, 365, 407,
	-129, -9, 259, -87, 445, -58, 452, -86, -85, -15,
	110, -38, -37, -45, -46, -48, 154, 296, 395, 243,
	340, 206, -40, -39, -41, -15, 27, -31, 151, 242,
	-42, -44, -15, -17, -51, 255, -5, -6, -4, -5,
	-5, -25, -22, -15, -29, 456, 12, 71, 41, 443,
	444, 445, 446, 447, 448, 439, 440, 441, 16, 17,
	18, -65, 33, 264, 217, 435, 176, 342, 202, 203,
	248, 47, 181, -114, 36, 4, 9, 261, -63, -62,
	-15, -15, -15, -15, -15, 270, -15, -4, -11, 403,
	-55, -54, 454, 450, -4, -4, -108, 450, 452, 452,
	-55, 452, -76, -76, -76, 452, -81, -15, -35, 150,
	154, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	284, -73, 406, -73, -73, -34, 452, -34, -79, 452,
	63, 62, -73, -34, 452, -74, 437, 418, 452, -74,
	452, -28, 63, -29, 452, -58, 456, 453, 260, 206,
	340, -43, -75, 452, -78, 443, 444, -30, 321, 322,
	-50, 249, 344, -52, -58, 456, 397, -26, 37, 118,
	-18, 159, -14, -124, -125, 339, -122, -123, -132, -126,
	-136, -139, -118, 196, 197, 345, 48, 297, 152, 108,
	107, 253, 51, -130, -131, -127, -128, 373, 372, 199,
	4, -116, 50, 72, 97, 63, 62, 404, 239, 241,
	-111, -59, 372, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, 217,
	176, 342, 47, 181, -15, 374, 250, 245, 381, 147,
	391, 122, 255, -33, 360, 40, -70, -4, 452, -64,
	34, 347, 27, -115, 4, -116, -117, -119, -120, 27,
	31, 32, 33, 34, 35, 36, 37, 40, 52, 58,
	59, 65, 71, 73, 82, 89, 94, 95, 96, 98,
	99, 100, 110, 112, 118, 122, 123, 129, 133, 137,
	147, 149, 154, 156, 159, 164, 167, 170, 181, 188,
	198, 200, 211, 212, 218, 222, 223, 245, 250, 257,
	259, 260, 264, 265, 279, 288, 302, 314, 330, 336,
	347, 360, 363, 371, 374, 375, 381, 389, 390, 396,
	397, 405, 412, 413, 415, 416, 452, -88, 321, 452,
	453, 456, -54, -57, 445, -115, -15, -11, -109, 451,
	-15, -108, -113, -63, -59, 9, 443, 444, 445, 446,
	447, 448, 439, 440, 441, 16, 17, 18, -11, 453,
	453, -92, 27, 122, 445, -93, -15, -61, -118, -106,
	432, 235, 105, 173, 232, -107, 328, -78, -83, -84,
	412, -100, 269, 452, 452, -78, -78, -78, -78, -15,
	-11, -11, -11, -11, 452, -11, -78, -73, -73, -78,
	372, 372, -78, -78, 337, -18, -11, 453, -85, 395,
	-30, -15, -78, -78, 226, 456, -22, -66, -63, 261,
	-27, 436, -21, 413, -13, -20, -15, -138, 35, -125,
	-106, 452, -34, -112, 454, -112, 434, 135, -15, -15,
	374, -33, 360, -70, 135, -15, 250, 381, 147, 391,
	122, 255, 159, 452, -16, -17, 443, 444, -65, 452,
	321, -16, -11, -4, 452, -113, 452, -11, -56, -15,
	451, 457, 456, 451, 451, 456, 453, 454, 453, -23,
	456, -24, -92, -92, 453, 14, 15, 374, 374, 374,
	374, 452, 453, -82, -84, 129, -15, -99, -59, 452,
	413, -15, 453, 453, 453, 453, 36, 453, 453, 453,
	453, -11, 453, 453, 453, 434, 434, 453, 453, -59,
	-21, 453, 260, 453, -58, -27, 452, 151, 210, -67,
	167, -15, 456, 90, 240, 205, 36, 4, 450, 450,
	-138, 35, -78, 454, -34, -57, -15, -15, 135, 135,
	-15, -16, -16, -15, 135, 159, 452, -15, -137, -124,
	33, 12, 443, 444, 445, 446, 447, 448, 439, 440,
	441, 16, 17, 18, -65, 202, 261, -16, -16, -16,
	-11, 452, 33, 453, -15, 453, -11, 453, 456, -54,
	453, -15, -15, -108, -113, 453, -93, -23, -23, -15,
	-15, 235, 173, 232, -107, 232, -107, -107, -78, -76,
	133, -15, 371, -101, -59, -15, 453, -124, 453, -74,
	-74, -28, -67, -113, -71, 170, 53, -13, 205, 205,
	-13, 4, 451, -78, -78, 450, 453, -57, -15, -15,
	135, 33, 33, -15, -15, -137, 453, 456, -15, -124,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, 122, 245, 255, 456, -11, 453, -15,
	453, 453, -15, 451, -76, 453, 453, 453, -15, -102,
	276, 453, 453, -71, 453, -97, 415, -15, -68, -69,
	-15, -13, -13, 397, 259, 451, 451, -78, -15, -15,
	-15, 453, -124, 159, 122, 255, 452, -15, 453, 453,
	-23, 53, -97, -96, -98, -59, 456, 452, -15, 451,
	-16, 159, 452, -137, 453, -103, 295, 322, -11, 456,
	36, -69, -19, 4, -16, -137, 453, 453, -104, -105,
	47, 386, 93, -15, -104, -98, -99, 456, 453, 453,
	-105, 283, 153, 321, 283, 153, 4, 33, -105,
}
var yyDef = []int{

	0, -2, 1, 258, -2, -2, 284, 0, 282, 270,
	0, 0, 2, -2, 0, 278, 278, 278, 0, 0,
	267, 421, 0, 281, 279, 0, 271, 333, 0, 430,
	453, 454, 455, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 358,
	0, 342, 300, 297, 0, 339, 340, 301, 0, 0,
	0, 309, 0, 276, 277, 0, 0, 0, 260, 261,
	275, 420, 422, 426, 427, 102, 0, 0, 0, 0,
	0, 0, 185, 186, 0, 188, 189, 190, 745, 0,
	195, 196, 389, 616, 765, 403, 437, 438, 439, 0,
	0, 0, 445, 446, 447, 402, 365, 203, -2, -2,
	448, 449, 435, 35, 36, 37, 38, -2, 786, 205,
	206, 208, 210, 212, 214, 215, 216, 217, 218, -2,
	0, 742, 748, 754, 776, 532, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 755, -2, -2, -2,
	-2, -2, -2, -2, 458, 58, 59, 64, 65, 784,
	785, 787, 788, 790, 791, 792, 793, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	77, 275, 0, 359, 334, 335, 0, 0, 417, 415,
	416, 264, 341, 265, 299, 302, 0, 0, 304, 0,
	306, 0, 337, 338, 343, 347, 348, 352, 356, 357,
	345, 0, 349, -2, 237, 0, 272, 266, 267, 273,
	274, 285, 286, 5, 234, 0, 0, 0, 0, 377,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 122, 0, 0, 240, 0, 242, 0, 0, 140,
	142, 414, 0, 0, 0, 425, -2, 0, 238, 376,
	106, 107, 121, 125, 126, 0, 244, -2, 0, 773,
	191, 409, 0, 0, 192, 193, 194, 0, 0, 0,
	-2, 0, 440, 442, 99, 0, 0, 401, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 61, 74, 69, 68, 51, 0, 50, 48, 0,
	75, 75, 73, 52, 0, 81, 0, 0, 0, 79,
	0, 67, 0, 234, 0, 0, 0, 419, 298, 0,
	307, 0, 350, 0, 450, 0, 0, 346, 354, 355,
	303, 235, 0, 308, 428, 0, 0, 8, 3, 4,
	361, 0, 423, 103, 27, 0, 28, 29, 30, 31,
	32, 99, 42, 43, 44, 45, 46, 47, 55, 42,
	42, 42, 53, 56, 57, 62, 63, 85, 85, 82,
	456, 457, 75, 786, 789, 75, 75, 70, 0, 75,
	104, 13, 0, 108, 109, 110, 111, 112, 113, -2,
	-2, -2, -2, -2, -2, 120, 123, 124, -2, 241,
	243, 0, 414, 0, -2, 0, 139, 0, 144, 146,
	148, 0, 0, 0, 0, 413, 158, 393, 0, 0,
	372, 373, 374, 424, 463, 464, 465, 466, 467, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 0, 143, 0, 0,
	411, 0, 410, 405, 406, 434, 0, 0, 0, 255,
	244, 256, 0, 17, 0, 375, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, -2,
	197, 284, 0, 0, 0, 246, 248, 0, -2, 443,
	86, 87, 88, 89, 90, 91, 100, 0, 400, 396,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 72, 0,
	0, 0, 0, 0, 0, 361, 0, 336, 418, 305,
	0, 0, 451, 452, 236, 0, 287, 8, 391, 0,
	289, 0, 291, 0, 232, 233, 10, 19, 23, 27,
	33, 0, 39, 42, 0, 14, 0, 0, -2, -2,
	0, 0, 0, 159, 0, -2, 141, 145, 147, 149,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	765, 0, 0, 160, 0, 0, 0, 0, 187, 245,
	407, 0, 0, 253, 254, 0, 390, 0, -2, 0,
	0, 283, 284, 284, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 315, 316, 320,
	0, 0, 207, 209, 211, 213, 0, 221, 222, 223,
	224, 0, 41, 54, 85, 83, 84, 85, 77, 76,
	291, 280, 344, 351, 429, 288, 0, 6, 7, 296,
	0, 360, 0, 0, 0, 0, 0, 12, 0, 0,
	20, 24, 0, 0, 40, 15, 105, -2, 0, 0,
	-2, 0, 0, -2, 0, 0, 0, -2, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 164, 165, 179,
	0, 0, 0, 394, 0, -2, 0, 367, 0, 412,
	-2, 0, 245, 257, 18, 198, 247, 0, 0, 249,
	250, 92, 93, 94, 95, 96, 97, 98, 0, 444,
	395, 399, 0, 322, 319, 0, 204, 0, 60, 80,
	78, 66, 296, 0, 311, 0, 0, 227, 0, 0,
	0, 11, 25, 0, 0, 0, 34, 16, -2, -2,
	0, 0, 0, -2, -2, 0, 152, 0, -2, 163,
	166, 167, 168, 169, 170, 171, -2, -2, -2, -2,
	-2, -2, 178, 0, 0, 0, 0, 0, 370, -2,
	161, 366, 245, 408, 441, 199, 200, 101, 398, 284,
	0, 364, 220, 311, 392, 268, 0, 295, 290, 292,
	294, 228, 229, 0, 0, 26, 21, 0, -2, -2,
	-2, 153, 252, 0, 0, 0, 0, 245, 369, 368,
	325, 0, 269, 310, 312, 0, 0, 0, 231, 22,
	-2, 0, 0, 0, 371, 0, 0, 0, 321, 0,
	0, 293, 0, 225, -2, 0, 183, 318, 323, 326,
	-2, 708, 513, 0, 324, 313, 314, 0, 230, 184,
	0, 328, 329, 330, 331, 332, 226, 0, 327,
}
var yyTok1 = []int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 447, 3, 3,
	452, 453, 445, 443, 456, 444, 454, 446, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 457, 455,
	439, 441, 440, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 450, 3, 451, 448,
}
var yyTok2 = []int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = []int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 442, 57782, 449, 0,
}

//line yaccpar:1

/*	parser for yacc output	*/

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

const yyFlag = -1000

func yyTokname(c int) string {
	// 4 is TOKSTART above
	if c >= 4 && c-4 < len(yyToknames) {
		if yyToknames[c-4] != "" {
			return yyToknames[c-4]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yylex1(lex yyLexer, lval *yySymType) int {
	c := 0
	char := lex.Lex(lval)
	if char <= 0 {
		c = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		c = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			c = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		c = yyTok3[i+0]
		if c == char {
			c = yyTok3[i+1]
			goto out
		}
	}

out:
	if c == 0 {
		c = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(c), uint(char))
	}
	return c
}

func yyParse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yychar), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar = yylex1(yylex, &yylval)
	}
	yyn += yychar
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yychar { /* valid shift */
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yychar {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error("syntax error")
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yychar))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}
			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		//line sql.y:371
		{
			yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
			yylex.(*sqlLex).stmt = yyS[yypt-0].sqlSelect
		}
	case 2:
		//line sql.y:376
		{
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
			yyVAL.sqlSelect.Semicolon = true
			yylex.(*sqlLex).stmt = yyS[yypt-1].sqlSelect
		}
	case 3:
		//line sql.y:383
		{
			yyVAL.str = "asc"
		}
	case 4:
		//line sql.y:384
		{
			yyVAL.str = "desc"
		}
	case 5:
		//line sql.y:385
		{
			yyVAL.str = ""
		}
	case 6:
		//line sql.y:388
		{
			yyVAL.str = "first"
		}
	case 7:
		//line sql.y:389
		{
			yyVAL.str = "last"
		}
	case 8:
		//line sql.y:390
		{
			yyVAL.str = ""
		}
	case 9:
		yyVAL.str = yyS[yypt-0].str
	case 10:
		//line sql.y:399
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 11:
		//line sql.y:403
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 12:
		//line sql.y:407
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 13:
		//line sql.y:414
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 14:
		//line sql.y:418
		{
			yyVAL.anyName = AnyName{yyS[yypt-1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyS[yypt-0].anyName...)
		}
	case 15:
		//line sql.y:425
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 16:
		//line sql.y:429
		{
			yyVAL.anyName = append(yyS[yypt-2].anyName, yyS[yypt-0].str)
		}
	case 17:
		//line sql.y:435
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 18:
		//line sql.y:439
		{
			yyVAL.anyName = append(AnyName{yyS[yypt-2].str}, yyS[yypt-0].anyName...)
		}
	case 19:
		//line sql.y:455
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 20:
		//line sql.y:460
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 21:
		//line sql.y:467
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyS[yypt-1].iconst}
		}
	case 22:
		//line sql.y:473
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyS[yypt-1].iconst}
		}
	case 23:
		//line sql.y:480
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 24:
		//line sql.y:485
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 25:
		//line sql.y:493
		{
			yyVAL.optArrayBounds = append(yyS[yypt-2].optArrayBounds, "")
		}
	case 26:
		//line sql.y:497
		{
			yyVAL.optArrayBounds = append(yyS[yypt-3].optArrayBounds, yyS[yypt-1].iconst)
		}
	case 27:
		//line sql.y:501
		{
			yyVAL.optArrayBounds = nil
		}
	case 28:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 29:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 30:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 31:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 32:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 33:
		//line sql.y:510
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, OptInterval: yyS[yypt-0].optInterval}
		}
	case 34:
		//line sql.y:514
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, TypeMods: []Expr{yyS[yypt-1].iconst}}
		}
	case 35:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 36:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 37:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 38:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 39:
		//line sql.y:545
		{
			yyVAL.pgType = PgType{Name: AnyName{yyS[yypt-1].str}, TypeMods: yyS[yypt-0].fields}
		}
	case 40:
		//line sql.y:549
		{
			yyVAL.pgType = PgType{Name: append(AnyName{yyS[yypt-2].str}, yyS[yypt-1].anyName...), TypeMods: yyS[yypt-0].fields}
		}
	case 41:
		//line sql.y:554
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 42:
		//line sql.y:555
		{
			yyVAL.fields = nil
		}
	case 43:
		//line sql.y:562
		{
			yyVAL.pgType = PgType{Name: AnyName{"int"}}
		}
	case 44:
		//line sql.y:566
		{
			yyVAL.pgType = PgType{Name: AnyName{"integer"}}
		}
	case 45:
		//line sql.y:570
		{
			yyVAL.pgType = PgType{Name: AnyName{"smallint"}}
		}
	case 46:
		//line sql.y:574
		{
			yyVAL.pgType = PgType{Name: AnyName{"bigint"}}
		}
	case 47:
		//line sql.y:578
		{
			yyVAL.pgType = PgType{Name: AnyName{"real"}}
		}
	case 48:
		//line sql.y:582
		{
			yyVAL.pgType = PgType{Name: AnyName{"float"}}
			if yyS[yypt-0].iconst != IntegerConst("") {
				yyVAL.pgType.TypeMods = []Expr{yyS[yypt-0].iconst}
			}
		}
	case 49:
		//line sql.y:589
		{
			yyVAL.pgType = PgType{Name: AnyName{"double precision"}}
		}
	case 50:
		//line sql.y:593
		{
			yyVAL.pgType = PgType{Name: AnyName{"decimal"}, TypeMods: yyS[yypt-0].fields}
		}
	case 51:
		//line sql.y:597
		{
			yyVAL.pgType = PgType{Name: AnyName{"dec"}, TypeMods: yyS[yypt-0].fields}
		}
	case 52:
		//line sql.y:601
		{
			yyVAL.pgType = PgType{Name: AnyName{"numeric"}, TypeMods: yyS[yypt-0].fields}
		}
	case 53:
		//line sql.y:605
		{
			yyVAL.pgType = PgType{Name: AnyName{"bool"}}
		}
	case 54:
		//line sql.y:611
		{
			yyVAL.iconst = yyS[yypt-1].iconst
		}
	case 55:
		//line sql.y:615
		{
			yyVAL.iconst = IntegerConst("")
		}
	case 56:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 57:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 58:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 59:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 60:
		//line sql.y:629
		{
			yyVAL.pgType = PgType{}
			if yyS[yypt-3].boolean {
				yyVAL.pgType.Name = AnyName{"varbit"}
			} else {
				yyVAL.pgType.Name = AnyName{"bit"}
			}
			yyVAL.pgType.TypeMods = yyS[yypt-1].fields
		}
	case 61:
		//line sql.y:641
		{
			yyVAL.pgType = PgType{}
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varbit"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"bit"}}
			}
		}
	case 62:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 63:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 64:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 65:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 66:
		//line sql.y:664
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.TypeMods = []Expr{yyS[yypt-2].iconst}
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 67:
		//line sql.y:672
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 68:
		//line sql.y:679
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 69:
		//line sql.y:687
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 70:
		//line sql.y:695
		{
			yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
		}
	case 71:
		//line sql.y:699
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 72:
		//line sql.y:707
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 73:
		//line sql.y:715
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 74:
		//line sql.y:725
		{
			yyVAL.boolean = true
		}
	case 75:
		//line sql.y:729
		{
			yyVAL.boolean = false
		}
	case 76:
		//line sql.y:735
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 77:
		//line sql.y:739
		{
			yyVAL.str = ""
		}
	case 78:
		//line sql.y:748
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, TypeMods: []Expr{yyS[yypt-2].iconst}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 79:
		//line sql.y:752
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 80:
		//line sql.y:756
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, TypeMods: []Expr{yyS[yypt-2].iconst}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 81:
		//line sql.y:760
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 83:
		//line sql.y:769
		{
			yyVAL.boolean = true
		}
	case 84:
		//line sql.y:773
		{
			yyVAL.boolean = false
		}
	case 85:
		//line sql.y:777
		{
			yyVAL.boolean = false
		}
	case 86:
		//line sql.y:783
		{
			yyVAL.optInterval = &OptInterval{Left: "year"}
		}
	case 87:
		//line sql.y:787
		{
			yyVAL.optInterval = &OptInterval{Left: "month"}
		}
	case 88:
		//line sql.y:791
		{
			yyVAL.optInterval = &OptInterval{Left: "day"}
		}
	case 89:
		//line sql.y:795
		{
			yyVAL.optInterval = &OptInterval{Left: "hour"}
		}
	case 90:
		//line sql.y:799
		{
			yyVAL.optInterval = &OptInterval{Left: "minute"}
		}
	case 91:
		//line sql.y:803
		{
			yyVAL.optInterval = &OptInterval{Second: yyS[yypt-0].intervalSecond}
		}
	case 92:
		//line sql.y:807
		{
			yyVAL.optInterval = &OptInterval{Left: "year", Right: "month"}
		}
	case 93:
		//line sql.y:811
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "hour"}
		}
	case 94:
		//line sql.y:815
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "minute"}
		}
	case 95:
		//line sql.y:819
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Second: yyS[yypt-0].intervalSecond}
		}
	case 96:
		//line sql.y:823
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Right: "minute"}
		}
	case 97:
		//line sql.y:827
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Second: yyS[yypt-0].intervalSecond}
		}
	case 98:
		//line sql.y:831
		{
			yyVAL.optInterval = &OptInterval{Left: "minute", Second: yyS[yypt-0].intervalSecond}
		}
	case 99:
		//line sql.y:835
		{
			yyVAL.optInterval = nil
		}
	case 100:
		//line sql.y:841
		{
			yyVAL.intervalSecond = &IntervalSecond{}
		}
	case 101:
		//line sql.y:845
		{
			yyVAL.intervalSecond = &IntervalSecond{Precision: yyS[yypt-1].iconst}
		}
	case 102:
		yyVAL.expr = yyS[yypt-0].expr
	case 103:
		//line sql.y:881
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 104:
		//line sql.y:885
		{
			yyVAL.expr = CollateExpr{Expr: yyS[yypt-2].expr, Collation: yyS[yypt-0].anyName}
		}
	case 105:
		//line sql.y:889
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyS[yypt-4].expr, TimeZone: yyS[yypt-0].expr}
		}
	case 106:
		//line sql.y:902
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyS[yypt-0].expr}
		}
	case 107:
		//line sql.y:906
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyS[yypt-0].expr}
		}
	case 108:
		//line sql.y:910
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"+"}, Right: yyS[yypt-0].expr}
		}
	case 109:
		//line sql.y:914
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"-"}, Right: yyS[yypt-0].expr}
		}
	case 110:
		//line sql.y:918
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"*"}, Right: yyS[yypt-0].expr}
		}
	case 111:
		//line sql.y:922
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"/"}, Right: yyS[yypt-0].expr}
		}
	case 112:
		//line sql.y:926
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"%"}, Right: yyS[yypt-0].expr}
		}
	case 113:
		//line sql.y:930
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"^"}, Right: yyS[yypt-0].expr}
		}
	case 114:
		//line sql.y:934
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"<"}, Right: yyS[yypt-0].expr}
		}
	case 115:
		//line sql.y:938
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{">"}, Right: yyS[yypt-0].expr}
		}
	case 116:
		//line sql.y:942
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"="}, Right: yyS[yypt-0].expr}
		}
	case 117:
		//line sql.y:946
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"<="}, Right: yyS[yypt-0].expr}
		}
	case 118:
		//line sql.y:950
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{">="}, Right: yyS[yypt-0].expr}
		}
	case 119:
		//line sql.y:954
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"!="}, Right: yyS[yypt-0].expr}
		}
	case 120:
		//line sql.y:958
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].anyName, Right: yyS[yypt-0].expr}
		}
	case 121:
		//line sql.y:962
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].anyName, Expr: yyS[yypt-0].expr}
		}
	case 122:
		//line sql.y:966
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].anyName}
		}
	case 123:
		//line sql.y:970
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "and", Right: yyS[yypt-0].expr}
		}
	case 124:
		//line sql.y:974
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "or", Right: yyS[yypt-0].expr}
		}
	case 125:
		//line sql.y:978
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 126:
		//line sql.y:982
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 127:
		//line sql.y:986
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "like", Right: yyS[yypt-0].expr}
		}
	case 128:
		//line sql.y:990
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 129:
		//line sql.y:994
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not like", Right: yyS[yypt-0].expr}
		}
	case 130:
		//line sql.y:998
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 131:
		//line sql.y:1002
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "ilike", Right: yyS[yypt-0].expr}
		}
	case 132:
		//line sql.y:1006
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 133:
		//line sql.y:1010
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not ilike", Right: yyS[yypt-0].expr}
		}
	case 134:
		//line sql.y:1014
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 135:
		//line sql.y:1019
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "similar to", Right: yyS[yypt-0].expr}
		}
	case 136:
		//line sql.y:1023
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 137:
		//line sql.y:1027
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "not similar to", Right: yyS[yypt-0].expr}
		}
	case 138:
		//line sql.y:1031
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-6].expr, Operator: "not similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 139:
		//line sql.y:1044
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-2].expr}
		}
	case 140:
		//line sql.y:1048
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr}
		}
	case 141:
		//line sql.y:1052
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-3].expr, Not: true}
		}
	case 142:
		//line sql.y:1056
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr, Not: true}
		}
	case 143:
		//line sql.y:1060
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].row, Operator: AnyName{"overlaps"}, Right: yyS[yypt-0].row}
		}
	case 144:
		//line sql.y:1064
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "true"}
		}
	case 145:
		//line sql.y:1068
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "true"}
		}
	case 146:
		//line sql.y:1072
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "false"}
		}
	case 147:
		//line sql.y:1076
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "false"}
		}
	case 148:
		//line sql.y:1080
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "unknown"}
		}
	case 149:
		//line sql.y:1084
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "unknown"}
		}
	case 150:
		//line sql.y:1088
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: AnyName{"is distinct from"}, Right: yyS[yypt-0].expr}
		}
	case 151:
		//line sql.y:1092
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: AnyName{"is not distinct from"}, Right: yyS[yypt-0].expr}
		}
	case 152:
		//line sql.y:1096
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 153:
		//line sql.y:1100
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 154:
		//line sql.y:1104
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 155:
		//line sql.y:1108
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 156:
		//line sql.y:1112
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 157:
		//line sql.y:1116
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 158:
		//line sql.y:1120
		{
			yyVAL.expr = InExpr{Value: yyS[yypt-2].expr, In: yyS[yypt-0].expr}
		}
	case 159:
		//line sql.y:1124
		{
			yyVAL.expr = InExpr{Value: yyS[yypt-3].expr, Not: true, In: yyS[yypt-0].expr}
		}
	case 160:
		//line sql.y:1128
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyS[yypt-3].expr, Op: yyS[yypt-2].subqueryOp, Type: yyS[yypt-1].str, Query: yyS[yypt-0].sqlSelect}
		}
	case 161:
		//line sql.y:1132
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyS[yypt-5].expr, Op: yyS[yypt-4].subqueryOp, Type: yyS[yypt-3].str, Query: ParenExpr{Expr: yyS[yypt-1].expr}}
		}
	case 162:
		//line sql.y:1151
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 163:
		//line sql.y:1155
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 164:
		//line sql.y:1159
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyS[yypt-0].expr}
		}
	case 165:
		//line sql.y:1163
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyS[yypt-0].expr}
		}
	case 166:
		//line sql.y:1167
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"+"}, Right: yyS[yypt-0].expr}
		}
	case 167:
		//line sql.y:1171
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"-"}, Right: yyS[yypt-0].expr}
		}
	case 168:
		//line sql.y:1175
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"*"}, Right: yyS[yypt-0].expr}
		}
	case 169:
		//line sql.y:1179
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"/"}, Right: yyS[yypt-0].expr}
		}
	case 170:
		//line sql.y:1183
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"%"}, Right: yyS[yypt-0].expr}
		}
	case 171:
		//line sql.y:1187
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"^"}, Right: yyS[yypt-0].expr}
		}
	case 172:
		//line sql.y:1191
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"<"}, Right: yyS[yypt-0].expr}
		}
	case 173:
		//line sql.y:1195
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{">"}, Right: yyS[yypt-0].expr}
		}
	case 174:
		//line sql.y:1199
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"="}, Right: yyS[yypt-0].expr}
		}
	case 175:
		//line sql.y:1203
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"<="}, Right: yyS[yypt-0].expr}
		}
	case 176:
		//line sql.y:1207
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{">="}, Right: yyS[yypt-0].expr}
		}
	case 177:
		//line sql.y:1211
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: AnyName{"!="}, Right: yyS[yypt-0].expr}
		}
	case 178:
		//line sql.y:1215
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].anyName, Right: yyS[yypt-0].expr}
		}
	case 179:
		//line sql.y:1219
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].anyName, Expr: yyS[yypt-0].expr}
		}
	case 180:
		//line sql.y:1223
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].anyName}
		}
	case 181:
		//line sql.y:1227
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: AnyName{"is distinct from"}, Right: yyS[yypt-0].expr}
		}
	case 182:
		//line sql.y:1231
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: AnyName{"is not distinct from"}, Right: yyS[yypt-0].expr}
		}
	case 183:
		//line sql.y:1235
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 184:
		//line sql.y:1239
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 185:
		//line sql.y:1265
		{
			yyVAL.expr = yyS[yypt-0].columnRef
		}
	case 186:
		//line sql.y:1266
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 187:
		//line sql.y:1274
		{
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-2].expr, Indirection: yyS[yypt-0].indirection}
		}
	case 188:
		//line sql.y:1277
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 189:
		//line sql.y:1278
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 190:
		//line sql.y:1280
		{
			yyVAL.expr = yyS[yypt-0].sqlSelect
		}
	case 191:
		//line sql.y:1284
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-1].sqlSelect, Indirection: yyS[yypt-0].indirection}
		}
	case 192:
		//line sql.y:1289
		{
			yyVAL.expr = ExistsExpr(*yyS[yypt-0].sqlSelect)
		}
	case 193:
		//line sql.y:1293
		{
			yyVAL.expr = ArraySubselect(*yyS[yypt-0].sqlSelect)
		}
	case 194:
		//line sql.y:1296
		{
			yyVAL.expr = ArrayConstructorExpr(yyS[yypt-0].arrayExpr)
		}
	case 195:
		//line sql.y:1300
		{
			yyVAL.expr = yyS[yypt-0].row
		}
	case 196:
		//line sql.y:1304
		{
			yyVAL.expr = yyS[yypt-0].row
		}
	case 197:
		//line sql.y:1315
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-2].str}
		}
	case 198:
		//line sql.y:1319
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-4].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 199:
		//line sql.y:1327
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 200:
		//line sql.y:1331
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Distinct: true, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 201:
		//line sql.y:1335
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-3].str, Star: true}
		}
	case 202:
		//line sql.y:1351
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyS[yypt-2].funcApplication, FilterClause: yyS[yypt-1].filterClause, OverClause: yyS[yypt-0].overClause}
		}
	case 203:
		//line sql.y:1355
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 204:
		//line sql.y:1368
		{
			yyVAL.expr = FuncApplication{Name: "collation for", Args: []FuncArg{{Expr: yyS[yypt-1].expr}}}
		}
	case 205:
		//line sql.y:1372
		{
			yyVAL.expr = FuncExprNoParens("current_date")
		}
	case 206:
		//line sql.y:1376
		{
			yyVAL.expr = FuncExprNoParens("current_time")
		}
	case 207:
		//line sql.y:1380
		{
			yyVAL.expr = FuncApplication{Name: "current_time", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 208:
		//line sql.y:1384
		{
			yyVAL.expr = FuncExprNoParens("current_timestamp")
		}
	case 209:
		//line sql.y:1388
		{
			yyVAL.expr = FuncApplication{Name: "current_timestamp", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 210:
		//line sql.y:1392
		{
			yyVAL.expr = FuncExprNoParens("localtime")
		}
	case 211:
		//line sql.y:1396
		{
			yyVAL.expr = FuncApplication{Name: "localtime", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 212:
		//line sql.y:1400
		{
			yyVAL.expr = FuncExprNoParens("localtimestamp")
		}
	case 213:
		//line sql.y:1404
		{
			yyVAL.expr = FuncApplication{Name: "localtimestamp", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 214:
		//line sql.y:1408
		{
			yyVAL.expr = FuncExprNoParens("current_role")
		}
	case 215:
		//line sql.y:1412
		{
			yyVAL.expr = FuncExprNoParens("current_user")
		}
	case 216:
		//line sql.y:1416
		{
			yyVAL.expr = FuncExprNoParens("session_user")
		}
	case 217:
		//line sql.y:1420
		{
			yyVAL.expr = FuncExprNoParens("user")
		}
	case 218:
		//line sql.y:1424
		{
			yyVAL.expr = FuncExprNoParens("current_catalog")
		}
	case 219:
		//line sql.y:1428
		{
			yyVAL.expr = FuncExprNoParens("current_schema")
		}
	case 220:
		//line sql.y:1432
		{
			yyVAL.expr = CastFunc{Expr: yyS[yypt-3].expr, Type: yyS[yypt-1].pgType}
		}
	case 221:
		//line sql.y:1448
		{
			fa := FuncApplication{Name: "coalesce"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 222:
		//line sql.y:1456
		{
			fa := FuncApplication{Name: "greatest"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 223:
		//line sql.y:1464
		{
			fa := FuncApplication{Name: "least"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 224:
		//line sql.y:1472
		{
			fa := FuncApplication{Name: "xmlconcat"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 225:
		//line sql.y:1498
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 226:
		//line sql.y:1502
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 227:
		//line sql.y:1508
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-2].expr, Join: ",", Right: yyS[yypt-0].expr}
		}
	case 228:
		//line sql.y:1512
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "cross join", Right: yyS[yypt-0].expr}
		}
	case 229:
		//line sql.y:1516
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "natural join", Right: yyS[yypt-0].expr}
		}
	case 230:
		//line sql.y:1520
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-6].expr, Join: "join", Right: yyS[yypt-4].expr, Using: yyS[yypt-1].identifiers}
		}
	case 231:
		//line sql.y:1524
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-4].expr, Join: "join", Right: yyS[yypt-2].expr, On: yyS[yypt-0].expr}
		}
	case 232:
		//line sql.y:1530
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 233:
		//line sql.y:1534
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 234:
		//line sql.y:1537
		{
			yyVAL.fromClause = nil
		}
	case 235:
		//line sql.y:1541
		{
			yyVAL.str = "nowait"
		}
	case 236:
		//line sql.y:1542
		{
			yyVAL.str = "skip locked"
		}
	case 237:
		//line sql.y:1543
		{
			yyVAL.str = ""
		}
	case 238:
		//line sql.y:1547
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{yyS[yypt-0].str}}
		}
	case 239:
		//line sql.y:1551
		{
			yyVAL.subqueryOp = SubqueryOp{Operator: true, Name: yyS[yypt-1].anyName}
		}
	case 240:
		//line sql.y:1555
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"like"}}
		}
	case 241:
		//line sql.y:1559
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not like"}}
		}
	case 242:
		//line sql.y:1563
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"ilike"}}
		}
	case 243:
		//line sql.y:1567
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not ilike"}}
		}
	case 244:
		//line sql.y:1581
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 245:
		//line sql.y:1585
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 246:
		//line sql.y:1592
		{
			yyVAL.funcArgs = []FuncArg{yyS[yypt-0].funcArg}
		}
	case 247:
		//line sql.y:1596
		{
			yyVAL.funcArgs = append(yyS[yypt-2].funcArgs, yyS[yypt-0].funcArg)
		}
	case 248:
		//line sql.y:1602
		{
			yyVAL.funcArg = FuncArg{Expr: yyS[yypt-0].expr}
		}
	case 249:
		//line sql.y:1606
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: ":=", Expr: yyS[yypt-0].expr}
		}
	case 250:
		//line sql.y:1610
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: "=>", Expr: yyS[yypt-0].expr}
		}
	case 251:
		//line sql.y:1616
		{
			yyVAL.pgTypes = []PgType{yyS[yypt-0].pgType}
		}
	case 252:
		//line sql.y:1620
		{
			yyVAL.pgTypes = append(yyS[yypt-2].pgTypes, yyS[yypt-0].pgType)
		}
	case 253:
		//line sql.y:1626
		{
			yyVAL.arrayExpr = ArrayExpr(yyS[yypt-1].fields)
		}
	case 254:
		//line sql.y:1630
		{
			yyVAL.arrayExpr = yyS[yypt-1].arrayExpr
		}
	case 255:
		//line sql.y:1634
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 256:
		//line sql.y:1640
		{
			yyVAL.arrayExpr = ArrayExpr{yyS[yypt-0].arrayExpr}
		}
	case 257:
		//line sql.y:1644
		{
			yyVAL.arrayExpr = append(yyS[yypt-2].arrayExpr, yyS[yypt-0].arrayExpr)
		}
	case 258:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 259:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 260:
		//line sql.y:1700
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 261:
		//line sql.y:1704
		{
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 262:
		//line sql.y:1708
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 263:
		//line sql.y:1714
		{
			yyS[yypt-1].sqlSelect.OrderClause = yyS[yypt-0].orderClause
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 264:
		//line sql.y:1719
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-1].lockingClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-0].limitClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 265:
		//line sql.y:1726
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-1].limitClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-0].lockingClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 266:
		//line sql.y:1735
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 267:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 268:
		//line sql.y:1769
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 269:
		//line sql.y:1782
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyS[yypt-7].fields
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 270:
		//line sql.y:1794
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyS[yypt-0].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 271:
		//line sql.y:1800
		{
			ss := &SimpleSelect{}
			ss.Table = yyS[yypt-0].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 272:
		//line sql.y:1806
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 273:
		//line sql.y:1815
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 274:
		//line sql.y:1824
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 275:
		//line sql.y:1848
		{
			yyVAL.placeholder = nil
		}
	case 276:
		//line sql.y:1853
		{
			yyVAL.boolean = true
		}
	case 277:
		//line sql.y:1854
		{
			yyVAL.boolean = false
		}
	case 278:
		//line sql.y:1855
		{
			yyVAL.boolean = false
		}
	case 279:
		//line sql.y:1860
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 280:
		//line sql.y:1861
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 281:
		//line sql.y:1864
		{
			yyVAL.placeholder = nil
		}
	case 282:
		//line sql.y:1865
		{
			yyVAL.placeholder = nil
		}
	case 283:
		//line sql.y:1868
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 284:
		//line sql.y:1869
		{
			yyVAL.orderClause = nil
		}
	case 285:
		//line sql.y:1872
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 286:
		//line sql.y:1876
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyS[yypt-0].orderExpr}}
		}
	case 287:
		//line sql.y:1880
		{
			yyS[yypt-2].orderClause.Exprs = append(yyS[yypt-2].orderClause.Exprs, yyS[yypt-0].orderExpr)
			yyVAL.orderClause = yyS[yypt-2].orderClause
		}
	case 288:
		//line sql.y:1888
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-3].expr, Using: yyS[yypt-1].anyName, Nulls: yyS[yypt-0].str}
		}
	case 289:
		//line sql.y:1892
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-2].expr, Order: yyS[yypt-1].str, Nulls: yyS[yypt-0].str}
		}
	case 290:
		//line sql.y:1917
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyS[yypt-0].fields}
		}
	case 291:
		//line sql.y:1918
		{
			yyVAL.groupByClause = nil
		}
	case 292:
		//line sql.y:1922
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 293:
		//line sql.y:1926
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 294:
		yyVAL.expr = yyS[yypt-0].expr
	case 295:
		//line sql.y:1939
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 296:
		//line sql.y:1940
		{
			yyVAL.expr = nil
		}
	case 297:
		//line sql.y:1943
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 298:
		//line sql.y:1944
		{
			yyVAL.lockingClause = nil
		}
	case 299:
		//line sql.y:1947
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 300:
		//line sql.y:1948
		{
			yyVAL.lockingClause = nil
		}
	case 301:
		//line sql.y:1952
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyS[yypt-0].lockingItem}}
		}
	case 302:
		//line sql.y:1956
		{
			yyS[yypt-1].lockingClause.Locks = append(yyS[yypt-1].lockingClause.Locks, yyS[yypt-0].lockingItem)
			yyVAL.lockingClause = yyS[yypt-1].lockingClause
		}
	case 303:
		//line sql.y:1963
		{
			yyVAL.lockingItem = LockingItem{Strength: yyS[yypt-2].str, LockedRels: yyS[yypt-1].identifiers, WaitPolicy: yyS[yypt-0].str}
		}
	case 304:
		//line sql.y:1968
		{
			yyVAL.str = "update"
		}
	case 305:
		//line sql.y:1969
		{
			yyVAL.str = "no key update"
		}
	case 306:
		//line sql.y:1970
		{
			yyVAL.str = "share"
		}
	case 307:
		//line sql.y:1971
		{
			yyVAL.str = "key share"
		}
	case 308:
		//line sql.y:1974
		{
			yyVAL.identifiers = yyS[yypt-0].identifiers
		}
	case 309:
		//line sql.y:1975
		{
			yyVAL.identifiers = nil
		}
	case 310:
		//line sql.y:1983
		{
			yyVAL.windowDefinitions = yyS[yypt-0].windowDefinitions
		}
	case 311:
		//line sql.y:1986
		{
			yyVAL.windowDefinitions = nil
		}
	case 312:
		//line sql.y:1990
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyS[yypt-0].windowDefinition}
		}
	case 313:
		//line sql.y:1994
		{
			yyVAL.windowDefinitions = append(yyS[yypt-2].windowDefinitions, yyS[yypt-0].windowDefinition)
		}
	case 314:
		//line sql.y:2000
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyS[yypt-2].str, Specification: yyS[yypt-0].windowSpecification}
		}
	case 315:
		//line sql.y:2006
		{
			spec := yyS[yypt-0].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 316:
		//line sql.y:2011
		{
			yyVAL.overClause = &OverClause{Name: yyS[yypt-0].str}
		}
	case 317:
		//line sql.y:2014
		{
			yyVAL.overClause = nil
		}
	case 318:
		//line sql.y:2018
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyS[yypt-4].str, PartitionClause: yyS[yypt-3].partitionClause, OrderClause: yyS[yypt-2].orderClause, FrameClause: yyS[yypt-1].frameClause}
		}
	case 319:
		//line sql.y:2033
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 320:
		//line sql.y:2034
		{
			yyVAL.str = ""
		}
	case 321:
		//line sql.y:2037
		{
			yyVAL.partitionClause = PartitionClause(yyS[yypt-0].fields)
		}
	case 322:
		//line sql.y:2038
		{
			yyVAL.partitionClause = nil
		}
	case 323:
		//line sql.y:2049
		{
			yyS[yypt-0].frameClause.Mode = "range"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 324:
		//line sql.y:2054
		{
			yyS[yypt-0].frameClause.Mode = "rows"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 325:
		//line sql.y:2059
		{
			yyVAL.frameClause = nil
		}
	case 326:
		//line sql.y:2065
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-0].frameBound}
		}
	case 327:
		//line sql.y:2069
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-2].frameBound, End: yyS[yypt-0].frameBound}
		}
	case 328:
		//line sql.y:2080
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 329:
		//line sql.y:2084
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 330:
		//line sql.y:2088
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 331:
		//line sql.y:2092
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "preceding"}
		}
	case 332:
		//line sql.y:2096
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "following"}
		}
	case 333:
		//line sql.y:2104
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str}
		}
	case 334:
		//line sql.y:2108
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Star: true}
		}
	case 335:
		//line sql.y:2112
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str, Only: true}
		}
	case 336:
		//line sql.y:2116
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Only: true}
		}
	case 337:
		//line sql.y:2124
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-1].expr, Offset: yyS[yypt-0].expr}
		}
	case 338:
		//line sql.y:2128
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr, Offset: yyS[yypt-1].expr}
		}
	case 339:
		//line sql.y:2132
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr}
		}
	case 340:
		//line sql.y:2136
		{
			yyVAL.limitClause = &LimitClause{Offset: yyS[yypt-0].expr}
		}
	case 341:
		yyVAL.limitClause = yyS[yypt-0].limitClause
	case 342:
		//line sql.y:2143
		{
			yyVAL.limitClause = nil
		}
	case 343:
		//line sql.y:2147
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 344:
		//line sql.y:2152
		{
			yyVAL.expr = yyS[yypt-2].expr
		}
	case 345:
		//line sql.y:2158
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 346:
		//line sql.y:2163
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 347:
		//line sql.y:2168
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 348:
		//line sql.y:2170
		{
			yyVAL.expr = nil
		}
	case 349:
		//line sql.y:2175
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 350:
		//line sql.y:2184
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 351:
		//line sql.y:2185
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 352:
		//line sql.y:2186
		{
			yyVAL.expr = IntegerConst("1")
		}
	case 353:
		//line sql.y:2193
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 354:
		//line sql.y:2197
		{
			yyVAL.placeholder = 0
		}
	case 355:
		//line sql.y:2198
		{
			yyVAL.placeholder = 0
		}
	case 356:
		//line sql.y:2201
		{
			yyVAL.placeholder = 0
		}
	case 357:
		//line sql.y:2202
		{
			yyVAL.placeholder = 0
		}
	case 358:
		//line sql.y:2206
		{
			yyVAL.valuesClause = ValuesClause{yyS[yypt-0].valuesRow}
		}
	case 359:
		//line sql.y:2210
		{
			yyVAL.valuesClause = append(yyS[yypt-2].valuesClause, yyS[yypt-0].valuesRow)
		}
	case 360:
		//line sql.y:2227
		{
			yyVAL.whereClause = &WhereClause{Expr: yyS[yypt-0].expr}
		}
	case 361:
		//line sql.y:2228
		{
			yyVAL.whereClause = nil
		}
	case 362:
		//line sql.y:2237
		{
			panic("TODO")
		}
	case 363:
		//line sql.y:2238
		{
			yyVAL.placeholder = nil
		}
	case 364:
		//line sql.y:2243
		{
			yyVAL.filterClause = &FilterClause{Expr: yyS[yypt-1].expr}
		}
	case 365:
		//line sql.y:2246
		{
			yyVAL.filterClause = nil
		}
	case 366:
		//line sql.y:2258
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyS[yypt-1].fields}
		}
	case 367:
		//line sql.y:2262
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 368:
		//line sql.y:2266
		{
			yyVAL.row = Row{Exprs: append(yyS[yypt-3].fields, yyS[yypt-1].expr)}
		}
	case 369:
		//line sql.y:2272
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyS[yypt-1].fields}
		}
	case 370:
		//line sql.y:2276
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 371:
		//line sql.y:2282
		{
			yyVAL.row = Row{Exprs: append(yyS[yypt-3].fields, yyS[yypt-1].expr)}
		}
	case 372:
		//line sql.y:2287
		{
			yyVAL.str = "any"
		}
	case 373:
		//line sql.y:2288
		{
			yyVAL.str = "some"
		}
	case 374:
		//line sql.y:2289
		{
			yyVAL.str = "all"
		}
	case 375:
		//line sql.y:2292
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 376:
		//line sql.y:2293
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 377:
		//line sql.y:2296
		{
			yyVAL.str = "+"
		}
	case 378:
		//line sql.y:2297
		{
			yyVAL.str = "-"
		}
	case 379:
		//line sql.y:2298
		{
			yyVAL.str = "*"
		}
	case 380:
		//line sql.y:2299
		{
			yyVAL.str = "/"
		}
	case 381:
		//line sql.y:2300
		{
			yyVAL.str = "%"
		}
	case 382:
		//line sql.y:2301
		{
			yyVAL.str = "^"
		}
	case 383:
		//line sql.y:2302
		{
			yyVAL.str = "<"
		}
	case 384:
		//line sql.y:2303
		{
			yyVAL.str = ">"
		}
	case 385:
		//line sql.y:2304
		{
			yyVAL.str = "="
		}
	case 386:
		//line sql.y:2305
		{
			yyVAL.str = "<="
		}
	case 387:
		//line sql.y:2306
		{
			yyVAL.str = ">="
		}
	case 388:
		//line sql.y:2307
		{
			yyVAL.str = "<>"
		}
	case 389:
		//line sql.y:2310
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 390:
		//line sql.y:2311
		{
			yyVAL.anyName = yyS[yypt-1].anyName
		}
	case 391:
		//line sql.y:2314
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 392:
		//line sql.y:2315
		{
			yyVAL.anyName = yyS[yypt-1].anyName
		}
	case 393:
		//line sql.y:2319
		{
			yyVAL.expr = yyS[yypt-0].sqlSelect
		}
	case 394:
		//line sql.y:2323
		{
			yyVAL.expr = ValuesRow(yyS[yypt-1].fields)
		}
	case 395:
		//line sql.y:2336
		{
			yyVAL.expr = CaseExpr{CaseArg: yyS[yypt-3].expr, WhenClauses: yyS[yypt-2].whenClauses, Default: yyS[yypt-1].expr}
		}
	case 396:
		//line sql.y:2343
		{
			yyVAL.whenClauses = []WhenClause{yyS[yypt-0].whenClause}
		}
	case 397:
		//line sql.y:2347
		{
			yyVAL.whenClauses = append(yyS[yypt-1].whenClauses, yyS[yypt-0].whenClause)
		}
	case 398:
		//line sql.y:2353
		{
			yyVAL.whenClause = WhenClause{When: yyS[yypt-2].expr, Then: yyS[yypt-0].expr}
		}
	case 399:
		//line sql.y:2358
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 400:
		//line sql.y:2359
		{
			yyVAL.expr = nil
		}
	case 401:
		//line sql.y:2362
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 402:
		//line sql.y:2363
		{
			yyVAL.expr = nil
		}
	case 403:
		//line sql.y:2367
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-0].str}
		}
	case 404:
		//line sql.y:2371
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-1].str, Indirection: yyS[yypt-0].indirection}
		}
	case 405:
		//line sql.y:2379
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyS[yypt-0].str}
		}
	case 406:
		//line sql.y:2383
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 407:
		//line sql.y:2387
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-1].expr}
		}
	case 408:
		//line sql.y:2391
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-3].expr, UpperSubscript: yyS[yypt-1].expr}
		}
	case 409:
		//line sql.y:2396
		{
			yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
		}
	case 410:
		//line sql.y:2397
		{
			yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
		}
	case 411:
		//line sql.y:2400
		{
			yyVAL.indirection = nil
		}
	case 412:
		//line sql.y:2402
		{
			if yyS[yypt-1].indirection != nil {
				yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
			}
		}
	case 413:
		//line sql.y:2412
		{
			yyVAL.placeholder = nil
		}
	case 414:
		//line sql.y:2416
		{
			yyVAL.placeholder = nil
		}
	case 415:
		//line sql.y:2428
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 416:
		//line sql.y:2429
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 417:
		//line sql.y:2433
		{
			yyVAL.valuesRow = ValuesRow{yyS[yypt-0].expr}
		}
	case 418:
		//line sql.y:2437
		{
			yyVAL.valuesRow = append(yyS[yypt-2].valuesRow, yyS[yypt-0].expr)
		}
	case 419:
		//line sql.y:2448
		{
			yyVAL.valuesRow = yyS[yypt-1].valuesRow
		}
	case 420:
		//line sql.y:2459
		{
			yyVAL.fields = yyS[yypt-0].fields
		}
	case 421:
		//line sql.y:2460
		{
			yyVAL.fields = nil
		}
	case 422:
		//line sql.y:2463
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 423:
		//line sql.y:2465
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 424:
		//line sql.y:2471
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 425:
		//line sql.y:2475
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 426:
		yyVAL.expr = yyS[yypt-0].expr
	case 427:
		//line sql.y:2480
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 428:
		//line sql.y:2494
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 429:
		//line sql.y:2498
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 430:
		//line sql.y:2511
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 431:
		//line sql.y:2543
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 432:
		//line sql.y:2545
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 433:
		//line sql.y:2550
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 434:
		//line sql.y:2553
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 435:
		//line sql.y:2566
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 436:
		//line sql.y:2570
		{
			panic("TODO")
		}
	case 437:
		//line sql.y:2580
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 438:
		//line sql.y:2584
		{
			yyVAL.expr = FloatConst(yyS[yypt-0].str)
		}
	case 439:
		//line sql.y:2588
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 440:
		//line sql.y:2596
		{
			yyVAL.expr = ConstTypeExpr{Typename: PgType{Name: AnyName{yyS[yypt-1].str}}, Expr: yyS[yypt-0].expr}
		}
	case 441:
		//line sql.y:2600
		{
			pgType := PgType{Name: AnyName{yyS[yypt-5].str}}

			/*
			 * We must use func_arg_list and opt_sort_clause in the
			 * production to avoid reduce/reduce conflicts, but we
			 * don't actually wish to allow NamedArgExpr in this
			 * context, nor ORDER BY.
			 */

			for _, arg := range yyS[yypt-3].funcArgs {
				if arg.Name != "" {
					yylex.Error("type modifier cannot have parameter name")
				}

				pgType.TypeMods = append(pgType.TypeMods, Expr(arg))
			}

			if yyS[yypt-2].orderClause != nil {
				yylex.Error("type modifier cannot have ORDER BY")
			}

			yyVAL.expr = ConstTypeExpr{Typename: pgType, Expr: yyS[yypt-0].expr}
		}
	case 442:
		//line sql.y:2624
		{
			yyVAL.expr = ConstTypeExpr{Typename: yyS[yypt-1].pgType, Expr: yyS[yypt-0].expr}
		}
	case 443:
		//line sql.y:2628
		{
			yyVAL.expr = ConstIntervalExpr{Value: yyS[yypt-1].expr, OptInterval: yyS[yypt-0].optInterval}
		}
	case 444:
		//line sql.y:2632
		{
			yyVAL.expr = ConstIntervalExpr{Precision: yyS[yypt-2].iconst, Value: yyS[yypt-0].expr}
		}
	case 445:
		//line sql.y:2636
		{
			yyVAL.expr = BoolConst(true)
		}
	case 446:
		//line sql.y:2640
		{
			yyVAL.expr = BoolConst(false)
		}
	case 447:
		//line sql.y:2644
		{
			yyVAL.expr = NullConst{}
		}
	case 448:
		//line sql.y:2648
		{
			yyVAL.iconst = IntegerConst(yyS[yypt-0].str)
		}
	case 449:
		//line sql.y:2649
		{
			yyVAL.expr = StringConst(yyS[yypt-0].str)
		}
	case 450:
		//line sql.y:2652
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 451:
		//line sql.y:2653
		{
			yyVAL.expr = "+" + yyS[yypt-0].iconst
		}
	case 452:
		//line sql.y:2654
		{
			yyVAL.expr = "-" + yyS[yypt-0].iconst
		}
	case 453:
		yyVAL.str = yyS[yypt-0].str
	case 454:
		yyVAL.str = yyS[yypt-0].str
	case 455:
		yyVAL.str = yyS[yypt-0].str
	case 456:
		yyVAL.str = yyS[yypt-0].str
	case 457:
		yyVAL.str = yyS[yypt-0].str
	case 458:
		yyVAL.str = yyS[yypt-0].str
	case 463:
		//line sql.y:2693
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 464:
		//line sql.y:2694
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 465:
		//line sql.y:2695
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 466:
		//line sql.y:2696
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 467:
		//line sql.y:2697
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 468:
		yyVAL.str = yyS[yypt-0].str
	case 469:
		yyVAL.str = yyS[yypt-0].str
	case 470:
		yyVAL.str = yyS[yypt-0].str
	case 471:
		yyVAL.str = yyS[yypt-0].str
	case 472:
		yyVAL.str = yyS[yypt-0].str
	case 473:
		yyVAL.str = yyS[yypt-0].str
	case 474:
		yyVAL.str = yyS[yypt-0].str
	case 475:
		yyVAL.str = yyS[yypt-0].str
	case 476:
		yyVAL.str = yyS[yypt-0].str
	case 477:
		yyVAL.str = yyS[yypt-0].str
	case 478:
		yyVAL.str = yyS[yypt-0].str
	case 479:
		yyVAL.str = yyS[yypt-0].str
	case 480:
		yyVAL.str = yyS[yypt-0].str
	case 481:
		yyVAL.str = yyS[yypt-0].str
	case 482:
		yyVAL.str = yyS[yypt-0].str
	case 483:
		yyVAL.str = yyS[yypt-0].str
	case 484:
		yyVAL.str = yyS[yypt-0].str
	case 485:
		yyVAL.str = yyS[yypt-0].str
	case 486:
		yyVAL.str = yyS[yypt-0].str
	case 487:
		yyVAL.str = yyS[yypt-0].str
	case 488:
		yyVAL.str = yyS[yypt-0].str
	case 489:
		yyVAL.str = yyS[yypt-0].str
	case 490:
		yyVAL.str = yyS[yypt-0].str
	case 491:
		yyVAL.str = yyS[yypt-0].str
	case 492:
		yyVAL.str = yyS[yypt-0].str
	case 493:
		yyVAL.str = yyS[yypt-0].str
	case 494:
		yyVAL.str = yyS[yypt-0].str
	case 495:
		yyVAL.str = yyS[yypt-0].str
	case 496:
		yyVAL.str = yyS[yypt-0].str
	case 497:
		yyVAL.str = yyS[yypt-0].str
	case 498:
		yyVAL.str = yyS[yypt-0].str
	case 499:
		yyVAL.str = yyS[yypt-0].str
	case 500:
		yyVAL.str = yyS[yypt-0].str
	case 501:
		yyVAL.str = yyS[yypt-0].str
	case 502:
		yyVAL.str = yyS[yypt-0].str
	case 503:
		yyVAL.str = yyS[yypt-0].str
	case 504:
		yyVAL.str = yyS[yypt-0].str
	case 505:
		yyVAL.str = yyS[yypt-0].str
	case 506:
		yyVAL.str = yyS[yypt-0].str
	case 507:
		yyVAL.str = yyS[yypt-0].str
	case 508:
		yyVAL.str = yyS[yypt-0].str
	case 509:
		yyVAL.str = yyS[yypt-0].str
	case 510:
		yyVAL.str = yyS[yypt-0].str
	case 511:
		yyVAL.str = yyS[yypt-0].str
	case 512:
		yyVAL.str = yyS[yypt-0].str
	case 513:
		yyVAL.str = yyS[yypt-0].str
	case 514:
		yyVAL.str = yyS[yypt-0].str
	case 515:
		yyVAL.str = yyS[yypt-0].str
	case 516:
		yyVAL.str = yyS[yypt-0].str
	case 517:
		yyVAL.str = yyS[yypt-0].str
	case 518:
		yyVAL.str = yyS[yypt-0].str
	case 519:
		yyVAL.str = yyS[yypt-0].str
	case 520:
		yyVAL.str = yyS[yypt-0].str
	case 521:
		yyVAL.str = yyS[yypt-0].str
	case 522:
		yyVAL.str = yyS[yypt-0].str
	case 523:
		yyVAL.str = yyS[yypt-0].str
	case 524:
		yyVAL.str = yyS[yypt-0].str
	case 525:
		yyVAL.str = yyS[yypt-0].str
	case 526:
		yyVAL.str = yyS[yypt-0].str
	case 527:
		yyVAL.str = yyS[yypt-0].str
	case 528:
		yyVAL.str = yyS[yypt-0].str
	case 529:
		yyVAL.str = yyS[yypt-0].str
	case 530:
		yyVAL.str = yyS[yypt-0].str
	case 531:
		yyVAL.str = yyS[yypt-0].str
	case 532:
		yyVAL.str = yyS[yypt-0].str
	case 533:
		yyVAL.str = yyS[yypt-0].str
	case 534:
		yyVAL.str = yyS[yypt-0].str
	case 535:
		yyVAL.str = yyS[yypt-0].str
	case 536:
		yyVAL.str = yyS[yypt-0].str
	case 537:
		yyVAL.str = yyS[yypt-0].str
	case 538:
		yyVAL.str = yyS[yypt-0].str
	case 539:
		yyVAL.str = yyS[yypt-0].str
	case 540:
		yyVAL.str = yyS[yypt-0].str
	case 541:
		yyVAL.str = yyS[yypt-0].str
	case 542:
		yyVAL.str = yyS[yypt-0].str
	case 543:
		yyVAL.str = yyS[yypt-0].str
	case 544:
		yyVAL.str = yyS[yypt-0].str
	case 545:
		yyVAL.str = yyS[yypt-0].str
	case 546:
		yyVAL.str = yyS[yypt-0].str
	case 547:
		yyVAL.str = yyS[yypt-0].str
	case 548:
		yyVAL.str = yyS[yypt-0].str
	case 549:
		yyVAL.str = yyS[yypt-0].str
	case 550:
		yyVAL.str = yyS[yypt-0].str
	case 551:
		yyVAL.str = yyS[yypt-0].str
	case 552:
		yyVAL.str = yyS[yypt-0].str
	case 553:
		yyVAL.str = yyS[yypt-0].str
	case 554:
		yyVAL.str = yyS[yypt-0].str
	case 555:
		yyVAL.str = yyS[yypt-0].str
	case 556:
		yyVAL.str = yyS[yypt-0].str
	case 557:
		yyVAL.str = yyS[yypt-0].str
	case 558:
		yyVAL.str = yyS[yypt-0].str
	case 559:
		yyVAL.str = yyS[yypt-0].str
	case 560:
		yyVAL.str = yyS[yypt-0].str
	case 561:
		yyVAL.str = yyS[yypt-0].str
	case 562:
		yyVAL.str = yyS[yypt-0].str
	case 563:
		yyVAL.str = yyS[yypt-0].str
	case 564:
		yyVAL.str = yyS[yypt-0].str
	case 565:
		yyVAL.str = yyS[yypt-0].str
	case 566:
		yyVAL.str = yyS[yypt-0].str
	case 567:
		yyVAL.str = yyS[yypt-0].str
	case 568:
		yyVAL.str = yyS[yypt-0].str
	case 569:
		yyVAL.str = yyS[yypt-0].str
	case 570:
		yyVAL.str = yyS[yypt-0].str
	case 571:
		yyVAL.str = yyS[yypt-0].str
	case 572:
		yyVAL.str = yyS[yypt-0].str
	case 573:
		yyVAL.str = yyS[yypt-0].str
	case 574:
		yyVAL.str = yyS[yypt-0].str
	case 575:
		yyVAL.str = yyS[yypt-0].str
	case 576:
		yyVAL.str = yyS[yypt-0].str
	case 577:
		yyVAL.str = yyS[yypt-0].str
	case 578:
		yyVAL.str = yyS[yypt-0].str
	case 579:
		yyVAL.str = yyS[yypt-0].str
	case 580:
		yyVAL.str = yyS[yypt-0].str
	case 581:
		yyVAL.str = yyS[yypt-0].str
	case 582:
		yyVAL.str = yyS[yypt-0].str
	case 583:
		yyVAL.str = yyS[yypt-0].str
	case 584:
		yyVAL.str = yyS[yypt-0].str
	case 585:
		yyVAL.str = yyS[yypt-0].str
	case 586:
		yyVAL.str = yyS[yypt-0].str
	case 587:
		yyVAL.str = yyS[yypt-0].str
	case 588:
		yyVAL.str = yyS[yypt-0].str
	case 589:
		yyVAL.str = yyS[yypt-0].str
	case 590:
		yyVAL.str = yyS[yypt-0].str
	case 591:
		yyVAL.str = yyS[yypt-0].str
	case 592:
		yyVAL.str = yyS[yypt-0].str
	case 593:
		yyVAL.str = yyS[yypt-0].str
	case 594:
		yyVAL.str = yyS[yypt-0].str
	case 595:
		yyVAL.str = yyS[yypt-0].str
	case 596:
		yyVAL.str = yyS[yypt-0].str
	case 597:
		yyVAL.str = yyS[yypt-0].str
	case 598:
		yyVAL.str = yyS[yypt-0].str
	case 599:
		yyVAL.str = yyS[yypt-0].str
	case 600:
		yyVAL.str = yyS[yypt-0].str
	case 601:
		yyVAL.str = yyS[yypt-0].str
	case 602:
		yyVAL.str = yyS[yypt-0].str
	case 603:
		yyVAL.str = yyS[yypt-0].str
	case 604:
		yyVAL.str = yyS[yypt-0].str
	case 605:
		yyVAL.str = yyS[yypt-0].str
	case 606:
		yyVAL.str = yyS[yypt-0].str
	case 607:
		yyVAL.str = yyS[yypt-0].str
	case 608:
		yyVAL.str = yyS[yypt-0].str
	case 609:
		yyVAL.str = yyS[yypt-0].str
	case 610:
		yyVAL.str = yyS[yypt-0].str
	case 611:
		yyVAL.str = yyS[yypt-0].str
	case 612:
		yyVAL.str = yyS[yypt-0].str
	case 613:
		yyVAL.str = yyS[yypt-0].str
	case 614:
		yyVAL.str = yyS[yypt-0].str
	case 615:
		yyVAL.str = yyS[yypt-0].str
	case 616:
		yyVAL.str = yyS[yypt-0].str
	case 617:
		yyVAL.str = yyS[yypt-0].str
	case 618:
		yyVAL.str = yyS[yypt-0].str
	case 619:
		yyVAL.str = yyS[yypt-0].str
	case 620:
		yyVAL.str = yyS[yypt-0].str
	case 621:
		yyVAL.str = yyS[yypt-0].str
	case 622:
		yyVAL.str = yyS[yypt-0].str
	case 623:
		yyVAL.str = yyS[yypt-0].str
	case 624:
		yyVAL.str = yyS[yypt-0].str
	case 625:
		yyVAL.str = yyS[yypt-0].str
	case 626:
		yyVAL.str = yyS[yypt-0].str
	case 627:
		yyVAL.str = yyS[yypt-0].str
	case 628:
		yyVAL.str = yyS[yypt-0].str
	case 629:
		yyVAL.str = yyS[yypt-0].str
	case 630:
		yyVAL.str = yyS[yypt-0].str
	case 631:
		yyVAL.str = yyS[yypt-0].str
	case 632:
		yyVAL.str = yyS[yypt-0].str
	case 633:
		yyVAL.str = yyS[yypt-0].str
	case 634:
		yyVAL.str = yyS[yypt-0].str
	case 635:
		yyVAL.str = yyS[yypt-0].str
	case 636:
		yyVAL.str = yyS[yypt-0].str
	case 637:
		yyVAL.str = yyS[yypt-0].str
	case 638:
		yyVAL.str = yyS[yypt-0].str
	case 639:
		yyVAL.str = yyS[yypt-0].str
	case 640:
		yyVAL.str = yyS[yypt-0].str
	case 641:
		yyVAL.str = yyS[yypt-0].str
	case 642:
		yyVAL.str = yyS[yypt-0].str
	case 643:
		yyVAL.str = yyS[yypt-0].str
	case 644:
		yyVAL.str = yyS[yypt-0].str
	case 645:
		yyVAL.str = yyS[yypt-0].str
	case 646:
		yyVAL.str = yyS[yypt-0].str
	case 647:
		yyVAL.str = yyS[yypt-0].str
	case 648:
		yyVAL.str = yyS[yypt-0].str
	case 649:
		yyVAL.str = yyS[yypt-0].str
	case 650:
		yyVAL.str = yyS[yypt-0].str
	case 651:
		yyVAL.str = yyS[yypt-0].str
	case 652:
		yyVAL.str = yyS[yypt-0].str
	case 653:
		yyVAL.str = yyS[yypt-0].str
	case 654:
		yyVAL.str = yyS[yypt-0].str
	case 655:
		yyVAL.str = yyS[yypt-0].str
	case 656:
		yyVAL.str = yyS[yypt-0].str
	case 657:
		yyVAL.str = yyS[yypt-0].str
	case 658:
		yyVAL.str = yyS[yypt-0].str
	case 659:
		yyVAL.str = yyS[yypt-0].str
	case 660:
		yyVAL.str = yyS[yypt-0].str
	case 661:
		yyVAL.str = yyS[yypt-0].str
	case 662:
		yyVAL.str = yyS[yypt-0].str
	case 663:
		yyVAL.str = yyS[yypt-0].str
	case 664:
		yyVAL.str = yyS[yypt-0].str
	case 665:
		yyVAL.str = yyS[yypt-0].str
	case 666:
		yyVAL.str = yyS[yypt-0].str
	case 667:
		yyVAL.str = yyS[yypt-0].str
	case 668:
		yyVAL.str = yyS[yypt-0].str
	case 669:
		yyVAL.str = yyS[yypt-0].str
	case 670:
		yyVAL.str = yyS[yypt-0].str
	case 671:
		yyVAL.str = yyS[yypt-0].str
	case 672:
		yyVAL.str = yyS[yypt-0].str
	case 673:
		yyVAL.str = yyS[yypt-0].str
	case 674:
		yyVAL.str = yyS[yypt-0].str
	case 675:
		yyVAL.str = yyS[yypt-0].str
	case 676:
		yyVAL.str = yyS[yypt-0].str
	case 677:
		yyVAL.str = yyS[yypt-0].str
	case 678:
		yyVAL.str = yyS[yypt-0].str
	case 679:
		yyVAL.str = yyS[yypt-0].str
	case 680:
		yyVAL.str = yyS[yypt-0].str
	case 681:
		yyVAL.str = yyS[yypt-0].str
	case 682:
		yyVAL.str = yyS[yypt-0].str
	case 683:
		yyVAL.str = yyS[yypt-0].str
	case 684:
		yyVAL.str = yyS[yypt-0].str
	case 685:
		yyVAL.str = yyS[yypt-0].str
	case 686:
		yyVAL.str = yyS[yypt-0].str
	case 687:
		yyVAL.str = yyS[yypt-0].str
	case 688:
		yyVAL.str = yyS[yypt-0].str
	case 689:
		yyVAL.str = yyS[yypt-0].str
	case 690:
		yyVAL.str = yyS[yypt-0].str
	case 691:
		yyVAL.str = yyS[yypt-0].str
	case 692:
		yyVAL.str = yyS[yypt-0].str
	case 693:
		yyVAL.str = yyS[yypt-0].str
	case 694:
		yyVAL.str = yyS[yypt-0].str
	case 695:
		yyVAL.str = yyS[yypt-0].str
	case 696:
		yyVAL.str = yyS[yypt-0].str
	case 697:
		yyVAL.str = yyS[yypt-0].str
	case 698:
		yyVAL.str = yyS[yypt-0].str
	case 699:
		yyVAL.str = yyS[yypt-0].str
	case 700:
		yyVAL.str = yyS[yypt-0].str
	case 701:
		yyVAL.str = yyS[yypt-0].str
	case 702:
		yyVAL.str = yyS[yypt-0].str
	case 703:
		yyVAL.str = yyS[yypt-0].str
	case 704:
		yyVAL.str = yyS[yypt-0].str
	case 705:
		yyVAL.str = yyS[yypt-0].str
	case 706:
		yyVAL.str = yyS[yypt-0].str
	case 707:
		yyVAL.str = yyS[yypt-0].str
	case 708:
		yyVAL.str = yyS[yypt-0].str
	case 709:
		yyVAL.str = yyS[yypt-0].str
	case 710:
		yyVAL.str = yyS[yypt-0].str
	case 711:
		yyVAL.str = yyS[yypt-0].str
	case 712:
		yyVAL.str = yyS[yypt-0].str
	case 713:
		yyVAL.str = yyS[yypt-0].str
	case 714:
		yyVAL.str = yyS[yypt-0].str
	case 715:
		yyVAL.str = yyS[yypt-0].str
	case 716:
		yyVAL.str = yyS[yypt-0].str
	case 717:
		yyVAL.str = yyS[yypt-0].str
	case 718:
		yyVAL.str = yyS[yypt-0].str
	case 719:
		yyVAL.str = yyS[yypt-0].str
	case 720:
		yyVAL.str = yyS[yypt-0].str
	case 721:
		yyVAL.str = yyS[yypt-0].str
	case 722:
		yyVAL.str = yyS[yypt-0].str
	case 723:
		yyVAL.str = yyS[yypt-0].str
	case 724:
		yyVAL.str = yyS[yypt-0].str
	case 725:
		yyVAL.str = yyS[yypt-0].str
	case 726:
		yyVAL.str = yyS[yypt-0].str
	case 727:
		yyVAL.str = yyS[yypt-0].str
	case 728:
		yyVAL.str = yyS[yypt-0].str
	case 729:
		yyVAL.str = yyS[yypt-0].str
	case 730:
		yyVAL.str = yyS[yypt-0].str
	case 731:
		yyVAL.str = yyS[yypt-0].str
	case 732:
		yyVAL.str = yyS[yypt-0].str
	case 733:
		yyVAL.str = yyS[yypt-0].str
	case 734:
		yyVAL.str = yyS[yypt-0].str
	case 735:
		yyVAL.str = yyS[yypt-0].str
	case 736:
		yyVAL.str = yyS[yypt-0].str
	case 737:
		yyVAL.str = yyS[yypt-0].str
	case 738:
		yyVAL.str = yyS[yypt-0].str
	case 739:
		yyVAL.str = yyS[yypt-0].str
	case 740:
		yyVAL.str = yyS[yypt-0].str
	case 741:
		yyVAL.str = yyS[yypt-0].str
	case 742:
		yyVAL.str = yyS[yypt-0].str
	case 743:
		yyVAL.str = yyS[yypt-0].str
	case 744:
		yyVAL.str = yyS[yypt-0].str
	case 745:
		yyVAL.str = yyS[yypt-0].str
	case 746:
		yyVAL.str = yyS[yypt-0].str
	case 747:
		yyVAL.str = yyS[yypt-0].str
	case 748:
		yyVAL.str = yyS[yypt-0].str
	case 749:
		yyVAL.str = yyS[yypt-0].str
	case 750:
		yyVAL.str = yyS[yypt-0].str
	case 751:
		yyVAL.str = yyS[yypt-0].str
	case 752:
		yyVAL.str = yyS[yypt-0].str
	case 753:
		yyVAL.str = yyS[yypt-0].str
	case 754:
		yyVAL.str = yyS[yypt-0].str
	case 755:
		yyVAL.str = yyS[yypt-0].str
	case 756:
		yyVAL.str = yyS[yypt-0].str
	case 757:
		yyVAL.str = yyS[yypt-0].str
	case 758:
		yyVAL.str = yyS[yypt-0].str
	case 759:
		yyVAL.str = yyS[yypt-0].str
	case 760:
		yyVAL.str = yyS[yypt-0].str
	case 761:
		yyVAL.str = yyS[yypt-0].str
	case 762:
		yyVAL.str = yyS[yypt-0].str
	case 763:
		yyVAL.str = yyS[yypt-0].str
	case 764:
		yyVAL.str = yyS[yypt-0].str
	case 765:
		yyVAL.str = yyS[yypt-0].str
	case 766:
		yyVAL.str = yyS[yypt-0].str
	case 767:
		yyVAL.str = yyS[yypt-0].str
	case 768:
		yyVAL.str = yyS[yypt-0].str
	case 769:
		yyVAL.str = yyS[yypt-0].str
	case 770:
		yyVAL.str = yyS[yypt-0].str
	case 771:
		yyVAL.str = yyS[yypt-0].str
	case 772:
		yyVAL.str = yyS[yypt-0].str
	case 773:
		yyVAL.str = yyS[yypt-0].str
	case 774:
		yyVAL.str = yyS[yypt-0].str
	case 775:
		yyVAL.str = yyS[yypt-0].str
	case 776:
		yyVAL.str = yyS[yypt-0].str
	case 777:
		yyVAL.str = yyS[yypt-0].str
	case 778:
		yyVAL.str = yyS[yypt-0].str
	case 779:
		yyVAL.str = yyS[yypt-0].str
	case 780:
		yyVAL.str = yyS[yypt-0].str
	case 781:
		yyVAL.str = yyS[yypt-0].str
	case 782:
		yyVAL.str = yyS[yypt-0].str
	case 783:
		yyVAL.str = yyS[yypt-0].str
	case 784:
		yyVAL.str = yyS[yypt-0].str
	case 785:
		yyVAL.str = yyS[yypt-0].str
	case 786:
		yyVAL.str = yyS[yypt-0].str
	case 787:
		yyVAL.str = yyS[yypt-0].str
	case 788:
		yyVAL.str = yyS[yypt-0].str
	case 789:
		yyVAL.str = yyS[yypt-0].str
	case 790:
		yyVAL.str = yyS[yypt-0].str
	case 791:
		yyVAL.str = yyS[yypt-0].str
	case 792:
		yyVAL.str = yyS[yypt-0].str
	case 793:
		yyVAL.str = yyS[yypt-0].str
	case 794:
		yyVAL.str = yyS[yypt-0].str
	case 795:
		yyVAL.str = yyS[yypt-0].str
	case 796:
		yyVAL.str = yyS[yypt-0].str
	case 797:
		yyVAL.str = yyS[yypt-0].str
	case 798:
		yyVAL.str = yyS[yypt-0].str
	case 799:
		yyVAL.str = yyS[yypt-0].str
	case 800:
		yyVAL.str = yyS[yypt-0].str
	case 801:
		yyVAL.str = yyS[yypt-0].str
	case 802:
		yyVAL.str = yyS[yypt-0].str
	case 803:
		yyVAL.str = yyS[yypt-0].str
	case 804:
		yyVAL.str = yyS[yypt-0].str
	case 805:
		yyVAL.str = yyS[yypt-0].str
	case 806:
		yyVAL.str = yyS[yypt-0].str
	case 807:
		yyVAL.str = yyS[yypt-0].str
	case 808:
		yyVAL.str = yyS[yypt-0].str
	case 809:
		yyVAL.str = yyS[yypt-0].str
	case 810:
		yyVAL.str = yyS[yypt-0].str
	case 811:
		yyVAL.str = yyS[yypt-0].str
	case 812:
		yyVAL.str = yyS[yypt-0].str
	case 813:
		yyVAL.str = yyS[yypt-0].str
	case 814:
		yyVAL.str = yyS[yypt-0].str
	case 815:
		yyVAL.str = yyS[yypt-0].str
	case 816:
		yyVAL.str = yyS[yypt-0].str
	case 817:
		yyVAL.str = yyS[yypt-0].str
	case 818:
		yyVAL.str = yyS[yypt-0].str
	case 819:
		yyVAL.str = yyS[yypt-0].str
	case 820:
		yyVAL.str = yyS[yypt-0].str
	case 821:
		yyVAL.str = yyS[yypt-0].str
	case 822:
		yyVAL.str = yyS[yypt-0].str
	case 823:
		yyVAL.str = yyS[yypt-0].str
	case 824:
		yyVAL.str = yyS[yypt-0].str
	case 825:
		yyVAL.str = yyS[yypt-0].str
	case 826:
		yyVAL.str = yyS[yypt-0].str
	case 827:
		yyVAL.str = yyS[yypt-0].str
	case 828:
		yyVAL.str = yyS[yypt-0].str
	case 829:
		yyVAL.str = yyS[yypt-0].str
	case 830:
		yyVAL.str = yyS[yypt-0].str
	case 831:
		yyVAL.str = yyS[yypt-0].str
	case 832:
		yyVAL.str = yyS[yypt-0].str
	case 833:
		yyVAL.str = yyS[yypt-0].str
	case 834:
		yyVAL.str = yyS[yypt-0].str
	case 835:
		yyVAL.str = yyS[yypt-0].str
	case 836:
		yyVAL.str = yyS[yypt-0].str
	case 837:
		yyVAL.str = yyS[yypt-0].str
	case 838:
		yyVAL.str = yyS[yypt-0].str
	case 839:
		yyVAL.str = yyS[yypt-0].str
	case 840:
		yyVAL.str = yyS[yypt-0].str
	case 841:
		yyVAL.str = yyS[yypt-0].str
	case 842:
		yyVAL.str = yyS[yypt-0].str
	case 843:
		yyVAL.str = yyS[yypt-0].str
	case 844:
		yyVAL.str = yyS[yypt-0].str
	case 845:
		yyVAL.str = yyS[yypt-0].str
	case 846:
		yyVAL.str = yyS[yypt-0].str
	case 847:
		yyVAL.str = yyS[yypt-0].str
	case 848:
		yyVAL.str = yyS[yypt-0].str
	case 849:
		yyVAL.str = yyS[yypt-0].str
	case 850:
		yyVAL.str = yyS[yypt-0].str
	case 851:
		yyVAL.str = yyS[yypt-0].str
	case 852:
		yyVAL.str = yyS[yypt-0].str
	case 853:
		yyVAL.str = yyS[yypt-0].str
	case 854:
		yyVAL.str = yyS[yypt-0].str
	case 855:
		yyVAL.str = yyS[yypt-0].str
	case 856:
		yyVAL.str = yyS[yypt-0].str
	case 857:
		yyVAL.str = yyS[yypt-0].str
	case 858:
		yyVAL.str = yyS[yypt-0].str
	case 859:
		yyVAL.str = yyS[yypt-0].str
	case 860:
		yyVAL.str = yyS[yypt-0].str
	case 861:
		yyVAL.str = yyS[yypt-0].str
	case 862:
		yyVAL.str = yyS[yypt-0].str
	case 863:
		yyVAL.str = yyS[yypt-0].str
	case 864:
		yyVAL.str = yyS[yypt-0].str
	case 865:
		yyVAL.str = yyS[yypt-0].str
	case 866:
		yyVAL.str = yyS[yypt-0].str
	case 867:
		yyVAL.str = yyS[yypt-0].str
	case 868:
		yyVAL.str = yyS[yypt-0].str
	case 869:
		yyVAL.str = yyS[yypt-0].str
	case 870:
		yyVAL.str = yyS[yypt-0].str
	case 871:
		yyVAL.str = yyS[yypt-0].str
	case 872:
		yyVAL.str = yyS[yypt-0].str
	case 873:
		yyVAL.str = yyS[yypt-0].str
	case 874:
		yyVAL.str = yyS[yypt-0].str
	case 875:
		yyVAL.str = yyS[yypt-0].str
	case 876:
		yyVAL.str = yyS[yypt-0].str
	case 877:
		yyVAL.str = yyS[yypt-0].str
	case 878:
		yyVAL.str = yyS[yypt-0].str
	case 879:
		yyVAL.str = yyS[yypt-0].str
	case 880:
		yyVAL.str = yyS[yypt-0].str
	case 881:
		yyVAL.str = yyS[yypt-0].str
	case 882:
		yyVAL.str = yyS[yypt-0].str
	case 883:
		yyVAL.str = yyS[yypt-0].str
	}
	goto yystack /* stack new state and value */
}

//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	row                 Row
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerConst
	optArrayBounds      []IntegerConst
	optInterval         *OptInterval
	intervalSecond      *IntervalSecond
	subqueryOp          SubqueryOp
	extractList         *ExtractList
	overlayList         OverlayList
	positionList        *PositionList
	substrList          SubstrList
	trimList            TrimList
	xmlAttributes       XmlAttributes
	xmlAttributeEls     []XmlAttributeEl
	xmlAttributeEl      XmlAttributeEl
	xmlExistsArgument   XmlExistsArgument
	xmlRootVersion      XmlRootVersion
}

const IDENT = 57346
const FCONST = 57347
const SCONST = 57348
const BCONST = 57349
const XCONST = 57350
const Op = 57351
const ICONST = 57352
const PARAM = 57353
const TYPECAST = 57354
const DOT_DOT = 57355
const COLON_EQUALS = 57356
const EQUALS_GREATER = 57357
const LESS_EQUALS = 57358
const GREATER_EQUALS = 57359
const NOT_EQUALS = 57360
const ABORT_P = 57361
const ABSOLUTE_P = 57362
const ACCESS = 57363
const ACTION = 57364
const ADD_P = 57365
const ADMIN = 57366
const AFTER = 57367
const AGGREGATE = 57368
const ALL = 57369
const ALSO = 57370
const ALTER = 57371
const ALWAYS = 57372
const ANALYSE = 57373
const ANALYZE = 57374
const AND = 57375
const ANY = 57376
const ARRAY = 57377
const AS = 57378
const ASC = 57379
const ASSERTION = 57380
const ASSIGNMENT = 57381
const ASYMMETRIC = 57382
const AT = 57383
const ATTRIBUTE = 57384
const AUTHORIZATION = 57385
const BACKWARD = 57386
const BEFORE = 57387
const BEGIN_P = 57388
const BETWEEN = 57389
const BIGINT = 57390
const BINARY = 57391
const BIT = 57392
const BOOLEAN_P = 57393
const BOTH = 57394
const BY = 57395
const CACHE = 57396
const CALLED = 57397
const CASCADE = 57398
const CASCADED = 57399
const CASE = 57400
const CAST = 57401
const CATALOG_P = 57402
const CHAIN = 57403
const CHAR_P = 57404
const CHARACTER = 57405
const CHARACTERISTICS = 57406
const CHECK = 57407
const CHECKPOINT = 57408
const CLASS = 57409
const CLOSE = 57410
const CLUSTER = 57411
const COALESCE = 57412
const COLLATE = 57413
const COLLATION = 57414
const COLUMN = 57415
const COMMENT = 57416
const COMMENTS = 57417
const COMMIT = 57418
const COMMITTED = 57419
const CONCURRENTLY = 57420
const CONFIGURATION = 57421
const CONFLICT = 57422
const CONNECTION = 57423
const CONSTRAINT = 57424
const CONSTRAINTS = 57425
const CONTENT_P = 57426
const CONTINUE_P = 57427
const CONVERSION_P = 57428
const COPY = 57429
const COST = 57430
const CREATE = 57431
const CROSS = 57432
const CSV = 57433
const CUBE = 57434
const CURRENT_P = 57435
const CURRENT_CATALOG = 57436
const CURRENT_DATE = 57437
const CURRENT_ROLE = 57438
const CURRENT_SCHEMA = 57439
const CURRENT_TIME = 57440
const CURRENT_TIMESTAMP = 57441
const CURRENT_USER = 57442
const CURSOR = 57443
const CYCLE = 57444
const DATA_P = 57445
const DATABASE = 57446
const DAY_P = 57447
const DEALLOCATE = 57448
const DEC = 57449
const DECIMAL_P = 57450
const DECLARE = 57451
const DEFAULT = 57452
const DEFAULTS = 57453
const DEFERRABLE = 57454
const DEFERRED = 57455
const DEFINER = 57456
const DELETE_P = 57457
const DELIMITER = 57458
const DELIMITERS = 57459
const DESC = 57460
const DICTIONARY = 57461
const DISABLE_P = 57462
const DISCARD = 57463
const DISTINCT = 57464
const DO = 57465
const DOCUMENT_P = 57466
const DOMAIN_P = 57467
const DOUBLE_P = 57468
const DROP = 57469
const EACH = 57470
const ELSE = 57471
const ENABLE_P = 57472
const ENCODING = 57473
const ENCRYPTED = 57474
const END_P = 57475
const ENUM_P = 57476
const ESCAPE = 57477
const EVENT = 57478
const EXCEPT = 57479
const EXCLUDE = 57480
const EXCLUDING = 57481
const EXCLUSIVE = 57482
const EXECUTE = 57483
const EXISTS = 57484
const EXPLAIN = 57485
const EXTENSION = 57486
const EXTERNAL = 57487
const EXTRACT = 57488
const FALSE_P = 57489
const FAMILY = 57490
const FETCH = 57491
const FILTER = 57492
const FIRST_P = 57493
const FLOAT_P = 57494
const FOLLOWING = 57495
const FOR = 57496
const FORCE = 57497
const FOREIGN = 57498
const FORWARD = 57499
const FREEZE = 57500
const FROM = 57501
const FULL = 57502
const FUNCTION = 57503
const FUNCTIONS = 57504
const GLOBAL = 57505
const GRANT = 57506
const GRANTED = 57507
const GREATEST = 57508
const GROUP_P = 57509
const GROUPING = 57510
const HANDLER = 57511
const HAVING = 57512
const HEADER_P = 57513
const HOLD = 57514
const HOUR_P = 57515
const IDENTITY_P = 57516
const IF_P = 57517
const ILIKE = 57518
const IMMEDIATE = 57519
const IMMUTABLE = 57520
const IMPLICIT_P = 57521
const IMPORT_P = 57522
const IN_P = 57523
const INCLUDING = 57524
const INCREMENT = 57525
const INDEX = 57526
const INDEXES = 57527
const INHERIT = 57528
const INHERITS = 57529
const INITIALLY = 57530
const INLINE_P = 57531
const INNER_P = 57532
const INOUT = 57533
const INPUT_P = 57534
const INSENSITIVE = 57535
const INSERT = 57536
const INSTEAD = 57537
const INT_P = 57538
const INTEGER = 57539
const INTERSECT = 57540
const INTERVAL = 57541
const INTO = 57542
const INVOKER = 57543
const IS = 57544
const ISNULL = 57545
const ISOLATION = 57546
const JOIN = 57547
const KEY = 57548
const LABEL = 57549
const LANGUAGE = 57550
const LARGE_P = 57551
const LAST_P = 57552
const LATERAL_P = 57553
const LEADING = 57554
const LEAKPROOF = 57555
const LEAST = 57556
const LEFT = 57557
const LEVEL = 57558
const LIKE = 57559
const LIMIT = 57560
const LISTEN = 57561
const LOAD = 57562
const LOCAL = 57563
const LOCALTIME = 57564
const LOCALTIMESTAMP = 57565
const LOCATION = 57566
const LOCK_P = 57567
const LOCKED = 57568
const LOGGED = 57569
const MAPPING = 57570
const MATCH = 57571
const MATERIALIZED = 57572
const MAXVALUE = 57573
const MINUTE_P = 57574
const MINVALUE = 57575
const MODE = 57576
const MONTH_P = 57577
const MOVE = 57578
const NAME_P = 57579
const NAMES = 57580
const NATIONAL = 57581
const NATURAL = 57582
const NCHAR = 57583
const NEXT = 57584
const NO = 57585
const NONE = 57586
const NOT = 57587
const NOTHING = 57588
const NOTIFY = 57589
const NOTNULL = 57590
const NOWAIT = 57591
const NULL_P = 57592
const NULLIF = 57593
const NULLS_P = 57594
const NUMERIC = 57595
const OBJECT_P = 57596
const OF = 57597
const OFF = 57598
const OFFSET = 57599
const OIDS = 57600
const ON = 57601
const ONLY = 57602
const OPERATOR = 57603
const OPTION = 57604
const OPTIONS = 57605
const OR = 57606
const ORDER = 57607
const ORDINALITY = 57608
const OUT_P = 57609
const OUTER_P = 57610
const OVER = 57611
const OVERLAPS = 57612
const OVERLAY = 57613
const OWNED = 57614
const OWNER = 57615
const PARSER = 57616
const PARTIAL = 57617
const PARTITION = 57618
const PASSING = 57619
const PASSWORD = 57620
const PLACING = 57621
const PLANS = 57622
const POLICY = 57623
const POSITION = 57624
const PRECEDING = 57625
const PRECISION = 57626
const PRESERVE = 57627
const PREPARE = 57628
const PREPARED = 57629
const PRIMARY = 57630
const PRIOR = 57631
const PRIVILEGES = 57632
const PROCEDURAL = 57633
const PROCEDURE = 57634
const PROGRAM = 57635
const QUOTE = 57636
const RANGE = 57637
const READ = 57638
const REAL = 57639
const REASSIGN = 57640
const RECHECK = 57641
const RECURSIVE = 57642
const REF = 57643
const REFERENCES = 57644
const REFRESH = 57645
const REINDEX = 57646
const RELATIVE_P = 57647
const RELEASE = 57648
const RENAME = 57649
const REPEATABLE = 57650
const REPLACE = 57651
const REPLICA = 57652
const RESET = 57653
const RESTART = 57654
const RESTRICT = 57655
const RETURNING = 57656
const RETURNS = 57657
const REVOKE = 57658
const RIGHT = 57659
const ROLE = 57660
const ROLLBACK = 57661
const ROLLUP = 57662
const ROW = 57663
const ROWS = 57664
const RULE = 57665
const SAVEPOINT = 57666
const SCHEMA = 57667
const SCROLL = 57668
const SEARCH = 57669
const SECOND_P = 57670
const SECURITY = 57671
const SELECT = 57672
const SEQUENCE = 57673
const SEQUENCES = 57674
const SERIALIZABLE = 57675
const SERVER = 57676
const SESSION = 57677
const SESSION_USER = 57678
const SET = 57679
const SETS = 57680
const SETOF = 57681
const SHARE = 57682
const SHOW = 57683
const SIMILAR = 57684
const SIMPLE = 57685
const SKIP = 57686
const SMALLINT = 57687
const SNAPSHOT = 57688
const SOME = 57689
const SQL_P = 57690
const STABLE = 57691
const STANDALONE_P = 57692
const START = 57693
const STATEMENT = 57694
const STATISTICS = 57695
const STDIN = 57696
const STDOUT = 57697
const STORAGE = 57698
const STRICT_P = 57699
const STRIP_P = 57700
const SUBSTRING = 57701
const SYMMETRIC = 57702
const SYSID = 57703
const SYSTEM_P = 57704
const TABLE = 57705
const TABLES = 57706
const TABLESAMPLE = 57707
const TABLESPACE = 57708
const TEMP = 57709
const TEMPLATE = 57710
const TEMPORARY = 57711
const TEXT_P = 57712
const THEN = 57713
const TIME = 57714
const TIMESTAMP = 57715
const TO = 57716
const TRAILING = 57717
const TRANSACTION = 57718
const TRANSFORM = 57719
const TREAT = 57720
const TRIGGER = 57721
const TRIM = 57722
const TRUE_P = 57723
const TRUNCATE = 57724
const TRUSTED = 57725
const TYPE_P = 57726
const TYPES_P = 57727
const UNBOUNDED = 57728
const UNCOMMITTED = 57729
const UNENCRYPTED = 57730
const UNION = 57731
const UNIQUE = 57732
const UNKNOWN = 57733
const UNLISTEN = 57734
const UNLOGGED = 57735
const UNTIL = 57736
const UPDATE = 57737
const USER = 57738
const USING = 57739
const VACUUM = 57740
const VALID = 57741
const VALIDATE = 57742
const VALIDATOR = 57743
const VALUE_P = 57744
const VALUES = 57745
const VARCHAR = 57746
const VARIADIC = 57747
const VARYING = 57748
const VERBOSE = 57749
const VERSION_P = 57750
const VIEW = 57751
const VIEWS = 57752
const VOLATILE = 57753
const WHEN = 57754
const WHERE = 57755
const WHITESPACE_P = 57756
const WINDOW = 57757
const WITH = 57758
const WITHIN = 57759
const WITHOUT = 57760
const WORK = 57761
const WRAPPER = 57762
const WRITE = 57763
const XML_P = 57764
const XMLATTRIBUTES = 57765
const XMLCONCAT = 57766
const XMLELEMENT = 57767
const XMLEXISTS = 57768
const XMLFOREST = 57769
const XMLPARSE = 57770
const XMLPI = 57771
const XMLROOT = 57772
const XMLSERIALIZE = 57773
const YEAR_P = 57774
const YES_P = 57775
const ZONE = 57776
const NOT_LA = 57777
const NULLS_LA = 57778
const WITH_LA = 57779
const OP = 57780
const POSTFIXOP = 57781
const UMINUS = 57782

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"';'",
	"','",
	"':'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:3444

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 330,
	455, 330,
	-2, 338,
	-1, 5,
	1, 333,
	453, 333,
	455, 333,
	-2, 337,
	-1, 13,
	1, 334,
	453, 334,
	455, 334,
	-2, 354,
	-1, 408,
	6, 527,
	14, 527,
	15, 527,
	452, 527,
	-2, 524,
	-1, 409,
	6, 528,
	14, 528,
	15, 528,
	452, 528,
	-2, 525,
	-1, 417,
	6, 82,
	452, 82,
	-2, 824,
	-1, 429,
	6, 860,
	14, 860,
	15, 860,
	452, 860,
	-2, 223,
	-1, 450,
	6, 46,
	-2, 808,
	-1, 451,
	6, 75,
	452, 75,
	-2, 809,
	-1, 452,
	6, 53,
	-2, 810,
	-1, 453,
	6, 75,
	63, 75,
	452, 75,
	-2, 811,
	-1, 454,
	6, 75,
	63, 75,
	452, 75,
	-2, 812,
	-1, 455,
	6, 42,
	-2, 814,
	-1, 456,
	6, 42,
	-2, 815,
	-1, 457,
	6, 55,
	-2, 818,
	-1, 458,
	6, 43,
	-2, 822,
	-1, 459,
	6, 44,
	-2, 823,
	-1, 461,
	6, 75,
	63, 75,
	452, 75,
	-2, 827,
	-1, 462,
	6, 42,
	-2, 830,
	-1, 463,
	6, 47,
	-2, 835,
	-1, 464,
	6, 45,
	-2, 838,
	-1, 465,
	6, 85,
	-2, 840,
	-1, 466,
	6, 85,
	-2, 841,
	-1, 467,
	6, 70,
	63, 70,
	452, 70,
	-2, 845,
	-1, 527,
	321, 424,
	322, 424,
	-2, 102,
	-1, 570,
	27, 446,
	34, 446,
	347, 446,
	-2, 460,
	-1, 581,
	137, 338,
	149, 338,
	154, 338,
	198, 338,
	218, 338,
	257, 338,
	265, 338,
	389, 338,
	-2, 194,
	-1, 594,
	6, 507,
	452, 507,
	-2, 475,
	-1, 727,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 114,
	-1, 728,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 115,
	-1, 729,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 116,
	-1, 730,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 117,
	-1, 731,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 118,
	-1, 732,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 119,
	-1, 736,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 127,
	-1, 742,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 131,
	-1, 878,
	270, 438,
	-2, 441,
	-1, 887,
	14, 9,
	15, 9,
	-2, 506,
	-1, 1000,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 129,
	-1, 1001,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 133,
	-1, 1007,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 135,
	-1, 1035,
	270, 437,
	-2, 440,
	-1, 1155,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 128,
	-1, 1158,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 137,
	-1, 1161,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 132,
	-1, 1165,
	202, 0,
	203, 0,
	248, 0,
	-2, 150,
	-1, 1172,
	27, 284,
	34, 284,
	347, 284,
	-2, 461,
	-1, 1177,
	270, 439,
	-2, 442,
	-1, 1215,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 174,
	-1, 1216,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 175,
	-1, 1217,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 176,
	-1, 1218,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 177,
	-1, 1219,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 178,
	-1, 1220,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 179,
	-1, 1275,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 130,
	-1, 1276,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 134,
	-1, 1280,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 136,
	-1, 1281,
	202, 0,
	203, 0,
	248, 0,
	-2, 151,
	-1, 1285,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 154,
	-1, 1286,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 156,
	-1, 1339,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 138,
	-1, 1340,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 155,
	-1, 1341,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 157,
	-1, 1347,
	202, 0,
	-2, 183,
	-1, 1375,
	202, 0,
	-2, 184,
	-1, 1391,
	47, 0,
	176, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 807,
}

const yyNprod = 955
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 18841

var yyAct = [...]int{

	378, 1390, 1054, 1389, 1365, 1330, 395, 986, 14, 1166,
	947, 1261, 1326, 643, 682, 398, 852, 29, 854, 649,
	1137, 948, 572, 861, 1094, 1093, 884, 1167, 989, 468,
	984, 375, 32, 27, 982, 29, 590, 898, 755, 387,
	4, 752, 939, 629, 585, 995, 880, 20, 894, 633,
	665, 888, 502, 950, 678, 381, 936, 372, 538, 1029,
	1141, 18, 499, 891, 536, 1404, 1398, 1397, 1403, 1113,
	1029, 1396, 1377, 1354, 1284, 1284, 1029, 1352, 1342, 1307,
	1353, 1284, 1029, 1288, 1383, 1283, 1029, 570, 1284, 1255,
	540, 1367, 1029, 1320, 552, 553, 554, 1250, 1240, 1170,
	1251, 1241, 1029, 1129, 1120, 1112, 1029, 1029, 1113, 1108,
	1107, 1106, 1029, 1029, 1029, 1105, 1227, 1035, 1029, 542,
	1029, 392, 1031, 655, 1070, 565, 654, 1032, 1080, 1081,
	1082, 892, 1030, 1175, 977, 392, 850, 1029, 1070, 673,
	539, 25, 1080, 1081, 1082, 1279, 12, 587, 587, 541,
	369, 586, 586, 634, 634, 1151, 996, 1151, 410, 1278,
	1034, 8, 996, 1388, 1362, 645, 645, 1359, 1325, 1315,
	1308, 1299, 1294, 392, 1293, 1143, 1070, 1292, 1273, 1242,
	1080, 1081, 1082, 396, 644, 644, 1237, 1236, 1235, 1182,
	893, 1172, 1126, 890, 10, 1125, 1122, 1169, 1121, 642,
	646, 847, 1101, 1092, 1069, 1066, 1064, 1062, 1061, 1060,
	1142, 392, 1059, 1049, 1070, 1041, 1033, 969, 1080, 1081,
	1082, 591, 369, 7, 411, 650, 368, 1056, 1368, 1355,
	1349, 1305, 411, 592, 11, 1168, 1164, 392, 1134, 410,
	1070, 1091, 1048, 1023, 1080, 1081, 1082, 1021, 1272, 1016,
	570, 757, 1037, 540, 560, 634, 637, 956, 903, 566,
	902, 350, 845, 652, 627, 626, 625, 624, 623, 622,
	621, 620, 619, 618, 617, 616, 615, 392, 614, 613,
	1070, 401, 542, 7, 612, 611, 895, 412, 610, 609,
	608, 607, 606, 416, 605, 558, 593, 7, 1370, 1337,
	1336, 470, 1146, 469, 472, 591, 540, 1147, 1070, 498,
	645, 983, 541, 1382, 1084, 1124, 1123, 998, 1327, 1317,
	1316, 985, 1057, 899, 1253, 630, 891, 1400, 1084, 644,
	1361, 971, 848, 1047, 1052, 542, 1335, 17, 392, 571,
	1046, 1070, 1045, 515, 515, 1080, 1081, 1082, 1044, 584,
	1002, 743, 963, 962, 720, 357, 1360, 669, 658, 754,
	355, 966, 356, 1192, 895, 541, 1084, 1408, 351, 570,
	754, 628, 540, 1086, 555, 570, 1277, 1399, 540, 1111,
	513, 513, 761, 1356, 1070, 5, 1314, 1086, 1189, 759,
	889, 1372, 527, 6, 892, 666, 667, 1297, 16, 579,
	18, 542, 532, 540, 1084, 532, 532, 542, 901, 1085,
	993, 352, 1130, 565, 1407, 596, 597, 598, 1373, 656,
	561, 953, 496, 360, 581, 1086, 1140, 582, 588, 589,
	1084, 541, 542, 511, 529, 945, 922, 541, 1070, 1188,
	976, 657, 1266, 1265, 522, 16, 359, 1190, 1262, 1135,
	1138, 1348, 670, 893, 1301, 1302, 890, 1304, 1095, 895,
	1163, 1065, 541, 1086, 1015, 18, 679, 1096, 570, 471,
	604, 540, 510, 603, 1334, 354, 359, 514, 514, 1197,
	647, 354, 540, 639, 638, 363, 650, 23, 952, 1086,
	1380, 540, 1346, 1313, 1263, 1162, 367, 631, 632, 1222,
	542, 1225, 571, 1381, 555, 640, 635, 29, 1136, 1384,
	413, 542, 641, 559, 1412, 358, 359, 549, 550, 551,
	555, 543, 544, 545, 546, 547, 548, 555, 951, 1086,
	541, 1084, 512, 512, 653, 523, 29, 1149, 555, 990,
	1070, 541, 560, 895, 1406, 358, 540, 566, 719, 895,
	541, 1077, 1078, 1079, 651, 1071, 1072, 1073, 1074, 1075,
	1076, 1042, 1043, 672, 540, 1077, 1078, 1079, 681, 1071,
	1072, 1073, 1074, 1075, 1076, 555, 555, 555, 555, 555,
	364, 555, 24, 558, 360, 358, 410, 762, 1303, 15,
	1086, 663, 664, 542, 1157, 371, 411, 680, 766, 863,
	661, 765, 555, 1077, 1078, 1079, 756, 1071, 1072, 1073,
	1074, 1075, 1076, 926, 648, 862, 766, 899, 495, 765,
	362, 571, 1223, 541, 360, 349, 918, 571, 860, 851,
	1411, 1387, 1224, 1038, 856, 846, 877, 365, 366, 851,
	13, 1077, 1078, 1079, 923, 1071, 1072, 1073, 1074, 1075,
	1076, 497, 1268, 889, 946, 415, 931, 19, 3, 740,
	941, 942, 943, 944, 414, 400, 686, 1077, 1078, 1079,
	599, 1071, 1072, 1073, 1074, 1075, 1076, 957, 595, 1004,
	1269, 955, 959, 960, 543, 544, 545, 546, 547, 548,
	753, 494, 864, 687, 684, 968, 399, 980, 991, 874,
	875, 876, 760, 767, 1319, 662, 967, 970, 561, 509,
	972, 1071, 1072, 1073, 1074, 1075, 1076, 517, 516, 647,
	571, 508, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 978, 1252,
	994, 992, 548, 555, 1076, 594, 1247, 635, 531, 641,
	1110, 531, 531, 926, 926, 1310, 530, 632, 631, 533,
	534, 640, 749, 506, 751, 997, 567, 409, 1077, 1078,
	1079, 718, 1071, 1072, 1073, 1074, 1075, 1076, 31, 382,
	1005, 756, 1003, 896, 923, 923, 857, 747, 738, 904,
	905, 906, 907, 741, 1371, 1296, 31, 581, 1020, 1200,
	1019, 559, 900, 543, 544, 545, 546, 547, 548, 543,
	544, 545, 546, 547, 548, 1071, 1072, 1073, 1074, 1075,
	1076, 958, 689, 1364, 407, 386, 961, 406, 690, 737,
	964, 391, 965, 1012, 688, 1014, 545, 546, 547, 548,
	390, 501, 702, 897, 701, 704, 1050, 974, 975, 600,
	385, 636, 863, 383, 660, 1329, 555, 979, 1010, 758,
	555, 573, 886, 1025, 671, 528, 668, 361, 862, 1022,
	353, 1073, 1074, 1075, 1076, 507, 525, 859, 659, 524,
	518, 505, 929, 887, 921, 745, 555, 1067, 919, 1036,
	744, 1024, 910, 909, 26, 750, 602, 521, 675, 373,
	373, 535, 543, 544, 545, 546, 547, 548, 1055, 555,
	987, 1386, 21, 543, 544, 545, 546, 547, 548, 22,
	370, 555, 9, 1083, 2, 926, 926, 926, 1039, 1040,
	1, 555, 0, 555, 0, 1051, 0, 0, 555, 0,
	0, 555, 0, 0, 981, 0, 0, 0, 0, 0,
	555, 0, 0, 0, 739, 555, 923, 923, 923, 0,
	0, 1008, 0, 0, 1109, 689, 1013, 581, 0, 0,
	1090, 690, 1116, 1127, 555, 766, 0, 688, 765, 0,
	0, 1103, 0, 766, 29, 702, 765, 701, 704, 555,
	1098, 1099, 1100, 0, 0, 0, 0, 0, 1128, 1119,
	0, 555, 555, 0, 926, 926, 0, 0, 555, 0,
	703, 1132, 0, 1153, 1133, 0, 0, 0, 1083, 1083,
	1148, 746, 0, 0, 0, 0, 766, 555, 0, 765,
	0, 748, 0, 0, 0, 923, 923, 0, 0, 0,
	0, 863, 0, 0, 0, 1152, 0, 0, 1184, 1185,
	0, 685, 0, 0, 555, 0, 0, 862, 1181, 555,
	0, 581, 0, 1201, 1183, 1196, 1173, 0, 0, 1180,
	1176, 0, 926, 926, 926, 926, 926, 926, 926, 926,
	926, 926, 926, 926, 926, 0, 926, 0, 1083, 1083,
	1083, 1204, 1009, 1206, 1191, 1193, 1194, 0, 1208, 0,
	0, 0, 1011, 923, 923, 923, 923, 923, 923, 923,
	923, 923, 923, 923, 923, 923, 555, 923, 1230, 555,
	1231, 0, 871, 872, 873, 1234, 865, 866, 867, 868,
	869, 870, 0, 1246, 1228, 1245, 1256, 0, 0, 1257,
	555, 863, 0, 1243, 766, 1238, 1258, 765, 1264, 1259,
	0, 1267, 0, 703, 0, 555, 555, 862, 1260, 555,
	1083, 1083, 555, 0, 0, 0, 555, 0, 1274, 887,
	887, 0, 555, 0, 1282, 0, 0, 1150, 0, 555,
	555, 766, 0, 0, 765, 0, 0, 555, 555, 1017,
	1018, 0, 0, 0, 685, 0, 0, 0, 1291, 555,
	0, 0, 0, 555, 0, 0, 555, 0, 555, 0,
	1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083, 1083,
	1083, 1083, 1083, 0, 0, 0, 0, 1083, 503, 0,
	0, 1300, 1195, 555, 555, 0, 519, 0, 526, 0,
	555, 0, 0, 0, 0, 537, 0, 0, 0, 911,
	0, 411, 0, 0, 574, 575, 576, 577, 578, 0,
	0, 0, 580, 0, 0, 0, 0, 0, 31, 1323,
	0, 1324, 0, 1332, 1333, 0, 555, 555, 0, 0,
	0, 555, 555, 601, 1311, 0, 555, 555, 0, 0,
	555, 0, 0, 0, 0, 0, 555, 31, 689, 0,
	0, 0, 926, 0, 690, 1345, 0, 555, 709, 31,
	688, 0, 1343, 0, 0, 1350, 0, 0, 702, 555,
	701, 704, 555, 0, 0, 887, 0, 0, 0, 555,
	1270, 1271, 555, 923, 1366, 0, 764, 1363, 0, 0,
	555, 555, 555, 0, 0, 689, 1357, 0, 1083, 926,
	914, 690, 689, 0, 764, 0, 0, 688, 690, 1376,
	31, 1087, 1088, 1089, 688, 702, 1379, 701, 704, 0,
	555, 0, 702, 1385, 701, 704, 1083, 1395, 0, 689,
	923, 0, 0, 0, 0, 690, 0, 1402, 1401, 1374,
	1366, 688, 0, 1405, 0, 555, 1378, 0, 0, 702,
	0, 701, 704, 0, 0, 570, 0, 0, 540, 0,
	0, 0, 570, 0, 1413, 540, 0, 373, 915, 0,
	0, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 542, 742, 0,
	1159, 1160, 0, 0, 542, 0, 689, 0, 0, 0,
	0, 709, 690, 0, 0, 0, 1338, 0, 688, 0,
	0, 0, 0, 0, 0, 855, 702, 541, 701, 704,
	0, 0, 0, 885, 541, 570, 0, 916, 540, 0,
	913, 0, 0, 0, 0, 0, 703, 908, 0, 920,
	0, 930, 932, 937, 940, 0, 0, 0, 0, 0,
	0, 949, 0, 570, 954, 0, 540, 542, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 392, 1226, 0, 1070, 0, 0, 685, 1080, 1081,
	1082, 1156, 503, 703, 0, 542, 689, 541, 1006, 973,
	703, 0, 690, 0, 0, 0, 0, 0, 688, 0,
	0, 537, 0, 0, 0, 0, 702, 988, 701, 704,
	0, 0, 0, 0, 0, 541, 689, 703, 570, 0,
	0, 540, 690, 917, 685, 552, 553, 554, 688, 0,
	0, 685, 0, 0, 0, 0, 702, 689, 701, 704,
	0, 0, 556, 690, 0, 0, 0, 0, 0, 688,
	542, 999, 0, 0, 0, 0, 565, 702, 685, 701,
	704, 0, 0, 31, 0, 1000, 1001, 0, 0, 0,
	0, 1007, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 689, 0, 0, 703, 0, 0, 690, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 701, 704, 0, 0, 571, 0, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 31,
	0, 0, 0, 0, 0, 685, 0, 912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 764, 0, 0, 703, 0, 0, 571, 1026, 0,
	0, 0, 0, 0, 31, 560, 0, 0, 1347, 0,
	566, 0, 0, 0, 0, 31, 0, 0, 0, 0,
	0, 0, 0, 0, 703, 571, 0, 0, 0, 885,
	885, 562, 563, 0, 764, 685, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 703, 558, 1053, 0, 0,
	0, 1058, 0, 0, 709, 1375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 0, 0,
	0, 0, 31, 0, 0, 580, 0, 564, 0, 0,
	0, 937, 937, 937, 0, 0, 685, 0, 0, 703,
	571, 0, 0, 557, 31, 0, 0, 0, 1115, 0,
	0, 709, 0, 1118, 0, 0, 0, 0, 709, 543,
	544, 545, 546, 547, 548, 0, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 0, 0, 1139, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 1155, 0, 0,
	1158, 0, 764, 0, 1161, 0, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 1171,
	0, 561, 31, 0, 0, 0, 1178, 1179, 0, 543,
	544, 545, 546, 547, 548, 885, 0, 0, 0, 764,
	1186, 1187, 0, 0, 0, 0, 0, 0, 0, 0,
	1198, 0, 709, 0, 0, 1202, 0, 543, 544, 545,
	546, 547, 548, 1205, 0, 0, 1207, 0, 0, 0,
	0, 1077, 1078, 1079, 0, 1071, 1072, 1073, 1074, 1075,
	1076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1232, 1233, 0, 0, 0, 0, 0,
	0, 0, 1239, 0, 0, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 559, 0, 0, 0, 549, 550,
	551, 0, 543, 544, 545, 546, 547, 548, 0, 0,
	1027, 0, 0, 0, 0, 0, 1028, 0, 988, 0,
	0, 988, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 1276, 0, 0, 0, 0,
	1280, 1281, 0, 0, 0, 0, 1285, 1286, 0, 0,
	0, 0, 709, 1289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 0, 0, 0, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 31, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1318,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 1331, 0, 988, 988, 0, 0, 0, 0, 0,
	0, 31, 0, 0, 0, 1339, 1340, 1341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 0, 0,
	1394, 1394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1394,
	0, 0, 0, 0, 0, 0, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 33, 34, 35, 36, 37, 38, 39, 40, 768,
	41, 42, 43, 769, 770, 771, 772, 773, 774, 775,
	44, 45, 776, 46, 47, 473, 48, 49, 50, 301,
	302, 474, 303, 304, 777, 51, 52, 53, 54, 55,
	778, 779, 56, 57, 305, 306, 58, 780, 59, 60,
	61, 62, 307, 781, 711, 782, 63, 64, 65, 66,
	475, 67, 68, 69, 783, 70, 71, 72, 73, 74,
	75, 784, 476, 76, 77, 78, 785, 786, 787, 712,
	788, 789, 790, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 791, 86, 792, 87, 88, 89, 90, 91,
	793, 92, 93, 94, 794, 795, 95, 96, 97, 98,
	99, 796, 100, 101, 102, 797, 103, 104, 105, 798,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 799,
	113, 800, 114, 115, 312, 116, 801, 117, 802, 118,
	477, 803, 478, 119, 120, 121, 804, 122, 313, 805,
	314, 123, 806, 124, 125, 126, 127, 128, 479, 129,
	130, 131, 132, 807, 133, 134, 135, 136, 137, 138,
	808, 139, 480, 315, 140, 141, 142, 143, 316, 317,
	809, 318, 810, 144, 481, 482, 145, 483, 146, 147,
	148, 149, 150, 811, 812, 151, 319, 484, 152, 485,
	813, 153, 154, 155, 814, 815, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 486, 321, 171, 172, 322, 816, 173, 174,
	487, 175, 817, 323, 176, 324, 177, 178, 179, 818,
	180, 819, 820, 181, 182, 183, 821, 822, 184, 325,
	488, 185, 489, 326, 186, 187, 188, 189, 190, 191,
	192, 823, 193, 194, 327, 195, 328, 198, 196, 197,
	824, 199, 200, 201, 202, 203, 204, 205, 206, 329,
	207, 208, 209, 210, 825, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 826, 222, 223, 490,
	224, 225, 226, 330, 227, 228, 229, 230, 231, 232,
	233, 234, 827, 235, 236, 237, 238, 239, 828, 240,
	241, 331, 242, 243, 491, 244, 245, 332, 246, 829,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 830, 258, 259, 831, 260, 492, 261, 262,
	263, 264, 265, 832, 334, 335, 833, 834, 266, 267,
	336, 268, 337, 835, 269, 270, 271, 272, 273, 274,
	275, 836, 837, 276, 277, 278, 279, 280, 838, 839,
	281, 282, 283, 284, 285, 338, 339, 840, 286, 493,
	287, 288, 289, 290, 841, 842, 291, 843, 844, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 853, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	768, 41, 42, 43, 769, 770, 771, 772, 773, 774,
	775, 44, 45, 776, 46, 47, 473, 48, 49, 50,
	301, 302, 474, 303, 304, 777, 51, 52, 53, 54,
	55, 778, 779, 56, 57, 305, 306, 58, 780, 59,
	60, 61, 62, 307, 781, 711, 782, 63, 64, 65,
	66, 475, 67, 68, 69, 783, 70, 71, 72, 73,
	74, 75, 784, 476, 76, 77, 78, 785, 786, 787,
	712, 788, 789, 790, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 791, 86, 792, 87, 88, 89, 90,
	91, 793, 92, 93, 94, 794, 795, 95, 96, 97,
	98, 99, 796, 100, 101, 102, 797, 103, 104, 105,
	798, 106, 107, 108, 109, 310, 110, 111, 112, 311,
	799, 113, 800, 114, 115, 312, 116, 801, 117, 802,
	118, 477, 803, 478, 119, 120, 121, 804, 122, 313,
	805, 314, 123, 806, 124, 125, 126, 127, 128, 479,
	129, 130, 131, 132, 807, 133, 134, 135, 136, 137,
	138, 808, 139, 480, 315, 140, 141, 142, 143, 316,
	317, 809, 318, 810, 144, 481, 482, 145, 483, 146,
	147, 148, 149, 150, 811, 812, 151, 319, 484, 152,
	485, 813, 153, 154, 155, 814, 815, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 486, 321, 171, 172, 322, 816, 173,
	174, 487, 175, 817, 323, 176, 324, 177, 178, 179,
	818, 180, 819, 820, 181, 182, 183, 821, 822, 184,
	325, 488, 185, 489, 326, 186, 187, 188, 189, 190,
	191, 192, 823, 193, 194, 327, 195, 328, 198, 196,
	197, 824, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 825, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 826, 222, 223,
	490, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 827, 235, 236, 237, 238, 239, 828,
	240, 241, 331, 242, 243, 491, 244, 245, 332, 246,
	829, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 830, 258, 259, 831, 260, 492, 261,
	262, 263, 264, 265, 832, 334, 335, 833, 834, 266,
	267, 336, 268, 337, 835, 269, 270, 271, 272, 273,
	274, 275, 836, 837, 276, 277, 278, 279, 280, 838,
	839, 281, 282, 283, 284, 285, 338, 339, 840, 286,
	493, 287, 288, 289, 290, 841, 842, 291, 843, 844,
	292, 293, 294, 295, 296, 297, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 408, 397,
	411, 0, 0, 392, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 881, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 473, 48, 49,
	50, 301, 450, 474, 451, 452, 0, 51, 52, 53,
	54, 55, 405, 430, 56, 57, 453, 454, 58, 0,
	59, 60, 61, 62, 438, 0, 418, 0, 63, 64,
	65, 66, 475, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 476, 76, 77, 78, 428, 419,
	424, 429, 420, 421, 425, 79, 80, 81, 82, 83,
	84, 455, 456, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 882, 0, 95, 96,
	449, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	431, 403, 113, 0, 114, 115, 457, 116, 0, 117,
	0, 118, 477, 0, 478, 119, 120, 121, 0, 122,
	439, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	479, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 480, 315, 140, 141, 142, 143,
	458, 459, 0, 417, 0, 144, 481, 482, 145, 483,
	146, 147, 148, 149, 150, 0, 0, 151, 440, 484,
	152, 485, 0, 153, 154, 155, 422, 423, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 460, 486, 461, 171, 172, 322, 379,
	173, 174, 487, 175, 404, 437, 176, 462, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 488, 185, 489, 432, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 433, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 463, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 490, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	426, 240, 241, 331, 242, 243, 491, 244, 245, 464,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 434, 0, 258, 259, 0, 260, 492,
	261, 262, 263, 264, 265, 0, 465, 466, 0, 0,
	266, 267, 435, 268, 436, 402, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	427, 0, 281, 282, 283, 284, 285, 338, 467, 0,
	286, 493, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 441, 442,
	443, 444, 445, 446, 447, 448, 298, 299, 300, 380,
	0, 0, 0, 0, 0, 0, 0, 376, 377, 883,
	0, 0, 0, 408, 397, 411, 384, 879, 392, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 473, 48, 49, 50, 301, 450, 474, 451,
	452, 933, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 453, 454, 58, 0, 59, 60, 61, 62, 438,
	0, 418, 0, 63, 64, 65, 66, 475, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 476,
	76, 77, 78, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 455, 456, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 449, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 457, 116, 0, 117, 0, 118, 477, 938, 478,
	119, 120, 121, 0, 122, 439, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 479, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 480,
	315, 140, 141, 142, 143, 458, 459, 0, 417, 0,
	144, 481, 482, 145, 483, 146, 147, 148, 149, 150,
	0, 934, 151, 440, 484, 152, 485, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 460, 486,
	461, 171, 172, 322, 379, 173, 174, 487, 175, 404,
	437, 176, 462, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 488, 185, 489,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 433, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 463, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 490, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 491, 244, 245, 464, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 434, 0,
	258, 259, 0, 260, 492, 261, 262, 263, 264, 265,
	0, 465, 466, 0, 935, 266, 267, 435, 268, 436,
	402, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 467, 0, 286, 493, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 441, 442, 443, 444, 445, 446, 447,
	448, 298, 299, 300, 380, 0, 0, 0, 0, 408,
	397, 411, 376, 377, 392, 410, 0, 0, 0, 0,
	0, 384, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 473, 48,
	49, 50, 301, 450, 474, 451, 452, 0, 51, 52,
	53, 54, 55, 405, 430, 56, 57, 453, 454, 58,
	0, 59, 60, 61, 62, 438, 0, 418, 0, 63,
	64, 65, 66, 475, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 476, 76, 77, 78, 428,
	419, 424, 429, 420, 421, 425, 79, 80, 81, 82,
	83, 84, 455, 456, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 449, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 431, 403, 113, 0, 114, 115, 457, 116, 0,
	117, 0, 118, 477, 0, 478, 119, 120, 121, 0,
	122, 439, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 479, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 480, 315, 140, 141, 142,
	143, 458, 459, 0, 417, 0, 144, 481, 482, 145,
	483, 146, 147, 148, 149, 150, 0, 0, 151, 440,
	484, 152, 485, 0, 153, 154, 155, 422, 423, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 460, 486, 461, 171, 172, 322,
	379, 173, 174, 487, 175, 404, 437, 176, 462, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 488, 185, 489, 432, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 433, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 463, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 490, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 426, 240, 241, 331, 242, 243, 491, 244, 245,
	464, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 434, 0, 258, 259, 0, 260,
	492, 261, 262, 263, 264, 265, 0, 465, 466, 0,
	0, 266, 267, 435, 268, 436, 402, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 427, 0, 281, 282, 283, 284, 285, 338, 467,
	0, 286, 493, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 441,
	442, 443, 444, 445, 446, 447, 448, 298, 299, 300,
	380, 0, 0, 0, 0, 408, 397, 411, 376, 377,
	392, 410, 0, 0, 0, 0, 0, 384, 1229, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 473, 48, 49, 50, 301, 450,
	474, 451, 452, 0, 51, 52, 53, 54, 55, 405,
	430, 56, 57, 453, 454, 58, 0, 59, 60, 61,
	62, 438, 0, 418, 0, 63, 64, 65, 66, 475,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 476, 76, 77, 78, 428, 419, 424, 429, 420,
	421, 425, 79, 80, 81, 82, 83, 84, 455, 456,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 449, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 431, 403, 113,
	0, 114, 115, 457, 116, 0, 117, 0, 118, 477,
	0, 478, 119, 120, 121, 0, 122, 439, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 479, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 480, 315, 140, 141, 142, 143, 458, 459, 0,
	417, 0, 144, 481, 482, 145, 483, 146, 147, 148,
	149, 150, 0, 0, 151, 440, 484, 152, 485, 0,
	153, 154, 155, 422, 423, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	460, 486, 461, 171, 172, 322, 379, 173, 174, 487,
	175, 404, 437, 176, 462, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 488,
	185, 489, 432, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 433, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 463, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 490, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 426, 240, 241,
	331, 242, 243, 491, 244, 245, 464, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	434, 0, 258, 259, 0, 260, 492, 261, 262, 263,
	264, 265, 0, 465, 466, 0, 0, 266, 267, 435,
	268, 436, 402, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 427, 0, 281,
	282, 283, 284, 285, 338, 467, 0, 286, 493, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 441, 442, 443, 444, 445,
	446, 447, 448, 298, 299, 300, 380, 0, 0, 0,
	0, 408, 397, 411, 376, 377, 392, 410, 0, 0,
	0, 0, 0, 384, 1174, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	473, 48, 49, 50, 301, 450, 474, 451, 452, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 453,
	454, 58, 0, 59, 60, 61, 62, 438, 0, 418,
	0, 63, 64, 65, 66, 475, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 476, 76, 77,
	78, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 455, 456, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 449, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 457,
	116, 0, 117, 0, 118, 477, 0, 478, 119, 120,
	121, 0, 122, 439, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 479, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 480, 315, 140,
	141, 142, 143, 458, 459, 0, 417, 0, 144, 481,
	482, 145, 483, 146, 147, 148, 149, 150, 0, 0,
	151, 440, 484, 152, 485, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 460, 486, 461, 171,
	172, 322, 379, 173, 174, 487, 175, 404, 437, 176,
	462, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 488, 185, 489, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 433,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 463, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 490, 224, 225, 226, 394, 227,
	228, 229, 230, 231, 232, 233, 234, 8, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 491,
	244, 245, 464, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 434, 0, 258, 259,
	10, 260, 492, 261, 262, 263, 264, 265, 0, 465,
	466, 0, 0, 266, 267, 435, 268, 436, 402, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	583, 467, 0, 286, 493, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 441, 442, 443, 444, 445, 446, 447, 448, 298,
	299, 300, 380, 0, 0, 0, 0, 408, 397, 411,
	376, 377, 392, 410, 0, 0, 0, 0, 0, 384,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 473, 48, 49, 50,
	301, 450, 474, 451, 452, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 453, 454, 58, 0, 59,
	60, 61, 62, 438, 0, 418, 0, 63, 64, 65,
	66, 475, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 476, 76, 77, 78, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	455, 456, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 449,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 457, 116, 0, 117, 0,
	118, 477, 0, 478, 119, 120, 121, 0, 122, 439,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 479,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 480, 315, 140, 141, 142, 143, 458,
	459, 0, 417, 0, 144, 481, 482, 145, 483, 146,
	147, 148, 149, 150, 0, 0, 151, 440, 484, 152,
	485, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 460, 486, 461, 171, 172, 322, 379, 173,
	174, 487, 175, 404, 437, 176, 462, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 488, 185, 489, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 433, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	463, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	490, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 491, 244, 245, 464, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 434, 0, 258, 259, 0, 260, 492, 261,
	262, 263, 264, 265, 0, 465, 466, 0, 0, 266,
	267, 435, 268, 436, 402, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 467, 0, 286,
	493, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 441, 442, 443,
	444, 445, 446, 447, 448, 298, 299, 300, 380, 0,
	0, 0, 0, 408, 397, 411, 376, 377, 392, 410,
	0, 0, 0, 0, 0, 384, 878, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 473, 48, 49, 50, 301, 450, 474, 451,
	452, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 453, 454, 58, 0, 59, 60, 61, 62, 438,
	0, 418, 0, 63, 64, 65, 66, 475, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 476,
	76, 77, 78, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 455, 456, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 449, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 457, 116, 0, 117, 0, 118, 477, 0, 478,
	119, 120, 121, 0, 122, 439, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 479, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 480,
	315, 140, 141, 142, 143, 458, 459, 0, 417, 0,
	144, 481, 482, 145, 483, 146, 147, 148, 149, 150,
	0, 0, 151, 440, 484, 152, 485, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 460, 486,
	461, 171, 172, 322, 379, 173, 174, 487, 175, 404,
	437, 176, 462, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 488, 185, 489,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 433, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 463, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 490, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 491, 244, 245, 464, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 434, 0,
	258, 259, 0, 260, 492, 261, 262, 263, 264, 265,
	0, 465, 466, 0, 0, 266, 267, 435, 268, 436,
	402, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 467, 0, 286, 493, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 441, 442, 443, 444, 445, 446, 447,
	448, 298, 299, 300, 380, 0, 0, 0, 0, 408,
	397, 411, 376, 377, 392, 410, 0, 0, 0, 591,
	858, 384, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 473, 48,
	49, 50, 301, 450, 474, 451, 452, 0, 51, 52,
	53, 54, 55, 405, 430, 56, 57, 453, 454, 58,
	0, 59, 60, 61, 62, 438, 0, 418, 0, 63,
	64, 65, 66, 475, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 476, 76, 77, 78, 428,
	419, 424, 429, 420, 421, 425, 79, 80, 81, 82,
	83, 84, 455, 456, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 449, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 431, 403, 113, 0, 114, 115, 457, 116, 0,
	117, 0, 118, 477, 938, 478, 119, 120, 121, 0,
	122, 439, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 479, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 480, 315, 140, 141, 142,
	143, 458, 459, 0, 417, 0, 144, 481, 482, 145,
	483, 146, 147, 148, 149, 150, 0, 0, 151, 440,
	484, 152, 485, 0, 153, 154, 155, 422, 423, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 460, 486, 461, 171, 172, 322,
	379, 173, 174, 487, 175, 404, 437, 176, 462, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 488, 185, 489, 432, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 433, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 463, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 490, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 426, 240, 241, 331, 242, 243, 491, 244, 245,
	464, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 434, 0, 258, 259, 0, 260,
	492, 261, 262, 263, 264, 265, 0, 465, 466, 0,
	0, 266, 267, 435, 268, 436, 402, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 427, 0, 281, 282, 283, 284, 285, 338, 467,
	0, 286, 493, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 441,
	442, 443, 444, 445, 446, 447, 448, 298, 299, 300,
	380, 0, 0, 0, 0, 408, 397, 411, 376, 377,
	392, 410, 0, 0, 0, 0, 0, 384, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 473, 48, 49, 50, 301, 450,
	474, 451, 452, 0, 51, 52, 53, 54, 55, 405,
	430, 56, 57, 453, 454, 58, 0, 59, 60, 61,
	62, 438, 0, 418, 0, 63, 64, 65, 66, 475,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 476, 76, 77, 78, 428, 419, 424, 429, 420,
	421, 425, 79, 80, 81, 82, 83, 84, 455, 456,
	85, 504, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 449, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 431, 403, 113,
	0, 114, 115, 457, 116, 0, 117, 0, 118, 477,
	0, 478, 119, 120, 121, 0, 122, 439, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 479, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 480, 315, 140, 141, 142, 143, 458, 459, 0,
	417, 0, 144, 481, 482, 145, 483, 146, 147, 148,
	149, 150, 0, 0, 151, 440, 484, 152, 485, 0,
	153, 154, 155, 422, 423, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	460, 486, 461, 171, 172, 322, 379, 173, 174, 487,
	175, 404, 437, 176, 462, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 488,
	185, 489, 432, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 433, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 463, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 490, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 426, 240, 241,
	331, 242, 243, 491, 244, 245, 464, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	434, 0, 258, 259, 0, 260, 492, 261, 262, 263,
	264, 265, 0, 465, 466, 0, 0, 266, 267, 435,
	268, 436, 402, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 427, 0, 281,
	282, 283, 284, 285, 338, 467, 0, 286, 493, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 441, 442, 443, 444, 445,
	446, 447, 448, 298, 299, 300, 380, 0, 0, 0,
	0, 408, 397, 411, 376, 377, 392, 410, 0, 0,
	0, 0, 0, 384, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	473, 48, 49, 50, 301, 450, 474, 451, 452, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 453,
	454, 58, 0, 59, 60, 61, 62, 438, 0, 418,
	0, 63, 64, 65, 66, 475, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 476, 76, 77,
	78, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 455, 456, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 449, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 457,
	116, 0, 117, 0, 118, 477, 0, 478, 119, 120,
	121, 0, 122, 439, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 479, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 480, 315, 140,
	141, 142, 143, 458, 459, 0, 417, 0, 144, 481,
	482, 145, 483, 146, 147, 148, 149, 150, 0, 0,
	151, 440, 484, 152, 485, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 460, 486, 461, 171,
	172, 322, 379, 173, 174, 487, 175, 404, 437, 176,
	462, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 488, 185, 489, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 433,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 463, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 490, 224, 225, 226, 394, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 491,
	244, 245, 464, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 434, 0, 258, 259,
	0, 260, 492, 261, 262, 263, 264, 265, 0, 465,
	466, 0, 0, 266, 267, 435, 268, 436, 402, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	338, 467, 0, 286, 493, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 441, 442, 443, 444, 445, 446, 447, 448, 298,
	299, 300, 380, 0, 0, 0, 0, 0, 0, 0,
	376, 377, 374, 0, 0, 408, 397, 411, 0, 384,
	392, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 520, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 473, 48, 49, 50, 301, 450,
	474, 451, 452, 0, 51, 52, 53, 54, 55, 405,
	430, 56, 57, 453, 454, 58, 0, 59, 60, 61,
	62, 438, 0, 418, 0, 63, 64, 65, 66, 475,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 476, 76, 77, 78, 428, 419, 424, 429, 420,
	421, 425, 79, 80, 81, 82, 83, 84, 455, 456,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 449, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 431, 403, 113,
	0, 114, 115, 457, 116, 0, 117, 0, 118, 477,
	0, 478, 119, 120, 121, 0, 122, 439, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 479, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 480, 315, 140, 141, 142, 143, 458, 459, 0,
	417, 0, 144, 481, 482, 145, 483, 146, 147, 148,
	149, 150, 0, 0, 151, 440, 484, 152, 485, 0,
	153, 154, 155, 422, 423, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	460, 486, 461, 171, 172, 322, 379, 173, 174, 487,
	175, 404, 437, 176, 462, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 488,
	185, 489, 432, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 433, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 463, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 490, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 426, 240, 241,
	331, 242, 243, 491, 244, 245, 464, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	434, 0, 258, 259, 0, 260, 492, 261, 262, 263,
	264, 265, 0, 465, 466, 0, 0, 266, 267, 435,
	268, 436, 402, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 427, 0, 281,
	282, 283, 284, 285, 338, 467, 0, 286, 493, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 441, 442, 443, 444, 445,
	446, 447, 448, 298, 299, 300, 380, 0, 0, 0,
	0, 408, 397, 411, 376, 377, 392, 410, 0, 0,
	0, 0, 0, 384, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	473, 48, 49, 50, 301, 450, 474, 451, 452, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 453,
	454, 58, 0, 59, 60, 61, 62, 438, 0, 418,
	0, 63, 64, 65, 66, 475, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 476, 76, 77,
	1393, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 455, 456, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 449, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 457,
	116, 0, 117, 0, 118, 477, 0, 478, 119, 120,
	121, 0, 122, 439, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 479, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 480, 315, 140,
	141, 142, 143, 458, 459, 0, 417, 0, 144, 481,
	482, 145, 483, 146, 147, 148, 149, 150, 0, 0,
	151, 440, 484, 152, 485, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 460, 486, 461, 171,
	172, 322, 379, 173, 174, 487, 175, 404, 437, 176,
	462, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 488, 185, 489, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 433,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 463, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 490, 224, 225, 226, 394, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 491,
	244, 245, 464, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 434, 0, 258, 259,
	0, 260, 492, 261, 262, 263, 264, 265, 0, 465,
	466, 0, 0, 266, 267, 435, 268, 436, 402, 269,
	270, 271, 272, 1392, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	338, 467, 0, 286, 493, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 441, 442, 443, 444, 445, 446, 447, 448, 298,
	299, 300, 380, 0, 0, 0, 0, 408, 397, 411,
	376, 377, 392, 410, 0, 0, 0, 0, 0, 384,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 473, 48, 49, 50,
	1391, 450, 474, 451, 452, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 453, 454, 58, 0, 59,
	60, 61, 62, 438, 0, 418, 0, 63, 64, 65,
	66, 475, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 476, 76, 77, 1393, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	455, 456, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 449,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 457, 116, 0, 117, 0,
	118, 477, 0, 478, 119, 120, 121, 0, 122, 439,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 479,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 480, 315, 140, 141, 142, 143, 458,
	459, 0, 417, 0, 144, 481, 482, 145, 483, 146,
	147, 148, 149, 150, 0, 0, 151, 440, 484, 152,
	485, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 460, 486, 461, 171, 172, 322, 379, 173,
	174, 487, 175, 404, 437, 176, 462, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 488, 185, 489, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 433, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	463, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	490, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 491, 244, 245, 464, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 434, 0, 258, 259, 0, 260, 492, 261,
	262, 263, 264, 265, 0, 465, 466, 0, 0, 266,
	267, 435, 268, 436, 402, 269, 270, 271, 272, 1392,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 467, 0, 286,
	493, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 441, 442, 443,
	444, 445, 446, 447, 448, 298, 299, 300, 380, 0,
	0, 0, 0, 408, 397, 411, 376, 377, 392, 410,
	0, 0, 0, 0, 0, 384, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 473, 48, 49, 50, 301, 450, 474, 451,
	452, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 453, 454, 58, 0, 59, 60, 61, 62, 438,
	0, 418, 0, 63, 64, 65, 66, 475, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 476,
	76, 77, 78, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 455, 456, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 449, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 457, 116, 0, 117, 0, 118, 477, 0, 478,
	119, 120, 121, 0, 122, 439, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 479, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 480,
	315, 140, 141, 142, 143, 458, 459, 0, 417, 0,
	144, 481, 482, 145, 483, 146, 147, 148, 149, 150,
	0, 0, 151, 440, 484, 152, 485, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 460, 486,
	461, 171, 172, 322, 379, 173, 174, 487, 175, 404,
	437, 176, 462, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 488, 185, 489,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 433, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 463, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 490, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 491, 244, 245, 464, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 434, 0,
	258, 259, 0, 260, 492, 261, 262, 263, 264, 265,
	0, 465, 466, 0, 0, 266, 267, 435, 268, 436,
	402, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 467, 0, 286, 493, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 441, 442, 443, 444, 445, 446, 447,
	448, 298, 299, 300, 380, 0, 0, 0, 0, 408,
	397, 411, 376, 377, 392, 410, 0, 0, 0, 0,
	0, 384, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 473, 48,
	49, 50, 301, 450, 474, 451, 452, 0, 51, 52,
	53, 54, 55, 405, 430, 56, 57, 453, 454, 58,
	0, 59, 60, 61, 62, 438, 0, 418, 0, 63,
	64, 65, 66, 475, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 476, 76, 77, 78, 428,
	419, 424, 429, 420, 421, 425, 79, 80, 81, 82,
	83, 84, 455, 456, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 449, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 431, 403, 113, 0, 114, 115, 457, 116, 0,
	117, 0, 118, 477, 0, 478, 119, 120, 121, 0,
	122, 439, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 479, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 480, 315, 140, 141, 142,
	143, 458, 459, 0, 417, 0, 144, 481, 482, 145,
	483, 146, 147, 148, 149, 150, 0, 0, 151, 440,
	484, 152, 485, 0, 153, 154, 155, 422, 423, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 460, 486, 461, 171, 1322, 322,
	379, 173, 174, 487, 175, 404, 437, 176, 462, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 488, 185, 489, 432, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 433, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 463, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 490, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 426, 240, 241, 331, 242, 243, 491, 244, 245,
	464, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 434, 0, 258, 259, 0, 260,
	492, 261, 262, 263, 264, 265, 0, 465, 466, 0,
	0, 266, 267, 435, 268, 436, 402, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 427, 0, 281, 282, 283, 284, 285, 338, 467,
	0, 286, 493, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 441,
	442, 443, 444, 445, 446, 447, 448, 298, 299, 300,
	380, 0, 0, 0, 0, 408, 397, 411, 376, 377,
	392, 410, 0, 0, 0, 0, 0, 384, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 473, 48, 49, 50, 301, 450,
	474, 451, 452, 0, 51, 52, 53, 54, 55, 405,
	430, 56, 57, 453, 454, 58, 0, 59, 60, 61,
	62, 438, 0, 418, 0, 63, 64, 65, 66, 475,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 476, 76, 77, 78, 428, 419, 424, 429, 420,
	421, 425, 79, 80, 81, 82, 83, 84, 455, 456,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 449, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 431, 403, 113,
	0, 114, 115, 457, 116, 0, 117, 0, 118, 477,
	0, 478, 119, 120, 121, 0, 122, 439, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 479, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 480, 315, 140, 141, 142, 143, 458, 459, 0,
	417, 0, 144, 481, 482, 145, 483, 146, 147, 148,
	149, 150, 0, 0, 151, 440, 484, 152, 485, 0,
	153, 154, 155, 422, 423, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	460, 486, 461, 171, 172, 322, 379, 173, 174, 487,
	175, 404, 437, 176, 462, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 488,
	185, 489, 432, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 433, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 463, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 490, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 426, 240, 241,
	331, 242, 243, 491, 244, 245, 464, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	434, 0, 258, 259, 0, 260, 492, 261, 262, 263,
	264, 265, 0, 465, 466, 0, 0, 266, 267, 435,
	268, 436, 402, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 427, 0, 281,
	282, 283, 284, 285, 338, 467, 0, 286, 493, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 1312, 441, 442, 443, 444, 445,
	446, 447, 448, 298, 299, 300, 380, 0, 0, 0,
	0, 408, 397, 411, 376, 377, 392, 410, 0, 0,
	0, 0, 0, 384, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	473, 48, 49, 50, 301, 450, 474, 451, 452, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 453,
	454, 58, 0, 59, 60, 61, 62, 438, 0, 418,
	0, 63, 64, 65, 66, 475, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 476, 76, 77,
	78, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 455, 456, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 449, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 457,
	116, 0, 117, 0, 118, 477, 0, 478, 119, 120,
	121, 0, 122, 439, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 479, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 480, 315, 140,
	141, 142, 143, 458, 459, 0, 417, 0, 144, 481,
	482, 145, 483, 146, 147, 148, 149, 150, 0, 0,
	151, 440, 484, 152, 485, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 460, 486, 461, 171,
	172, 322, 0, 173, 174, 487, 175, 404, 437, 176,
	462, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 488, 185, 489, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 433,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 463, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 490, 224, 225, 226, 928, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 491,
	244, 245, 464, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 434, 0, 258, 259,
	0, 260, 492, 261, 262, 263, 264, 265, 0, 465,
	466, 0, 0, 266, 267, 435, 268, 436, 402, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	338, 467, 0, 286, 493, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 441, 442, 443, 444, 445, 446, 447, 448, 298,
	299, 300, 0, 0, 0, 0, 0, 408, 397, 411,
	924, 925, 392, 410, 0, 0, 0, 0, 0, 927,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 473, 48, 49, 50,
	301, 450, 474, 451, 452, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 453, 454, 58, 0, 59,
	60, 61, 62, 438, 0, 418, 0, 63, 64, 65,
	66, 475, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 476, 76, 77, 78, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	455, 456, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 449,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 457, 116, 0, 117, 0,
	118, 477, 0, 478, 119, 120, 121, 0, 122, 439,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 479,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 480, 315, 140, 141, 142, 143, 458,
	459, 0, 417, 0, 144, 0, 482, 145, 483, 146,
	147, 148, 149, 150, 0, 0, 151, 440, 484, 152,
	485, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 460, 486, 461, 171, 172, 322, 0, 173,
	174, 487, 175, 404, 437, 176, 462, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 488, 185, 489, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 433, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	463, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	490, 224, 225, 226, 928, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 491, 244, 245, 464, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 434, 0, 258, 259, 0, 260, 492, 261,
	262, 263, 264, 265, 0, 465, 466, 0, 0, 266,
	267, 435, 268, 436, 402, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 467, 0, 286,
	493, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 441, 442, 443,
	444, 445, 446, 447, 448, 298, 299, 300, 0, 0,
	0, 0, 408, 397, 411, 0, 924, 925, 410, 0,
	0, 0, 0, 0, 0, 927, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 473, 48, 49, 50, 301, 450, 474, 451, 452,
	0, 51, 52, 53, 54, 55, 405, 430, 56, 57,
	453, 454, 58, 0, 59, 60, 61, 62, 438, 0,
	418, 0, 63, 64, 65, 66, 475, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 476, 76,
	77, 78, 428, 419, 424, 429, 420, 421, 425, 79,
	80, 81, 82, 83, 84, 455, 456, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 449, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 431, 403, 113, 0, 114, 115,
	457, 116, 0, 117, 0, 118, 477, 0, 478, 119,
	120, 121, 0, 122, 439, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 479, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 480, 315,
	140, 141, 142, 143, 458, 459, 0, 417, 0, 144,
	481, 482, 145, 483, 146, 147, 148, 149, 150, 0,
	0, 151, 440, 484, 152, 485, 0, 153, 154, 155,
	422, 423, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 460, 486, 461,
	171, 172, 322, 0, 173, 174, 487, 175, 404, 437,
	176, 462, 177, 178, 179, 0, 180, 0, 0, 181,
	182, 183, 0, 0, 184, 325, 488, 185, 489, 432,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	433, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 463, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 490, 224, 225, 226, 928,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 426, 240, 241, 331, 242, 243,
	491, 244, 245, 464, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 434, 0, 258,
	259, 0, 260, 492, 261, 262, 263, 264, 265, 0,
	465, 466, 0, 0, 266, 267, 435, 268, 436, 402,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 427, 0, 281, 282, 283, 284,
	285, 338, 467, 0, 286, 493, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 441, 442, 443, 444, 445, 446, 447, 448,
	298, 299, 300, 0, 0, 0, 408, 397, 411, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 0,
	927, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 473, 48, 49, 50, 301,
	450, 474, 451, 452, 0, 1244, 52, 53, 54, 55,
	405, 430, 56, 57, 453, 454, 58, 0, 59, 60,
	61, 62, 438, 0, 418, 0, 63, 64, 65, 66,
	475, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 476, 76, 77, 78, 428, 419, 424, 429,
	420, 421, 425, 79, 80, 81, 82, 83, 84, 455,
	456, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 449, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 431, 403,
	113, 0, 114, 115, 457, 116, 0, 117, 0, 118,
	477, 0, 478, 119, 120, 121, 0, 122, 439, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 479, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 480, 315, 140, 141, 142, 143, 458, 459,
	0, 417, 0, 144, 481, 482, 145, 483, 146, 147,
	148, 149, 150, 0, 0, 151, 440, 484, 152, 485,
	0, 153, 154, 155, 422, 423, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 460, 486, 461, 171, 172, 322, 0, 173, 174,
	487, 175, 404, 437, 176, 462, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 325,
	488, 185, 489, 432, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 433, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 463,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 490,
	224, 225, 226, 928, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 426, 240,
	241, 331, 242, 243, 491, 244, 245, 464, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 434, 0, 258, 259, 0, 260, 492, 261, 262,
	263, 264, 265, 0, 465, 466, 0, 0, 266, 267,
	435, 268, 436, 402, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 427, 0,
	281, 282, 283, 284, 285, 338, 467, 0, 286, 493,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 441, 442, 443, 444,
	445, 446, 447, 448, 298, 299, 300, 0, 0, 0,
	408, 397, 411, 0, 0, 392, 410, 0, 0, 0,
	0, 0, 0, 0, 927, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 473,
	48, 49, 50, 0, 450, 474, 451, 452, 0, 51,
	52, 53, 54, 55, 405, 430, 56, 57, 453, 454,
	58, 0, 59, 60, 61, 62, 438, 0, 418, 0,
	63, 64, 65, 66, 475, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 476, 76, 77, 1393,
	428, 419, 424, 429, 420, 421, 425, 79, 80, 81,
	82, 83, 84, 455, 456, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 449, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 431, 403, 113, 0, 114, 115, 457, 116,
	0, 117, 0, 118, 477, 0, 478, 119, 120, 121,
	0, 122, 439, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 0, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 480, 315, 140, 141,
	142, 143, 458, 459, 0, 417, 0, 144, 0, 0,
	145, 483, 146, 147, 148, 149, 150, 0, 0, 151,
	440, 484, 152, 0, 0, 153, 154, 155, 422, 423,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 460, 486, 461, 171, 172,
	322, 379, 173, 174, 0, 175, 404, 437, 176, 462,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 488, 185, 489, 432, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 433, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 463, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 490, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 426, 240, 241, 331, 242, 243, 0, 244,
	245, 464, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 434, 0, 258, 259, 0,
	260, 492, 261, 262, 263, 264, 265, 0, 465, 466,
	0, 0, 266, 267, 435, 268, 436, 402, 269, 270,
	271, 272, 1392, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 427, 0, 281, 282, 283, 284, 285, 338,
	467, 0, 286, 493, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	441, 442, 443, 444, 445, 446, 447, 448, 298, 299,
	300, 0, 0, 0, 0, 0, 408, 397, 411, 376,
	377, 392, 410, 0, 0, 0, 0, 0, 384, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 473, 48, 49, 50, 0,
	450, 474, 451, 452, 0, 51, 52, 53, 54, 55,
	405, 430, 56, 57, 453, 454, 58, 0, 59, 60,
	61, 62, 438, 0, 418, 0, 63, 64, 65, 66,
	475, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 476, 76, 77, 78, 428, 419, 424, 429,
	420, 421, 425, 79, 80, 81, 82, 83, 84, 455,
	456, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 449, 98,
	99, 0, 100, 101, 102, 0, 103, 0, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 431, 403,
	113, 0, 114, 115, 457, 116, 0, 117, 0, 118,
	477, 0, 478, 119, 120, 121, 0, 122, 439, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 480, 315, 140, 141, 142, 143, 458, 459,
	0, 417, 0, 144, 0, 0, 145, 483, 146, 147,
	148, 149, 150, 0, 0, 151, 440, 484, 152, 0,
	0, 153, 154, 155, 422, 423, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 460, 486, 461, 171, 172, 322, 379, 173, 174,
	0, 175, 404, 437, 176, 462, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	488, 185, 489, 432, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 433, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 463,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 490,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 426, 240,
	241, 331, 242, 243, 0, 244, 245, 464, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 434, 0, 258, 259, 0, 260, 492, 261, 262,
	263, 264, 265, 0, 465, 466, 0, 0, 266, 267,
	435, 268, 436, 402, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 427, 0,
	281, 282, 283, 284, 285, 338, 467, 0, 286, 493,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 441, 442, 443, 444,
	445, 446, 447, 448, 298, 299, 300, 0, 0, 0,
	0, 0, 0, 30, 0, 376, 377, 0, 864, 0,
	0, 0, 0, 0, 384, 874, 875, 876, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 0, 0, 0, 44, 45, 0,
	46, 47, 0, 48, 49, 50, 301, 302, 0, 303,
	304, 0, 51, 52, 53, 54, 55, 0, 0, 56,
	57, 305, 306, 58, 0, 59, 60, 61, 62, 307,
	0, 0, 0, 63, 64, 65, 66, 0, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 0,
	76, 77, 78, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 81, 82, 83, 84, 308, 309, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 97, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 310, 110, 111, 112, 311, 0, 113, 0, 114,
	115, 312, 116, 0, 117, 0, 118, 0, 0, 0,
	119, 120, 121, 0, 122, 313, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 0, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 0,
	315, 140, 141, 142, 143, 316, 317, 0, 318, 0,
	144, 0, 0, 145, 0, 146, 147, 148, 149, 150,
	0, 0, 151, 319, 0, 152, 0, 0, 153, 154,
	155, 0, 0, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 320, 0,
	321, 171, 172, 322, 0, 173, 174, 0, 175, 0,
	323, 176, 324, 177, 178, 179, 0, 180, 0, 0,
	181, 182, 183, 0, 0, 184, 325, 0, 185, 0,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 329, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 0, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 0, 240, 241, 331, 242,
	243, 0, 244, 245, 332, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 0, 261, 262, 263, 264, 265,
	0, 334, 335, 0, 0, 266, 267, 336, 268, 337,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 0, 0, 281, 282, 283,
	284, 285, 338, 339, 0, 286, 0, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 341, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 30, 0, 0, 0, 871, 872,
	873, 0, 865, 866, 867, 868, 869, 870, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 0, 0, 0, 44, 45,
	0, 46, 47, 0, 48, 49, 50, 301, 302, 0,
	303, 304, 0, 51, 52, 53, 54, 55, 0, 0,
	56, 57, 305, 306, 58, 0, 59, 60, 61, 62,
	307, 0, 0, 0, 63, 64, 65, 66, 0, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	0, 76, 77, 78, 0, 0, 0, 0, 0, 0,
	0, 79, 80, 81, 82, 83, 84, 308, 309, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 97, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 310, 110, 111, 112, 311, 0, 113, 0,
	114, 115, 312, 116, 0, 117, 0, 118, 0, 0,
	0, 119, 120, 121, 0, 122, 313, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 0, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	0, 315, 140, 141, 142, 143, 316, 317, 0, 318,
	0, 144, 0, 0, 145, 0, 146, 147, 148, 149,
	150, 0, 0, 151, 319, 0, 152, 0, 0, 153,
	154, 155, 0, 0, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 320,
	0, 321, 171, 172, 322, 0, 173, 174, 0, 175,
	0, 323, 176, 324, 177, 178, 179, 0, 180, 0,
	0, 181, 182, 183, 0, 0, 184, 325, 0, 185,
	0, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 329, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 0, 224, 225,
	226, 330, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 0, 240, 241, 331,
	242, 243, 0, 244, 245, 332, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 0, 261, 262, 263, 264,
	265, 0, 334, 335, 0, 0, 266, 267, 336, 268,
	337, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 0, 0, 281, 282,
	283, 284, 285, 338, 339, 0, 286, 0, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 0, 0, 0, 30, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1056, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 0,
	0, 0, 44, 45, 0, 46, 47, 0, 48, 49,
	50, 301, 302, 0, 303, 304, 0, 51, 52, 53,
	54, 55, 0, 0, 56, 57, 305, 306, 58, 0,
	59, 60, 61, 62, 307, 0, 0, 0, 63, 64,
	65, 66, 0, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 0, 76, 77, 78, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 81, 82, 83,
	84, 308, 309, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	97, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 310, 110, 111, 112,
	311, 0, 113, 0, 114, 115, 312, 116, 0, 117,
	0, 118, 0, 0, 0, 119, 120, 121, 0, 122,
	313, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	0, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 0, 315, 140, 141, 142, 143,
	316, 317, 0, 318, 0, 144, 0, 0, 145, 0,
	146, 147, 148, 149, 150, 0, 0, 151, 319, 0,
	152, 0, 0, 153, 154, 155, 0, 0, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 320, 0, 321, 171, 172, 322, 0,
	173, 174, 0, 175, 0, 323, 176, 324, 177, 178,
	179, 0, 180, 0, 0, 181, 182, 183, 0, 0,
	184, 325, 0, 185, 0, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 329, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 0, 224, 225, 226, 330, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	0, 240, 241, 331, 242, 243, 0, 244, 245, 332,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 0,
	261, 262, 263, 264, 265, 0, 334, 335, 0, 0,
	266, 267, 336, 268, 337, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	0, 0, 281, 282, 283, 284, 285, 338, 339, 0,
	286, 0, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 341, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 0,
	0, 0, 30, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 0, 0, 0, 44, 45, 0, 46,
	47, 0, 48, 49, 50, 301, 302, 0, 303, 304,
	0, 51, 52, 53, 54, 55, 0, 0, 56, 57,
	305, 306, 58, 0, 59, 60, 61, 62, 307, 0,
	0, 0, 63, 64, 65, 66, 0, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 0, 76,
	77, 78, 0, 0, 0, 0, 0, 0, 0, 79,
	80, 81, 82, 83, 84, 308, 309, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 97, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	310, 110, 111, 112, 311, 0, 113, 0, 114, 115,
	312, 116, 0, 117, 0, 118, 0, 0, 0, 119,
	120, 121, 0, 122, 313, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 0, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 0, 315,
	140, 141, 142, 143, 316, 317, 0, 318, 0, 144,
	0, 0, 145, 0, 146, 147, 148, 149, 150, 0,
	0, 151, 319, 0, 152, 0, 0, 153, 154, 155,
	0, 0, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 320, 0, 321,
	171, 172, 322, 0, 173, 174, 0, 175, 0, 323,
	176, 324, 177, 178, 179, 0, 180, 0, 28, 181,
	182, 183, 0, 0, 184, 325, 0, 185, 0, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 329, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 0, 224, 225, 226, 330,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 0, 240, 241, 331, 242, 243,
	0, 244, 245, 332, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 0, 261, 262, 263, 264, 265, 0,
	334, 335, 0, 0, 266, 267, 336, 268, 337, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 0, 0, 281, 282, 283, 284,
	285, 338, 339, 0, 286, 0, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 341, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 30, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 0, 0, 0, 44, 45, 0,
	46, 47, 0, 48, 49, 50, 301, 302, 0, 303,
	304, 0, 51, 52, 53, 54, 55, 0, 0, 56,
	57, 305, 306, 58, 0, 59, 60, 61, 62, 307,
	0, 0, 0, 63, 64, 65, 66, 0, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 0,
	76, 77, 78, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 81, 82, 83, 84, 308, 309, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 97, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 310, 110, 111, 112, 311, 0, 113, 0, 114,
	115, 312, 116, 0, 117, 0, 118, 0, 0, 0,
	119, 120, 121, 0, 122, 313, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 0, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 0,
	315, 140, 141, 142, 143, 316, 317, 0, 318, 0,
	144, 0, 0, 145, 0, 146, 147, 148, 149, 150,
	0, 0, 151, 319, 0, 152, 0, 0, 153, 154,
	155, 0, 0, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 320, 0,
	321, 171, 172, 322, 0, 173, 174, 0, 175, 0,
	323, 176, 324, 177, 178, 179, 0, 180, 0, 0,
	181, 182, 183, 0, 0, 184, 325, 0, 185, 0,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 329, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 0, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 0, 240, 241, 331, 242,
	243, 0, 244, 245, 332, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 0, 261, 262, 263, 264, 265,
	0, 334, 335, 0, 0, 266, 267, 336, 268, 337,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 0, 0, 281, 282, 283,
	284, 285, 338, 339, 0, 286, 0, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 341, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 30, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 0, 0, 0, 44, 45,
	0, 46, 47, 0, 48, 49, 50, 301, 302, 0,
	303, 304, 0, 51, 52, 53, 54, 55, 0, 0,
	56, 57, 305, 306, 58, 0, 59, 60, 61, 62,
	307, 0, 0, 0, 63, 64, 65, 66, 0, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	0, 76, 77, 78, 0, 0, 0, 0, 0, 0,
	0, 79, 80, 81, 82, 83, 84, 308, 309, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 97, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 310, 110, 111, 112, 311, 0, 113, 0,
	114, 115, 312, 116, 0, 117, 0, 118, 0, 0,
	0, 119, 120, 121, 0, 122, 313, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 0, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	0, 315, 140, 141, 142, 143, 316, 317, 0, 318,
	0, 144, 0, 0, 145, 0, 146, 147, 148, 149,
	150, 0, 0, 151, 319, 0, 152, 0, 0, 153,
	154, 155, 0, 0, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 320,
	0, 321, 171, 172, 322, 0, 173, 174, 0, 175,
	0, 323, 176, 324, 177, 178, 179, 0, 180, 0,
	0, 181, 182, 183, 0, 0, 184, 325, 0, 185,
	0, 326, 186, 187, 188, 189, 0, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 0, 206, 329, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 0, 224, 225,
	226, 330, 0, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 0, 240, 241, 331,
	242, 243, 0, 244, 245, 332, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 0, 261, 262, 263, 264,
	265, 0, 334, 335, 0, 0, 266, 267, 336, 268,
	337, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 0, 0, 281, 282,
	283, 284, 285, 338, 339, 0, 286, 0, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 0, 0, 0, 44,
	45, 0, 46, 47, 473, 48, 49, 50, 0, 694,
	474, 710, 700, 0, 51, 52, 53, 54, 55, 0,
	0, 56, 57, 714, 713, 58, 0, 59, 60, 61,
	62, 0, 0, 711, 0, 63, 64, 65, 66, 475,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 476, 76, 77, 78, 0, 0, 0, 712, 0,
	0, 0, 79, 80, 81, 82, 83, 84, 698, 697,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 449, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 0, 110, 111, 112, 0, 0, 113,
	0, 114, 115, 696, 116, 0, 117, 0, 118, 477,
	0, 478, 119, 120, 121, 0, 122, 0, 0, 0,
	123, 0, 124, 125, 126, 127, 128, 479, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 480, 0, 140, 141, 142, 143, 691, 692, 0,
	707, 0, 144, 481, 482, 145, 483, 146, 147, 148,
	149, 150, 0, 0, 151, 0, 484, 152, 485, 0,
	153, 154, 155, 0, 0, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	716, 486, 717, 171, 172, 0, 0, 173, 174, 487,
	175, 0, 0, 176, 699, 177, 178, 179, 0, 180,
	0, 0, 181, 182, 183, 0, 0, 184, 0, 488,
	185, 489, 0, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 0, 195, 0, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 695, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 490, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 0, 240, 241,
	683, 242, 243, 491, 244, 245, 693, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	0, 0, 258, 259, 0, 260, 492, 261, 262, 263,
	264, 265, 0, 706, 705, 0, 0, 266, 267, 0,
	268, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 0, 0, 281,
	282, 283, 284, 285, 0, 715, 0, 286, 493, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 708, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 299, 300, 0, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 0, 0, 0, 44, 45,
	0, 46, 47, 473, 48, 49, 50, 0, 694, 474,
	710, 700, 0, 51, 52, 53, 54, 55, 0, 0,
	56, 57, 714, 713, 58, 0, 59, 60, 61, 62,
	0, 0, 711, 0, 63, 64, 65, 66, 475, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	476, 76, 77, 78, 0, 0, 0, 712, 0, 0,
	0, 79, 80, 81, 82, 83, 84, 698, 697, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 449, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 0, 110, 111, 112, 0, 0, 113, 0,
	114, 115, 696, 116, 0, 117, 0, 118, 477, 0,
	478, 119, 120, 121, 0, 122, 0, 0, 0, 123,
	0, 124, 125, 126, 127, 128, 479, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	480, 0, 140, 141, 142, 143, 691, 692, 0, 707,
	0, 144, 481, 482, 145, 483, 146, 147, 148, 149,
	150, 0, 0, 151, 0, 484, 152, 485, 0, 153,
	154, 155, 0, 0, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 716,
	486, 717, 171, 172, 0, 0, 173, 174, 487, 175,
	0, 0, 176, 699, 177, 178, 179, 0, 180, 0,
	0, 181, 182, 183, 0, 0, 184, 0, 488, 185,
	489, 0, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 0, 195, 0, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 695, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 490, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 0, 240, 241, 0,
	242, 243, 491, 244, 245, 693, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 0,
	0, 258, 259, 0, 260, 492, 261, 262, 263, 264,
	265, 0, 706, 705, 0, 0, 266, 267, 0, 268,
	0, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 0, 0, 281, 282,
	283, 284, 285, 0, 715, 0, 286, 493, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 0, 0, 0, 0, 0, 570, 0,
	0, 540, 298, 299, 300, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 0, 0, 540,
	0, 0, 556, 552, 553, 554, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 570, 565, 0, 540, 0,
	556, 0, 552, 553, 554, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 565, 570, 0, 0, 540, 556,
	541, 0, 552, 553, 554, 0, 0, 542, 0, 0,
	0, 0, 0, 565, 0, 0, 0, 0, 541, 556,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 0, 565, 0, 0, 0, 541, 570, 0,
	0, 540, 0, 0, 0, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	542, 570, 0, 0, 540, 0, 565, 0, 552, 553,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 0,
	541, 0, 0, 542, 0, 560, 0, 0, 0, 565,
	566, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 0, 0, 0, 0, 566, 0,
	0, 562, 563, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 0, 0, 558, 566, 0, 562,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 558, 0, 0, 566, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 564, 0, 0,
	0, 0, 0, 558, 0, 0, 0, 0, 562, 563,
	571, 0, 0, 557, 0, 564, 0, 0, 0, 0,
	0, 0, 0, 558, 0, 560, 0, 0, 571, 0,
	566, 557, 0, 0, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 0, 0,
	557, 562, 563, 0, 564, 0, 0, 0, 560, 0,
	0, 0, 0, 566, 0, 0, 558, 571, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 0, 0, 0, 0,
	0, 561, 0, 570, 0, 0, 540, 564, 0, 558,
	552, 553, 554, 0, 0, 0, 0, 0, 0, 561,
	571, 0, 0, 557, 0, 0, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 561, 0,
	564, 565, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 0, 0, 557, 0, 561, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 549, 550,
	551, 561, 543, 544, 545, 546, 547, 548, 0, 0,
	0, 0, 559, 0, 0, 1117, 549, 550, 551, 0,
	543, 544, 545, 546, 547, 548, 0, 0, 0, 0,
	0, 559, 0, 1104, 561, 549, 550, 551, 0, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 1358,
	0, 559, 0, 0, 0, 549, 550, 551, 0, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 1351,
	560, 0, 0, 0, 0, 566, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 562, 563, 549, 550,
	551, 0, 543, 544, 545, 546, 547, 548, 0, 0,
	0, 558, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 549, 550, 551, 0, 543, 544, 545, 546, 547,
	548, 0, 564, 0, 0, 1309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 570, 0, 557, 540,
	0, 0, 0, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 0, 0, 540,
	556, 0, 0, 552, 553, 554, 0, 0, 542, 0,
	0, 0, 0, 0, 565, 570, 0, 0, 540, 0,
	556, 0, 552, 553, 554, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 565, 0, 0, 0, 541, 556,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 0, 570, 565, 0, 540, 561, 0, 541, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 0, 0, 540, 0, 556, 541, 552, 553,
	554, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	565, 0, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 542, 570, 0, 0, 540, 0, 565,
	0, 552, 553, 554, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 0,
	0, 0, 0, 541, 0, 0, 542, 0, 0, 0,
	0, 0, 565, 560, 0, 0, 0, 0, 566, 559,
	0, 0, 0, 549, 550, 551, 0, 543, 544, 545,
	546, 547, 548, 560, 0, 0, 541, 1298, 566, 562,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 558, 0, 0, 566, 0, 562,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 562, 563,
	0, 0, 0, 0, 0, 564, 0, 0, 0, 560,
	0, 0, 0, 558, 566, 0, 0, 0, 571, 0,
	0, 557, 0, 0, 0, 564, 0, 0, 560, 0,
	0, 0, 0, 566, 0, 562, 563, 0, 571, 0,
	0, 557, 0, 0, 564, 0, 0, 0, 0, 0,
	558, 0, 0, 0, 562, 563, 0, 571, 0, 0,
	557, 560, 0, 0, 0, 0, 566, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 0, 571, 0, 0, 557, 0, 561,
	564, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 0, 0, 557, 0, 0, 561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 570, 0, 571, 540, 0, 557,
	0, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 0,
	0, 0, 676, 0, 0, 561, 542, 0, 0, 0,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 561, 0, 549, 550, 551, 0,
	543, 544, 545, 546, 547, 548, 541, 0, 0, 0,
	1287, 0, 559, 0, 0, 0, 549, 550, 551, 0,
	543, 544, 545, 546, 547, 548, 0, 561, 0, 0,
	1203, 559, 0, 0, 0, 549, 550, 551, 0, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 1177,
	0, 570, 0, 677, 540, 0, 0, 0, 552, 553,
	554, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 549, 550, 551, 556, 543, 544, 545, 546,
	547, 548, 0, 542, 0, 0, 1131, 559, 0, 565,
	0, 549, 550, 551, 0, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	0, 560, 0, 541, 0, 0, 566, 0, 0, 0,
	559, 0, 0, 0, 549, 550, 551, 0, 543, 544,
	545, 546, 547, 548, 0, 0, 1290, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 570, 0, 0, 540,
	0, 0, 558, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	556, 0, 0, 0, 1145, 0, 0, 0, 542, 570,
	0, 0, 540, 564, 565, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 0, 1410, 571, 0, 0, 557,
	0, 0, 0, 556, 0, 0, 1144, 0, 541, 0,
	0, 542, 0, 0, 0, 0, 0, 565, 560, 570,
	0, 0, 540, 566, 0, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 556, 562, 563, 0, 0, 0, 0,
	0, 542, 0, 0, 0, 0, 569, 565, 0, 558,
	0, 570, 0, 0, 540, 0, 0, 0, 552, 553,
	554, 0, 0, 0, 0, 0, 0, 561, 0, 0,
	0, 541, 0, 0, 0, 556, 0, 0, 568, 0,
	564, 0, 0, 542, 0, 0, 0, 0, 0, 565,
	0, 0, 0, 571, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 560, 0, 0, 0, 0, 566, 0,
	0, 0, 0, 541, 0, 1409, 0, 0, 0, 0,
	0, 0, 674, 0, 0, 0, 0, 0, 0, 562,
	563, 0, 0, 0, 0, 0, 560, 0, 0, 0,
	0, 566, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1096, 0, 0, 0, 0, 1095,
	559, 0, 562, 563, 549, 550, 551, 0, 543, 544,
	545, 546, 547, 548, 561, 564, 560, 558, 0, 0,
	0, 566, 0, 0, 0, 0, 0, 0, 571, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 564, 0,
	0, 0, 1248, 0, 0, 0, 0, 558, 560, 570,
	0, 571, 540, 566, 557, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 562, 563, 1254, 0, 564, 0,
	0, 542, 0, 0, 0, 0, 0, 565, 0, 558,
	0, 571, 0, 0, 557, 0, 0, 559, 0, 561,
	0, 549, 550, 551, 0, 543, 544, 545, 546, 547,
	548, 541, 0, 0, 0, 1249, 0, 0, 0, 0,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 561, 571, 540, 0, 557, 0, 552, 553,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 0, 0, 0, 0, 565,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 541, 0, 0, 549, 550, 551, 0,
	543, 544, 545, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 561, 0, 560, 0, 0, 0,
	0, 566, 0, 0, 0, 559, 0, 0, 0, 549,
	550, 551, 0, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 0, 570,
	0, 0, 540, 0, 0, 559, 552, 553, 554, 549,
	550, 551, 0, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 556, 0, 0, 1114, 0, 564, 0,
	0, 542, 0, 0, 0, 0, 0, 565, 560, 0,
	0, 571, 0, 566, 557, 0, 0, 559, 0, 0,
	0, 549, 550, 551, 0, 543, 544, 545, 546, 547,
	548, 541, 0, 0, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 570, 0, 0, 540, 0, 0, 0, 552, 553,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 0,
	564, 0, 0, 542, 0, 0, 0, 0, 0, 565,
	0, 570, 561, 571, 540, 0, 557, 0, 552, 553,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 0, 556, 0, 0, 1097, 570,
	0, 0, 540, 542, 0, 0, 552, 553, 554, 565,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 0,
	0, 566, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 541, 0, 0, 0, 565, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 561, 570, 0, 558, 540, 0,
	0, 541, 552, 553, 554, 559, 0, 0, 0, 549,
	550, 551, 0, 543, 544, 545, 546, 547, 548, 556,
	0, 1102, 1063, 1199, 0, 0, 0, 542, 564, 0,
	0, 0, 0, 565, 0, 0, 0, 0, 560, 0,
	0, 571, 0, 566, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 558,
	0, 0, 0, 566, 0, 0, 0, 559, 0, 0,
	0, 549, 550, 551, 0, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 562, 563, 560, 0, 0, 0,
	564, 566, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 561, 571, 0, 0, 557, 0, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 0, 558, 540, 0,
	564, 0, 552, 553, 554, 0, 0, 0, 0, 0,
	0, 0, 560, 571, 0, 0, 557, 566, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 542, 564, 0,
	0, 0, 0, 565, 0, 0, 0, 0, 562, 563,
	0, 571, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 561, 0, 0, 541, 0, 1068,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 549,
	550, 551, 0, 543, 544, 545, 546, 547, 548, 570,
	0, 0, 540, 0, 564, 0, 552, 553, 554, 0,
	0, 0, 0, 0, 561, 0, 0, 571, 0, 0,
	557, 0, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 0, 0, 0, 565, 0, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 549, 550, 551, 0, 543, 544, 545, 546, 547,
	548, 0, 560, 0, 0, 0, 0, 566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 562, 563,
	0, 549, 550, 551, 0, 543, 544, 545, 546, 547,
	548, 570, 0, 558, 540, 0, 0, 0, 552, 553,
	554, 0, 0, 0, 0, 559, 0, 0, 0, 549,
	550, 551, 0, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 542, 564, 0, 0, 0, 0, 565,
	0, 0, 0, 0, 0, 0, 560, 571, 0, 0,
	557, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 559, 562, 563, 0, 549, 550, 551, 0, 543,
	544, 545, 546, 547, 548, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 0,
	0, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 0, 0, 566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 549, 550, 551, 0, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 0,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 549,
	550, 551, 0, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 549, 550, 551, 0, 543, 544, 545, 546, 547,
	548,
}
var yyPact = [...]int{

	-169, -1000, -309, -1000, -1000, -1000, 200, -169, 460, -315,
	14038, -191, -1000, -1000, 327, 458, 458, 458, 443, -227,
	-231, 7067, 7067, -1000, 163, -191, -1000, -136, 13604, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6631, 367, 321, 318, 137, 166, 297, -1000, 7511, 293,
	8819, 179, -169, -1000, -1000, -169, -169, 8819, -1000, -1000,
	-1000, -316, -1000, 17452, -1000, -1000, 8819, 8819, 8819, 8819,
	8819, 129, -1000, -1000, 4887, -1000, -1000, -302, -155, -229,
	-1000, -1000, -1000, -219, -156, -302, -1000, -1000, -1000, 226,
	590, 218, -1000, -1000, -1000, 8819, 323, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 316, -1000,
	-158, -160, -161, -162, -1000, -1000, -1000, -1000, -1000, -1000,
	-163, -164, -167, -168, -173, -174, -176, -177, -178, -179,
	-180, -181, -182, -183, -184, -185, -186, -187, -188, 87,
	-1000, -81, -1000, -81, -81, -197, -197, -196, -1000, -1000,
	421, -81, -197, -1000, -1000, -253, -252, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 162, -316, -189, -1000, -1000, -1000,
	14469, -330, -1000, 18186, -1000, -1000, -1000, -1000, -1000, -1000,
	138, 159, -1000, 235, -1000, 18, -1000, -1000, -1000, 18186,
	-1000, 148, -1000, -1000, -1000, 74, 18186, -1000, 108, 14469,
	247, -1000, -1000, -1000, 247, -317, -1000, 17135, 307, 7067,
	15331, 14469, -18, 8819, 8819, 8819, 8819, 8819, 8819, 8819,
	8819, 8819, 8819, 8819, 8819, 12302, 8819, 8819, 8819, 612,
	8819, -23, 640, -1000, -1000, 330, -201, 355, 2703, -1000,
	-1000, -190, -1000, -1000, 534, 534, 470, 18392, 18392, -120,
	16852, -303, -320, -191, -302, -1000, 2272, 8819, -1000, -1000,
	-1000, 5759, 12739, 5323, -302, 3134, -1000, -1000, 221, 576,
	-89, 18186, 139, -192, -194, 576, 576, 576, 576, 8819,
	1245, 8819, 10127, 8819, 8819, 3579, 8819, 8819, 8819, 8819,
	8819, 198, 10998, 8819, 404, 184, 8819, 404, -1000, -195,
	-1000, -1000, -1000, -1000, 8819, -1000, -1000, 576, -81, -81,
	-1000, -1000, 576, -1000, -19, -20, 576, -1000, 576, -1000,
	24, 307, 8819, -236, 6631, -1000, -1000, -64, -1000, 74,
	-1000, 8819, -1000, 576, 576, -1000, -1000, -1000, -1000, -1000,
	214, -322, -1000, 8819, 683, -125, -1000, -1000, -92, 8819,
	-1000, -1000, 504, 15750, -1000, -1000, -1000, -1000, -1000, -42,
	-298, -1000, -1000, -1000, -1000, -1000, -196, -197, -197, -197,
	-1000, -1000, -1000, -1000, -1000, -252, -253, -1000, -1000, -1000,
	-81, -1000, -1000, -81, -81, -1000, 421, -81, -1000, -292,
	-117, 391, 391, 294, 294, 294, 552, 366, 366, 366,
	366, 366, 366, 470, 18392, 18270, 1466, 8819, 8819, -24,
	319, -201, 1403, 8819, -1000, 711, -1000, -1000, -1000, 305,
	-203, -1000, 10127, 10127, -1000, -1000, -1000, 4887, -205, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12739, -1000, -209, 8819, -1000,
	8819, -1000, -1000, -1000, -1000, 1559, -319, -329, -1000, 18186,
	-1000, -237, -1000, -294, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -336, -1000, -1000,
	-204, 8819, 8819, -238, -1000, 18186, 547, -1000, -1000, -26,
	-1000, -32, -34, -41, -1000, -210, -240, 205, -1000, 8819,
	-1000, 13170, -91, 8819, -241, -244, -245, -246, 18036, -247,
	302, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -248,
	17980, -249, 228, -1000, 10127, 10127, 10127, 4887, -211, -250,
	17410, -397, 17952, 6195, 6195, 6195, -251, 17912, 8819, -397,
	16187, -338, -342, -343, -344, 2703, 102, -348, -1000, 17830,
	8819, -1000, -1000, 2703, 16169, 8819, 8819, -349, -255, -1000,
	-1000, -257, -118, -119, -258, -261, 14469, -92, -350, -1000,
	-1000, -1000, 152, 16833, -1000, -1000, -1000, 14469, -1000, -125,
	-1000, -214, -1000, 298, 283, 8819, -30, -1000, 17370, -148,
	-143, 502, -1000, 576, -1000, -299, 2703, -297, 8819, 8819,
	1396, 459, 8819, 10127, 10127, -1000, 8819, 360, -1000, -1000,
	-1000, -1000, 301, -216, -1000, 8819, 15331, 202, 164, -354,
	-1000, 4887, -262, 4451, -323, -302, 16796, -1000, 8819, 8819,
	-1000, -1000, -145, -1000, 12739, -1000, -264, 8819, -1000, -204,
	-204, -1000, 8819, 8819, 204, 215, 131, 36, 576, 590,
	346, -1000, 8819, 17702, -1000, -1000, 14900, 8819, 16777, -1000,
	-1000, -1000, -1000, 15331, -1000, 8819, -1000, 299, 8819, -1000,
	15331, 10127, 10127, 10127, 10127, 10127, 10127, 10127, 10127, 10127,
	10127, 10127, 10127, 10563, 377, 10127, -219, 528, 528, 372,
	-340, 4015, -1000, 313, 299, 8819, 8819, 15331, -265, -266,
	-267, -1000, 8819, -397, 8819, -1000, -1000, -1000, -1000, -355,
	-274, 11432, -1000, 8819, 2703, 17337, -356, -84, 17620, -364,
	-1000, -1000, -108, -1000, -1000, -108, 423, -1000, 283, -1000,
	-1000, -1000, -1000, -1000, 12739, -1000, -1000, 278, 441, 18186,
	8819, 238, 237, 8819, 648, -1000, 229, 576, -148, -202,
	-275, 2703, -1000, -1000, 479, 1494, 8819, 8819, 241, 126,
	112, 1494, 8819, 8819, 15331, 78, -368, -1000, 8819, 8819,
	-1000, 16757, -1000, -370, -1000, 8819, -1000, -1000, 16885, 18186,
	-1000, -1000, 590, -1000, -276, -279, 18186, 18186, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -281, -1000, -1000, 18186, 8819,
	121, -1000, 16504, -1000, -282, 18186, 313, 18186, -1000, 426,
	426, 296, 296, 296, 528, 268, 268, 268, 268, 268,
	268, 372, 295, 333, -221, -1000, 329, 8819, -374, -1000,
	-1000, -1000, 18186, 18186, -283, -1000, -1000, -1000, -397, 16302,
	-1000, 9691, -1000, 440, 85, -1000, -1000, -284, -94, -95,
	-1000, 8819, -363, 9255, 15750, -1000, -1000, -1000, -1000, 278,
	-285, -97, 8819, 8819, -1000, 8819, 8819, 77, -1000, -1000,
	-151, -152, 576, -1000, -1000, 1494, 1494, 8819, 8819, 8819,
	1494, 78, -375, -1000, 15331, 1494, 1494, -1000, -1000, 16269,
	-1000, -1000, -1000, -1000, -1000, 18186, 135, 439, -1000, -1000,
	-1000, 10127, 292, -222, -1000, 15331, 16226, -1000, -1000, -1000,
	-376, -380, -223, 82, 10998, -1000, -1000, -1000, 16206, -286,
	6, 18186, -72, -289, -97, -1000, -1000, 14469, 18186, -365,
	-1000, 18186, -1000, -1000, -224, 8819, -1000, -1000, -153, 1494,
	1494, 1494, -1000, -1000, -1000, 96, 8819, 1512, 10127, 15331,
	-381, -1000, -1000, 8819, -1000, 8819, -1000, 437, -1000, -1000,
	70, -1000, -1000, -1000, -372, -1000, 473, 8819, 627, 18186,
	-1000, -290, 8383, 8383, -397, 1512, -382, -1000, -386, -387,
	76, -1000, -75, 14469, -225, -1000, -388, -1000, -1000, -1000,
	-1000, 11866, 261, 46, 17242, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 626, -1000, 481, -1000, -1000, -1000, -1000,
	-1000, -1000, 7947, -1000,
}
var yyPgo = [...]int{

	0, 930, 924, 657, 39, 393, 385, 922, 920, 595,
	919, 42, 912, 7, 57, 877, 436, 31, 54, 911,
	910, 30, 64, 8, 633, 901, 898, 34, 19, 58,
	50, 897, 897, 41, 49, 896, 894, 893, 892, 888,
	887, 25, 24, 884, 882, 56, 411, 881, 360, 362,
	880, 879, 878, 876, 875, 368, 870, 355, 867, 866,
	865, 864, 864, 44, 349, 863, 16, 33, 6, 863,
	862, 861, 22, 859, 0, 857, 20, 855, 5, 38,
	11, 620, 43, 13, 854, 15, 853, 183, 851, 850,
	849, 846, 843, 37, 52, 841, 625, 55, 840, 831,
	827, 46, 26, 825, 824, 823, 12, 4, 2, 802,
	799, 795, 794, 3, 1, 51, 48, 36, 786, 779,
	771, 45, 23, 766, 755, 10, 21, 750, 53, 746,
	739, 704, 18, 767, 32, 287, 29, 703, 696, 694,
	510, 27, 14, 693, 469, 304, 691, 303, 301, 666,
	665, 664, 655, 293, 9, 28, 281, 655,
}
var yyR1 = [...]int{

	0, 1, 1, 26, 26, 26, 27, 27, 27, 70,
	13, 13, 13, 120, 120, 121, 121, 122, 122, 141,
	141, 141, 141, 141, 141, 155, 155, 155, 142, 142,
	142, 142, 142, 142, 142, 150, 150, 150, 150, 139,
	139, 34, 34, 140, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 140, 88, 88, 149, 149, 151, 151,
	147, 148, 143, 143, 152, 152, 144, 145, 146, 146,
	146, 146, 146, 146, 82, 82, 28, 28, 153, 153,
	153, 153, 156, 83, 83, 83, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	116, 116, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 100, 100, 100, 100, 100, 103, 103, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	130, 130, 131, 131, 131, 131, 124, 125, 125, 126,
	126, 128, 128, 129, 129, 129, 127, 127, 127, 127,
	19, 19, 20, 20, 20, 20, 20, 18, 18, 18,
	59, 59, 59, 123, 123, 123, 123, 123, 123, 11,
	11, 101, 101, 102, 102, 102, 154, 154, 117, 117,
	117, 118, 118, 37, 37, 38, 38, 38, 38, 38,
	38, 38, 38, 39, 39, 40, 43, 43, 44, 44,
	44, 44, 44, 44, 41, 42, 45, 45, 45, 2,
	2, 4, 4, 3, 3, 3, 3, 5, 5, 6,
	6, 6, 6, 6, 6, 6, 29, 81, 81, 81,
	10, 10, 12, 12, 23, 23, 24, 25, 25, 22,
	22, 76, 76, 77, 77, 78, 80, 80, 55, 55,
	54, 54, 56, 56, 57, 58, 58, 58, 58, 60,
	60, 106, 106, 105, 105, 107, 109, 109, 109, 108,
	110, 110, 111, 111, 112, 112, 112, 113, 113, 114,
	114, 114, 114, 114, 36, 36, 36, 36, 46, 46,
	46, 46, 47, 47, 48, 48, 49, 49, 50, 50,
	51, 52, 52, 52, 53, 30, 30, 31, 31, 7,
	7, 21, 21, 32, 32, 35, 35, 97, 97, 97,
	98, 98, 99, 73, 73, 73, 72, 72, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	74, 74, 75, 75, 79, 79, 89, 92, 92, 93,
	91, 91, 90, 90, 119, 119, 63, 63, 63, 63,
	64, 64, 65, 65, 33, 33, 94, 94, 95, 95,
	96, 8, 8, 9, 9, 14, 14, 14, 14, 61,
	61, 67, 62, 62, 69, 66, 138, 138, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 87,
	85, 84, 84, 84, 68, 68, 68, 135, 135, 135,
	157, 157, 157, 157, 132, 132, 132, 132, 132, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 0, 2, 2, 0, 1,
	1, 3, 2, 1, 2, 2, 3, 1, 3, 2,
	3, 5, 6, 2, 3, 3, 4, 0, 1, 1,
	1, 1, 1, 2, 4, 1, 1, 1, 1, 2,
	3, 3, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 1, 1, 1, 1,
	5, 2, 1, 1, 1, 1, 5, 2, 2, 2,
	1, 3, 3, 2, 1, 0, 3, 0, 5, 2,
	5, 2, 1, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	1, 4, 1, 3, 3, 5, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 6, 3, 4, 1, 3, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 5, 6, 6, 7, 3, 4, 1,
	1, 4, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 3, 5, 6, 6, 4, 3, 1, 5, 1,
	1, 4, 1, 4, 1, 4, 1, 4, 1, 1,
	1, 1, 1, 1, 6, 4, 4, 4, 4, 6,
	5, 5, 5, 4, 6, 4, 4, 4, 4, 5,
	7, 7, 9, 5, 4, 6, 5, 7, 7, 7,
	2, 3, 3, 3, 4, 0, 4, 1, 3, 3,
	1, 1, 1, 2, 2, 0, 2, 4, 4, 6,
	1, 3, 3, 4, 4, 7, 5, 2, 2, 0,
	1, 2, 0, 1, 4, 1, 2, 1, 2, 1,
	3, 1, 3, 1, 3, 3, 1, 3, 3, 3,
	2, 1, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 2, 3, 0, 3, 3,
	2, 2, 1, 0, 2, 2, 3, 2, 1, 1,
	1, 3, 3, 1, 2, 4, 4, 1, 1, 9,
	9, 1, 2, 4, 4, 4, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 3, 1, 3, 4,
	3, 3, 0, 1, 3, 1, 2, 0, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 2,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 2, 2, 0, 1, 4, 2,
	2, 2, 2, 2, 1, 2, 2, 4, 2, 2,
	1, 1, 1, 0, 2, 5, 2, 3, 1, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 0, 5, 0, 5, 0, 4, 3, 5,
	4, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 1, 4, 1, 3, 5, 1, 2, 4,
	2, 0, 1, 0, 1, 2, 2, 2, 3, 5,
	1, 2, 0, 2, 1, 0, 1, 1, 1, 3,
	3, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 2, 6, 2, 3, 5, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -2, -3, -4, -6, -5, 452, 330, -7,
	363, 403, 455, -24, -23, 389, 198, 137, 265, -3,
	-4, -12, -10, 27, 122, 456, -36, -67, 260, -68,
	4, -133, -134, 19, 20, 21, 22, 23, 24, 25,
	26, 28, 29, 30, 38, 39, 41, 42, 44, 45,
	46, 53, 54, 55, 56, 57, 60, 61, 64, 66,
	67, 68, 69, 74, 75, 76, 77, 79, 80, 81,
	83, 84, 85, 86, 87, 88, 91, 92, 93, 101,
	102, 103, 104, 105, 106, 109, 111, 113, 114, 115,
	116, 117, 119, 120, 121, 124, 125, 126, 127, 128,
	130, 131, 132, 134, 135, 136, 138, 139, 140, 141,
	143, 144, 145, 148, 150, 151, 153, 155, 157, 161,
	162, 163, 165, 169, 171, 172, 173, 174, 175, 177,
	178, 179, 180, 182, 183, 184, 185, 186, 187, 189,
	192, 193, 194, 195, 201, 204, 206, 207, 208, 209,
	210, 213, 216, 219, 220, 221, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 242, 243, 246, 247, 249, 252, 254, 255, 256,
	258, 261, 262, 263, 266, 269, 272, 273, 274, 275,
	276, 277, 278, 280, 281, 283, 286, 287, 285, 289,
	290, 291, 292, 293, 294, 295, 296, 298, 299, 300,
	301, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	312, 313, 315, 316, 318, 319, 320, 322, 323, 324,
	325, 326, 327, 328, 329, 331, 332, 333, 334, 335,
	337, 338, 340, 341, 343, 344, 346, 348, 349, 350,
	351, 352, 353, 354, 355, 356, 357, 358, 361, 362,
	364, 366, 367, 368, 369, 370, 376, 377, 379, 382,
	383, 384, 385, 386, 387, 388, 391, 392, 393, 394,
	395, 398, 399, 400, 401, 402, 406, 408, 409, 410,
	411, 414, 417, 418, 419, 420, 421, 422, 432, 433,
	434, 47, 48, 50, 51, 62, 63, 70, 107, 108,
	142, 146, 152, 166, 168, 191, 196, 197, 199, 214,
	239, 241, 244, 251, 253, 267, 271, 282, 284, 297,
	321, 339, 345, 359, 372, 373, 378, 380, 403, 404,
	423, 424, 425, 426, 427, 428, 429, 430, 431, -96,
	452, -55, -46, -56, 154, -48, -49, -57, 218, 149,
	257, -58, -81, 27, 122, -81, -81, 53, 453, 453,
	-8, -9, -14, -15, 445, -17, 443, 444, -74, 245,
	435, -97, -119, -86, 452, -89, -103, -4, 142, 35,
	-98, -99, 9, 261, 321, -68, -87, 5, -85, -138,
	-150, -156, 381, 147, 250, 58, -100, -104, 4, -133,
	10, 6, -135, -140, -151, -152, -153, 199, 72, 95,
	98, 99, 222, 223, 96, 100, 336, 396, 94, 97,
	59, 146, 271, 282, 359, 378, 380, 251, 70, 166,
	214, 424, 425, 426, 427, 428, 429, 430, 431, 126,
	48, 50, 51, 62, 63, 107, 108, 152, 196, 197,
	239, 241, 253, 297, 345, 372, 373, 404, -136, -147,
	-148, -144, -145, 43, 49, 78, 90, 158, 160, 176,
	190, 202, 203, 205, 215, 217, 240, 248, 268, 270,
	317, 342, 365, 407, -146, -9, 259, -96, 445, -67,
	452, -95, -94, -15, 110, -47, -46, -54, -55, -57,
	154, 296, 395, 243, 340, 206, -49, -48, -50, -15,
	27, -31, 151, 242, -51, -53, -15, -17, -60, 255,
	-5, -6, -4, -5, -5, -25, -22, -15, -29, 456,
	12, 71, 41, 443, 444, 445, 446, 447, 448, 439,
	440, 441, 16, 17, 18, -74, 33, 264, 217, 435,
	176, 342, 202, 203, 248, 47, 181, -123, 36, 4,
	9, 261, -72, -71, -15, -15, -15, -15, -15, 270,
	-15, -4, -11, 403, -64, -63, 454, 450, -4, -4,
	-117, 450, 452, 452, -64, 452, -85, -85, -85, 452,
	-90, -15, -35, 150, 154, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 284, -82,
	406, -82, -82, -34, 452, -34, -88, 452, 63, 62,
	-82, -34, 452, -83, 437, 418, 452, -83, 452, -28,
	63, -29, 452, -67, 456, 453, 260, 206, 340, -52,
	-84, 452, -87, 443, 444, -30, 321, 322, -59, 249,
	344, -61, -67, 456, 397, -26, 37, 118, -18, 159,
	-14, -141, -142, 339, -139, -140, -149, -143, -153, -156,
	-135, 196, 197, 345, 48, 297, 152, 108, 107, 253,
	51, -147, -148, -144, -145, 373, 372, 199, 4, -133,
	50, 72, 97, 63, 62, 404, 239, 241, -120, -68,
	372, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, -15, 217, 176, 342,
	47, 181, -15, 374, 250, 245, 381, 147, 391, 122,
	255, 124, -33, 360, 40, -79, -4, 452, -73, 34,
	347, 27, -132, 4, -133, -134, -136, -137, 27, 31,
	32, 33, 34, 35, 36, 37, 40, 52, 58, 59,
	65, 71, 73, 82, 89, 94, 95, 96, 98, 99,
	100, 110, 112, 118, 122, 123, 129, 133, 137, 147,
	149, 154, 156, 159, 164, 167, 170, 181, 188, 198,
	200, 211, 212, 218, 222, 223, 245, 250, 257, 259,
	260, 264, 265, 279, 288, 302, 314, 330, 336, 347,
	360, 363, 371, 374, 375, 381, 389, 390, 396, 397,
	405, 412, 413, 415, 416, 452, -97, 321, 452, 453,
	456, -63, -66, 445, -132, -15, -11, -118, 451, -15,
	-117, -122, -72, -68, 9, 443, 444, 445, 446, 447,
	448, 439, 440, 441, 16, 17, 18, -11, 453, 453,
	-101, 27, 122, 445, -102, -15, -70, -135, -115, 432,
	235, 105, 173, 232, -116, 328, -87, -92, -93, 412,
	-109, 269, 452, 452, -87, -87, -87, -87, -15, -37,
	-38, 4, 432, 235, 105, 173, 232, 328, -85, -39,
	-15, -43, -16, -17, 443, 444, -74, 452, 321, -44,
	-15, -11, -15, 52, 212, 375, -45, -15, 159, -11,
	-15, -11, -11, -11, -11, 237, -17, -125, -126, -15,
	-128, 124, 84, 237, -15, -128, 452, -11, -87, -82,
	-82, -87, 372, 372, -87, -87, 337, -18, -11, 453,
	-94, 395, -30, -15, -87, -87, 226, 456, -22, -75,
	-72, 261, -27, 436, -21, 413, -13, -20, -15, -155,
	35, -142, -115, 452, -34, -121, 454, -121, 434, 135,
	-15, -15, 374, -33, 360, -79, 135, -15, 250, 381,
	147, 391, 122, 255, 124, 159, 452, -16, -16, -11,
	-4, 452, -122, 452, -11, -65, -15, 451, 457, 456,
	451, 451, 456, 453, 454, 453, -23, 456, -24, -101,
	-101, 453, 14, 15, 374, 374, 374, 374, 452, 453,
	-91, -93, 129, -15, -108, -68, 452, 413, -15, 453,
	453, 453, 453, 36, 453, 159, 453, -40, 279, 453,
	12, 443, 444, 445, 446, 447, 448, 439, 440, 441,
	16, 17, 18, -74, 202, 181, 261, -16, -16, -16,
	-11, 452, 453, -41, -42, 159, 154, 36, -45, -45,
	-45, 453, 159, -11, 456, 453, 453, 453, 453, -132,
	-127, 277, 453, 456, 36, -15, -132, 456, -15, -11,
	453, 453, 453, 434, 434, 453, 453, -68, -21, 453,
	260, 453, -67, -27, 452, 151, 210, -76, 167, -15,
	456, 90, 240, 205, 36, 4, 450, 450, -155, 35,
	-87, 454, -34, -66, -15, -15, 135, 135, -15, -16,
	-16, -15, 135, 159, 452, -15, -154, -141, 33, 33,
	453, -15, 453, -11, 453, 456, -63, 453, -15, -15,
	-117, -122, 453, -102, -23, -23, -15, -15, 235, 173,
	232, -116, 232, -116, -116, -87, -85, 133, -15, 371,
	-110, -68, -15, 453, -141, -15, -41, -15, -141, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, 122, 245, 255, 124, -16, 456, -11, 453,
	-42, -41, -15, -15, -141, 453, 453, 453, -11, -15,
	453, 456, 453, -17, 53, -126, -132, -129, 285, 358,
	453, 456, -130, 408, 36, 453, -83, -83, -28, -76,
	-122, -80, 170, 53, -13, 205, 205, -13, 4, 451,
	-87, -87, 450, 453, -66, -15, -15, 135, 33, 33,
	-15, -15, -154, 453, 456, -15, -15, 453, 453, -15,
	451, -85, 453, 453, 453, -15, -111, 276, 453, 453,
	-42, 159, 122, 255, 124, 452, -15, 453, 453, 453,
	-124, -11, 423, 53, 301, 453, 414, 414, -15, -131,
	456, -15, 243, -142, -80, 453, -106, 415, -15, -77,
	-78, -15, -13, -13, 397, 259, 451, 451, -87, -15,
	-15, -15, 453, -141, 453, -23, 53, -16, 159, 452,
	-154, 453, 453, 456, 453, 452, 301, -17, 453, 453,
	350, 402, 453, -106, -105, -107, -68, 456, 452, -15,
	451, -112, 295, 322, -11, -16, -154, 453, -11, -125,
	53, 433, 243, 456, 36, -78, -19, 4, 453, -113,
	-114, 47, 386, 93, -15, -113, 453, 453, 453, 301,
	402, -107, -108, 456, 453, -114, 283, 153, 321, 283,
	153, 4, 33, -114,
}
var yyDef = [...]int{

	0, -2, 1, 329, -2, -2, 355, 0, 353, 341,
	0, 0, 2, -2, 0, 349, 349, 349, 0, 0,
	338, 492, 0, 352, 350, 0, 342, 404, 0, 501,
	524, 525, 526, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 429,
	0, 413, 371, 368, 0, 410, 411, 372, 0, 0,
	0, 380, 0, 347, 348, 0, 0, 0, 331, 332,
	346, 491, 493, 497, 498, 102, 0, 0, 0, 0,
	0, 0, 189, 190, 0, 192, 193, 194, 816, 0,
	199, 200, 460, 687, 836, 474, 508, 509, 510, 0,
	0, 0, 516, 517, 518, 473, 436, 207, -2, -2,
	519, 520, 506, 35, 36, 37, 38, -2, 857, 209,
	210, 212, 214, 216, 218, 219, 220, 221, 222, -2,
	0, 817, 832, 833, 839, 842, 843, 829, 813, 819,
	825, 847, 848, 849, 850, 851, 852, 853, 854, 603,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	826, -2, -2, -2, -2, -2, -2, -2, 529, 58,
	59, 64, 65, 855, 856, 858, 859, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 77, 346, 0, 430, 405, 406,
	0, 0, 488, 486, 487, 335, 412, 336, 370, 373,
	0, 0, 375, 0, 377, 0, 408, 409, 414, 418,
	419, 423, 427, 428, 416, 0, 420, -2, 282, 0,
	343, 337, 338, 344, 345, 356, 357, 5, 279, 0,
	0, 0, 0, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 122, 0, 0, 285, 0,
	287, 0, 0, 140, 142, 485, 0, 0, 0, 496,
	-2, 0, 283, 447, 106, 107, 121, 125, 126, 0,
	289, -2, 0, 844, 195, 480, 0, 0, 196, 197,
	198, 0, 0, 0, -2, 0, 511, 513, 99, 0,
	0, 472, 388, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 317, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 61,
	74, 69, 68, 51, 0, 50, 48, 0, 75, 75,
	73, 52, 0, 81, 0, 0, 0, 79, 0, 67,
	0, 279, 0, 0, 0, 490, 369, 0, 378, 0,
	421, 0, 521, 0, 0, 417, 425, 426, 374, 280,
	0, 379, 499, 0, 0, 8, 3, 4, 432, 0,
	494, 103, 27, 0, 28, 29, 30, 31, 32, 99,
	42, 43, 44, 45, 46, 47, 55, 42, 42, 42,
	53, 56, 57, 62, 63, 85, 85, 82, 527, 528,
	75, 857, 860, 75, 75, 70, 0, 75, 104, 13,
	0, 108, 109, 110, 111, 112, 113, -2, -2, -2,
	-2, -2, -2, 120, 123, 124, -2, 286, 288, 0,
	485, 0, -2, 0, 139, 0, 144, 146, 148, 0,
	0, 162, 0, 0, 484, 158, 464, 0, 0, 443,
	444, 445, 495, 534, 535, 536, 537, 538, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 0, 143, 0, 0, 482,
	0, 481, 476, 477, 505, 0, 0, 0, 300, 289,
	301, 0, 17, 0, 446, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 0, -2, 201,
	355, 0, 0, 0, 291, 293, 0, -2, 514, 86,
	87, 88, 89, 90, 91, 100, 0, 471, 467, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 306, 307, 308, 309, 310, 311, 312, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 836, 0,
	289, 322, 0, 0, 0, 0, 0, 289, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 260,
	0, 261, 262, 0, 0, 0, 0, 0, 0, 71,
	72, 0, 0, 0, 0, 0, 0, 432, 0, 407,
	489, 376, 0, 0, 522, 523, 281, 0, 358, 8,
	462, 0, 360, 0, 362, 0, 277, 278, 10, 19,
	23, 27, 33, 0, 39, 42, 0, 14, 0, 0,
	-2, -2, 0, 0, 0, 159, 0, -2, 141, 145,
	147, 149, 0, 0, 163, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 191, 290, 478, 0, 0,
	298, 299, 0, 461, 0, -2, 0, 0, 354, 355,
	355, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 386, 387, 391, 0, 0, 211,
	213, 215, 217, 0, 225, 0, 226, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 166, 167, 181,
	0, 0, 228, 320, 321, 0, 0, 0, 0, 0,
	0, 233, 0, 327, 0, 235, 236, 237, 238, 0,
	0, 0, 244, 0, 0, 265, 0, 0, 0, 0,
	41, 54, 85, 83, 84, 85, 77, 76, 362, 351,
	415, 422, 500, 359, 0, 6, 7, 367, 0, 431,
	0, 0, 0, 0, 0, 12, 0, 0, 20, 24,
	0, 0, 40, 15, 105, -2, 0, 0, -2, 0,
	0, -2, 0, 0, 0, -2, 0, 296, 0, 0,
	465, 0, -2, 0, 438, 0, 483, -2, 0, 290,
	302, 18, 202, 292, 0, 0, 294, 295, 92, 93,
	94, 95, 96, 97, 98, 0, 515, 466, 470, 0,
	393, 390, 0, 208, 0, 303, 314, 315, 165, 168,
	169, 170, 171, 172, 173, -2, -2, -2, -2, -2,
	-2, 180, 0, 0, 0, 187, 316, 0, 0, 441,
	318, 319, 324, 325, 0, 230, 231, 232, 326, 0,
	239, 0, 243, 266, 557, 258, 259, 0, 0, 0,
	246, 0, 255, 0, 0, 60, 80, 78, 66, 367,
	0, 382, 0, 0, 272, 0, 0, 0, 11, 25,
	0, 0, 0, 34, 16, -2, -2, 0, 0, 0,
	-2, -2, 0, 152, 0, -2, -2, 161, 437, 290,
	479, 512, 203, 204, 101, 469, 355, 0, 435, 224,
	313, 0, 0, 0, 188, 0, 290, 440, 229, 234,
	0, 0, 846, 0, 0, 245, 263, 264, 0, 0,
	0, 250, 678, 0, 382, 463, 339, 0, 366, 361,
	363, 365, 273, 274, 0, 0, 26, 21, 0, -2,
	-2, -2, 153, 297, 439, 396, 0, -2, 0, 0,
	0, 442, 240, 0, 241, 0, 267, 268, 247, 248,
	0, 251, 249, 340, 381, 383, 0, 0, 0, 276,
	22, 0, 0, 0, 392, -2, 0, 185, 0, 0,
	0, 252, 253, 0, 0, 364, 0, 270, 389, 394,
	397, -2, 779, 584, 0, 395, 186, 242, 256, 269,
	254, 384, 385, 0, 275, 0, 399, 400, 401, 402,
	403, 271, 0, 398,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 447, 3, 3,
	452, 453, 445, 443, 456, 444, 454, 446, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 457, 455,
	439, 441, 440, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 450, 3, 451, 448,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 442, 57782, 449, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lookahead func() int
}

func (p *yyParserImpl) Lookahead() int {
	return p.lookahead()
}

func yyNewParser() yyParser {
	p := &yyParserImpl{
		lookahead: func() int { return -1 },
	}
	return p
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yytoken := -1 // yychar translated into internal numbering
	yyrcvr.lookahead = func() int { return yychar }
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yychar = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar, yytoken = yylex1(yylex, &yylval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yychar = -1
		yytoken = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar, yytoken = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yychar = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:401
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:406
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yyVAL.sqlSelect.Semicolon = true
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:413
		{
			yyVAL.str = "asc"
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:414
		{
			yyVAL.str = "desc"
		}
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:415
		{
			yyVAL.str = ""
		}
	case 6:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:418
		{
			yyVAL.str = "first"
		}
	case 7:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:419
		{
			yyVAL.str = "last"
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:420
		{
			yyVAL.str = ""
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:429
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:433
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 12:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:437
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:444
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 14:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:448
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyDollar[2].anyName...)
		}
	case 15:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:455
		{
			yyVAL.anyName = AnyName{yyDollar[2].str}
		}
	case 16:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:459
		{
			yyVAL.anyName = append(yyDollar[1].anyName, yyDollar[3].str)
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:465
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:469
		{
			yyVAL.anyName = append(AnyName{yyDollar[1].str}, yyDollar[3].anyName...)
		}
	case 19:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:485
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayBounds = yyDollar[2].optArrayBounds
		}
	case 20:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:490
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyDollar[3].optArrayBounds
		}
	case 21:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:497
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyDollar[4].iconst}
		}
	case 22:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:503
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyDollar[5].iconst}
		}
	case 23:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:510
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:515
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:523
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, "")
		}
	case 26:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:527
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, yyDollar[3].iconst)
		}
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:531
		{
			yyVAL.optArrayBounds = nil
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:540
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, OptInterval: yyDollar[2].optInterval}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:544
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, TypeMods: []Expr{yyDollar[3].iconst}}
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:575
		{
			yyVAL.pgType = PgType{Name: AnyName{yyDollar[1].str}, TypeMods: yyDollar[2].fields}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:579
		{
			yyVAL.pgType = PgType{Name: append(AnyName{yyDollar[1].str}, yyDollar[2].anyName...), TypeMods: yyDollar[3].fields}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:584
		{
			yyVAL.fields = yyDollar[2].fields
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:585
		{
			yyVAL.fields = nil
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:592
		{
			yyVAL.pgType = PgType{Name: AnyName{"int"}}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:596
		{
			yyVAL.pgType = PgType{Name: AnyName{"integer"}}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:600
		{
			yyVAL.pgType = PgType{Name: AnyName{"smallint"}}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:604
		{
			yyVAL.pgType = PgType{Name: AnyName{"bigint"}}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:608
		{
			yyVAL.pgType = PgType{Name: AnyName{"real"}}
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:612
		{
			yyVAL.pgType = PgType{Name: AnyName{"float"}}
			if yyDollar[2].iconst != IntegerConst("") {
				yyVAL.pgType.TypeMods = []Expr{yyDollar[2].iconst}
			}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:619
		{
			yyVAL.pgType = PgType{Name: AnyName{"double precision"}}
		}
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:623
		{
			yyVAL.pgType = PgType{Name: AnyName{"decimal"}, TypeMods: yyDollar[2].fields}
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:627
		{
			yyVAL.pgType = PgType{Name: AnyName{"dec"}, TypeMods: yyDollar[2].fields}
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:631
		{
			yyVAL.pgType = PgType{Name: AnyName{"numeric"}, TypeMods: yyDollar[2].fields}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:635
		{
			yyVAL.pgType = PgType{Name: AnyName{"bool"}}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:641
		{
			yyVAL.iconst = yyDollar[2].iconst
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:645
		{
			yyVAL.iconst = IntegerConst("")
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:659
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType.Name = AnyName{"varbit"}
			} else {
				yyVAL.pgType.Name = AnyName{"bit"}
			}
			yyVAL.pgType.TypeMods = yyDollar[4].fields
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:671
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varbit"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"bit"}}
			}
		}
	case 66:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:694
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.TypeMods = []Expr{yyDollar[3].iconst}
			yyVAL.pgType.CharSet = yyDollar[5].str
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:702
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.CharSet = yyDollar[2].str
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:709
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:717
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:725
		{
			yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:729
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:737
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:745
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:755
		{
			yyVAL.boolean = true
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:759
		{
			yyVAL.boolean = false
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:765
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:769
		{
			yyVAL.str = ""
		}
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:778
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, TypeMods: []Expr{yyDollar[3].iconst}, WithTimeZone: yyDollar[5].boolean}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:782
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, WithTimeZone: yyDollar[2].boolean}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:786
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, TypeMods: []Expr{yyDollar[3].iconst}, WithTimeZone: yyDollar[5].boolean}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:790
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, WithTimeZone: yyDollar[2].boolean}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:799
		{
			yyVAL.boolean = true
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:803
		{
			yyVAL.boolean = false
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:807
		{
			yyVAL.boolean = false
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:813
		{
			yyVAL.optInterval = &OptInterval{Left: "year"}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:817
		{
			yyVAL.optInterval = &OptInterval{Left: "month"}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:821
		{
			yyVAL.optInterval = &OptInterval{Left: "day"}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:825
		{
			yyVAL.optInterval = &OptInterval{Left: "hour"}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:829
		{
			yyVAL.optInterval = &OptInterval{Left: "minute"}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:833
		{
			yyVAL.optInterval = &OptInterval{Second: yyDollar[1].intervalSecond}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:837
		{
			yyVAL.optInterval = &OptInterval{Left: "year", Right: "month"}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:841
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "hour"}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:845
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "minute"}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:849
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Second: yyDollar[3].intervalSecond}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:853
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Right: "minute"}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:857
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Second: yyDollar[3].intervalSecond}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:861
		{
			yyVAL.optInterval = &OptInterval{Left: "minute", Second: yyDollar[3].intervalSecond}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:865
		{
			yyVAL.optInterval = nil
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:871
		{
			yyVAL.intervalSecond = &IntervalSecond{}
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:875
		{
			yyVAL.intervalSecond = &IntervalSecond{Precision: yyDollar[3].iconst}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:911
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:915
		{
			yyVAL.expr = CollateExpr{Expr: yyDollar[1].expr, Collation: yyDollar[3].anyName}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:919
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyDollar[1].expr, TimeZone: yyDollar[5].expr}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:932
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyDollar[2].expr}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:936
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyDollar[2].expr}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:940
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"+"}, Right: yyDollar[3].expr}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:944
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"-"}, Right: yyDollar[3].expr}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:948
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"*"}, Right: yyDollar[3].expr}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:952
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"/"}, Right: yyDollar[3].expr}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:956
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"%"}, Right: yyDollar[3].expr}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:960
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"^"}, Right: yyDollar[3].expr}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:964
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<"}, Right: yyDollar[3].expr}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:968
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">"}, Right: yyDollar[3].expr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:972
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"="}, Right: yyDollar[3].expr}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:976
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<="}, Right: yyDollar[3].expr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:980
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">="}, Right: yyDollar[3].expr}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:984
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"!="}, Right: yyDollar[3].expr}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:988
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].anyName, Right: yyDollar[3].expr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:992
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].anyName, Expr: yyDollar[2].expr}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:996
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].anyName}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1000
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "and", Right: yyDollar[3].expr}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1004
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "or", Right: yyDollar[3].expr}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1008
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1012
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1016
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1020
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1024
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr}
		}
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1028
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1032
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr}
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1036
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1040
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1044
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1049
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1053
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1057
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr}
		}
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1061
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr, Escape: yyDollar[7].expr}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1074
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "null"}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1078
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "null"}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1082
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "null"}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1086
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "null"}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1090
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].row, Operator: AnyName{"overlaps"}, Right: yyDollar[3].row}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1094
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "true"}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1098
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "true"}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1102
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "false"}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1106
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "false"}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1110
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "unknown"}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1114
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "unknown"}
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1118
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is distinct from"}, Right: yyDollar[5].expr}
		}
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1122
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is not distinct from"}, Right: yyDollar[6].expr}
		}
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1126
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1130
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1134
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1138
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1142
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Symmetric: true, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1146
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Symmetric: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1150
		{
			yyVAL.expr = InExpr{Value: yyDollar[1].expr, In: yyDollar[3].expr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1154
		{
			yyVAL.expr = InExpr{Value: yyDollar[1].expr, Not: true, In: yyDollar[4].expr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1158
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyDollar[1].expr, Op: yyDollar[2].subqueryOp, Type: yyDollar[3].str, Query: yyDollar[4].sqlSelect}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1162
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyDollar[1].expr, Op: yyDollar[2].subqueryOp, Type: yyDollar[3].str, Query: ParenExpr{Expr: yyDollar[5].expr}}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1166
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "document"}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1170
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "document"}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1185
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1189
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1193
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyDollar[2].expr}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1197
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyDollar[2].expr}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1201
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"+"}, Right: yyDollar[3].expr}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1205
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"-"}, Right: yyDollar[3].expr}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1209
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"*"}, Right: yyDollar[3].expr}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1213
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"/"}, Right: yyDollar[3].expr}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1217
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"%"}, Right: yyDollar[3].expr}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1221
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"^"}, Right: yyDollar[3].expr}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1225
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<"}, Right: yyDollar[3].expr}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1229
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">"}, Right: yyDollar[3].expr}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1233
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"="}, Right: yyDollar[3].expr}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1237
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<="}, Right: yyDollar[3].expr}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1241
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">="}, Right: yyDollar[3].expr}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1245
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"!="}, Right: yyDollar[3].expr}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1249
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].anyName, Right: yyDollar[3].expr}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1253
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].anyName, Expr: yyDollar[2].expr}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1257
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].anyName}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1261
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is distinct from"}, Right: yyDollar[5].expr}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1265
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is not distinct from"}, Right: yyDollar[6].expr}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1269
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 186:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1273
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1277
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "document"}
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1281
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "document"}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1294
		{
			yyVAL.expr = yyDollar[1].columnRef
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1295
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1303
		{
			yyVAL.expr = ParenExpr{Expr: yyDollar[2].expr, Indirection: yyDollar[4].indirection}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1306
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1307
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1309
		{
			yyVAL.expr = yyDollar[1].sqlSelect
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1313
		{
			yyDollar[1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyDollar[1].sqlSelect, Indirection: yyDollar[2].indirection}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1318
		{
			yyVAL.expr = ExistsExpr(*yyDollar[2].sqlSelect)
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1322
		{
			yyVAL.expr = ArraySubselect(*yyDollar[2].sqlSelect)
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1325
		{
			yyVAL.expr = ArrayConstructorExpr(yyDollar[2].arrayExpr)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1329
		{
			yyVAL.expr = yyDollar[1].row
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1333
		{
			yyVAL.expr = yyDollar[1].row
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1344
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1348
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Args: yyDollar[3].funcArgs, OrderClause: yyDollar[4].orderClause}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1356
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 204:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1360
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Distinct: true, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1364
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Star: true}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1380
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyDollar[1].funcApplication, FilterClause: yyDollar[2].filterClause, OverClause: yyDollar[3].overClause}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1384
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1397
		{
			yyVAL.expr = FuncApplication{Name: "collation for", Args: []FuncArg{{Expr: yyDollar[4].expr}}}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1401
		{
			yyVAL.expr = FuncExprNoParens("current_date")
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1405
		{
			yyVAL.expr = FuncExprNoParens("current_time")
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1409
		{
			yyVAL.expr = FuncApplication{Name: "current_time", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1413
		{
			yyVAL.expr = FuncExprNoParens("current_timestamp")
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1417
		{
			yyVAL.expr = FuncApplication{Name: "current_timestamp", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1421
		{
			yyVAL.expr = FuncExprNoParens("localtime")
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1425
		{
			yyVAL.expr = FuncApplication{Name: "localtime", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1429
		{
			yyVAL.expr = FuncExprNoParens("localtimestamp")
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1433
		{
			yyVAL.expr = FuncApplication{Name: "localtimestamp", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1437
		{
			yyVAL.expr = FuncExprNoParens("current_role")
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1441
		{
			yyVAL.expr = FuncExprNoParens("current_user")
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1445
		{
			yyVAL.expr = FuncExprNoParens("session_user")
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1449
		{
			yyVAL.expr = FuncExprNoParens("user")
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1453
		{
			yyVAL.expr = FuncExprNoParens("current_catalog")
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1457
		{
			yyVAL.expr = FuncExprNoParens("current_schema")
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1461
		{
			yyVAL.expr = CastFunc{Name: "cast", Expr: yyDollar[3].expr, Type: yyDollar[5].pgType}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1465
		{
			yyVAL.expr = ExtractExpr(*yyDollar[3].extractList)
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1469
		{
			yyVAL.expr = OverlayExpr(yyDollar[3].overlayList)
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1473
		{
			yyVAL.expr = PositionExpr(*yyDollar[3].positionList)
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1477
		{
			if yyDollar[3].placeholder == nil {
				yyVAL.expr = FuncApplication{Name: "substring"}
			} else if se, ok := yyDollar[3].placeholder.(SubstrList); ok {
				yyVAL.expr = SubstrExpr(se)
			} else {
				var args []FuncArg
				for _, a := range yyDollar[3].placeholder.([]Expr) {
					args = append(args, FuncArg{Expr: a})
				}
				yyVAL.expr = FuncApplication{Name: "substring", Args: args}
			}
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1491
		{
			yyVAL.expr = CastFunc{Name: "treat", Expr: yyDollar[3].expr, Type: yyDollar[5].pgType}
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1495
		{
			yyVAL.expr = TrimExpr{Direction: "both", TrimList: yyDollar[4].trimList}
		}
	case 231:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1499
		{
			yyVAL.expr = TrimExpr{Direction: "leading", TrimList: yyDollar[4].trimList}
		}
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1503
		{
			yyVAL.expr = TrimExpr{Direction: "trailing", TrimList: yyDollar[4].trimList}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1507
		{
			yyVAL.expr = TrimExpr{TrimList: yyDollar[3].trimList}
		}
	case 234:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1511
		{
			yyVAL.expr = FuncApplication{Name: "nullif", Args: []FuncArg{{Expr: yyDollar[3].expr}, {Expr: yyDollar[5].expr}}}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1515
		{
			fa := FuncApplication{Name: "coalesce"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1523
		{
			fa := FuncApplication{Name: "greatest"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1531
		{
			fa := FuncApplication{Name: "least"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1539
		{
			fa := FuncApplication{Name: "xmlconcat"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 239:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1547
		{
			yyVAL.expr = XmlElement{Name: yyDollar[4].str}
		}
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1551
		{
			yyVAL.expr = XmlElement{Name: yyDollar[4].str, Attributes: yyDollar[6].xmlAttributes}
		}
	case 241:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1555
		{
			yyVAL.expr = XmlElement{Name: yyDollar[4].str, Body: yyDollar[6].fields}
		}
	case 242:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1559
		{
			yyVAL.expr = XmlElement{Name: yyDollar[4].str, Attributes: yyDollar[6].xmlAttributes, Body: yyDollar[8].fields}
		}
	case 243:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1563
		{
			yyVAL.expr = XmlExists{Path: yyDollar[3].expr, Body: yyDollar[4].xmlExistsArgument}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1567
		{
			yyVAL.expr = XmlForest(yyDollar[3].xmlAttributeEls)
		}
	case 245:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1571
		{
			yyVAL.expr = XmlParse{Type: yyDollar[3].str, Content: yyDollar[4].expr, WhitespaceOption: yyDollar[5].str}
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1575
		{
			yyVAL.expr = XmlPi{Name: yyDollar[4].str}
		}
	case 247:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1579
		{
			yyVAL.expr = XmlPi{Name: yyDollar[4].str, Content: yyDollar[6].expr}
		}
	case 248:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1583
		{
			yyVAL.expr = XmlRoot{Xml: yyDollar[3].expr, Version: yyDollar[5].xmlRootVersion, Standalone: yyDollar[6].str}
		}
	case 249:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1587
		{
			yyVAL.expr = XmlSerialize{XmlType: yyDollar[3].str, Content: yyDollar[4].expr, Type: yyDollar[6].pgType}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1596
		{
			yyVAL.xmlRootVersion = XmlRootVersion{Expr: yyDollar[2].expr}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1600
		{
			yyVAL.xmlRootVersion = XmlRootVersion{}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1605
		{
			yyVAL.str = "yes"
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1606
		{
			yyVAL.str = "no"
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1607
		{
			yyVAL.str = "no value"
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1608
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1612
		{
			yyVAL.xmlAttributes = XmlAttributes(yyDollar[3].xmlAttributeEls)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1618
		{
			yyVAL.xmlAttributeEls = []XmlAttributeEl{yyDollar[1].xmlAttributeEl}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1622
		{
			yyVAL.xmlAttributeEls = append(yyDollar[1].xmlAttributeEls, yyDollar[3].xmlAttributeEl)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1628
		{
			yyVAL.xmlAttributeEl = XmlAttributeEl{Value: yyDollar[1].expr, Name: yyDollar[3].str}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1632
		{
			yyVAL.xmlAttributeEl = XmlAttributeEl{Value: yyDollar[1].expr}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1637
		{
			yyVAL.str = "document"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1638
		{
			yyVAL.str = "content"
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1641
		{
			yyVAL.str = "preserve whitespace"
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1642
		{
			yyVAL.str = "strip whitespace"
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1643
		{
			yyVAL.str = ""
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1648
		{
			yyVAL.xmlExistsArgument = XmlExistsArgument{Arg: yyDollar[2].expr}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1652
		{
			yyVAL.xmlExistsArgument = XmlExistsArgument{Arg: yyDollar[2].expr, RightByRef: true}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1656
		{
			yyVAL.xmlExistsArgument = XmlExistsArgument{LeftByRef: true, Arg: yyDollar[4].expr}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1660
		{
			yyVAL.xmlExistsArgument = XmlExistsArgument{LeftByRef: true, Arg: yyDollar[4].expr, RightByRef: true}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1667
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1671
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1677
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: ",", Right: yyDollar[3].expr}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1681
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "cross join", Right: yyDollar[4].expr}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1685
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "natural join", Right: yyDollar[4].expr}
		}
	case 275:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1689
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, Using: yyDollar[6].identifiers}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1693
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, On: yyDollar[5].expr}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1699
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1703
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1706
		{
			yyVAL.fromClause = nil
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1710
		{
			yyVAL.str = "nowait"
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1711
		{
			yyVAL.str = "skip locked"
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1712
		{
			yyVAL.str = ""
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1716
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{yyDollar[1].str}}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1720
		{
			yyVAL.subqueryOp = SubqueryOp{Operator: true, Name: yyDollar[3].anyName}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1724
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"like"}}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1728
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not like"}}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1732
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"ilike"}}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1736
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not ilike"}}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1750
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1754
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1761
		{
			yyVAL.funcArgs = []FuncArg{yyDollar[1].funcArg}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1765
		{
			yyVAL.funcArgs = append(yyDollar[1].funcArgs, yyDollar[3].funcArg)
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1771
		{
			yyVAL.funcArg = FuncArg{Expr: yyDollar[1].expr}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1775
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: ":=", Expr: yyDollar[3].expr}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1779
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: "=>", Expr: yyDollar[3].expr}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1785
		{
			yyVAL.pgTypes = []PgType{yyDollar[1].pgType}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1789
		{
			yyVAL.pgTypes = append(yyDollar[1].pgTypes, yyDollar[3].pgType)
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1795
		{
			yyVAL.arrayExpr = ArrayExpr(yyDollar[2].fields)
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1799
		{
			yyVAL.arrayExpr = yyDollar[2].arrayExpr
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1803
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1809
		{
			yyVAL.arrayExpr = ArrayExpr{yyDollar[1].arrayExpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1813
		{
			yyVAL.arrayExpr = append(yyDollar[1].arrayExpr, yyDollar[3].arrayExpr)
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1819
		{
			yyVAL.extractList = &ExtractList{Extract: yyDollar[1].expr, Time: yyDollar[3].expr}
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1823
		{
			yyVAL.extractList = nil
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1831
		{
			yyVAL.expr = AnyName{yyDollar[1].str}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1832
		{
			yyVAL.expr = AnyName{"year"}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1833
		{
			yyVAL.expr = AnyName{"month"}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1834
		{
			yyVAL.expr = AnyName{"day"}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1835
		{
			yyVAL.expr = AnyName{"hour"}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1836
		{
			yyVAL.expr = AnyName{"minute"}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1837
		{
			yyVAL.expr = AnyName{"second"}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1838
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1848
		{
			yyVAL.overlayList = OverlayList{Dest: yyDollar[1].expr, Placing: yyDollar[2].expr, From: yyDollar[3].expr, For: yyDollar[4].expr}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1852
		{
			yyVAL.overlayList = OverlayList{Dest: yyDollar[1].expr, Placing: yyDollar[2].expr, From: yyDollar[3].expr}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1858
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1866
		{
			yyVAL.positionList = &PositionList{Substring: yyDollar[1].expr, String: yyDollar[3].expr}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1869
		{
			yyVAL.positionList = nil
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1885
		{
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, From: yyDollar[2].expr, For: yyDollar[3].expr}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1889
		{
			/* not legal per SQL99, but might as well allow it */
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, From: yyDollar[3].expr, For: yyDollar[2].expr}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1893
		{
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, From: yyDollar[2].expr}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1897
		{
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, For: yyDollar[2].expr}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1901
		{
			yyVAL.placeholder = yyDollar[1].fields
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1905
		{
			yyVAL.placeholder = nil
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1911
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1917
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1923
		{
			yyVAL.trimList = TrimList{Left: yyDollar[1].expr, From: true, Right: yyDollar[3].fields}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1927
		{
			yyVAL.trimList = TrimList{From: true, Right: yyDollar[2].fields}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1931
		{
			yyVAL.trimList = TrimList{Right: yyDollar[1].fields}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1987
		{
			yyDollar[2].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1991
		{
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1995
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2001
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2006
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[3].lockingClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[4].limitClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2013
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[3].limitClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[4].lockingClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2022
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 339:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:2056
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyDollar[3].fields
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 340:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:2069
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyDollar[2].fields
			ss.TargetList = yyDollar[3].fields
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2081
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyDollar[1].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2087
		{
			ss := &SimpleSelect{}
			ss.Table = yyDollar[2].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2093
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2102
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2111
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2135
		{
			yyVAL.placeholder = nil
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2140
		{
			yyVAL.boolean = true
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2141
		{
			yyVAL.boolean = false
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2142
		{
			yyVAL.boolean = false
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2147
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2148
		{
			yyVAL.fields = yyDollar[4].fields
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2151
		{
			yyVAL.placeholder = nil
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2152
		{
			yyVAL.placeholder = nil
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2155
		{
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2156
		{
			yyVAL.orderClause = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2159
		{
			yyVAL.orderClause = yyDollar[3].orderClause
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2163
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyDollar[1].orderExpr}}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2167
		{
			yyDollar[1].orderClause.Exprs = append(yyDollar[1].orderClause.Exprs, yyDollar[3].orderExpr)
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2175
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Using: yyDollar[3].anyName, Nulls: yyDollar[4].str}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2179
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Order: yyDollar[2].str, Nulls: yyDollar[3].str}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2204
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyDollar[3].fields}
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2205
		{
			yyVAL.groupByClause = nil
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2209
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2213
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2226
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2227
		{
			yyVAL.expr = nil
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2230
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2231
		{
			yyVAL.lockingClause = nil
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2234
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2235
		{
			yyVAL.lockingClause = nil
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2239
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyDollar[1].lockingItem}}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2243
		{
			yyDollar[1].lockingClause.Locks = append(yyDollar[1].lockingClause.Locks, yyDollar[2].lockingItem)
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2250
		{
			yyVAL.lockingItem = LockingItem{Strength: yyDollar[1].str, LockedRels: yyDollar[2].identifiers, WaitPolicy: yyDollar[3].str}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2255
		{
			yyVAL.str = "update"
		}
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2256
		{
			yyVAL.str = "no key update"
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2257
		{
			yyVAL.str = "share"
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2258
		{
			yyVAL.str = "key share"
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2261
		{
			yyVAL.identifiers = yyDollar[2].identifiers
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2262
		{
			yyVAL.identifiers = nil
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2270
		{
			yyVAL.windowDefinitions = yyDollar[2].windowDefinitions
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2273
		{
			yyVAL.windowDefinitions = nil
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2277
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyDollar[1].windowDefinition}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2281
		{
			yyVAL.windowDefinitions = append(yyDollar[1].windowDefinitions, yyDollar[3].windowDefinition)
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2287
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyDollar[1].str, Specification: yyDollar[3].windowSpecification}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2293
		{
			spec := yyDollar[2].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2298
		{
			yyVAL.overClause = &OverClause{Name: yyDollar[2].str}
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2301
		{
			yyVAL.overClause = nil
		}
	case 389:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2305
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyDollar[2].str, PartitionClause: yyDollar[3].partitionClause, OrderClause: yyDollar[4].orderClause, FrameClause: yyDollar[5].frameClause}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2320
		{
			yyVAL.str = yyDollar[1].str
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2321
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2324
		{
			yyVAL.partitionClause = PartitionClause(yyDollar[3].fields)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2325
		{
			yyVAL.partitionClause = nil
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2336
		{
			yyDollar[2].frameClause.Mode = "range"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2341
		{
			yyDollar[2].frameClause.Mode = "rows"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2346
		{
			yyVAL.frameClause = nil
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2352
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[1].frameBound}
		}
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2356
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[2].frameBound, End: yyDollar[4].frameBound}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2367
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2371
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2375
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2379
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "preceding"}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2383
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "following"}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2391
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].str}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2395
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].str, Star: true}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2399
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[2].str, Only: true}
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2403
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[3].str, Only: true}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2411
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr, Offset: yyDollar[2].expr}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2415
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[2].expr, Offset: yyDollar[1].expr}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2419
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2423
		{
			yyVAL.limitClause = &LimitClause{Offset: yyDollar[1].expr}
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2430
		{
			yyVAL.limitClause = nil
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2434
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2439
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2445
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2450
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2455
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2457
		{
			yyVAL.expr = nil
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2462
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2471
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2472
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2473
		{
			yyVAL.expr = IntegerConst("1")
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2480
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2484
		{
			yyVAL.placeholder = 0
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2485
		{
			yyVAL.placeholder = 0
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2488
		{
			yyVAL.placeholder = 0
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2489
		{
			yyVAL.placeholder = 0
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2493
		{
			yyVAL.valuesClause = ValuesClause{yyDollar[2].valuesRow}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2497
		{
			yyVAL.valuesClause = append(yyDollar[1].valuesClause, yyDollar[3].valuesRow)
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2514
		{
			yyVAL.whereClause = &WhereClause{Expr: yyDollar[2].expr}
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2515
		{
			yyVAL.whereClause = nil
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2524
		{
			panic("TODO")
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2525
		{
			yyVAL.placeholder = nil
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2530
		{
			yyVAL.filterClause = &FilterClause{Expr: yyDollar[4].expr}
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2533
		{
			yyVAL.filterClause = nil
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2545
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyDollar[3].fields}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2549
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2553
		{
			yyVAL.row = Row{Exprs: append(yyDollar[2].fields, yyDollar[4].expr)}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2559
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyDollar[3].fields}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2563
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2569
		{
			yyVAL.row = Row{Exprs: append(yyDollar[2].fields, yyDollar[4].expr)}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2574
		{
			yyVAL.str = "any"
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2575
		{
			yyVAL.str = "some"
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2576
		{
			yyVAL.str = "all"
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2580
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2583
		{
			yyVAL.str = "+"
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2584
		{
			yyVAL.str = "-"
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2585
		{
			yyVAL.str = "*"
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2586
		{
			yyVAL.str = "/"
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2587
		{
			yyVAL.str = "%"
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2588
		{
			yyVAL.str = "^"
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2589
		{
			yyVAL.str = "<"
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2590
		{
			yyVAL.str = ">"
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2591
		{
			yyVAL.str = "="
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2592
		{
			yyVAL.str = "<="
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2593
		{
			yyVAL.str = ">="
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2594
		{
			yyVAL.str = "<>"
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2597
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2598
		{
			yyVAL.anyName = yyDollar[3].anyName
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2601
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2602
		{
			yyVAL.anyName = yyDollar[3].anyName
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2606
		{
			yyVAL.expr = yyDollar[1].sqlSelect
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2610
		{
			yyVAL.expr = ValuesRow(yyDollar[2].fields)
		}
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2623
		{
			yyVAL.expr = CaseExpr{CaseArg: yyDollar[2].expr, WhenClauses: yyDollar[3].whenClauses, Default: yyDollar[4].expr}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2630
		{
			yyVAL.whenClauses = []WhenClause{yyDollar[1].whenClause}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2634
		{
			yyVAL.whenClauses = append(yyDollar[1].whenClauses, yyDollar[2].whenClause)
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2640
		{
			yyVAL.whenClause = WhenClause{When: yyDollar[2].expr, Then: yyDollar[4].expr}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2645
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2646
		{
			yyVAL.expr = nil
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2649
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2650
		{
			yyVAL.expr = nil
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2654
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2658
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str, Indirection: yyDollar[2].indirection}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2666
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyDollar[2].str}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2670
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2674
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr}
		}
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2678
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr, UpperSubscript: yyDollar[4].expr}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2683
		{
			yyVAL.indirection = Indirection{yyDollar[1].indirectionEl}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2684
		{
			yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2687
		{
			yyVAL.indirection = nil
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2689
		{
			if yyDollar[1].indirection != nil {
				yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyDollar[2].indirectionEl}
			}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2699
		{
			yyVAL.placeholder = nil
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2703
		{
			yyVAL.placeholder = nil
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2715
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2716
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2720
		{
			yyVAL.valuesRow = ValuesRow{yyDollar[1].expr}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2724
		{
			yyVAL.valuesRow = append(yyDollar[1].valuesRow, yyDollar[3].expr)
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2735
		{
			yyVAL.valuesRow = yyDollar[2].valuesRow
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2746
		{
			yyVAL.fields = yyDollar[1].fields
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2747
		{
			yyVAL.fields = nil
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2750
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2752
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2758
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2762
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2767
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2781
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2785
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2798
		{
			yyVAL.str = yyDollar[1].str
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2830
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2832
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2837
		{
			yyVAL.str = yyDollar[1].str
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2840
		{
			yyVAL.str = yyDollar[1].str
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2853
		{
			yyVAL.str = yyDollar[1].str
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2857
		{
			panic("TODO")
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2867
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2871
		{
			yyVAL.expr = FloatConst(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2875
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2883
		{
			yyVAL.expr = ConstTypeExpr{Typename: PgType{Name: AnyName{yyDollar[1].str}}, Expr: yyDollar[2].expr}
		}
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2887
		{
			pgType := PgType{Name: AnyName{yyDollar[1].str}}

			/*
			 * We must use func_arg_list and opt_sort_clause in the
			 * production to avoid reduce/reduce conflicts, but we
			 * don't actually wish to allow NamedArgExpr in this
			 * context, nor ORDER BY.
			 */

			for _, arg := range yyDollar[3].funcArgs {
				if arg.Name != "" {
					yylex.Error("type modifier cannot have parameter name")
				}

				pgType.TypeMods = append(pgType.TypeMods, Expr(arg))
			}

			if yyDollar[4].orderClause != nil {
				yylex.Error("type modifier cannot have ORDER BY")
			}

			yyVAL.expr = ConstTypeExpr{Typename: pgType, Expr: yyDollar[6].expr}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2911
		{
			yyVAL.expr = ConstTypeExpr{Typename: yyDollar[1].pgType, Expr: yyDollar[2].expr}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2915
		{
			yyVAL.expr = ConstIntervalExpr{Value: yyDollar[2].expr, OptInterval: yyDollar[3].optInterval}
		}
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2919
		{
			yyVAL.expr = ConstIntervalExpr{Precision: yyDollar[3].iconst, Value: yyDollar[5].expr}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2923
		{
			yyVAL.expr = BoolConst(true)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2927
		{
			yyVAL.expr = BoolConst(false)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2931
		{
			yyVAL.expr = NullConst{}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2935
		{
			yyVAL.iconst = IntegerConst(yyDollar[1].str)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2936
		{
			yyVAL.expr = StringConst(yyDollar[1].str)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2939
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2940
		{
			yyVAL.expr = "+" + yyDollar[2].iconst
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2941
		{
			yyVAL.expr = "-" + yyDollar[2].iconst
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2980
		{
			yyVAL.str = yyDollar[1].str
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2981
		{
			yyVAL.str = yyDollar[1].str
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2982
		{
			yyVAL.str = yyDollar[1].str
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2983
		{
			yyVAL.str = yyDollar[1].str
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2984
		{
			yyVAL.str = yyDollar[1].str
		}
	}
	goto yystack /* stack new state and value */
}

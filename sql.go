//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	anyNames            []AnyName
	intoClause          *IntoClause
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	row                 Row
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerConst
	optArrayBounds      []IntegerConst
	optInterval         *OptInterval
	intervalSecond      *IntervalSecond
	subqueryOp          SubqueryOp
	extractList         *ExtractList
	overlayList         OverlayList
	positionList        *PositionList
	substrList          SubstrList
	trimList            TrimList
	xmlAttributes       XmlAttributes
	xmlAttributeEls     []XmlAttributeEl
	xmlAttributeEl      XmlAttributeEl
	xmlExistsArgument   XmlExistsArgument
	xmlRootVersion      XmlRootVersion
}

const IDENT = 57346
const FCONST = 57347
const SCONST = 57348
const BCONST = 57349
const XCONST = 57350
const Op = 57351
const ICONST = 57352
const PARAM = 57353
const TYPECAST = 57354
const DOT_DOT = 57355
const COLON_EQUALS = 57356
const EQUALS_GREATER = 57357
const LESS_EQUALS = 57358
const GREATER_EQUALS = 57359
const NOT_EQUALS = 57360
const ABORT_P = 57361
const ABSOLUTE_P = 57362
const ACCESS = 57363
const ACTION = 57364
const ADD_P = 57365
const ADMIN = 57366
const AFTER = 57367
const AGGREGATE = 57368
const ALL = 57369
const ALSO = 57370
const ALTER = 57371
const ALWAYS = 57372
const ANALYSE = 57373
const ANALYZE = 57374
const AND = 57375
const ANY = 57376
const ARRAY = 57377
const AS = 57378
const ASC = 57379
const ASSERTION = 57380
const ASSIGNMENT = 57381
const ASYMMETRIC = 57382
const AT = 57383
const ATTRIBUTE = 57384
const AUTHORIZATION = 57385
const BACKWARD = 57386
const BEFORE = 57387
const BEGIN_P = 57388
const BETWEEN = 57389
const BIGINT = 57390
const BINARY = 57391
const BIT = 57392
const BOOLEAN_P = 57393
const BOTH = 57394
const BY = 57395
const CACHE = 57396
const CALLED = 57397
const CASCADE = 57398
const CASCADED = 57399
const CASE = 57400
const CAST = 57401
const CATALOG_P = 57402
const CHAIN = 57403
const CHAR_P = 57404
const CHARACTER = 57405
const CHARACTERISTICS = 57406
const CHECK = 57407
const CHECKPOINT = 57408
const CLASS = 57409
const CLOSE = 57410
const CLUSTER = 57411
const COALESCE = 57412
const COLLATE = 57413
const COLLATION = 57414
const COLUMN = 57415
const COMMENT = 57416
const COMMENTS = 57417
const COMMIT = 57418
const COMMITTED = 57419
const CONCURRENTLY = 57420
const CONFIGURATION = 57421
const CONFLICT = 57422
const CONNECTION = 57423
const CONSTRAINT = 57424
const CONSTRAINTS = 57425
const CONTENT_P = 57426
const CONTINUE_P = 57427
const CONVERSION_P = 57428
const COPY = 57429
const COST = 57430
const CREATE = 57431
const CROSS = 57432
const CSV = 57433
const CUBE = 57434
const CURRENT_P = 57435
const CURRENT_CATALOG = 57436
const CURRENT_DATE = 57437
const CURRENT_ROLE = 57438
const CURRENT_SCHEMA = 57439
const CURRENT_TIME = 57440
const CURRENT_TIMESTAMP = 57441
const CURRENT_USER = 57442
const CURSOR = 57443
const CYCLE = 57444
const DATA_P = 57445
const DATABASE = 57446
const DAY_P = 57447
const DEALLOCATE = 57448
const DEC = 57449
const DECIMAL_P = 57450
const DECLARE = 57451
const DEFAULT = 57452
const DEFAULTS = 57453
const DEFERRABLE = 57454
const DEFERRED = 57455
const DEFINER = 57456
const DELETE_P = 57457
const DELIMITER = 57458
const DELIMITERS = 57459
const DESC = 57460
const DICTIONARY = 57461
const DISABLE_P = 57462
const DISCARD = 57463
const DISTINCT = 57464
const DO = 57465
const DOCUMENT_P = 57466
const DOMAIN_P = 57467
const DOUBLE_P = 57468
const DROP = 57469
const EACH = 57470
const ELSE = 57471
const ENABLE_P = 57472
const ENCODING = 57473
const ENCRYPTED = 57474
const END_P = 57475
const ENUM_P = 57476
const ESCAPE = 57477
const EVENT = 57478
const EXCEPT = 57479
const EXCLUDE = 57480
const EXCLUDING = 57481
const EXCLUSIVE = 57482
const EXECUTE = 57483
const EXISTS = 57484
const EXPLAIN = 57485
const EXTENSION = 57486
const EXTERNAL = 57487
const EXTRACT = 57488
const FALSE_P = 57489
const FAMILY = 57490
const FETCH = 57491
const FILTER = 57492
const FIRST_P = 57493
const FLOAT_P = 57494
const FOLLOWING = 57495
const FOR = 57496
const FORCE = 57497
const FOREIGN = 57498
const FORWARD = 57499
const FREEZE = 57500
const FROM = 57501
const FULL = 57502
const FUNCTION = 57503
const FUNCTIONS = 57504
const GLOBAL = 57505
const GRANT = 57506
const GRANTED = 57507
const GREATEST = 57508
const GROUP_P = 57509
const GROUPING = 57510
const HANDLER = 57511
const HAVING = 57512
const HEADER_P = 57513
const HOLD = 57514
const HOUR_P = 57515
const IDENTITY_P = 57516
const IF_P = 57517
const ILIKE = 57518
const IMMEDIATE = 57519
const IMMUTABLE = 57520
const IMPLICIT_P = 57521
const IMPORT_P = 57522
const IN_P = 57523
const INCLUDING = 57524
const INCREMENT = 57525
const INDEX = 57526
const INDEXES = 57527
const INHERIT = 57528
const INHERITS = 57529
const INITIALLY = 57530
const INLINE_P = 57531
const INNER_P = 57532
const INOUT = 57533
const INPUT_P = 57534
const INSENSITIVE = 57535
const INSERT = 57536
const INSTEAD = 57537
const INT_P = 57538
const INTEGER = 57539
const INTERSECT = 57540
const INTERVAL = 57541
const INTO = 57542
const INVOKER = 57543
const IS = 57544
const ISNULL = 57545
const ISOLATION = 57546
const JOIN = 57547
const KEY = 57548
const LABEL = 57549
const LANGUAGE = 57550
const LARGE_P = 57551
const LAST_P = 57552
const LATERAL_P = 57553
const LEADING = 57554
const LEAKPROOF = 57555
const LEAST = 57556
const LEFT = 57557
const LEVEL = 57558
const LIKE = 57559
const LIMIT = 57560
const LISTEN = 57561
const LOAD = 57562
const LOCAL = 57563
const LOCALTIME = 57564
const LOCALTIMESTAMP = 57565
const LOCATION = 57566
const LOCK_P = 57567
const LOCKED = 57568
const LOGGED = 57569
const MAPPING = 57570
const MATCH = 57571
const MATERIALIZED = 57572
const MAXVALUE = 57573
const MINUTE_P = 57574
const MINVALUE = 57575
const MODE = 57576
const MONTH_P = 57577
const MOVE = 57578
const NAME_P = 57579
const NAMES = 57580
const NATIONAL = 57581
const NATURAL = 57582
const NCHAR = 57583
const NEXT = 57584
const NO = 57585
const NONE = 57586
const NOT = 57587
const NOTHING = 57588
const NOTIFY = 57589
const NOTNULL = 57590
const NOWAIT = 57591
const NULL_P = 57592
const NULLIF = 57593
const NULLS_P = 57594
const NUMERIC = 57595
const OBJECT_P = 57596
const OF = 57597
const OFF = 57598
const OFFSET = 57599
const OIDS = 57600
const ON = 57601
const ONLY = 57602
const OPERATOR = 57603
const OPTION = 57604
const OPTIONS = 57605
const OR = 57606
const ORDER = 57607
const ORDINALITY = 57608
const OUT_P = 57609
const OUTER_P = 57610
const OVER = 57611
const OVERLAPS = 57612
const OVERLAY = 57613
const OWNED = 57614
const OWNER = 57615
const PARSER = 57616
const PARTIAL = 57617
const PARTITION = 57618
const PASSING = 57619
const PASSWORD = 57620
const PLACING = 57621
const PLANS = 57622
const POLICY = 57623
const POSITION = 57624
const PRECEDING = 57625
const PRECISION = 57626
const PRESERVE = 57627
const PREPARE = 57628
const PREPARED = 57629
const PRIMARY = 57630
const PRIOR = 57631
const PRIVILEGES = 57632
const PROCEDURAL = 57633
const PROCEDURE = 57634
const PROGRAM = 57635
const QUOTE = 57636
const RANGE = 57637
const READ = 57638
const REAL = 57639
const REASSIGN = 57640
const RECHECK = 57641
const RECURSIVE = 57642
const REF = 57643
const REFERENCES = 57644
const REFRESH = 57645
const REINDEX = 57646
const RELATIVE_P = 57647
const RELEASE = 57648
const RENAME = 57649
const REPEATABLE = 57650
const REPLACE = 57651
const REPLICA = 57652
const RESET = 57653
const RESTART = 57654
const RESTRICT = 57655
const RETURNING = 57656
const RETURNS = 57657
const REVOKE = 57658
const RIGHT = 57659
const ROLE = 57660
const ROLLBACK = 57661
const ROLLUP = 57662
const ROW = 57663
const ROWS = 57664
const RULE = 57665
const SAVEPOINT = 57666
const SCHEMA = 57667
const SCROLL = 57668
const SEARCH = 57669
const SECOND_P = 57670
const SECURITY = 57671
const SELECT = 57672
const SEQUENCE = 57673
const SEQUENCES = 57674
const SERIALIZABLE = 57675
const SERVER = 57676
const SESSION = 57677
const SESSION_USER = 57678
const SET = 57679
const SETS = 57680
const SETOF = 57681
const SHARE = 57682
const SHOW = 57683
const SIMILAR = 57684
const SIMPLE = 57685
const SKIP = 57686
const SMALLINT = 57687
const SNAPSHOT = 57688
const SOME = 57689
const SQL_P = 57690
const STABLE = 57691
const STANDALONE_P = 57692
const START = 57693
const STATEMENT = 57694
const STATISTICS = 57695
const STDIN = 57696
const STDOUT = 57697
const STORAGE = 57698
const STRICT_P = 57699
const STRIP_P = 57700
const SUBSTRING = 57701
const SYMMETRIC = 57702
const SYSID = 57703
const SYSTEM_P = 57704
const TABLE = 57705
const TABLES = 57706
const TABLESAMPLE = 57707
const TABLESPACE = 57708
const TEMP = 57709
const TEMPLATE = 57710
const TEMPORARY = 57711
const TEXT_P = 57712
const THEN = 57713
const TIME = 57714
const TIMESTAMP = 57715
const TO = 57716
const TRAILING = 57717
const TRANSACTION = 57718
const TRANSFORM = 57719
const TREAT = 57720
const TRIGGER = 57721
const TRIM = 57722
const TRUE_P = 57723
const TRUNCATE = 57724
const TRUSTED = 57725
const TYPE_P = 57726
const TYPES_P = 57727
const UNBOUNDED = 57728
const UNCOMMITTED = 57729
const UNENCRYPTED = 57730
const UNION = 57731
const UNIQUE = 57732
const UNKNOWN = 57733
const UNLISTEN = 57734
const UNLOGGED = 57735
const UNTIL = 57736
const UPDATE = 57737
const USER = 57738
const USING = 57739
const VACUUM = 57740
const VALID = 57741
const VALIDATE = 57742
const VALIDATOR = 57743
const VALUE_P = 57744
const VALUES = 57745
const VARCHAR = 57746
const VARIADIC = 57747
const VARYING = 57748
const VERBOSE = 57749
const VERSION_P = 57750
const VIEW = 57751
const VIEWS = 57752
const VOLATILE = 57753
const WHEN = 57754
const WHERE = 57755
const WHITESPACE_P = 57756
const WINDOW = 57757
const WITH = 57758
const WITHIN = 57759
const WITHOUT = 57760
const WORK = 57761
const WRAPPER = 57762
const WRITE = 57763
const XML_P = 57764
const XMLATTRIBUTES = 57765
const XMLCONCAT = 57766
const XMLELEMENT = 57767
const XMLEXISTS = 57768
const XMLFOREST = 57769
const XMLPARSE = 57770
const XMLPI = 57771
const XMLROOT = 57772
const XMLSERIALIZE = 57773
const YEAR_P = 57774
const YES_P = 57775
const ZONE = 57776
const NOT_LA = 57777
const NULLS_LA = 57778
const WITH_LA = 57779
const OP = 57780
const POSTFIXOP = 57781
const UMINUS = 57782

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"';'",
	"','",
	"':'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:3477

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 330,
	455, 330,
	-2, 338,
	-1, 5,
	1, 333,
	453, 333,
	455, 333,
	-2, 337,
	-1, 13,
	1, 334,
	453, 334,
	455, 334,
	-2, 366,
	-1, 410,
	6, 542,
	14, 542,
	15, 542,
	452, 542,
	-2, 539,
	-1, 411,
	6, 543,
	14, 543,
	15, 543,
	452, 543,
	-2, 540,
	-1, 419,
	6, 82,
	452, 82,
	-2, 839,
	-1, 431,
	6, 875,
	14, 875,
	15, 875,
	452, 875,
	-2, 223,
	-1, 452,
	6, 46,
	-2, 823,
	-1, 453,
	6, 75,
	452, 75,
	-2, 824,
	-1, 454,
	6, 53,
	-2, 825,
	-1, 455,
	6, 75,
	63, 75,
	452, 75,
	-2, 826,
	-1, 456,
	6, 75,
	63, 75,
	452, 75,
	-2, 827,
	-1, 457,
	6, 42,
	-2, 829,
	-1, 458,
	6, 42,
	-2, 830,
	-1, 459,
	6, 55,
	-2, 833,
	-1, 460,
	6, 43,
	-2, 837,
	-1, 461,
	6, 44,
	-2, 838,
	-1, 463,
	6, 75,
	63, 75,
	452, 75,
	-2, 842,
	-1, 464,
	6, 42,
	-2, 845,
	-1, 465,
	6, 47,
	-2, 850,
	-1, 466,
	6, 45,
	-2, 853,
	-1, 467,
	6, 85,
	-2, 855,
	-1, 468,
	6, 85,
	-2, 856,
	-1, 469,
	6, 70,
	63, 70,
	452, 70,
	-2, 860,
	-1, 533,
	321, 436,
	322, 436,
	-2, 102,
	-1, 577,
	27, 458,
	34, 458,
	347, 458,
	-2, 472,
	-1, 588,
	137, 338,
	149, 338,
	154, 338,
	198, 338,
	218, 338,
	257, 338,
	265, 338,
	389, 338,
	-2, 194,
	-1, 598,
	6, 520,
	452, 520,
	-2, 487,
	-1, 774,
	1, 785,
	137, 785,
	149, 785,
	154, 785,
	159, 785,
	167, 785,
	170, 785,
	198, 785,
	218, 785,
	257, 785,
	265, 785,
	389, 785,
	413, 785,
	415, 785,
	450, 785,
	453, 785,
	454, 785,
	455, 785,
	-2, 358,
	-1, 775,
	1, 783,
	137, 783,
	149, 783,
	154, 783,
	159, 783,
	167, 783,
	170, 783,
	198, 783,
	218, 783,
	257, 783,
	265, 783,
	389, 783,
	413, 783,
	415, 783,
	450, 783,
	453, 783,
	454, 783,
	455, 783,
	-2, 358,
	-1, 778,
	1, 799,
	137, 799,
	149, 799,
	154, 799,
	159, 799,
	167, 799,
	170, 799,
	198, 799,
	218, 799,
	257, 799,
	265, 799,
	389, 799,
	413, 799,
	415, 799,
	450, 799,
	453, 799,
	454, 799,
	455, 799,
	-2, 358,
	-1, 826,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 114,
	-1, 827,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 115,
	-1, 828,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 116,
	-1, 829,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 117,
	-1, 830,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 118,
	-1, 831,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 119,
	-1, 835,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 127,
	-1, 841,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 131,
	-1, 890,
	270, 450,
	-2, 453,
	-1, 899,
	14, 9,
	15, 9,
	-2, 519,
	-1, 1023,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 129,
	-1, 1024,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 133,
	-1, 1030,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 135,
	-1, 1056,
	270, 449,
	-2, 452,
	-1, 1184,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 128,
	-1, 1187,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 137,
	-1, 1190,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 132,
	-1, 1194,
	202, 0,
	203, 0,
	248, 0,
	-2, 150,
	-1, 1201,
	27, 284,
	34, 284,
	347, 284,
	-2, 473,
	-1, 1206,
	270, 451,
	-2, 454,
	-1, 1243,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 174,
	-1, 1244,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 175,
	-1, 1245,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 176,
	-1, 1246,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 177,
	-1, 1247,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 178,
	-1, 1248,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 179,
	-1, 1308,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 130,
	-1, 1309,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 134,
	-1, 1313,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 136,
	-1, 1314,
	202, 0,
	203, 0,
	248, 0,
	-2, 151,
	-1, 1318,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 154,
	-1, 1319,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 156,
	-1, 1371,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 138,
	-1, 1372,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 155,
	-1, 1373,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 157,
	-1, 1379,
	202, 0,
	-2, 183,
	-1, 1407,
	202, 0,
	-2, 184,
	-1, 1423,
	47, 0,
	176, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 822,
}

const yyNprod = 970
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 19287

var yyAct = [...]int{

	378, 1422, 1397, 395, 1075, 1421, 1362, 959, 1358, 1195,
	783, 14, 1290, 659, 29, 873, 1115, 951, 470, 32,
	396, 398, 653, 1159, 960, 896, 579, 996, 414, 1114,
	1196, 661, 29, 1012, 647, 998, 910, 892, 854, 542,
	1018, 851, 508, 758, 633, 771, 1000, 900, 637, 962,
	381, 372, 594, 948, 1163, 544, 906, 1436, 903, 392,
	1435, 1430, 1091, 18, 1134, 504, 1101, 1102, 1103, 545,
	1050, 1429, 387, 4, 1050, 1428, 1409, 1415, 1317, 1317,
	20, 1399, 1386, 1312, 577, 1050, 1384, 547, 1374, 1385,
	1352, 1317, 1255, 577, 1339, 403, 547, 1050, 1321, 1316,
	1283, 1050, 1317, 1050, 1278, 1268, 1199, 1279, 1269, 1050,
	1150, 1141, 1133, 1050, 1050, 1134, 549, 1204, 1129, 1128,
	577, 1050, 1050, 547, 1127, 549, 904, 1050, 1126, 1056,
	1052, 1050, 1050, 1051, 748, 1053, 577, 747, 1050, 547,
	991, 867, 766, 559, 560, 561, 548, 506, 546, 25,
	369, 505, 549, 506, 638, 548, 1180, 505, 8, 638,
	563, 1019, 1180, 412, 12, 1055, 1019, 649, 549, 1165,
	1420, 1394, 1391, 649, 572, 1357, 547, 1347, 1340, 1331,
	1326, 1325, 548, 1324, 1306, 905, 648, 1270, 902, 418,
	1265, 10, 648, 1264, 1263, 1210, 1201, 1147, 548, 1146,
	1143, 646, 864, 1142, 1164, 549, 1122, 650, 1402, 1113,
	1310, 1090, 1087, 411, 1085, 577, 1083, 1082, 547, 1191,
	1081, 1080, 1070, 1062, 31, 1054, 981, 595, 369, 7,
	654, 11, 368, 1077, 1400, 548, 413, 413, 1387, 1381,
	1337, 596, 31, 412, 1091, 1193, 1186, 549, 1156, 1112,
	1305, 1069, 1105, 1046, 1058, 1044, 1039, 856, 638, 641,
	577, 968, 915, 547, 914, 350, 27, 559, 560, 561,
	1091, 862, 656, 631, 630, 629, 628, 548, 627, 626,
	7, 907, 625, 624, 563, 623, 622, 1003, 621, 620,
	619, 618, 549, 392, 617, 501, 1091, 616, 572, 615,
	1101, 1102, 1103, 567, 614, 613, 612, 611, 573, 547,
	610, 1107, 609, 597, 7, 1369, 1368, 1311, 547, 1091,
	1175, 595, 548, 1176, 500, 546, 997, 649, 903, 569,
	570, 1145, 1144, 865, 1021, 1359, 578, 577, 549, 1349,
	547, 1185, 1348, 999, 565, 578, 648, 549, 1414, 1078,
	911, 1073, 1281, 634, 1432, 985, 1393, 591, 521, 472,
	1068, 1067, 1066, 1065, 1025, 842, 1367, 975, 548, 549,
	974, 819, 578, 1004, 562, 571, 1009, 548, 1008, 1007,
	853, 1006, 355, 352, 357, 901, 17, 503, 578, 853,
	356, 564, 1392, 762, 860, 519, 904, 5, 351, 548,
	751, 858, 589, 521, 978, 1016, 1220, 907, 1440, 1404,
	759, 760, 1439, 1431, 1388, 632, 1346, 1132, 6, 1329,
	1162, 586, 1152, 600, 601, 602, 913, 567, 18, 749,
	498, 1334, 573, 1336, 360, 538, 1405, 535, 538, 538,
	519, 965, 359, 471, 957, 528, 1217, 16, 517, 1216,
	990, 750, 1295, 569, 570, 905, 545, 588, 902, 1294,
	16, 592, 593, 1029, 1380, 359, 1291, 578, 565, 568,
	1160, 359, 1333, 1116, 474, 473, 354, 1192, 1086, 1038,
	772, 1250, 1157, 1253, 1117, 934, 1105, 608, 763, 1098,
	1099, 1100, 520, 1092, 1093, 1094, 1095, 1096, 1097, 571,
	635, 636, 907, 651, 1366, 1218, 29, 639, 644, 516,
	562, 358, 578, 645, 18, 564, 375, 354, 550, 551,
	552, 553, 554, 555, 665, 664, 562, 550, 551, 552,
	553, 554, 555, 562, 358, 607, 529, 520, 1413, 29,
	358, 1158, 1438, 1225, 562, 1107, 654, 518, 755, 29,
	360, 907, 818, 655, 550, 551, 552, 553, 554, 555,
	415, 547, 566, 964, 1335, 363, 556, 557, 558, 658,
	550, 551, 552, 553, 554, 555, 791, 23, 782, 360,
	1390, 1412, 562, 562, 562, 562, 562, 1378, 562, 578,
	549, 1178, 518, 568, 665, 664, 756, 757, 781, 547,
	875, 907, 1416, 963, 1251, 754, 562, 861, 1345, 552,
	553, 554, 555, 868, 1252, 889, 1013, 938, 392, 652,
	548, 1091, 1292, 874, 908, 643, 642, 367, 899, 1444,
	916, 917, 918, 919, 911, 943, 930, 863, 15, 953,
	954, 955, 956, 790, 349, 371, 855, 1091, 872, 550,
	551, 552, 553, 554, 555, 901, 969, 658, 548, 547,
	364, 413, 970, 412, 658, 1063, 1064, 973, 497, 1443,
	499, 976, 24, 977, 980, 1092, 1093, 1094, 1095, 1096,
	1097, 967, 603, 599, 1302, 1419, 566, 971, 972, 1297,
	556, 557, 558, 417, 550, 551, 552, 553, 554, 555,
	1027, 979, 982, 1094, 1095, 1096, 1097, 416, 983, 852,
	1059, 1035, 402, 1037, 859, 787, 31, 13, 496, 663,
	788, 839, 785, 1098, 1099, 1100, 401, 1092, 1093, 1094,
	1095, 1096, 1097, 19, 3, 512, 1033, 789, 515, 523,
	550, 551, 552, 553, 554, 555, 522, 562, 362, 31,
	666, 514, 1351, 598, 555, 1097, 1280, 1275, 1131, 31,
	537, 810, 31, 537, 537, 365, 366, 1342, 574, 657,
	817, 550, 551, 552, 553, 554, 555, 988, 989, 382,
	869, 536, 1403, 29, 539, 540, 1328, 1228, 912, 663,
	984, 1396, 409, 386, 994, 1014, 986, 408, 391, 390,
	507, 909, 765, 1071, 604, 385, 992, 640, 383, 753,
	31, 1361, 780, 791, 993, 857, 580, 898, 1048, 534,
	764, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 761, 1015, 1031,
	1017, 651, 562, 361, 1036, 353, 513, 639, 531, 645,
	837, 752, 938, 938, 530, 840, 524, 636, 635, 1020,
	511, 644, 941, 933, 1088, 931, 875, 922, 921, 26,
	1107, 606, 562, 527, 1042, 768, 541, 533, 1045, 1028,
	790, 1026, 773, 1047, 1001, 1418, 21, 22, 370, 874,
	9, 836, 2, 1, 0, 0, 0, 0, 562, 0,
	0, 923, 0, 413, 1057, 871, 0, 803, 0, 0,
	0, 0, 0, 855, 0, 0, 0, 1076, 0, 0,
	0, 562, 899, 899, 0, 0, 0, 373, 373, 588,
	1043, 1060, 1061, 562, 0, 1104, 0, 938, 938, 938,
	0, 0, 0, 562, 0, 562, 1072, 0, 0, 0,
	562, 0, 0, 562, 0, 0, 0, 1111, 0, 0,
	0, 0, 562, 0, 0, 0, 0, 562, 1124, 0,
	1032, 0, 0, 0, 789, 0, 665, 664, 0, 0,
	1034, 0, 1148, 0, 665, 664, 1140, 0, 562, 1130,
	0, 802, 0, 31, 0, 29, 0, 1137, 810, 1119,
	1120, 1121, 926, 562, 0, 0, 0, 29, 0, 29,
	0, 0, 588, 0, 29, 1149, 838, 0, 0, 0,
	0, 1155, 805, 804, 562, 562, 0, 938, 938, 0,
	0, 562, 0, 1182, 0, 0, 0, 1179, 665, 664,
	0, 1104, 1104, 0, 0, 0, 1011, 0, 1177, 0,
	562, 0, 1092, 1093, 1094, 1095, 1096, 1097, 0, 875,
	0, 0, 0, 1005, 1202, 0, 1010, 1181, 791, 0,
	927, 1209, 1212, 1213, 0, 562, 31, 0, 0, 0,
	562, 1229, 874, 0, 1211, 0, 0, 899, 0, 0,
	1223, 0, 1224, 938, 938, 938, 938, 938, 938, 938,
	938, 938, 938, 938, 938, 938, 1208, 938, 786, 1104,
	1104, 1104, 0, 791, 1205, 1232, 0, 588, 1234, 0,
	791, 0, 1236, 1219, 1221, 1222, 0, 31, 0, 928,
	1256, 1258, 925, 935, 0, 790, 0, 562, 0, 0,
	562, 1266, 0, 958, 803, 1259, 0, 791, 0, 1262,
	0, 0, 562, 0, 665, 664, 0, 0, 0, 1273,
	875, 0, 562, 0, 0, 0, 0, 1274, 0, 0,
	1286, 663, 1289, 1287, 29, 29, 29, 29, 1284, 663,
	790, 1285, 0, 874, 562, 562, 0, 790, 562, 1104,
	1104, 562, 31, 0, 1307, 562, 1303, 1304, 0, 665,
	664, 562, 0, 1315, 0, 31, 0, 0, 562, 1293,
	0, 0, 1296, 0, 790, 562, 562, 31, 0, 31,
	0, 0, 791, 0, 31, 929, 0, 562, 802, 789,
	0, 562, 1323, 663, 562, 0, 562, 0, 1104, 1104,
	1104, 1104, 1104, 1104, 1104, 1104, 1104, 1104, 1104, 1104,
	1104, 1332, 0, 810, 0, 1104, 509, 0, 1154, 805,
	804, 562, 562, 0, 525, 0, 532, 0, 562, 31,
	1168, 0, 1169, 543, 789, 0, 0, 1174, 0, 0,
	0, 789, 581, 582, 583, 584, 585, 1343, 0, 790,
	587, 31, 0, 1355, 1170, 1171, 1172, 1173, 810, 0,
	1356, 0, 0, 0, 0, 810, 0, 0, 789, 562,
	562, 791, 0, 605, 562, 562, 0, 0, 0, 562,
	562, 0, 0, 562, 0, 0, 1370, 0, 562, 924,
	0, 0, 810, 0, 938, 0, 0, 1040, 1041, 562,
	1377, 1364, 1365, 0, 0, 786, 791, 1382, 1375, 663,
	0, 562, 0, 0, 562, 0, 0, 0, 0, 0,
	0, 562, 0, 1398, 562, 1395, 791, 0, 935, 935,
	31, 0, 562, 562, 562, 0, 0, 0, 790, 0,
	1104, 938, 0, 789, 31, 31, 31, 31, 0, 0,
	0, 1408, 0, 0, 663, 1411, 1406, 0, 0, 803,
	0, 0, 562, 1410, 0, 0, 1417, 810, 1104, 0,
	791, 1427, 746, 790, 0, 0, 0, 0, 1433, 1398,
	0, 1434, 1108, 1109, 1110, 1437, 0, 562, 0, 0,
	0, 0, 0, 790, 0, 0, 0, 1298, 1299, 1300,
	1301, 0, 0, 0, 803, 0, 1445, 0, 0, 0,
	0, 803, 373, 935, 935, 935, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 789, 841, 0, 0, 0, 790, 803, 0,
	0, 392, 0, 802, 1091, 0, 0, 0, 1101, 1102,
	1103, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 897, 0, 789, 0, 0,
	0, 0, 1188, 1189, 805, 804, 0, 0, 0, 920,
	0, 932, 0, 942, 944, 949, 952, 789, 802, 0,
	0, 810, 0, 961, 0, 802, 966, 577, 0, 0,
	547, 0, 0, 935, 935, 0, 0, 0, 0, 0,
	0, 810, 0, 803, 0, 0, 0, 0, 0, 805,
	804, 0, 802, 0, 0, 0, 805, 804, 0, 549,
	0, 789, 577, 31, 0, 547, 0, 0, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 0, 1254, 805, 804, 810, 0, 0, 0, 548,
	786, 0, 0, 0, 549, 0, 0, 0, 0, 935,
	935, 935, 935, 935, 935, 935, 935, 935, 935, 935,
	935, 935, 848, 935, 850, 0, 0, 0, 0, 31,
	0, 0, 0, 0, 548, 0, 0, 802, 0, 0,
	0, 0, 803, 0, 0, 786, 0, 846, 0, 1271,
	876, 0, 786, 509, 0, 0, 0, 886, 887, 888,
	987, 0, 0, 1022, 0, 0, 0, 0, 805, 804,
	0, 0, 543, 0, 1105, 0, 0, 803, 1002, 786,
	0, 0, 577, 0, 0, 547, 0, 0, 0, 559,
	560, 561, 0, 0, 0, 0, 0, 803, 0, 0,
	577, 0, 0, 547, 0, 0, 563, 559, 560, 561,
	0, 0, 0, 0, 549, 577, 0, 0, 547, 0,
	572, 0, 0, 0, 563, 0, 802, 0, 0, 0,
	0, 0, 549, 1107, 0, 0, 0, 0, 572, 0,
	0, 803, 1023, 1024, 548, 844, 0, 549, 1030, 0,
	843, 0, 0, 572, 786, 849, 0, 805, 804, 0,
	0, 802, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1049, 0, 392, 0, 548, 1091, 0,
	0, 802, 1101, 1102, 1103, 0, 0, 0, 0, 578,
	0, 0, 805, 804, 392, 0, 0, 1091, 0, 897,
	897, 1101, 1102, 1103, 0, 0, 0, 392, 0, 0,
	1091, 0, 805, 804, 1101, 1102, 1103, 1074, 1198, 1379,
	0, 1079, 0, 0, 578, 802, 577, 0, 0, 547,
	0, 1197, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 0, 0, 786, 0, 587, 0, 0, 0, 567,
	935, 949, 949, 949, 573, 0, 805, 804, 549, 0,
	0, 0, 0, 1389, 572, 0, 1407, 567, 1136, 0,
	0, 0, 573, 1139, 0, 569, 570, 0, 786, 0,
	0, 845, 567, 0, 0, 0, 0, 573, 548, 1151,
	565, 847, 0, 569, 570, 0, 0, 935, 786, 0,
	0, 0, 995, 0, 0, 1161, 0, 0, 565, 0,
	0, 1098, 1099, 1100, 0, 1092, 1093, 1094, 1095, 1096,
	1097, 571, 0, 565, 0, 0, 0, 1183, 1184, 0,
	0, 1187, 0, 0, 578, 1190, 0, 564, 0, 571,
	0, 0, 786, 0, 1194, 0, 0, 1106, 0, 0,
	1200, 0, 578, 0, 0, 564, 1207, 0, 0, 0,
	0, 0, 0, 0, 897, 0, 0, 578, 1105, 1214,
	1215, 550, 551, 552, 553, 554, 555, 0, 0, 1226,
	0, 0, 0, 0, 1230, 0, 0, 1105, 0, 0,
	0, 0, 1233, 567, 0, 1235, 0, 0, 573, 0,
	1105, 0, 0, 0, 0, 0, 550, 551, 552, 553,
	554, 555, 0, 0, 0, 568, 0, 0, 0, 569,
	570, 0, 1260, 1261, 0, 0, 0, 1107, 0, 0,
	0, 1267, 0, 568, 565, 0, 0, 0, 0, 0,
	961, 0, 0, 0, 0, 0, 1107, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 0, 0, 0, 571, 0, 0, 1002, 0,
	0, 1002, 0, 0, 0, 0, 0, 0, 578, 0,
	883, 884, 885, 0, 877, 878, 879, 880, 881, 882,
	0, 1308, 1309, 0, 0, 0, 0, 1313, 1314, 0,
	0, 0, 0, 1318, 1319, 0, 0, 0, 566, 0,
	1322, 0, 556, 557, 558, 0, 550, 551, 552, 553,
	554, 555, 0, 0, 0, 0, 566, 0, 0, 1138,
	556, 557, 558, 1327, 550, 551, 552, 553, 554, 555,
	0, 566, 0, 0, 0, 0, 0, 1125, 0, 550,
	551, 552, 553, 554, 555, 0, 0, 0, 0, 568,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1360, 1363, 0,
	1002, 1002, 0, 0, 0, 1098, 1099, 1100, 0, 1092,
	1093, 1094, 1095, 1096, 1097, 0, 1371, 1372, 1373, 0,
	0, 0, 0, 0, 1098, 1099, 1100, 0, 1092, 1093,
	1094, 1095, 1096, 1097, 0, 0, 0, 1098, 1099, 1100,
	0, 1092, 1093, 1094, 1095, 1096, 1097, 0, 0, 0,
	0, 0, 566, 0, 0, 0, 556, 557, 558, 0,
	550, 551, 552, 553, 554, 555, 0, 0, 0, 0,
	0, 0, 0, 1401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1363, 0, 0, 0, 0,
	1426, 1426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 33, 34, 35, 36, 37, 38, 39, 40, 669,
	41, 42, 43, 670, 671, 672, 673, 674, 675, 676,
	44, 45, 677, 46, 47, 475, 48, 49, 50, 301,
	302, 476, 303, 304, 678, 51, 52, 53, 54, 55,
	679, 680, 56, 57, 305, 306, 58, 681, 59, 60,
	61, 62, 307, 682, 667, 683, 63, 64, 65, 66,
	477, 67, 68, 69, 684, 70, 71, 72, 73, 74,
	75, 685, 478, 76, 77, 78, 686, 687, 688, 668,
	689, 690, 691, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 692, 86, 693, 87, 88, 89, 90, 91,
	694, 92, 93, 94, 695, 696, 95, 96, 97, 98,
	99, 697, 100, 101, 102, 698, 103, 104, 105, 699,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 700,
	113, 701, 114, 115, 312, 116, 702, 117, 703, 118,
	479, 704, 480, 119, 120, 121, 705, 122, 313, 706,
	314, 123, 707, 124, 125, 126, 127, 128, 481, 129,
	130, 131, 132, 708, 133, 134, 135, 136, 137, 138,
	709, 139, 482, 315, 140, 141, 142, 143, 316, 317,
	710, 318, 711, 144, 483, 484, 145, 485, 146, 147,
	148, 149, 150, 712, 713, 151, 319, 486, 152, 487,
	714, 153, 154, 155, 715, 716, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 488, 321, 171, 172, 322, 717, 173, 174,
	489, 175, 718, 323, 176, 324, 177, 178, 179, 719,
	180, 720, 721, 181, 182, 183, 722, 723, 184, 325,
	490, 185, 491, 326, 186, 187, 188, 189, 190, 191,
	192, 724, 193, 194, 327, 195, 328, 198, 196, 197,
	725, 199, 200, 201, 202, 203, 204, 205, 206, 329,
	207, 208, 209, 210, 726, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 727, 222, 223, 492,
	224, 225, 226, 330, 227, 228, 229, 230, 231, 232,
	233, 234, 728, 235, 236, 237, 238, 239, 729, 240,
	241, 331, 242, 243, 493, 244, 245, 332, 246, 730,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 731, 258, 259, 732, 260, 494, 261, 262,
	263, 264, 265, 733, 334, 335, 734, 735, 266, 267,
	336, 268, 337, 736, 269, 270, 271, 272, 273, 274,
	275, 737, 738, 276, 277, 278, 279, 280, 739, 740,
	281, 282, 283, 284, 285, 338, 339, 741, 286, 495,
	287, 288, 289, 290, 742, 743, 291, 744, 745, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	669, 41, 42, 43, 670, 671, 672, 673, 674, 675,
	676, 44, 45, 677, 46, 47, 475, 48, 49, 50,
	301, 302, 476, 303, 304, 678, 51, 52, 53, 54,
	55, 679, 680, 56, 57, 305, 306, 58, 681, 59,
	60, 61, 62, 307, 682, 667, 683, 63, 64, 65,
	66, 477, 67, 68, 69, 684, 70, 71, 72, 73,
	74, 75, 685, 478, 76, 77, 78, 686, 687, 688,
	668, 689, 690, 691, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 692, 86, 693, 87, 88, 89, 90,
	91, 694, 92, 93, 94, 695, 696, 95, 96, 97,
	98, 99, 697, 100, 101, 102, 698, 103, 104, 105,
	699, 106, 107, 108, 109, 310, 110, 111, 112, 311,
	700, 113, 701, 114, 115, 312, 116, 702, 117, 703,
	118, 479, 704, 480, 119, 120, 121, 705, 122, 313,
	706, 314, 123, 707, 124, 125, 126, 127, 128, 481,
	129, 130, 131, 132, 708, 133, 134, 135, 136, 137,
	138, 709, 139, 482, 315, 140, 141, 142, 143, 316,
	317, 710, 318, 711, 144, 483, 484, 145, 485, 146,
	147, 148, 149, 150, 712, 713, 151, 319, 486, 152,
	487, 714, 153, 154, 155, 715, 716, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 488, 321, 171, 172, 322, 717, 173,
	174, 489, 175, 718, 323, 176, 324, 177, 178, 179,
	719, 180, 720, 721, 181, 182, 183, 722, 723, 184,
	325, 490, 185, 491, 326, 186, 187, 188, 189, 190,
	191, 192, 724, 193, 194, 327, 195, 328, 198, 196,
	197, 725, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 726, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 727, 222, 223,
	492, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 728, 235, 236, 237, 238, 239, 729,
	240, 241, 331, 242, 243, 493, 244, 245, 332, 246,
	730, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 731, 258, 259, 732, 260, 494, 261,
	262, 263, 264, 265, 733, 334, 335, 734, 735, 266,
	267, 336, 268, 337, 736, 269, 270, 271, 272, 273,
	274, 275, 737, 738, 276, 277, 278, 279, 280, 739,
	740, 281, 282, 283, 284, 285, 338, 339, 741, 286,
	495, 287, 288, 289, 290, 742, 743, 291, 744, 745,
	292, 293, 294, 295, 296, 297, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 410, 397,
	413, 399, 400, 392, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 893, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 475, 48, 49,
	50, 301, 452, 476, 453, 454, 0, 51, 52, 53,
	54, 55, 407, 432, 56, 57, 455, 456, 58, 0,
	59, 60, 61, 62, 440, 0, 420, 0, 63, 64,
	65, 66, 477, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 478, 76, 77, 78, 430, 421,
	426, 431, 422, 423, 427, 79, 80, 81, 82, 83,
	84, 457, 458, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 894, 0, 95, 96,
	451, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	433, 405, 113, 0, 114, 115, 459, 116, 0, 117,
	0, 118, 479, 0, 480, 119, 120, 121, 0, 122,
	441, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	481, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 482, 315, 140, 141, 142, 143,
	460, 461, 0, 419, 0, 144, 483, 484, 145, 485,
	146, 147, 148, 149, 150, 0, 0, 151, 442, 486,
	152, 487, 0, 153, 154, 155, 424, 425, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 462, 488, 463, 171, 172, 322, 379,
	173, 174, 489, 175, 406, 439, 176, 464, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 490, 185, 491, 434, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 435, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 465, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 492, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	428, 240, 241, 331, 242, 243, 493, 244, 245, 466,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 436, 0, 258, 259, 0, 260, 494,
	261, 262, 263, 264, 265, 0, 467, 468, 0, 0,
	266, 267, 437, 268, 438, 404, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	429, 0, 281, 282, 283, 284, 285, 338, 469, 0,
	286, 495, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 443, 444,
	445, 446, 447, 448, 449, 450, 298, 299, 300, 380,
	0, 0, 0, 0, 0, 0, 0, 376, 377, 895,
	0, 0, 0, 0, 0, 0, 384, 891, 410, 397,
	413, 399, 400, 392, 412, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 475, 48, 49,
	50, 301, 452, 476, 453, 454, 945, 51, 52, 53,
	54, 55, 407, 432, 56, 57, 455, 456, 58, 0,
	59, 60, 61, 62, 440, 0, 420, 0, 63, 64,
	65, 66, 477, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 478, 76, 77, 78, 430, 421,
	426, 431, 422, 423, 427, 79, 80, 81, 82, 83,
	84, 457, 458, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	451, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	433, 405, 113, 0, 114, 115, 459, 116, 0, 117,
	0, 118, 479, 950, 480, 119, 120, 121, 0, 122,
	441, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	481, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 482, 315, 140, 141, 142, 143,
	460, 461, 0, 419, 0, 144, 483, 484, 145, 485,
	146, 147, 148, 149, 150, 0, 946, 151, 442, 486,
	152, 487, 0, 153, 154, 155, 424, 425, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 462, 488, 463, 171, 172, 322, 379,
	173, 174, 489, 175, 406, 439, 176, 464, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 490, 185, 491, 434, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 435, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 465, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 492, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	428, 240, 241, 331, 242, 243, 493, 244, 245, 466,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 436, 0, 258, 259, 0, 260, 494,
	261, 262, 263, 264, 265, 0, 467, 468, 0, 947,
	266, 267, 437, 268, 438, 404, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	429, 0, 281, 282, 283, 284, 285, 338, 469, 0,
	286, 495, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 443, 444,
	445, 446, 447, 448, 449, 450, 298, 299, 300, 380,
	0, 0, 0, 0, 0, 0, 0, 376, 377, 410,
	397, 413, 399, 400, 392, 412, 384, 0, 0, 0,
	0, 0, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 475, 48,
	49, 50, 301, 452, 476, 453, 454, 0, 51, 52,
	53, 54, 55, 407, 432, 56, 57, 455, 456, 58,
	0, 59, 60, 61, 62, 440, 0, 420, 0, 63,
	64, 65, 66, 477, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 478, 76, 77, 78, 430,
	421, 426, 431, 422, 423, 427, 79, 80, 81, 82,
	83, 84, 457, 458, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 451, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 433, 405, 113, 0, 114, 115, 459, 116, 0,
	117, 0, 118, 479, 0, 480, 119, 120, 121, 0,
	122, 441, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 481, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 482, 315, 140, 141, 142,
	143, 460, 461, 0, 419, 0, 144, 483, 484, 145,
	485, 146, 147, 148, 149, 150, 0, 0, 151, 442,
	486, 152, 487, 0, 153, 154, 155, 424, 425, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 462, 488, 463, 171, 172, 322,
	379, 173, 174, 489, 175, 406, 439, 176, 464, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 490, 185, 491, 434, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 435, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 465, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 492, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 428, 240, 241, 331, 242, 243, 493, 244, 245,
	466, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 436, 0, 258, 259, 0, 260,
	494, 261, 262, 263, 264, 265, 0, 467, 468, 0,
	0, 266, 267, 437, 268, 438, 404, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 429, 0, 281, 282, 283, 284, 285, 338, 469,
	0, 286, 495, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 443,
	444, 445, 446, 447, 448, 449, 450, 298, 299, 300,
	380, 0, 0, 0, 0, 0, 0, 0, 376, 377,
	410, 397, 413, 399, 400, 392, 412, 384, 1257, 0,
	0, 0, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 475,
	48, 49, 50, 301, 452, 476, 453, 454, 0, 51,
	52, 53, 54, 55, 407, 432, 56, 57, 455, 456,
	58, 0, 59, 60, 61, 62, 440, 0, 420, 0,
	63, 64, 65, 66, 477, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 478, 76, 77, 78,
	430, 421, 426, 431, 422, 423, 427, 79, 80, 81,
	82, 83, 84, 457, 458, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 451, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 433, 405, 113, 0, 114, 115, 459, 116,
	0, 117, 0, 118, 479, 0, 480, 119, 120, 121,
	0, 122, 441, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 481, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 482, 315, 140, 141,
	142, 143, 460, 461, 0, 419, 0, 144, 483, 484,
	145, 485, 146, 147, 148, 149, 150, 0, 0, 151,
	442, 486, 152, 487, 0, 153, 154, 155, 424, 425,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 462, 488, 463, 171, 172,
	322, 379, 173, 174, 489, 175, 406, 439, 176, 464,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 490, 185, 491, 434, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 435, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 465, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 492, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 428, 240, 241, 331, 242, 243, 493, 244,
	245, 466, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 436, 0, 258, 259, 0,
	260, 494, 261, 262, 263, 264, 265, 0, 467, 468,
	0, 0, 266, 267, 437, 268, 438, 404, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 429, 0, 281, 282, 283, 284, 285, 338,
	469, 0, 286, 495, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	443, 444, 445, 446, 447, 448, 449, 450, 298, 299,
	300, 380, 0, 0, 0, 0, 0, 0, 0, 376,
	377, 410, 397, 413, 399, 400, 392, 412, 384, 1203,
	0, 0, 0, 0, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	475, 48, 49, 50, 301, 452, 476, 453, 454, 0,
	51, 52, 53, 54, 55, 407, 432, 56, 57, 455,
	456, 58, 0, 59, 60, 61, 62, 440, 0, 420,
	0, 63, 64, 65, 66, 477, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 478, 76, 77,
	78, 430, 421, 426, 431, 422, 423, 427, 79, 80,
	81, 82, 83, 84, 457, 458, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 451, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 433, 405, 113, 0, 114, 115, 459,
	116, 0, 117, 0, 118, 479, 0, 480, 119, 120,
	121, 0, 122, 441, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 481, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 482, 315, 140,
	141, 142, 143, 460, 461, 0, 419, 0, 144, 483,
	484, 145, 485, 146, 147, 148, 149, 150, 0, 0,
	151, 442, 486, 152, 487, 0, 153, 154, 155, 424,
	425, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 462, 488, 463, 171,
	172, 322, 379, 173, 174, 489, 175, 406, 439, 176,
	464, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 490, 185, 491, 434, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 435,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 465, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 492, 224, 225, 226, 394, 227,
	228, 229, 230, 231, 232, 233, 234, 8, 235, 236,
	237, 238, 239, 428, 240, 241, 331, 242, 243, 493,
	244, 245, 466, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 436, 0, 258, 259,
	10, 260, 494, 261, 262, 263, 264, 265, 0, 467,
	468, 0, 0, 266, 267, 437, 268, 438, 404, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 429, 0, 281, 282, 283, 284, 285,
	590, 469, 0, 286, 495, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 443, 444, 445, 446, 447, 448, 449, 450, 298,
	299, 300, 380, 0, 0, 0, 0, 0, 0, 0,
	376, 377, 410, 397, 413, 399, 400, 392, 412, 384,
	0, 0, 0, 0, 0, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 475, 48, 49, 50, 301, 452, 476, 453, 454,
	0, 51, 52, 53, 54, 55, 407, 432, 56, 57,
	455, 456, 58, 0, 59, 60, 61, 62, 440, 0,
	420, 0, 63, 64, 65, 66, 477, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 478, 76,
	77, 78, 430, 421, 426, 431, 422, 423, 427, 79,
	80, 81, 82, 83, 84, 457, 458, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 451, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 433, 405, 113, 0, 114, 115,
	459, 116, 0, 117, 0, 118, 479, 0, 480, 119,
	120, 121, 0, 122, 441, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 481, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 482, 315,
	140, 141, 142, 143, 460, 461, 0, 419, 0, 144,
	483, 484, 145, 485, 146, 147, 148, 149, 150, 0,
	0, 151, 442, 486, 152, 487, 0, 153, 154, 155,
	424, 425, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 462, 488, 463,
	171, 172, 322, 379, 173, 174, 489, 175, 406, 439,
	176, 464, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 490, 185, 491, 434,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	435, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 465, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 492, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 428, 240, 241, 331, 242, 243,
	493, 244, 245, 466, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 436, 0, 258,
	259, 0, 260, 494, 261, 262, 263, 264, 265, 0,
	467, 468, 0, 0, 266, 267, 437, 268, 438, 404,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 429, 0, 281, 282, 283, 284,
	285, 338, 469, 0, 286, 495, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 443, 444, 445, 446, 447, 448, 449, 450,
	298, 299, 300, 380, 0, 0, 0, 0, 0, 0,
	0, 376, 377, 410, 397, 413, 399, 400, 392, 412,
	384, 890, 0, 0, 0, 0, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 475, 48, 49, 50, 301, 452, 476, 453,
	454, 0, 51, 52, 53, 54, 55, 407, 432, 56,
	57, 455, 456, 58, 0, 59, 60, 61, 62, 440,
	0, 420, 0, 63, 64, 65, 66, 477, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 478,
	76, 77, 78, 430, 421, 426, 431, 422, 423, 427,
	79, 80, 81, 82, 83, 84, 457, 458, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 451, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 433, 405, 113, 0, 114,
	115, 459, 116, 0, 117, 0, 118, 479, 0, 480,
	119, 120, 121, 0, 122, 441, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 481, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 482,
	315, 140, 141, 142, 143, 460, 461, 0, 419, 0,
	144, 483, 484, 145, 485, 146, 147, 148, 149, 150,
	0, 0, 151, 442, 486, 152, 487, 0, 153, 154,
	155, 424, 425, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 462, 488,
	463, 171, 172, 322, 379, 173, 174, 489, 175, 406,
	439, 176, 464, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 490, 185, 491,
	434, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 435, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 465, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 492, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 428, 240, 241, 331, 242,
	243, 493, 244, 245, 466, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 436, 0,
	258, 259, 0, 260, 494, 261, 262, 263, 264, 265,
	0, 467, 468, 0, 0, 266, 267, 437, 268, 438,
	404, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 429, 0, 281, 282, 283,
	284, 285, 338, 469, 0, 286, 495, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 443, 444, 445, 446, 447, 448, 449,
	450, 298, 299, 300, 380, 0, 0, 0, 0, 0,
	0, 0, 376, 377, 0, 0, 0, 0, 0, 595,
	870, 384, 410, 397, 413, 399, 400, 392, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 475, 48, 49, 50, 301, 452, 476, 453, 454,
	0, 51, 52, 53, 54, 55, 407, 432, 56, 57,
	455, 456, 58, 0, 59, 60, 61, 62, 440, 0,
	420, 0, 63, 64, 65, 66, 477, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 478, 76,
	77, 78, 430, 421, 426, 431, 422, 423, 427, 79,
	80, 81, 82, 83, 84, 457, 458, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 451, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 433, 405, 113, 0, 114, 115,
	459, 116, 0, 117, 0, 118, 479, 950, 480, 119,
	120, 121, 0, 122, 441, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 481, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 482, 315,
	140, 141, 142, 143, 460, 461, 0, 419, 0, 144,
	483, 484, 145, 485, 146, 147, 148, 149, 150, 0,
	0, 151, 442, 486, 152, 487, 0, 153, 154, 155,
	424, 425, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 462, 488, 463,
	171, 172, 322, 379, 173, 174, 489, 175, 406, 439,
	176, 464, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 490, 185, 491, 434,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	435, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 465, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 492, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 428, 240, 241, 331, 242, 243,
	493, 244, 245, 466, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 436, 0, 258,
	259, 0, 260, 494, 261, 262, 263, 264, 265, 0,
	467, 468, 0, 0, 266, 267, 437, 268, 438, 404,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 429, 0, 281, 282, 283, 284,
	285, 338, 469, 0, 286, 495, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 443, 444, 445, 446, 447, 448, 449, 450,
	298, 299, 300, 380, 0, 0, 0, 0, 0, 0,
	0, 376, 377, 410, 397, 413, 399, 400, 392, 412,
	384, 0, 0, 0, 0, 0, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 475, 48, 49, 50, 301, 452, 476, 453,
	454, 0, 51, 52, 53, 54, 55, 407, 432, 56,
	57, 455, 456, 58, 0, 59, 60, 61, 62, 440,
	0, 420, 0, 63, 64, 65, 66, 477, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 478,
	76, 77, 78, 430, 421, 426, 431, 422, 423, 427,
	79, 80, 81, 82, 83, 84, 457, 458, 85, 510,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 451, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 433, 405, 113, 0, 114,
	115, 459, 116, 0, 117, 0, 118, 479, 0, 480,
	119, 120, 121, 0, 122, 441, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 481, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 482,
	315, 140, 141, 142, 143, 460, 461, 0, 419, 0,
	144, 483, 484, 145, 485, 146, 147, 148, 149, 150,
	0, 0, 151, 442, 486, 152, 487, 0, 153, 154,
	155, 424, 425, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 462, 488,
	463, 171, 172, 322, 379, 173, 174, 489, 175, 406,
	439, 176, 464, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 490, 185, 491,
	434, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 435, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 465, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 492, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 428, 240, 241, 331, 242,
	243, 493, 244, 245, 466, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 436, 0,
	258, 259, 0, 260, 494, 261, 262, 263, 264, 265,
	0, 467, 468, 0, 0, 266, 267, 437, 268, 438,
	404, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 429, 0, 281, 282, 283,
	284, 285, 338, 469, 0, 286, 495, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 443, 444, 445, 446, 447, 448, 449,
	450, 298, 299, 300, 380, 0, 0, 0, 0, 0,
	0, 0, 376, 377, 410, 397, 413, 399, 400, 392,
	412, 384, 0, 0, 0, 0, 0, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 475, 48, 49, 50, 301, 452, 476,
	453, 454, 0, 51, 52, 53, 54, 55, 407, 432,
	56, 57, 455, 456, 58, 0, 59, 60, 61, 62,
	440, 0, 420, 0, 63, 64, 65, 66, 477, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	478, 76, 77, 78, 430, 421, 426, 431, 422, 423,
	427, 79, 80, 81, 82, 83, 84, 457, 458, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 451, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 433, 405, 113, 0,
	114, 115, 459, 116, 0, 117, 0, 118, 479, 0,
	480, 119, 120, 121, 0, 122, 441, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 481, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	482, 315, 140, 141, 142, 143, 460, 461, 0, 419,
	0, 144, 483, 484, 145, 485, 146, 147, 148, 149,
	150, 0, 0, 151, 442, 486, 152, 487, 0, 153,
	154, 155, 424, 425, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 462,
	488, 463, 171, 172, 322, 379, 173, 174, 489, 175,
	406, 439, 176, 464, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 490, 185,
	491, 434, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 435, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 465, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 492, 224, 225,
	226, 394, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 428, 240, 241, 331,
	242, 243, 493, 244, 245, 466, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 436,
	0, 258, 259, 0, 260, 494, 261, 262, 263, 264,
	265, 0, 467, 468, 0, 0, 266, 267, 437, 268,
	438, 404, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 429, 0, 281, 282,
	283, 284, 285, 338, 469, 0, 286, 495, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 443, 444, 445, 446, 447, 448,
	449, 450, 298, 299, 300, 380, 0, 0, 0, 0,
	0, 0, 0, 376, 377, 374, 0, 0, 0, 0,
	0, 0, 384, 410, 397, 413, 399, 400, 392, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 526, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 475, 48, 49, 50, 301, 452, 476, 453,
	454, 0, 51, 52, 53, 54, 55, 407, 432, 56,
	57, 455, 456, 58, 0, 59, 60, 61, 62, 440,
	0, 420, 0, 63, 64, 65, 66, 477, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 478,
	76, 77, 78, 430, 421, 426, 431, 422, 423, 427,
	79, 80, 81, 82, 83, 84, 457, 458, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 451, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 433, 405, 113, 0, 114,
	115, 459, 116, 0, 117, 0, 118, 479, 0, 480,
	119, 120, 121, 0, 122, 441, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 481, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 482,
	315, 140, 141, 142, 143, 460, 461, 0, 419, 0,
	144, 483, 484, 145, 485, 146, 147, 148, 149, 150,
	0, 0, 151, 442, 486, 152, 487, 0, 153, 154,
	155, 424, 425, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 462, 488,
	463, 171, 172, 322, 379, 173, 174, 489, 175, 406,
	439, 176, 464, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 490, 185, 491,
	434, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 435, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 465, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 492, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 428, 240, 241, 331, 242,
	243, 493, 244, 245, 466, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 436, 0,
	258, 259, 0, 260, 494, 261, 262, 263, 264, 265,
	0, 467, 468, 0, 0, 266, 267, 437, 268, 438,
	404, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 429, 0, 281, 282, 283,
	284, 285, 338, 469, 0, 286, 495, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 443, 444, 445, 446, 447, 448, 449,
	450, 298, 299, 300, 380, 0, 0, 0, 0, 0,
	0, 0, 376, 377, 410, 397, 413, 399, 400, 392,
	412, 384, 0, 0, 0, 0, 0, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 475, 48, 49, 50, 301, 452, 476,
	453, 454, 0, 51, 52, 53, 54, 55, 407, 432,
	56, 57, 455, 456, 58, 0, 59, 60, 61, 62,
	440, 0, 420, 0, 63, 64, 65, 66, 477, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	478, 76, 77, 1425, 430, 421, 426, 431, 422, 423,
	427, 79, 80, 81, 82, 83, 84, 457, 458, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 451, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 433, 405, 113, 0,
	114, 115, 459, 116, 0, 117, 0, 118, 479, 0,
	480, 119, 120, 121, 0, 122, 441, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 481, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	482, 315, 140, 141, 142, 143, 460, 461, 0, 419,
	0, 144, 483, 484, 145, 485, 146, 147, 148, 149,
	150, 0, 0, 151, 442, 486, 152, 487, 0, 153,
	154, 155, 424, 425, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 462,
	488, 463, 171, 172, 322, 379, 173, 174, 489, 175,
	406, 439, 176, 464, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 490, 185,
	491, 434, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 435, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 465, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 492, 224, 225,
	226, 394, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 428, 240, 241, 331,
	242, 243, 493, 244, 245, 466, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 436,
	0, 258, 259, 0, 260, 494, 261, 262, 263, 264,
	265, 0, 467, 468, 0, 0, 266, 267, 437, 268,
	438, 404, 269, 270, 271, 272, 1424, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 429, 0, 281, 282,
	283, 284, 285, 338, 469, 0, 286, 495, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 443, 444, 445, 446, 447, 448,
	449, 450, 298, 299, 300, 380, 0, 0, 0, 0,
	0, 0, 0, 376, 377, 410, 397, 413, 399, 400,
	392, 412, 384, 0, 0, 0, 0, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 475, 48, 49, 50, 1423, 452,
	476, 453, 454, 0, 51, 52, 53, 54, 55, 407,
	432, 56, 57, 455, 456, 58, 0, 59, 60, 61,
	62, 440, 0, 420, 0, 63, 64, 65, 66, 477,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 478, 76, 77, 1425, 430, 421, 426, 431, 422,
	423, 427, 79, 80, 81, 82, 83, 84, 457, 458,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 451, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 433, 405, 113,
	0, 114, 115, 459, 116, 0, 117, 0, 118, 479,
	0, 480, 119, 120, 121, 0, 122, 441, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 481, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 482, 315, 140, 141, 142, 143, 460, 461, 0,
	419, 0, 144, 483, 484, 145, 485, 146, 147, 148,
	149, 150, 0, 0, 151, 442, 486, 152, 487, 0,
	153, 154, 155, 424, 425, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	462, 488, 463, 171, 172, 322, 379, 173, 174, 489,
	175, 406, 439, 176, 464, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 490,
	185, 491, 434, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 435, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 465, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 492, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 428, 240, 241,
	331, 242, 243, 493, 244, 245, 466, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	436, 0, 258, 259, 0, 260, 494, 261, 262, 263,
	264, 265, 0, 467, 468, 0, 0, 266, 267, 437,
	268, 438, 404, 269, 270, 271, 272, 1424, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 429, 0, 281,
	282, 283, 284, 285, 338, 469, 0, 286, 495, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 443, 444, 445, 446, 447,
	448, 449, 450, 298, 299, 300, 380, 0, 0, 0,
	0, 0, 0, 0, 376, 377, 410, 397, 413, 399,
	400, 392, 412, 384, 0, 0, 0, 0, 0, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 475, 48, 49, 50, 301,
	452, 476, 453, 454, 0, 51, 52, 53, 54, 55,
	407, 432, 56, 57, 455, 456, 58, 0, 59, 60,
	61, 62, 440, 0, 420, 0, 63, 64, 65, 66,
	477, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 478, 76, 77, 78, 430, 421, 426, 431,
	422, 423, 427, 79, 80, 81, 82, 83, 84, 457,
	458, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 451, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 433, 405,
	113, 0, 114, 115, 459, 116, 0, 117, 0, 118,
	479, 0, 480, 119, 120, 121, 0, 122, 441, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 481, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 482, 315, 140, 141, 142, 143, 460, 461,
	0, 419, 0, 144, 483, 484, 145, 485, 146, 147,
	148, 149, 150, 0, 0, 151, 442, 486, 152, 487,
	0, 153, 154, 155, 424, 425, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 462, 488, 463, 171, 172, 322, 379, 173, 174,
	489, 175, 406, 439, 176, 464, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	490, 185, 491, 434, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 435, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 465,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 492,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 428, 240,
	241, 331, 242, 243, 493, 244, 245, 466, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 436, 0, 258, 259, 0, 260, 494, 261, 262,
	263, 264, 265, 0, 467, 468, 0, 0, 266, 267,
	437, 268, 438, 404, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 429, 0,
	281, 282, 283, 284, 285, 338, 469, 0, 286, 495,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 443, 444, 445, 446,
	447, 448, 449, 450, 298, 299, 300, 380, 0, 0,
	0, 0, 0, 0, 0, 376, 377, 410, 397, 413,
	399, 400, 392, 412, 384, 0, 0, 0, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 475, 48, 49, 50,
	301, 452, 476, 453, 454, 0, 51, 52, 53, 54,
	55, 407, 432, 56, 57, 455, 456, 58, 0, 59,
	60, 61, 62, 440, 0, 420, 0, 63, 64, 65,
	66, 477, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 478, 76, 77, 78, 430, 421, 426,
	431, 422, 423, 427, 79, 80, 81, 82, 83, 84,
	457, 458, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 451,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 433,
	405, 113, 0, 114, 115, 459, 116, 0, 117, 0,
	118, 479, 0, 480, 119, 120, 121, 0, 122, 441,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 481,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 482, 315, 140, 141, 142, 143, 460,
	461, 0, 419, 0, 144, 483, 484, 145, 485, 146,
	147, 148, 149, 150, 0, 0, 151, 442, 486, 152,
	487, 0, 153, 154, 155, 424, 425, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 462, 488, 463, 171, 1354, 322, 379, 173,
	174, 489, 175, 406, 439, 176, 464, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 490, 185, 491, 434, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 435, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	465, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	492, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 428,
	240, 241, 331, 242, 243, 493, 244, 245, 466, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 436, 0, 258, 259, 0, 260, 494, 261,
	262, 263, 264, 265, 0, 467, 468, 0, 0, 266,
	267, 437, 268, 438, 404, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 429,
	0, 281, 282, 283, 284, 285, 338, 469, 0, 286,
	495, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 443, 444, 445,
	446, 447, 448, 449, 450, 298, 299, 300, 380, 0,
	0, 0, 0, 0, 0, 0, 376, 377, 410, 397,
	413, 399, 400, 392, 412, 384, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 475, 48, 49,
	50, 301, 452, 476, 453, 454, 0, 51, 52, 53,
	54, 55, 407, 432, 56, 57, 455, 456, 58, 0,
	59, 60, 61, 62, 440, 0, 420, 0, 63, 64,
	65, 66, 477, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 478, 76, 77, 78, 430, 421,
	426, 431, 422, 423, 427, 79, 80, 81, 82, 83,
	84, 457, 458, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	451, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	433, 405, 113, 0, 114, 115, 459, 116, 0, 117,
	0, 118, 479, 0, 480, 119, 120, 121, 0, 122,
	441, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	481, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 482, 315, 140, 141, 142, 143,
	460, 461, 0, 419, 0, 144, 483, 484, 145, 485,
	146, 147, 148, 149, 150, 0, 0, 151, 442, 486,
	152, 487, 0, 153, 154, 155, 424, 425, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 462, 488, 463, 171, 172, 322, 379,
	173, 174, 489, 175, 406, 439, 176, 464, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 490, 185, 491, 434, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 435, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 465, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 492, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	428, 240, 241, 331, 242, 243, 493, 244, 245, 466,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 436, 0, 258, 259, 0, 260, 494,
	261, 262, 263, 264, 265, 0, 467, 468, 0, 0,
	266, 267, 437, 268, 438, 404, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	429, 0, 281, 282, 283, 284, 285, 338, 469, 0,
	286, 495, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 1344, 443, 444,
	445, 446, 447, 448, 449, 450, 298, 299, 300, 380,
	0, 0, 0, 0, 0, 0, 0, 376, 377, 410,
	397, 413, 399, 400, 392, 412, 384, 0, 0, 0,
	0, 0, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 475, 48,
	49, 50, 301, 452, 476, 453, 454, 0, 51, 52,
	53, 54, 55, 407, 432, 56, 57, 455, 456, 58,
	0, 59, 60, 61, 62, 440, 0, 420, 0, 63,
	64, 65, 66, 477, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 478, 76, 77, 78, 430,
	421, 426, 431, 422, 423, 427, 79, 80, 81, 82,
	83, 84, 457, 458, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 451, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 433, 405, 113, 0, 114, 115, 459, 116, 0,
	117, 0, 118, 479, 0, 480, 119, 120, 121, 0,
	122, 441, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 481, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 482, 315, 140, 141, 142,
	143, 460, 461, 0, 419, 0, 144, 483, 484, 145,
	485, 146, 147, 148, 149, 150, 0, 0, 151, 442,
	486, 152, 487, 0, 153, 154, 155, 424, 425, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 462, 488, 463, 171, 172, 322,
	0, 173, 174, 489, 175, 406, 439, 176, 464, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 490, 185, 491, 434, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 435, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 465, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 492, 224, 225, 226, 940, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 428, 240, 241, 331, 242, 243, 493, 244, 245,
	466, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 436, 0, 258, 259, 0, 260,
	494, 261, 262, 263, 264, 265, 0, 467, 468, 0,
	0, 266, 267, 437, 268, 438, 404, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 429, 0, 281, 282, 283, 284, 285, 338, 469,
	0, 286, 495, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 443,
	444, 445, 446, 447, 448, 449, 450, 298, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 936, 937,
	410, 397, 413, 399, 400, 392, 412, 939, 0, 0,
	0, 0, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 475,
	48, 49, 50, 301, 452, 476, 453, 454, 0, 51,
	52, 53, 54, 55, 407, 432, 56, 57, 455, 456,
	58, 0, 59, 60, 61, 62, 440, 0, 420, 0,
	63, 64, 65, 66, 477, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 478, 76, 77, 78,
	430, 421, 426, 431, 422, 423, 427, 79, 80, 81,
	82, 83, 84, 457, 458, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 451, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 433, 405, 113, 0, 114, 115, 459, 116,
	0, 117, 0, 118, 479, 0, 480, 119, 120, 121,
	0, 122, 441, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 481, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 482, 315, 140, 141,
	142, 143, 460, 461, 0, 419, 0, 144, 0, 484,
	145, 485, 146, 147, 148, 149, 150, 0, 0, 151,
	442, 486, 152, 487, 0, 153, 154, 155, 424, 425,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 462, 488, 463, 171, 172,
	322, 0, 173, 174, 489, 175, 406, 439, 176, 464,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 490, 185, 491, 434, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 435, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 465, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 492, 224, 225, 226, 940, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 428, 240, 241, 331, 242, 243, 493, 244,
	245, 466, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 436, 0, 258, 259, 0,
	260, 494, 261, 262, 263, 264, 265, 0, 467, 468,
	0, 0, 266, 267, 437, 268, 438, 404, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 429, 0, 281, 282, 283, 284, 285, 338,
	469, 0, 286, 495, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	443, 444, 445, 446, 447, 448, 449, 450, 298, 299,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 936,
	937, 410, 397, 413, 399, 400, 0, 412, 939, 0,
	0, 0, 0, 0, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	475, 48, 49, 50, 301, 452, 476, 453, 454, 0,
	51, 52, 53, 54, 55, 407, 432, 56, 57, 455,
	456, 58, 0, 59, 60, 61, 62, 440, 0, 420,
	0, 63, 64, 65, 66, 477, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 478, 76, 77,
	78, 430, 421, 426, 431, 422, 423, 427, 79, 80,
	81, 82, 83, 84, 457, 458, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 451, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 433, 405, 113, 0, 114, 115, 459,
	116, 0, 117, 0, 118, 479, 0, 480, 119, 120,
	121, 0, 122, 441, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 481, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 482, 315, 140,
	141, 142, 143, 460, 461, 0, 419, 0, 144, 483,
	484, 145, 485, 146, 147, 148, 149, 150, 0, 0,
	151, 442, 486, 152, 487, 0, 153, 154, 155, 424,
	425, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 462, 488, 463, 171,
	172, 322, 0, 173, 174, 489, 175, 406, 439, 176,
	464, 177, 178, 179, 0, 180, 0, 0, 181, 182,
	183, 0, 0, 184, 325, 490, 185, 491, 434, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 435,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 465, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 492, 224, 225, 226, 940, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 428, 240, 241, 331, 242, 243, 493,
	244, 245, 466, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 436, 0, 258, 259,
	0, 260, 494, 261, 262, 263, 264, 265, 0, 467,
	468, 0, 0, 266, 267, 437, 268, 438, 404, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 429, 0, 281, 282, 283, 284, 285,
	338, 469, 0, 286, 495, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 443, 444, 445, 446, 447, 448, 449, 450, 298,
	299, 300, 0, 0, 0, 410, 397, 413, 399, 400,
	0, 412, 0, 0, 0, 0, 0, 0, 0, 939,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 475, 48, 49, 50, 301, 452,
	476, 453, 454, 0, 1272, 52, 53, 54, 55, 407,
	432, 56, 57, 455, 456, 58, 0, 59, 60, 61,
	62, 440, 0, 420, 0, 63, 64, 65, 66, 477,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 478, 76, 77, 78, 430, 421, 426, 431, 422,
	423, 427, 79, 80, 81, 82, 83, 84, 457, 458,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 451, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 433, 405, 113,
	0, 114, 115, 459, 116, 0, 117, 0, 118, 479,
	0, 480, 119, 120, 121, 0, 122, 441, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 481, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 482, 315, 140, 141, 142, 143, 460, 461, 0,
	419, 0, 144, 483, 484, 145, 485, 146, 147, 148,
	149, 150, 0, 0, 151, 442, 486, 152, 487, 0,
	153, 154, 155, 424, 425, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	462, 488, 463, 171, 172, 322, 0, 173, 174, 489,
	175, 406, 439, 176, 464, 177, 178, 179, 0, 180,
	0, 0, 181, 182, 183, 0, 0, 184, 325, 490,
	185, 491, 434, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 435, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 465, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 492, 224,
	225, 226, 940, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 428, 240, 241,
	331, 242, 243, 493, 244, 245, 466, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	436, 0, 258, 259, 0, 260, 494, 261, 262, 263,
	264, 265, 0, 467, 468, 0, 0, 266, 267, 437,
	268, 438, 404, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 429, 0, 281,
	282, 283, 284, 285, 338, 469, 0, 286, 495, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 443, 444, 445, 446, 447,
	448, 449, 450, 298, 299, 300, 0, 0, 0, 410,
	397, 413, 399, 400, 392, 412, 0, 0, 0, 0,
	0, 0, 0, 939, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 475, 48,
	49, 50, 0, 452, 476, 453, 454, 0, 51, 52,
	53, 54, 55, 407, 432, 56, 57, 455, 456, 58,
	0, 59, 60, 61, 62, 440, 0, 420, 0, 63,
	64, 65, 66, 477, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 478, 76, 77, 1425, 430,
	421, 426, 431, 422, 423, 427, 79, 80, 81, 82,
	83, 84, 457, 458, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 451, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 433, 405, 113, 0, 114, 115, 459, 116, 0,
	117, 0, 118, 479, 0, 480, 119, 120, 121, 0,
	122, 441, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 0, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 482, 315, 140, 141, 142,
	143, 460, 461, 0, 419, 0, 144, 0, 0, 145,
	485, 146, 147, 148, 149, 150, 0, 0, 151, 442,
	486, 152, 0, 0, 153, 154, 155, 424, 425, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 462, 488, 463, 171, 172, 322,
	379, 173, 174, 0, 175, 406, 439, 176, 464, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 490, 185, 491, 434, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 435, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 465, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 492, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 428, 240, 241, 331, 242, 243, 0, 244, 245,
	466, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 436, 0, 258, 259, 0, 260,
	494, 261, 262, 263, 264, 265, 0, 467, 468, 0,
	0, 266, 267, 437, 268, 438, 404, 269, 270, 271,
	272, 1424, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 429, 0, 281, 282, 283, 284, 285, 338, 469,
	0, 286, 495, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 443,
	444, 445, 446, 447, 448, 449, 450, 298, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 377,
	410, 397, 413, 399, 400, 392, 412, 384, 0, 0,
	0, 0, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 475,
	48, 49, 50, 0, 452, 476, 453, 454, 0, 51,
	52, 53, 54, 55, 407, 432, 56, 57, 455, 456,
	58, 0, 59, 60, 61, 62, 440, 0, 420, 0,
	63, 64, 65, 66, 477, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 478, 76, 77, 78,
	430, 421, 426, 431, 422, 423, 427, 79, 80, 81,
	82, 83, 84, 457, 458, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 451, 98, 99, 0, 100, 101, 102, 0,
	103, 0, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 433, 405, 113, 0, 114, 115, 459, 116,
	0, 117, 0, 118, 479, 0, 480, 119, 120, 121,
	0, 122, 441, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 0, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 482, 315, 140, 141,
	142, 143, 460, 461, 0, 419, 0, 144, 0, 0,
	145, 485, 146, 147, 148, 149, 150, 0, 0, 151,
	442, 486, 152, 0, 0, 153, 154, 155, 424, 425,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 462, 488, 463, 171, 172,
	322, 379, 173, 174, 0, 175, 406, 439, 176, 464,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 490, 185, 491, 434, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 435, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 465, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 492, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 428, 240, 241, 331, 242, 243, 0, 244,
	245, 466, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 436, 0, 258, 259, 0,
	260, 494, 261, 262, 263, 264, 265, 0, 467, 468,
	0, 0, 266, 267, 437, 268, 438, 404, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 429, 0, 281, 282, 283, 284, 285, 338,
	469, 0, 286, 495, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	443, 444, 445, 446, 447, 448, 449, 450, 298, 299,
	300, 0, 0, 0, 0, 0, 0, 30, 0, 376,
	377, 0, 876, 0, 0, 0, 0, 0, 384, 886,
	887, 888, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 0, 48, 49, 50,
	301, 302, 0, 303, 304, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 305, 306, 58, 0, 59,
	60, 61, 62, 307, 0, 0, 0, 63, 64, 65,
	66, 0, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 0, 76, 77, 78, 0, 0, 0,
	0, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 97,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 310, 110, 111, 112, 311,
	0, 113, 0, 114, 115, 312, 116, 0, 117, 0,
	118, 0, 0, 0, 119, 120, 121, 0, 122, 313,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 0,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 0, 315, 140, 141, 142, 143, 316,
	317, 0, 318, 0, 144, 0, 0, 145, 0, 146,
	147, 148, 149, 150, 0, 0, 151, 319, 0, 152,
	0, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 0, 321, 171, 172, 322, 0, 173,
	174, 0, 175, 0, 323, 176, 324, 177, 178, 179,
	0, 180, 0, 0, 181, 182, 183, 0, 0, 184,
	325, 0, 185, 0, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	0, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 331, 242, 243, 0, 244, 245, 332, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 0, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 338, 339, 0, 286,
	0, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 30, 0,
	0, 0, 883, 884, 885, 0, 877, 878, 879, 880,
	881, 882, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 0,
	0, 0, 44, 45, 0, 46, 47, 0, 48, 49,
	50, 301, 302, 0, 303, 304, 0, 51, 52, 53,
	54, 55, 0, 0, 56, 57, 305, 306, 58, 0,
	59, 60, 61, 62, 307, 0, 0, 0, 63, 64,
	65, 66, 0, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 0, 76, 77, 78, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 81, 82, 83,
	84, 308, 309, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	97, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 310, 110, 111, 112,
	311, 0, 113, 0, 114, 115, 312, 116, 0, 117,
	0, 118, 0, 0, 0, 119, 120, 121, 0, 122,
	313, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	0, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 0, 315, 140, 141, 142, 143,
	316, 317, 0, 318, 0, 144, 0, 0, 145, 0,
	146, 147, 148, 149, 150, 0, 0, 151, 319, 0,
	152, 0, 0, 153, 154, 155, 0, 0, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 320, 0, 321, 171, 172, 322, 0,
	173, 174, 0, 175, 0, 323, 176, 324, 177, 178,
	179, 0, 180, 0, 0, 181, 182, 183, 0, 0,
	184, 325, 0, 185, 0, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 329, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 0, 224, 225, 226, 330, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	0, 240, 241, 331, 242, 243, 0, 244, 245, 332,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 0,
	261, 262, 263, 264, 265, 0, 334, 335, 0, 0,
	266, 267, 336, 268, 337, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	0, 0, 281, 282, 283, 284, 285, 338, 339, 0,
	286, 0, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 341, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 0,
	0, 0, 30, 392, 0, 0, 1091, 0, 0, 0,
	1101, 1102, 1103, 0, 0, 0, 1077, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 0, 0, 0, 44, 45, 0, 46,
	47, 0, 48, 49, 50, 301, 302, 0, 303, 304,
	0, 51, 52, 53, 54, 55, 0, 0, 56, 57,
	305, 306, 58, 0, 59, 60, 61, 62, 307, 0,
	0, 0, 63, 64, 65, 66, 0, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 0, 76,
	77, 78, 0, 0, 0, 0, 0, 0, 0, 79,
	80, 81, 82, 83, 84, 308, 309, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 97, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	310, 110, 111, 112, 311, 0, 113, 0, 114, 115,
	312, 116, 0, 117, 0, 118, 0, 0, 0, 119,
	120, 121, 0, 122, 313, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 0, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 0, 315,
	140, 141, 142, 143, 316, 317, 0, 318, 0, 144,
	0, 0, 145, 0, 146, 147, 148, 149, 150, 0,
	0, 151, 319, 0, 152, 0, 0, 153, 154, 155,
	0, 0, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 320, 0, 321,
	171, 172, 322, 0, 173, 174, 0, 175, 0, 323,
	176, 324, 177, 178, 179, 1107, 180, 0, 0, 181,
	182, 183, 0, 0, 184, 325, 0, 185, 0, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 329, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 0, 224, 225, 226, 330,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 0, 240, 241, 331, 242, 243,
	0, 244, 245, 332, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 0, 261, 262, 263, 264, 265, 0,
	334, 335, 0, 0, 266, 267, 336, 268, 337, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 0, 0, 281, 282, 283, 284,
	285, 338, 339, 0, 286, 0, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 341, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 1098, 1099, 1100, 30, 1092, 1093, 1094,
	1095, 1096, 1097, 0, 0, 0, 0, 0, 0, 0,
	502, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 0, 48, 49, 50, 301,
	302, 0, 303, 304, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 305, 306, 58, 0, 59, 60,
	61, 62, 307, 0, 0, 0, 63, 64, 65, 66,
	0, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 0, 76, 77, 78, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 97, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 0,
	113, 0, 114, 115, 312, 116, 0, 117, 0, 118,
	0, 0, 0, 119, 120, 777, 0, 122, 313, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 0, 315, 140, 141, 142, 143, 316, 317,
	0, 318, 0, 144, 0, 0, 145, 0, 146, 147,
	148, 149, 150, 0, 0, 151, 319, 0, 152, 0,
	0, 153, 154, 776, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 0, 321, 171, 172, 322, 0, 173, 174,
	0, 175, 0, 323, 176, 324, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 325,
	0, 185, 0, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 329,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 0,
	224, 225, 226, 330, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 331, 242, 243, 0, 244, 245, 332, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 779, 260, 0, 261, 775,
	263, 774, 265, 0, 334, 335, 0, 0, 266, 267,
	336, 268, 337, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 778, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 338, 339, 0, 286, 0,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 30, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 0, 48, 49, 50,
	301, 302, 0, 303, 304, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 305, 306, 58, 0, 59,
	60, 61, 62, 307, 0, 0, 0, 63, 64, 65,
	66, 0, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 0, 76, 77, 78, 0, 0, 0,
	0, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 97,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 310, 110, 111, 112, 311,
	0, 113, 0, 114, 115, 312, 116, 0, 117, 0,
	118, 0, 0, 0, 119, 120, 121, 0, 122, 313,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 0,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 0, 315, 140, 141, 142, 143, 316,
	317, 0, 318, 0, 144, 0, 0, 145, 0, 146,
	147, 148, 149, 150, 0, 0, 151, 319, 0, 152,
	0, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 0, 321, 171, 172, 322, 0, 173,
	174, 0, 175, 0, 323, 176, 324, 177, 178, 179,
	0, 180, 0, 28, 181, 182, 183, 0, 0, 184,
	325, 0, 185, 0, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	0, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 331, 242, 243, 0, 244, 245, 332, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 0, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 338, 339, 0, 286,
	0, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 30, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 0,
	0, 0, 44, 45, 0, 46, 47, 0, 48, 49,
	50, 301, 302, 0, 303, 304, 0, 51, 52, 53,
	54, 55, 0, 0, 56, 57, 305, 306, 58, 0,
	59, 60, 61, 62, 307, 0, 0, 0, 63, 64,
	65, 66, 0, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 0, 76, 77, 78, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 81, 82, 83,
	84, 308, 309, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	97, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 310, 110, 111, 112,
	311, 0, 113, 0, 114, 115, 312, 116, 0, 117,
	0, 118, 0, 0, 0, 119, 120, 121, 0, 122,
	313, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	0, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 0, 315, 140, 141, 142, 143,
	316, 317, 0, 318, 0, 144, 0, 0, 145, 0,
	146, 147, 148, 149, 150, 0, 0, 151, 319, 0,
	152, 0, 0, 153, 154, 155, 0, 0, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 320, 0, 321, 171, 172, 322, 0,
	173, 174, 0, 175, 0, 323, 176, 324, 177, 178,
	179, 0, 180, 0, 0, 181, 182, 183, 0, 0,
	184, 325, 0, 185, 0, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 329, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 0, 224, 225, 226, 330, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	0, 240, 241, 331, 242, 243, 0, 244, 245, 332,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 0,
	261, 262, 263, 264, 265, 0, 334, 335, 0, 0,
	266, 267, 336, 268, 337, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	0, 0, 281, 282, 283, 284, 285, 338, 339, 0,
	286, 0, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 341, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 30,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	0, 0, 0, 44, 45, 0, 46, 47, 0, 48,
	49, 50, 301, 302, 0, 303, 304, 0, 51, 52,
	53, 54, 55, 0, 0, 56, 57, 305, 306, 58,
	0, 59, 60, 61, 62, 307, 0, 0, 0, 63,
	64, 65, 66, 0, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 0, 76, 77, 78, 0,
	0, 0, 0, 0, 0, 0, 79, 80, 81, 82,
	83, 84, 308, 309, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 97, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 310, 110, 111,
	112, 311, 0, 113, 0, 114, 115, 312, 116, 0,
	117, 0, 118, 0, 0, 0, 119, 120, 121, 0,
	122, 313, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 0, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 0, 315, 140, 141, 142,
	143, 316, 317, 0, 318, 0, 144, 0, 0, 145,
	0, 146, 147, 148, 149, 150, 0, 0, 151, 319,
	0, 152, 0, 0, 153, 154, 155, 0, 0, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 320, 0, 321, 171, 172, 322,
	0, 173, 174, 0, 175, 0, 323, 176, 324, 177,
	178, 179, 0, 180, 0, 0, 181, 182, 183, 0,
	0, 184, 325, 0, 185, 0, 326, 186, 187, 188,
	189, 0, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	0, 206, 329, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 0, 224, 225, 226, 330, 0, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 0, 240, 241, 331, 242, 243, 0, 244, 245,
	332, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	0, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 0, 0, 281, 282, 283, 284, 285, 338, 339,
	0, 286, 0, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 0, 0, 0, 44, 45, 0, 46, 47, 475,
	48, 49, 50, 0, 795, 476, 811, 801, 0, 51,
	52, 53, 54, 55, 0, 0, 56, 57, 813, 812,
	58, 0, 59, 60, 61, 62, 0, 0, 667, 0,
	63, 64, 65, 66, 477, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 478, 76, 77, 78,
	0, 0, 0, 668, 0, 0, 0, 79, 80, 81,
	82, 83, 84, 799, 798, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 451, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 0, 110,
	111, 112, 0, 0, 113, 0, 114, 115, 797, 116,
	0, 117, 0, 118, 479, 0, 480, 119, 120, 121,
	0, 122, 0, 0, 0, 123, 0, 124, 125, 126,
	127, 128, 481, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 482, 0, 140, 141,
	142, 143, 792, 793, 0, 808, 0, 144, 483, 484,
	145, 485, 146, 147, 148, 149, 150, 0, 0, 151,
	0, 486, 152, 487, 0, 153, 154, 155, 0, 0,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 815, 488, 816, 171, 172,
	0, 0, 173, 174, 489, 175, 0, 0, 176, 800,
	177, 178, 179, 0, 180, 0, 0, 181, 182, 183,
	0, 0, 184, 0, 490, 185, 491, 0, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 0, 195,
	0, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 796, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 492, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 0, 240, 241, 784, 242, 243, 493, 244,
	245, 794, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 0, 0, 258, 259, 0,
	260, 494, 261, 262, 263, 264, 265, 0, 807, 806,
	0, 0, 266, 267, 0, 268, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 0, 0, 281, 282, 283, 284, 285, 0,
	814, 0, 286, 495, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 809,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 0, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	0, 0, 0, 44, 45, 0, 46, 47, 475, 48,
	49, 50, 0, 795, 476, 811, 801, 0, 51, 52,
	53, 54, 55, 0, 0, 56, 57, 813, 812, 58,
	0, 59, 60, 61, 62, 0, 0, 667, 0, 63,
	64, 65, 66, 477, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 478, 76, 77, 78, 0,
	0, 0, 668, 0, 0, 0, 79, 80, 81, 82,
	83, 84, 799, 798, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 451, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 0, 110, 111,
	112, 0, 0, 113, 0, 114, 115, 797, 116, 0,
	117, 0, 118, 479, 0, 480, 119, 120, 121, 0,
	122, 0, 0, 0, 123, 0, 124, 125, 126, 127,
	128, 481, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 482, 0, 140, 141, 142,
	143, 792, 793, 0, 808, 0, 144, 483, 484, 145,
	485, 146, 147, 148, 149, 150, 0, 0, 151, 0,
	486, 152, 487, 0, 153, 154, 155, 0, 0, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 815, 488, 816, 171, 172, 0,
	0, 173, 174, 489, 175, 0, 0, 176, 800, 177,
	178, 179, 0, 180, 0, 0, 181, 182, 183, 0,
	0, 184, 0, 490, 185, 491, 0, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 0, 195, 0,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 796, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 492, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 242, 243, 493, 244, 245,
	794, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 0, 0, 258, 259, 0, 260,
	494, 261, 262, 263, 264, 265, 0, 807, 806, 0,
	0, 266, 267, 0, 268, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 0, 0, 281, 282, 283, 284, 285, 0, 814,
	0, 286, 495, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 0, 0, 577, 0, 0, 547, 298, 299, 300,
	559, 560, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 577, 0, 0, 547, 0, 563, 0, 559,
	560, 561, 0, 0, 0, 549, 0, 0, 0, 0,
	0, 572, 577, 0, 0, 547, 563, 0, 0, 559,
	560, 561, 0, 0, 549, 0, 0, 0, 0, 0,
	572, 0, 0, 0, 0, 548, 563, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 577,
	572, 0, 547, 0, 548, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 577, 0,
	0, 547, 0, 563, 548, 559, 560, 561, 0, 0,
	0, 549, 0, 0, 0, 0, 0, 572, 577, 0,
	0, 547, 563, 0, 0, 559, 560, 561, 0, 0,
	549, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 548, 563, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 577, 572, 0, 547, 0,
	548, 0, 559, 560, 561, 0, 0, 0, 0, 0,
	567, 0, 0, 0, 0, 573, 0, 0, 0, 563,
	548, 0, 0, 0, 0, 0, 0, 549, 0, 567,
	0, 0, 0, 572, 573, 0, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 565, 0, 0, 573, 569, 570, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	565, 0, 0, 0, 0, 569, 570, 0, 0, 0,
	0, 0, 571, 0, 0, 0, 567, 0, 0, 0,
	565, 573, 0, 0, 0, 578, 0, 0, 564, 0,
	0, 571, 0, 0, 0, 567, 0, 0, 0, 0,
	573, 0, 569, 570, 578, 0, 0, 564, 0, 0,
	0, 571, 0, 0, 0, 567, 0, 565, 0, 0,
	573, 569, 570, 0, 578, 0, 0, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 0, 0, 0,
	0, 569, 570, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 567, 0, 0, 0, 565, 573, 0, 0,
	0, 578, 0, 0, 564, 0, 568, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 570,
	578, 0, 0, 564, 0, 568, 0, 571, 0, 0,
	0, 0, 0, 565, 0, 0, 0, 0, 0, 0,
	578, 0, 0, 564, 0, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 0, 0,
	564, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 566,
	0, 568, 0, 556, 557, 558, 0, 550, 551, 552,
	553, 554, 555, 0, 0, 0, 0, 1383, 566, 0,
	0, 568, 556, 557, 558, 0, 550, 551, 552, 553,
	554, 555, 0, 0, 0, 0, 1376, 0, 566, 0,
	0, 0, 556, 557, 558, 0, 550, 551, 552, 553,
	554, 555, 0, 0, 0, 0, 1341, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 566, 0, 0, 0, 556,
	557, 558, 0, 550, 551, 552, 553, 554, 555, 0,
	0, 0, 0, 1330, 566, 0, 0, 0, 556, 557,
	558, 0, 550, 551, 552, 553, 554, 555, 0, 0,
	0, 0, 1320, 0, 566, 0, 0, 0, 556, 557,
	558, 0, 550, 551, 552, 553, 554, 555, 0, 0,
	0, 0, 1231, 0, 577, 0, 0, 547, 0, 0,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 0,
	0, 566, 0, 0, 0, 556, 557, 558, 563, 550,
	551, 552, 553, 554, 555, 0, 549, 577, 0, 1206,
	547, 0, 572, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 0, 0, 547,
	0, 563, 0, 559, 560, 561, 548, 0, 0, 549,
	0, 0, 0, 0, 577, 572, 0, 547, 0, 0,
	563, 559, 560, 561, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 0, 572, 0, 0, 0, 563, 548,
	0, 0, 769, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 572, 577, 0, 0, 547, 0, 548, 0,
	559, 560, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 548, 563, 0, 0,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 0, 0, 548, 573, 0, 0, 0,
	0, 0, 0, 770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 570, 0,
	0, 0, 0, 0, 567, 0, 0, 0, 0, 573,
	0, 0, 565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 0, 0, 573, 0,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 0, 571, 0, 565, 573, 0, 0, 569,
	570, 0, 0, 0, 0, 0, 578, 1442, 0, 564,
	0, 0, 0, 0, 565, 0, 0, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	567, 0, 565, 0, 0, 573, 0, 0, 0, 578,
	0, 0, 564, 0, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 570, 578, 0,
	0, 564, 0, 571, 0, 0, 0, 0, 0, 0,
	0, 565, 0, 0, 0, 0, 578, 0, 0, 564,
	0, 0, 0, 0, 0, 0, 0, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	547, 0, 571, 0, 559, 560, 561, 0, 0, 0,
	0, 1167, 0, 0, 0, 578, 577, 0, 564, 547,
	568, 563, 0, 559, 560, 561, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 572, 0, 1441, 0, 568,
	563, 0, 0, 1166, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 0, 572, 0, 0, 568, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 0,
	566, 0, 0, 0, 556, 557, 558, 0, 550, 551,
	552, 553, 554, 555, 0, 0, 568, 0, 1153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 566, 0, 0, 0, 556, 557, 558,
	0, 550, 551, 552, 553, 554, 555, 0, 0, 0,
	0, 866, 566, 0, 0, 0, 556, 557, 558, 0,
	550, 551, 552, 553, 554, 555, 0, 0, 1288, 0,
	566, 0, 0, 0, 556, 557, 558, 0, 550, 551,
	552, 553, 554, 555, 567, 0, 0, 0, 0, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 0, 0, 573, 566,
	569, 570, 0, 556, 557, 558, 0, 550, 551, 552,
	553, 554, 555, 0, 0, 565, 0, 0, 0, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 577, 0,
	0, 547, 0, 0, 565, 559, 560, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 0, 0, 0,
	0, 0, 563, 0, 0, 0, 0, 0, 0, 578,
	549, 0, 564, 0, 0, 571, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 0,
	0, 564, 0, 1276, 0, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 576, 0, 0, 0, 0, 577,
	0, 0, 547, 0, 0, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 0, 575, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 577, 572, 0, 547,
	568, 0, 0, 559, 560, 561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 0, 568,
	563, 548, 0, 1282, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 1117, 572, 0, 0, 0, 1116, 0,
	0, 0, 0, 0, 0, 577, 0, 0, 547, 0,
	0, 0, 559, 560, 561, 567, 0, 0, 548, 0,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 569, 570, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 566, 0, 0, 565, 556, 557, 558,
	0, 550, 551, 552, 553, 554, 555, 548, 0, 0,
	0, 0, 566, 0, 0, 0, 556, 557, 558, 0,
	550, 551, 552, 553, 554, 555, 567, 571, 0, 0,
	0, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 0, 565, 573, 577,
	0, 0, 547, 0, 0, 0, 559, 560, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	570, 0, 0, 563, 0, 0, 1135, 0, 571, 0,
	0, 549, 0, 0, 565, 0, 0, 572, 0, 0,
	0, 578, 567, 0, 564, 0, 0, 573, 0, 0,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 571, 0, 0, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 0,
	0, 564, 0, 565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 0,
	0, 0, 568, 0, 0, 0, 0, 578, 0, 0,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 566, 0, 0, 0, 556, 557,
	558, 0, 550, 551, 552, 553, 554, 555, 0, 568,
	0, 0, 0, 0, 0, 0, 567, 577, 0, 0,
	547, 573, 0, 0, 559, 560, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 569, 570, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 572, 0, 565, 568, 577,
	0, 0, 547, 0, 0, 566, 559, 560, 561, 556,
	557, 558, 0, 550, 551, 552, 553, 554, 555, 548,
	0, 0, 0, 563, 0, 0, 1118, 1227, 571, 0,
	0, 549, 0, 0, 0, 0, 0, 572, 0, 0,
	0, 578, 566, 0, 564, 0, 556, 557, 558, 0,
	550, 551, 552, 553, 554, 555, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 0, 0, 547, 0, 0,
	0, 559, 560, 561, 0, 0, 0, 0, 0, 0,
	0, 566, 0, 0, 0, 556, 557, 558, 563, 550,
	551, 552, 553, 554, 555, 0, 549, 1123, 577, 0,
	0, 547, 572, 0, 0, 559, 560, 561, 0, 0,
	0, 0, 568, 0, 567, 0, 0, 0, 0, 573,
	0, 0, 563, 0, 0, 1084, 548, 0, 0, 0,
	549, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 567, 0, 0, 0,
	548, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 570, 0, 0, 571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 0, 578,
	0, 0, 564, 0, 0, 566, 0, 0, 0, 556,
	557, 558, 0, 550, 551, 552, 553, 554, 555, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 0,
	0, 567, 0, 0, 0, 0, 573, 0, 0, 0,
	0, 578, 0, 0, 564, 577, 0, 0, 547, 0,
	0, 0, 559, 560, 561, 0, 0, 569, 570, 0,
	0, 0, 0, 0, 0, 567, 577, 0, 0, 547,
	573, 0, 565, 559, 560, 561, 0, 549, 0, 0,
	568, 0, 0, 572, 0, 0, 0, 0, 0, 0,
	563, 569, 570, 0, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 571, 572, 0, 565, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 0, 0, 564,
	0, 0, 568, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 0, 1089, 0, 0, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 566, 0, 0, 0, 556, 557, 558,
	0, 550, 551, 552, 553, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 0, 0, 566, 0, 573, 0, 556,
	557, 558, 0, 550, 551, 552, 553, 554, 555, 0,
	0, 568, 0, 567, 0, 0, 0, 0, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	547, 0, 0, 565, 559, 560, 561, 0, 0, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 0, 0, 565, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	566, 0, 0, 0, 556, 557, 558, 578, 550, 551,
	552, 553, 554, 555, 0, 571, 0, 0, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 0,
	0, 564, 0, 0, 566, 0, 0, 0, 556, 557,
	558, 0, 550, 551, 552, 553, 554, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 0, 0, 0, 0, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 566, 0, 0, 0, 556, 557, 558, 0, 550,
	551, 552, 553, 554, 555, 0, 571, 0, 0, 0,
	0, 0, 566, 0, 0, 0, 556, 557, 558, 578,
	550, 551, 552, 553, 554, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 566, 0, 0, 0, 556, 557, 558,
	0, 550, 551, 552, 553, 554, 555,
}
var yyPact = [...]int{

	-172, -1000, -291, -1000, -1000, -1000, 249, -172, 550, -307,
	14633, -187, -1000, -1000, 322, 538, 538, 538, 574, -221,
	-225, 7180, 7180, -1000, 171, -187, -1000, -121, 13768, -297,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	6739, 293, 363, 355, 152, 177, 316, -1000, 7629, 294,
	8952, 182, -172, -1000, -1000, -172, -172, 8952, -1000, -1000,
	256, -308, -1000, 17960, -1000, -1000, 8952, 8952, 8952, 8952,
	8952, 151, -1000, -1000, 4967, -1000, -1000, -297, -138, -223,
	-1000, -1000, -1000, -211, -139, -297, -1000, -1000, -1000, -1000,
	-1000, 231, 655, 230, -1000, -1000, -1000, 8952, 385, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	333, -1000, -140, -142, -145, -146, -1000, -1000, -1000, -1000,
	-1000, -1000, -147, -148, -153, -155, -158, -161, -162, -163,
	-164, -166, -167, -169, -170, -173, -174, -176, -177, -178,
	-179, 131, -1000, -53, -1000, -53, -53, -194, -194, -193,
	-1000, -1000, 563, -53, -194, -1000, -1000, -251, -245, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 167, -131, -180, -1000,
	-1000, -1000, 15064, -297, -1000, 2332, 8952, -319, -1000, 18657,
	-1000, -1000, -1000, -1000, -1000, -1000, 197, 169, -1000, 245,
	-1000, 60, -1000, -1000, -1000, 18657, -1000, 153, -1000, -1000,
	-1000, 89, 18657, -1000, 144, 15064, 262, -1000, -1000, -1000,
	262, -314, -1000, 17395, 321, 14202, 7180, 15926, 15064, -1,
	8952, 8952, 8952, 8952, 8952, 8952, 8952, 8952, 8952, 8952,
	8952, 8952, 12466, 8952, 8952, 8952, 674, 8952, -9, 1500,
	-1000, -1000, 349, -195, 367, 2763, -1000, -1000, -181, -1000,
	-1000, 647, 647, 297, 1817, 1817, -119, 17358, -303, -315,
	-187, -297, -1000, -1000, -1000, 5849, 12903, 5408, -297, 3194,
	-1000, -1000, 223, 653, -62, 18657, 157, -188, -190, 653,
	653, 653, 653, 8952, 897, 8952, 10275, 8952, 8952, 3644,
	8952, 8952, 8952, 8952, 8952, 207, 11157, 8952, 479, 204,
	8952, 479, -1000, -191, -1000, -1000, -1000, -1000, 8952, -1000,
	-1000, 653, -53, -53, -1000, -1000, 653, -1000, -2, -5,
	653, -1000, 653, -1000, 67, 321, 8952, -227, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 251, 6739, -1000, -1000,
	-40, -1000, 89, -1000, 8952, -1000, 653, 653, -1000, -1000,
	-1000, -1000, -1000, 224, -316, -1000, 8952, 1641, -110, -1000,
	-1000, -70, 8952, -1000, 10, 10, 12, 9, 10, 15064,
	-1000, -1000, -1000, 581, 16345, -1000, -1000, -1000, -1000, -1000,
	-47, -293, -1000, -1000, -1000, -1000, -1000, -193, -194, -194,
	-194, -1000, -1000, -1000, -1000, -1000, -245, -251, -1000, -1000,
	-1000, -53, -53, -53, -1000, 563, -53, -1000, -288, -100,
	164, 164, 306, 306, 306, 549, 1706, 1706, 1706, 1706,
	1706, 1706, 297, 1817, 18838, 1528, 8952, 8952, -10, 340,
	-195, 328, 8952, -1000, 589, -1000, -1000, -1000, 320, -196,
	-1000, 10275, 10275, -1000, -1000, -1000, 4967, -197, -1000, -1000,
	-1000, -1000, 12903, -1000, -199, 8952, -1000, 8952, -318, -321,
	-1000, 18657, -1000, -228, -1000, -289, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -324,
	-1000, -1000, -202, 8952, 8952, -230, -1000, 18657, 651, -1000,
	-1000, -11, -1000, -12, -13, -14, -1000, -201, -231, 222,
	-1000, 8952, -1000, 13334, -64, 8952, -232, -233, -236, -237,
	18489, -239, 319, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -241, 18455, -242, 1766, -1000, 10275, 10275, 10275, 4967,
	-203, -244, 17889, -386, 18380, 6298, 6298, 6298, -247, 18338,
	8952, -386, 1691, -325, -329, -334, -335, 2763, 140, -341,
	-1000, 18170, 8952, -1000, -1000, 2763, 1673, 8952, 8952, -342,
	-250, -1000, -1000, -253, -102, -103, -254, -256, 15064, -70,
	-343, -1000, -1000, 8952, -1000, -1000, 162, 17325, -1000, -1000,
	-1000, 15064, -1000, -110, -1000, -204, -1000, 331, 303, 8952,
	-36, -1000, 17687, 15064, -1000, 15064, 10, 10, 10, 10,
	15064, -1000, -130, -127, 556, -1000, 653, -1000, -298, 2763,
	-292, 8952, 8952, 206, 111, 8952, 10275, 10275, -1000, 8952,
	84, -1000, -1000, -1000, -1000, 318, -207, -1000, 8952, 15926,
	1798, 1785, -347, -1000, 4967, -257, 4526, -339, -297, 16916,
	8952, -1000, -1000, -129, -1000, 12903, -1000, -258, 8952, -1000,
	-202, -202, -1000, 8952, 8952, 214, 273, 174, 79, 653,
	655, 410, -1000, 8952, 18046, -1000, -1000, 15495, 8952, 16879,
	-1000, -1000, -1000, -1000, 15926, -1000, 8952, -1000, 314, 8952,
	-1000, 15926, 10275, 10275, 10275, 10275, 10275, 10275, 10275, 10275,
	10275, 10275, 10275, 10275, 10716, 359, 10275, -211, 635, 635,
	232, -364, 4085, -1000, 330, 314, 8952, 8952, 15926, -259,
	-260, -263, -1000, 8952, -386, 8952, -1000, -1000, -1000, -1000,
	-348, -266, 11591, -1000, 8952, 2763, 17668, -349, -56, 17997,
	-353, -1000, -1000, -91, -1000, -1000, -91, 483, -1000, 303,
	-1000, 17377, -1000, -1000, -1000, -1000, 12903, -1000, -1000, 296,
	569, 18657, 8952, 254, 247, 8952, 685, -1000, -1000, -1000,
	15064, 15064, 15064, 15064, -1000, 233, 653, -130, -200, -269,
	2763, -1000, -1000, 587, 1563, 8952, 8952, 75, 284, 50,
	1563, 8952, 8952, 15926, 18636, -354, -1000, 8952, 8952, -1000,
	16859, -1000, -355, -1000, 8952, -1000, -1000, 18657, -1000, -1000,
	655, -1000, -270, -272, 18657, 18657, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -273, -1000, -1000, 18657, 8952, 143, -1000,
	16840, -1000, -274, 18657, 330, 18657, -1000, 258, 258, 307,
	307, 307, 635, 609, 609, 609, 609, 609, 609, 232,
	313, 309, -212, -1000, 1472, 8952, -359, -1000, -1000, -1000,
	18657, 18657, -275, -1000, -1000, -1000, -386, 16803, -1000, 9834,
	-1000, 555, 115, -1000, -1000, -276, -72, -75, -1000, 8952,
	-366, 9393, 16345, -1000, -1000, -1000, -1000, 296, -1000, -278,
	-80, 8952, 8952, -1000, 8952, 8952, 107, -1000, -1000, -1000,
	-1000, -1000, -1000, -135, -136, 653, -1000, -1000, 1563, 1563,
	8952, 8952, 8952, 1563, 18636, -365, -1000, 15926, 1563, 1563,
	-1000, -1000, 16783, -1000, -1000, -1000, -1000, 18657, 163, 534,
	-1000, -1000, -1000, 10275, 305, -213, -1000, 15926, 16764, -1000,
	-1000, -1000, -367, -371, -214, 113, 11157, -1000, -1000, -1000,
	127, -281, 42, 18657, -46, -282, -80, -1000, -1000, 15064,
	18657, -375, -1000, 18657, -1000, -1000, -218, 8952, -1000, -1000,
	-243, 1563, 1563, 1563, -1000, -1000, -1000, 114, 8952, 13764,
	10275, 15926, -377, -1000, -1000, 8952, -1000, 8952, -1000, 528,
	-1000, -1000, 105, -1000, -1000, -1000, -379, -1000, 566, 8952,
	681, 18657, -1000, -283, 8511, 8511, -386, 13764, -378, -1000,
	-382, -392, 112, -1000, -48, 15064, -219, -1000, -396, -1000,
	-1000, -1000, -1000, 12025, 259, 87, 17434, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 665, -1000, 596, -1000, -1000,
	-1000, -1000, -1000, -1000, 8070, -1000,
}
var yyPgo = [...]int{

	0, 893, 892, 733, 72, 418, 397, 890, 888, 645,
	887, 17, 886, 46, 51, 905, 485, 516, 45, 885,
	884, 882, 55, 287, 35, 39, 11, 710, 876, 875,
	27, 22, 43, 873, 873, 41, 48, 871, 869, 868,
	867, 865, 864, 29, 16, 863, 862, 53, 383, 860,
	382, 390, 856, 854, 851, 848, 846, 398, 845, 384,
	843, 837, 837, 820, 819, 65, 357, 818, 13, 3,
	818, 817, 266, 816, 26, 815, 0, 814, 23, 811,
	6, 38, 12, 748, 44, 34, 809, 21, 808, 20,
	807, 805, 804, 803, 801, 36, 42, 800, 644, 50,
	799, 798, 797, 37, 25, 793, 792, 791, 8, 2,
	4, 788, 787, 786, 782, 5, 1, 47, 56, 52,
	780, 779, 770, 40, 15, 768, 767, 7, 24, 758,
	49, 757, 756, 752, 31, 213, 19, 28, 18, 750,
	726, 722, 560, 30, 10, 720, 475, 474, 718, 443,
	359, 715, 712, 707, 693, 189, 9, 33, 95, 693,
}
var yyR1 = [...]int{

	0, 1, 1, 29, 29, 29, 30, 30, 30, 71,
	13, 13, 13, 122, 122, 123, 123, 124, 124, 143,
	143, 143, 143, 143, 143, 157, 157, 157, 144, 144,
	144, 144, 144, 144, 144, 152, 152, 152, 152, 141,
	141, 36, 36, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 90, 90, 151, 151, 153, 153,
	149, 150, 145, 145, 154, 154, 146, 147, 148, 148,
	148, 148, 148, 148, 84, 84, 31, 31, 155, 155,
	155, 155, 158, 85, 85, 85, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	118, 118, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 102, 102, 102, 102, 102, 105, 105, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	132, 132, 133, 133, 133, 133, 126, 127, 127, 128,
	128, 130, 130, 131, 131, 131, 129, 129, 129, 129,
	19, 19, 20, 20, 20, 20, 20, 18, 18, 18,
	61, 61, 61, 125, 125, 125, 125, 125, 125, 11,
	11, 103, 103, 104, 104, 104, 156, 156, 119, 119,
	119, 120, 120, 39, 39, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 42, 45, 45, 46, 46,
	46, 46, 46, 46, 43, 44, 47, 47, 47, 2,
	2, 4, 4, 3, 3, 3, 3, 5, 5, 6,
	6, 6, 6, 6, 6, 6, 22, 22, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 23, 23, 83,
	83, 83, 10, 10, 12, 12, 26, 26, 27, 28,
	28, 25, 25, 78, 78, 79, 79, 80, 82, 82,
	57, 57, 56, 56, 58, 58, 59, 60, 60, 60,
	60, 64, 64, 108, 108, 107, 107, 109, 111, 111,
	111, 110, 112, 112, 113, 113, 114, 114, 114, 115,
	115, 116, 116, 116, 116, 116, 38, 38, 38, 38,
	48, 48, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 54, 54, 54, 55, 32, 32, 33,
	33, 7, 7, 24, 24, 34, 34, 37, 37, 99,
	99, 99, 100, 100, 101, 75, 75, 75, 74, 74,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 76, 76, 77, 77, 81, 81, 91, 94,
	94, 95, 93, 93, 92, 92, 121, 121, 65, 65,
	65, 65, 66, 66, 67, 67, 35, 35, 96, 96,
	97, 97, 98, 8, 8, 9, 9, 14, 14, 14,
	14, 63, 63, 72, 72, 62, 62, 70, 68, 140,
	140, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 89, 87, 86, 86, 86, 69,
	69, 69, 137, 137, 137, 159, 159, 159, 159, 134,
	134, 134, 134, 134, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 0, 2, 2, 0, 1,
	1, 3, 2, 1, 2, 2, 3, 1, 3, 2,
	3, 5, 6, 2, 3, 3, 4, 0, 1, 1,
	1, 1, 1, 2, 4, 1, 1, 1, 1, 2,
	3, 3, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 1, 1, 1, 1,
	5, 2, 1, 1, 1, 1, 5, 2, 2, 2,
	1, 3, 3, 2, 1, 0, 3, 0, 5, 2,
	5, 2, 1, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	1, 4, 1, 3, 3, 5, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 6, 3, 4, 1, 3, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 5, 6, 6, 7, 3, 4, 1,
	1, 4, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 3, 5, 6, 6, 4, 3, 1, 5, 1,
	1, 4, 1, 4, 1, 4, 1, 4, 1, 1,
	1, 1, 1, 1, 6, 4, 4, 4, 4, 6,
	5, 5, 5, 4, 6, 4, 4, 4, 4, 5,
	7, 7, 9, 5, 4, 6, 5, 7, 7, 7,
	2, 3, 3, 3, 4, 0, 4, 1, 3, 3,
	1, 1, 1, 2, 2, 0, 2, 4, 4, 6,
	1, 3, 3, 4, 4, 7, 5, 2, 2, 0,
	1, 2, 0, 1, 4, 1, 2, 1, 2, 1,
	3, 1, 3, 1, 3, 3, 1, 3, 3, 3,
	2, 1, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 2, 3, 0, 3, 3,
	2, 2, 1, 0, 2, 2, 3, 2, 1, 1,
	1, 3, 3, 1, 2, 4, 4, 1, 1, 9,
	9, 1, 2, 4, 4, 4, 2, 0, 3, 3,
	4, 4, 4, 4, 3, 2, 1, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 3, 1,
	3, 4, 3, 3, 0, 1, 3, 1, 2, 0,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 2, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 2, 2, 0, 1,
	4, 2, 2, 2, 2, 2, 1, 2, 2, 4,
	2, 2, 1, 1, 1, 0, 2, 5, 2, 3,
	1, 1, 1, 1, 3, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 0, 5, 0, 5, 0, 4,
	3, 5, 4, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 1, 4, 1, 3, 5, 1,
	2, 4, 2, 0, 1, 0, 1, 2, 2, 2,
	3, 5, 1, 2, 0, 2, 1, 0, 1, 1,
	1, 3, 3, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 2, 6, 2, 3,
	5, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -2, -3, -4, -6, -5, 452, 330, -7,
	363, 403, 455, -27, -26, 389, 198, 137, 265, -3,
	-4, -12, -10, 27, 122, 456, -38, -72, 260, -69,
	4, -135, -136, 19, 20, 21, 22, 23, 24, 25,
	26, 28, 29, 30, 38, 39, 41, 42, 44, 45,
	46, 53, 54, 55, 56, 57, 60, 61, 64, 66,
	67, 68, 69, 74, 75, 76, 77, 79, 80, 81,
	83, 84, 85, 86, 87, 88, 91, 92, 93, 101,
	102, 103, 104, 105, 106, 109, 111, 113, 114, 115,
	116, 117, 119, 120, 121, 124, 125, 126, 127, 128,
	130, 131, 132, 134, 135, 136, 138, 139, 140, 141,
	143, 144, 145, 148, 150, 151, 153, 155, 157, 161,
	162, 163, 165, 169, 171, 172, 173, 174, 175, 177,
	178, 179, 180, 182, 183, 184, 185, 186, 187, 189,
	192, 193, 194, 195, 201, 204, 206, 207, 208, 209,
	210, 213, 216, 219, 220, 221, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 242, 243, 246, 247, 249, 252, 254, 255, 256,
	258, 261, 262, 263, 266, 269, 272, 273, 274, 275,
	276, 277, 278, 280, 281, 283, 286, 287, 285, 289,
	290, 291, 292, 293, 294, 295, 296, 298, 299, 300,
	301, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	312, 313, 315, 316, 318, 319, 320, 322, 323, 324,
	325, 326, 327, 328, 329, 331, 332, 333, 334, 335,
	337, 338, 340, 341, 343, 344, 346, 348, 349, 350,
	351, 352, 353, 354, 355, 356, 357, 358, 361, 362,
	364, 366, 367, 368, 369, 370, 376, 377, 379, 382,
	383, 384, 385, 386, 387, 388, 391, 392, 393, 394,
	395, 398, 399, 400, 401, 402, 406, 408, 409, 410,
	411, 414, 417, 418, 419, 420, 421, 422, 432, 433,
	434, 47, 48, 50, 51, 62, 63, 70, 107, 108,
	142, 146, 152, 166, 168, 191, 196, 197, 199, 214,
	239, 241, 244, 251, 253, 267, 271, 282, 284, 297,
	321, 339, 345, 359, 372, 373, 378, 380, 403, 404,
	423, 424, 425, 426, 427, 428, 429, 430, 431, -98,
	452, -57, -48, -58, 154, -50, -51, -59, 218, 149,
	257, -60, -83, 27, 122, -83, -83, 53, 453, 453,
	-8, -9, -14, -15, 445, -17, 443, 444, -76, 245,
	435, -99, -121, -88, 452, -91, -105, -4, 142, 35,
	-100, -101, 9, 261, 321, -69, -89, 5, -87, 7,
	8, -140, -152, -158, 381, 147, 250, 58, -102, -106,
	4, -135, 10, 6, -137, -142, -153, -154, -155, 199,
	72, 95, 98, 99, 222, 223, 96, 100, 336, 396,
	94, 97, 59, 146, 271, 282, 359, 378, 380, 251,
	70, 166, 214, 424, 425, 426, 427, 428, 429, 430,
	431, 126, 48, 50, 51, 62, 63, 107, 108, 152,
	196, 197, 239, 241, 253, 297, 345, 372, 373, 404,
	-138, -149, -150, -146, -147, 43, 49, 78, 90, 158,
	160, 176, 190, 202, 203, 205, 215, 217, 240, 248,
	268, 270, 317, 342, 365, 407, -148, -9, 259, -98,
	445, -72, 452, -66, -65, 454, 450, -97, -96, -15,
	110, -49, -48, -56, -57, -59, 154, 296, 395, 243,
	340, 206, -51, -50, -52, -15, 27, -33, 151, 242,
	-53, -55, -15, -17, -64, 255, -5, -6, -4, -5,
	-5, -28, -25, -15, -22, 200, 456, 12, 71, 41,
	443, 444, 445, 446, 447, 448, 439, 440, 441, 16,
	17, 18, -76, 33, 264, 217, 435, 176, 342, 202,
	203, 248, 47, 181, -125, 36, 4, 9, 261, -74,
	-73, -15, -15, -15, -15, -15, 270, -15, -4, -11,
	403, -66, -4, -4, -119, 450, 452, 452, -66, 452,
	-87, -87, -87, 452, -92, -15, -37, 150, 154, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 284, -84, 406, -84, -84, -36, 452, -36,
	-90, 452, 63, 62, -84, -36, 452, -85, 437, 418,
	452, -85, 452, -31, 63, -22, 452, -72, -65, -68,
	445, -134, 4, -135, -136, -138, -139, 72, 97, 27,
	31, 32, 33, 34, 35, 36, 37, 40, 52, 58,
	59, 65, 71, 73, 82, 89, 94, 95, 96, 98,
	99, 100, 110, 112, 118, 122, 123, 129, 133, 137,
	147, 149, 154, 156, 159, 164, 167, 170, 181, 188,
	198, 200, 211, 212, 218, 222, 223, 245, 250, 257,
	259, 260, 264, 265, 279, 288, 302, 314, 330, 336,
	347, 360, 363, 371, 374, 375, 381, 389, 390, 396,
	397, 405, 412, 413, 415, 416, -15, 456, 453, 260,
	206, 340, -54, -86, 452, -89, 443, 444, -32, 321,
	322, -61, 249, 344, -63, -72, 456, 397, -29, 37,
	118, -18, 159, -21, 369, 367, 221, 163, 393, 363,
	-72, -14, -143, -144, 339, -141, -142, -151, -145, -155,
	-158, -137, 196, 197, 345, 48, 297, 152, 108, 107,
	253, 51, -149, -150, -146, -147, 373, 372, 199, 4,
	-135, 50, 63, 62, 404, 239, 241, -122, -69, 372,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, 217, 176, 342, 47,
	181, -15, 374, 250, 245, 381, 147, 391, 122, 255,
	124, -35, 360, 40, -81, -4, 452, -75, 34, 347,
	27, -134, 452, -99, 321, 452, 453, 456, -11, -120,
	451, -15, -119, -124, -74, -69, 9, 443, 444, 445,
	446, 447, 448, 439, 440, 441, 16, 17, 18, -11,
	453, 453, -103, 27, 122, 445, -104, -15, -71, -137,
	-117, 432, 235, 105, 173, 232, -118, 328, -89, -94,
	-95, 412, -111, 269, 452, 452, -89, -89, -89, -89,
	-15, -39, -40, 4, 432, 235, 105, 173, 232, 328,
	-87, -41, -15, -45, -16, -17, 443, 444, -76, 452,
	321, -46, -15, -11, -15, 52, 212, 375, -47, -15,
	159, -11, -15, -11, -11, -11, -11, 237, -17, -127,
	-128, -15, -130, 124, 84, 237, -15, -130, 452, -11,
	-89, -84, -84, -89, 372, 372, -89, -89, 337, -18,
	-11, 453, 451, 457, -96, 395, -32, -15, -89, -89,
	226, 456, -25, -77, -74, 261, -30, 436, -24, 413,
	-13, -20, -15, -23, 363, -23, 369, 367, 369, 367,
	-23, -72, -157, 35, -144, -117, 452, -36, -123, 454,
	-123, 434, 135, -15, -15, 374, -35, 360, -81, 135,
	-15, 250, 381, 147, 391, 122, 255, 124, 159, 452,
	-16, -16, -11, -4, 452, -124, 452, -11, -67, -15,
	456, 451, 451, 456, 453, 454, 453, -26, 456, -27,
	-103, -103, 453, 14, 15, 374, 374, 374, 374, 452,
	453, -93, -95, 129, -15, -110, -69, 452, 413, -15,
	453, 453, 453, 453, 36, 453, 159, 453, -42, 279,
	453, 12, 443, 444, 445, 446, 447, 448, 439, 440,
	441, 16, 17, 18, -76, 202, 181, 261, -16, -16,
	-16, -11, 452, 453, -43, -44, 159, 154, 36, -47,
	-47, -47, 453, 159, -11, 456, 453, 453, 453, 453,
	-134, -129, 277, 453, 456, 36, -15, -134, 456, -15,
	-11, 453, 453, 453, 434, 434, 453, 453, -69, -24,
	453, -15, 260, 453, -72, -30, 452, 151, 210, -78,
	167, -15, 456, 90, 240, 205, 36, 4, -72, -72,
	-23, -23, -23, -23, -72, 450, 450, -157, 35, -89,
	454, -36, -68, -15, -15, 135, 135, -15, -16, -16,
	-15, 135, 159, 452, -15, -156, -143, 33, 33, 453,
	-15, 453, -11, 453, 456, -65, 453, -15, -119, -124,
	453, -104, -26, -26, -15, -15, 235, 173, 232, -118,
	232, -118, -118, -89, -87, 133, -15, 371, -112, -69,
	-15, 453, -143, -15, -43, -15, -143, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	122, 245, 255, 124, -16, 456, -11, 453, -44, -43,
	-15, -15, -143, 453, 453, 453, -11, -15, 453, 456,
	453, -17, 53, -128, -134, -131, 285, 358, 453, 456,
	-132, 408, 36, 453, -85, -85, -31, -78, 451, -124,
	-82, 170, 53, -13, 205, 205, -13, 4, -72, -72,
	-72, -72, 451, -89, -89, 450, 453, -68, -15, -15,
	135, 33, 33, -15, -15, -156, 453, 456, -15, -15,
	453, 453, -15, -87, 453, 453, 453, -15, -113, 276,
	453, 453, -44, 159, 122, 255, 124, 452, -15, 453,
	453, 453, -126, -11, 423, 53, 301, 453, 414, 414,
	-15, -133, 456, -15, 243, -144, -82, 453, -108, 415,
	-15, -79, -80, -15, -13, -13, 397, 259, 451, 451,
	-89, -15, -15, -15, 453, -143, 453, -26, 53, -16,
	159, 452, -156, 453, 453, 456, 453, 452, 301, -17,
	453, 453, 350, 402, 453, -108, -107, -109, -69, 456,
	452, -15, 451, -114, 295, 322, -11, -16, -156, 453,
	-11, -127, 53, 433, 243, 456, 36, -80, -19, 4,
	453, -115, -116, 47, 386, 93, -15, -115, 453, 453,
	453, 301, 402, -109, -110, 456, 453, -116, 283, 153,
	321, 283, 153, 4, 33, -116,
}
var yyDef = [...]int{

	0, -2, 1, 329, -2, -2, 367, 0, 365, 341,
	0, 0, 2, -2, 0, 361, 361, 361, 0, 0,
	338, 504, 0, 364, 362, 0, 342, 416, 0, 513,
	539, 540, 541, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 441,
	0, 425, 383, 380, 0, 422, 423, 384, 0, 0,
	0, 392, 0, 359, 360, 0, 0, 0, 331, 332,
	347, 503, 505, 509, 510, 102, 0, 0, 0, 0,
	0, 0, 189, 190, 0, 192, 193, 194, 831, 0,
	199, 200, 472, 702, 851, 486, 521, 522, 523, 524,
	525, 0, 0, 0, 531, 532, 533, 485, 448, 207,
	-2, -2, 534, 535, 519, 35, 36, 37, 38, -2,
	872, 209, 210, 212, 214, 216, 218, 219, 220, 221,
	222, -2, 0, 832, 847, 848, 854, 857, 858, 844,
	828, 834, 840, 862, 863, 864, 865, 866, 867, 868,
	869, 618, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 841, -2, -2, -2, -2, -2, -2, -2,
	544, 58, 59, 64, 65, 870, 871, 873, 874, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 77, 347, 0, 442,
	417, 418, 0, 514, 492, 0, 0, 0, 500, 498,
	499, 335, 424, 336, 382, 385, 0, 0, 387, 0,
	389, 0, 420, 421, 426, 430, 431, 435, 439, 440,
	428, 0, 432, -2, 282, 0, 343, 337, 338, 344,
	345, 368, 369, 5, 279, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 122, 0, 0, 285, 0, 287, 0, 0,
	140, 142, 497, 0, 0, 0, 508, -2, 0, 283,
	459, 106, 107, 121, 125, 126, 0, 289, -2, 0,
	859, 195, 196, 197, 198, 0, 0, 0, -2, 0,
	526, 528, 99, 0, 0, 484, 400, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 317, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 61, 74, 69, 68, 51, 0, 50,
	48, 0, 75, 75, 73, 52, 0, 81, 0, 0,
	0, 79, 0, 67, 0, 279, 0, 0, 493, 488,
	489, 518, 549, 550, 551, 552, 553, 872, 875, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 945, 946, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 0, 0, 502, 381,
	0, 390, 0, 433, 0, 536, 0, 0, 429, 437,
	438, 386, 280, 0, 391, 511, 0, 0, 8, 3,
	4, 444, 0, 346, -2, -2, 676, 642, -2, 0,
	356, 506, 103, 27, 0, 28, 29, 30, 31, 32,
	99, 42, 43, 44, 45, 46, 47, 55, 42, 42,
	42, 53, 56, 57, 62, 63, 85, 85, 82, 542,
	543, 75, 75, 75, 70, 0, 75, 104, 13, 0,
	108, 109, 110, 111, 112, 113, -2, -2, -2, -2,
	-2, -2, 120, 123, 124, -2, 286, 288, 0, 497,
	0, -2, 0, 139, 0, 144, 146, 148, 0, 0,
	162, 0, 0, 496, 158, 476, 0, 0, 455, 456,
	457, 507, 0, 143, 0, 0, 494, 0, 0, 0,
	300, 289, 301, 0, 17, 0, 458, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	-2, 201, 367, 0, 0, 0, 291, 293, 0, -2,
	529, 86, 87, 88, 89, 90, 91, 100, 0, 483,
	479, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 305, 306, 307, 308, 309, 310, 311,
	312, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	851, 0, 289, 322, 0, 0, 0, 0, 0, 289,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 260, 0, 261, 262, 0, 0, 0, 0, 0,
	0, 71, 72, 0, 0, 0, 0, 0, 0, 444,
	0, 419, 490, 0, 501, 388, 0, 0, 537, 538,
	281, 0, 370, 8, 474, 0, 372, 0, 374, 0,
	277, 278, 10, 0, 357, 0, 358, 358, 358, 358,
	0, 355, 19, 23, 27, 33, 0, 39, 42, 0,
	14, 0, 0, -2, -2, 0, 0, 0, 159, 0,
	-2, 141, 145, 147, 149, 0, 0, 163, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 191, 290,
	0, 298, 299, 0, 473, 0, -2, 0, 0, 366,
	367, 367, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 0, 0, 398, 399, 403, 0, 0,
	211, 213, 215, 217, 0, 225, 0, 226, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 166, 167,
	181, 0, 0, 228, 320, 321, 0, 0, 0, 0,
	0, 0, 233, 0, 327, 0, 235, 236, 237, 238,
	0, 0, 0, 244, 0, 0, 265, 0, 0, 0,
	0, 41, 54, 85, 83, 84, 85, 77, 76, 374,
	363, 0, 427, 434, 512, 371, 0, 6, 7, 379,
	0, 443, 0, 0, 0, 0, 0, 12, 348, 349,
	0, 0, 0, 0, 354, 0, 0, 20, 24, 0,
	0, 40, 15, 105, -2, 0, 0, -2, 0, 0,
	-2, 0, 0, 0, -2, 0, 296, 0, 0, 477,
	0, -2, 0, 450, 0, 495, -2, 290, 302, 18,
	202, 292, 0, 0, 294, 295, 92, 93, 94, 95,
	96, 97, 98, 0, 530, 478, 482, 0, 405, 402,
	0, 208, 0, 303, 314, 315, 165, 168, 169, 170,
	171, 172, 173, -2, -2, -2, -2, -2, -2, 180,
	0, 0, 0, 187, 316, 0, 0, 453, 318, 319,
	324, 325, 0, 230, 231, 232, 326, 0, 239, 0,
	243, 266, 572, 258, 259, 0, 0, 0, 246, 0,
	255, 0, 0, 60, 80, 78, 66, 379, 491, 0,
	394, 0, 0, 272, 0, 0, 0, 11, 350, 351,
	352, 353, 25, 0, 0, 0, 34, 16, -2, -2,
	0, 0, 0, -2, -2, 0, 152, 0, -2, -2,
	161, 449, 290, 527, 203, 204, 101, 481, 367, 0,
	447, 224, 313, 0, 0, 0, 188, 0, 290, 452,
	229, 234, 0, 0, 861, 0, 0, 245, 263, 264,
	0, 0, 0, 250, 693, 0, 394, 475, 339, 0,
	378, 373, 375, 377, 273, 274, 0, 0, 26, 21,
	0, -2, -2, -2, 153, 297, 451, 408, 0, -2,
	0, 0, 0, 454, 240, 0, 241, 0, 267, 268,
	247, 248, 0, 251, 249, 340, 393, 395, 0, 0,
	0, 276, 22, 0, 0, 0, 404, -2, 0, 185,
	0, 0, 0, 252, 253, 0, 0, 376, 0, 270,
	401, 406, 409, -2, 794, 599, 0, 407, 186, 242,
	256, 269, 254, 396, 397, 0, 275, 0, 411, 412,
	413, 414, 415, 271, 0, 410,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 447, 3, 3,
	452, 453, 445, 443, 456, 444, 454, 446, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 457, 455,
	439, 441, 440, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 450, 3, 451, 448,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 442, 57782, 449, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lookahead func() int
}

func (p *yyParserImpl) Lookahead() int {
	return p.lookahead()
}

func yyNewParser() yyParser {
	p := &yyParserImpl{
		lookahead: func() int { return -1 },
	}
	return p
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yytoken := -1 // yychar translated into internal numbering
	yyrcvr.lookahead = func() int { return yychar }
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yychar = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar, yytoken = yylex1(yylex, &yylval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yychar = -1
		yytoken = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar, yytoken = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yychar = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:407
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:412
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yyVAL.sqlSelect.Semicolon = true
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:419
		{
			yyVAL.str = "asc"
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:420
		{
			yyVAL.str = "desc"
		}
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:421
		{
			yyVAL.str = ""
		}
	case 6:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:424
		{
			yyVAL.str = "first"
		}
	case 7:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:425
		{
			yyVAL.str = "last"
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:426
		{
			yyVAL.str = ""
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:435
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:439
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 12:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:443
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:450
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 14:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:454
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyDollar[2].anyName...)
		}
	case 15:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:461
		{
			yyVAL.anyName = AnyName{yyDollar[2].str}
		}
	case 16:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:465
		{
			yyVAL.anyName = append(yyDollar[1].anyName, yyDollar[3].str)
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:471
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:475
		{
			yyVAL.anyName = append(AnyName{yyDollar[1].str}, yyDollar[3].anyName...)
		}
	case 19:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:491
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayBounds = yyDollar[2].optArrayBounds
		}
	case 20:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:496
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyDollar[3].optArrayBounds
		}
	case 21:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:503
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyDollar[4].iconst}
		}
	case 22:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:509
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyDollar[5].iconst}
		}
	case 23:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:516
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:521
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:529
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, "")
		}
	case 26:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:533
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, yyDollar[3].iconst)
		}
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:537
		{
			yyVAL.optArrayBounds = nil
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:546
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, OptInterval: yyDollar[2].optInterval}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:550
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, TypeMods: []Expr{yyDollar[3].iconst}}
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:581
		{
			yyVAL.pgType = PgType{Name: AnyName{yyDollar[1].str}, TypeMods: yyDollar[2].fields}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:585
		{
			yyVAL.pgType = PgType{Name: append(AnyName{yyDollar[1].str}, yyDollar[2].anyName...), TypeMods: yyDollar[3].fields}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:590
		{
			yyVAL.fields = yyDollar[2].fields
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:591
		{
			yyVAL.fields = nil
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:598
		{
			yyVAL.pgType = PgType{Name: AnyName{"int"}}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:602
		{
			yyVAL.pgType = PgType{Name: AnyName{"integer"}}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:606
		{
			yyVAL.pgType = PgType{Name: AnyName{"smallint"}}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:610
		{
			yyVAL.pgType = PgType{Name: AnyName{"bigint"}}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:614
		{
			yyVAL.pgType = PgType{Name: AnyName{"real"}}
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:618
		{
			yyVAL.pgType = PgType{Name: AnyName{"float"}}
			if yyDollar[2].iconst != IntegerConst("") {
				yyVAL.pgType.TypeMods = []Expr{yyDollar[2].iconst}
			}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:625
		{
			yyVAL.pgType = PgType{Name: AnyName{"double precision"}}
		}
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:629
		{
			yyVAL.pgType = PgType{Name: AnyName{"decimal"}, TypeMods: yyDollar[2].fields}
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:633
		{
			yyVAL.pgType = PgType{Name: AnyName{"dec"}, TypeMods: yyDollar[2].fields}
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:637
		{
			yyVAL.pgType = PgType{Name: AnyName{"numeric"}, TypeMods: yyDollar[2].fields}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:641
		{
			yyVAL.pgType = PgType{Name: AnyName{"bool"}}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:647
		{
			yyVAL.iconst = yyDollar[2].iconst
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:651
		{
			yyVAL.iconst = IntegerConst("")
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:665
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType.Name = AnyName{"varbit"}
			} else {
				yyVAL.pgType.Name = AnyName{"bit"}
			}
			yyVAL.pgType.TypeMods = yyDollar[4].fields
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:677
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varbit"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"bit"}}
			}
		}
	case 66:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:700
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.TypeMods = []Expr{yyDollar[3].iconst}
			yyVAL.pgType.CharSet = yyDollar[5].str
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:708
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.CharSet = yyDollar[2].str
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:715
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:723
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:731
		{
			yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:735
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:743
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:751
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:761
		{
			yyVAL.boolean = true
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:765
		{
			yyVAL.boolean = false
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:771
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:775
		{
			yyVAL.str = ""
		}
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:784
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, TypeMods: []Expr{yyDollar[3].iconst}, WithTimeZone: yyDollar[5].boolean}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:788
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, WithTimeZone: yyDollar[2].boolean}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:792
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, TypeMods: []Expr{yyDollar[3].iconst}, WithTimeZone: yyDollar[5].boolean}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:796
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, WithTimeZone: yyDollar[2].boolean}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:805
		{
			yyVAL.boolean = true
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:809
		{
			yyVAL.boolean = false
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:813
		{
			yyVAL.boolean = false
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:819
		{
			yyVAL.optInterval = &OptInterval{Left: "year"}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:823
		{
			yyVAL.optInterval = &OptInterval{Left: "month"}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:827
		{
			yyVAL.optInterval = &OptInterval{Left: "day"}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:831
		{
			yyVAL.optInterval = &OptInterval{Left: "hour"}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:835
		{
			yyVAL.optInterval = &OptInterval{Left: "minute"}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:839
		{
			yyVAL.optInterval = &OptInterval{Second: yyDollar[1].intervalSecond}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:843
		{
			yyVAL.optInterval = &OptInterval{Left: "year", Right: "month"}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:847
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "hour"}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:851
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "minute"}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:855
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Second: yyDollar[3].intervalSecond}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:859
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Right: "minute"}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:863
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Second: yyDollar[3].intervalSecond}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:867
		{
			yyVAL.optInterval = &OptInterval{Left: "minute", Second: yyDollar[3].intervalSecond}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:871
		{
			yyVAL.optInterval = nil
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:877
		{
			yyVAL.intervalSecond = &IntervalSecond{}
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:881
		{
			yyVAL.intervalSecond = &IntervalSecond{Precision: yyDollar[3].iconst}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:917
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:921
		{
			yyVAL.expr = CollateExpr{Expr: yyDollar[1].expr, Collation: yyDollar[3].anyName}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:925
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyDollar[1].expr, TimeZone: yyDollar[5].expr}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:938
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyDollar[2].expr}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:942
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyDollar[2].expr}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:946
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"+"}, Right: yyDollar[3].expr}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:950
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"-"}, Right: yyDollar[3].expr}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:954
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"*"}, Right: yyDollar[3].expr}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:958
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"/"}, Right: yyDollar[3].expr}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:962
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"%"}, Right: yyDollar[3].expr}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:966
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"^"}, Right: yyDollar[3].expr}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:970
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<"}, Right: yyDollar[3].expr}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:974
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">"}, Right: yyDollar[3].expr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:978
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"="}, Right: yyDollar[3].expr}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:982
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<="}, Right: yyDollar[3].expr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:986
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">="}, Right: yyDollar[3].expr}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:990
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"!="}, Right: yyDollar[3].expr}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:994
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].anyName, Right: yyDollar[3].expr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:998
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].anyName, Expr: yyDollar[2].expr}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1002
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].anyName}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1006
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "and", Right: yyDollar[3].expr}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1010
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "or", Right: yyDollar[3].expr}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1014
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1018
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1022
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1026
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1030
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr}
		}
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1034
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1038
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr}
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1042
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1046
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1050
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1055
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1059
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1063
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr}
		}
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1067
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr, Escape: yyDollar[7].expr}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1080
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "null"}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1084
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "null"}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1088
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "null"}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1092
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "null"}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1096
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].row, Operator: AnyName{"overlaps"}, Right: yyDollar[3].row}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1100
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "true"}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1104
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "true"}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1108
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "false"}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1112
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "false"}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1116
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "unknown"}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1120
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "unknown"}
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1124
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is distinct from"}, Right: yyDollar[5].expr}
		}
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1128
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is not distinct from"}, Right: yyDollar[6].expr}
		}
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1132
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1136
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1140
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1144
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1148
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Symmetric: true, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1152
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Symmetric: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1156
		{
			yyVAL.expr = InExpr{Value: yyDollar[1].expr, In: yyDollar[3].expr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1160
		{
			yyVAL.expr = InExpr{Value: yyDollar[1].expr, Not: true, In: yyDollar[4].expr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1164
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyDollar[1].expr, Op: yyDollar[2].subqueryOp, Type: yyDollar[3].str, Query: yyDollar[4].sqlSelect}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1168
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyDollar[1].expr, Op: yyDollar[2].subqueryOp, Type: yyDollar[3].str, Query: ParenExpr{Expr: yyDollar[5].expr}}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1172
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "document"}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1176
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "document"}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1191
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1195
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1199
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyDollar[2].expr}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1203
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyDollar[2].expr}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1207
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"+"}, Right: yyDollar[3].expr}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1211
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"-"}, Right: yyDollar[3].expr}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1215
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"*"}, Right: yyDollar[3].expr}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1219
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"/"}, Right: yyDollar[3].expr}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1223
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"%"}, Right: yyDollar[3].expr}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1227
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"^"}, Right: yyDollar[3].expr}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1231
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<"}, Right: yyDollar[3].expr}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1235
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">"}, Right: yyDollar[3].expr}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1239
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"="}, Right: yyDollar[3].expr}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1243
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<="}, Right: yyDollar[3].expr}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1247
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">="}, Right: yyDollar[3].expr}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1251
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"!="}, Right: yyDollar[3].expr}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1255
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].anyName, Right: yyDollar[3].expr}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1259
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].anyName, Expr: yyDollar[2].expr}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1263
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].anyName}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1267
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is distinct from"}, Right: yyDollar[5].expr}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1271
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is not distinct from"}, Right: yyDollar[6].expr}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1275
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 186:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1279
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1283
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "document"}
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1287
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "document"}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1300
		{
			yyVAL.expr = yyDollar[1].columnRef
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1301
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1309
		{
			yyVAL.expr = ParenExpr{Expr: yyDollar[2].expr, Indirection: yyDollar[4].indirection}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1312
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1313
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1315
		{
			yyVAL.expr = yyDollar[1].sqlSelect
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1319
		{
			yyDollar[1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyDollar[1].sqlSelect, Indirection: yyDollar[2].indirection}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1324
		{
			yyVAL.expr = ExistsExpr(*yyDollar[2].sqlSelect)
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1328
		{
			yyVAL.expr = ArraySubselect(*yyDollar[2].sqlSelect)
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1331
		{
			yyVAL.expr = ArrayConstructorExpr(yyDollar[2].arrayExpr)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1335
		{
			yyVAL.expr = yyDollar[1].row
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1339
		{
			yyVAL.expr = yyDollar[1].row
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1350
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].anyName}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1354
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].anyName, Args: yyDollar[3].funcArgs, OrderClause: yyDollar[4].orderClause}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1362
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].anyName, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 204:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1366
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].anyName, Distinct: true, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1370
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].anyName, Star: true}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1386
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyDollar[1].funcApplication, FilterClause: yyDollar[2].filterClause, OverClause: yyDollar[3].overClause}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1390
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1403
		{
			yyVAL.expr = FuncApplication{Name: AnyName{"collation for"}, Args: []FuncArg{{Expr: yyDollar[4].expr}}}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1407
		{
			yyVAL.expr = FuncExprNoParens("current_date")
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1411
		{
			yyVAL.expr = FuncExprNoParens("current_time")
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1415
		{
			yyVAL.expr = FuncApplication{Name: AnyName{"current_time"}, Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1419
		{
			yyVAL.expr = FuncExprNoParens("current_timestamp")
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1423
		{
			yyVAL.expr = FuncApplication{Name: AnyName{"current_timestamp"}, Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1427
		{
			yyVAL.expr = FuncExprNoParens("localtime")
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1431
		{
			yyVAL.expr = FuncApplication{Name: AnyName{"localtime"}, Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1435
		{
			yyVAL.expr = FuncExprNoParens("localtimestamp")
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1439
		{
			yyVAL.expr = FuncApplication{Name: AnyName{"localtimestamp"}, Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1443
		{
			yyVAL.expr = FuncExprNoParens("current_role")
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1447
		{
			yyVAL.expr = FuncExprNoParens("current_user")
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1451
		{
			yyVAL.expr = FuncExprNoParens("session_user")
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1455
		{
			yyVAL.expr = FuncExprNoParens("user")
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1459
		{
			yyVAL.expr = FuncExprNoParens("current_catalog")
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1463
		{
			yyVAL.expr = FuncExprNoParens("current_schema")
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1467
		{
			yyVAL.expr = CastFunc{Name: "cast", Expr: yyDollar[3].expr, Type: yyDollar[5].pgType}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1471
		{
			yyVAL.expr = ExtractExpr(*yyDollar[3].extractList)
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1475
		{
			yyVAL.expr = OverlayExpr(yyDollar[3].overlayList)
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1479
		{
			yyVAL.expr = PositionExpr(*yyDollar[3].positionList)
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1483
		{
			if yyDollar[3].placeholder == nil {
				yyVAL.expr = FuncApplication{Name: AnyName{"substring"}}
			} else if se, ok := yyDollar[3].placeholder.(SubstrList); ok {
				yyVAL.expr = SubstrExpr(se)
			} else {
				var args []FuncArg
				for _, a := range yyDollar[3].placeholder.([]Expr) {
					args = append(args, FuncArg{Expr: a})
				}
				yyVAL.expr = FuncApplication{Name: AnyName{"substring"}, Args: args}
			}
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1497
		{
			yyVAL.expr = CastFunc{Name: "treat", Expr: yyDollar[3].expr, Type: yyDollar[5].pgType}
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1501
		{
			yyVAL.expr = TrimExpr{Direction: "both", TrimList: yyDollar[4].trimList}
		}
	case 231:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1505
		{
			yyVAL.expr = TrimExpr{Direction: "leading", TrimList: yyDollar[4].trimList}
		}
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1509
		{
			yyVAL.expr = TrimExpr{Direction: "trailing", TrimList: yyDollar[4].trimList}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1513
		{
			yyVAL.expr = TrimExpr{TrimList: yyDollar[3].trimList}
		}
	case 234:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1517
		{
			yyVAL.expr = FuncApplication{Name: AnyName{"nullif"}, Args: []FuncArg{{Expr: yyDollar[3].expr}, {Expr: yyDollar[5].expr}}}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1521
		{
			fa := FuncApplication{Name: AnyName{"coalesce"}}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1529
		{
			fa := FuncApplication{Name: AnyName{"greatest"}}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1537
		{
			fa := FuncApplication{Name: AnyName{"least"}}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1545
		{
			fa := FuncApplication{Name: AnyName{"xmlconcat"}}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 239:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1553
		{
			yyVAL.expr = XmlElement{Name: yyDollar[4].str}
		}
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1557
		{
			yyVAL.expr = XmlElement{Name: yyDollar[4].str, Attributes: yyDollar[6].xmlAttributes}
		}
	case 241:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1561
		{
			yyVAL.expr = XmlElement{Name: yyDollar[4].str, Body: yyDollar[6].fields}
		}
	case 242:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1565
		{
			yyVAL.expr = XmlElement{Name: yyDollar[4].str, Attributes: yyDollar[6].xmlAttributes, Body: yyDollar[8].fields}
		}
	case 243:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1569
		{
			yyVAL.expr = XmlExists{Path: yyDollar[3].expr, Body: yyDollar[4].xmlExistsArgument}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1573
		{
			yyVAL.expr = XmlForest(yyDollar[3].xmlAttributeEls)
		}
	case 245:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1577
		{
			yyVAL.expr = XmlParse{Type: yyDollar[3].str, Content: yyDollar[4].expr, WhitespaceOption: yyDollar[5].str}
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1581
		{
			yyVAL.expr = XmlPi{Name: yyDollar[4].str}
		}
	case 247:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1585
		{
			yyVAL.expr = XmlPi{Name: yyDollar[4].str, Content: yyDollar[6].expr}
		}
	case 248:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1589
		{
			yyVAL.expr = XmlRoot{Xml: yyDollar[3].expr, Version: yyDollar[5].xmlRootVersion, Standalone: yyDollar[6].str}
		}
	case 249:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1593
		{
			yyVAL.expr = XmlSerialize{XmlType: yyDollar[3].str, Content: yyDollar[4].expr, Type: yyDollar[6].pgType}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1602
		{
			yyVAL.xmlRootVersion = XmlRootVersion{Expr: yyDollar[2].expr}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1606
		{
			yyVAL.xmlRootVersion = XmlRootVersion{}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1611
		{
			yyVAL.str = "yes"
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1612
		{
			yyVAL.str = "no"
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1613
		{
			yyVAL.str = "no value"
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1614
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1618
		{
			yyVAL.xmlAttributes = XmlAttributes(yyDollar[3].xmlAttributeEls)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1624
		{
			yyVAL.xmlAttributeEls = []XmlAttributeEl{yyDollar[1].xmlAttributeEl}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1628
		{
			yyVAL.xmlAttributeEls = append(yyDollar[1].xmlAttributeEls, yyDollar[3].xmlAttributeEl)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1634
		{
			yyVAL.xmlAttributeEl = XmlAttributeEl{Value: yyDollar[1].expr, Name: yyDollar[3].str}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1638
		{
			yyVAL.xmlAttributeEl = XmlAttributeEl{Value: yyDollar[1].expr}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1643
		{
			yyVAL.str = "document"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1644
		{
			yyVAL.str = "content"
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1647
		{
			yyVAL.str = "preserve whitespace"
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1648
		{
			yyVAL.str = "strip whitespace"
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1649
		{
			yyVAL.str = ""
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1654
		{
			yyVAL.xmlExistsArgument = XmlExistsArgument{Arg: yyDollar[2].expr}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1658
		{
			yyVAL.xmlExistsArgument = XmlExistsArgument{Arg: yyDollar[2].expr, RightByRef: true}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1662
		{
			yyVAL.xmlExistsArgument = XmlExistsArgument{LeftByRef: true, Arg: yyDollar[4].expr}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1666
		{
			yyVAL.xmlExistsArgument = XmlExistsArgument{LeftByRef: true, Arg: yyDollar[4].expr, RightByRef: true}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1673
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1677
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1683
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: ",", Right: yyDollar[3].expr}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1687
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "cross join", Right: yyDollar[4].expr}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1691
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "natural join", Right: yyDollar[4].expr}
		}
	case 275:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1695
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, Using: yyDollar[6].identifiers}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1699
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, On: yyDollar[5].expr}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1705
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1709
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1712
		{
			yyVAL.fromClause = nil
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1716
		{
			yyVAL.str = "nowait"
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1717
		{
			yyVAL.str = "skip locked"
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1718
		{
			yyVAL.str = ""
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1722
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{yyDollar[1].str}}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1726
		{
			yyVAL.subqueryOp = SubqueryOp{Operator: true, Name: yyDollar[3].anyName}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1730
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"like"}}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1734
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not like"}}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1738
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"ilike"}}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1742
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not ilike"}}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1756
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1760
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1767
		{
			yyVAL.funcArgs = []FuncArg{yyDollar[1].funcArg}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1771
		{
			yyVAL.funcArgs = append(yyDollar[1].funcArgs, yyDollar[3].funcArg)
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1777
		{
			yyVAL.funcArg = FuncArg{Expr: yyDollar[1].expr}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1781
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: ":=", Expr: yyDollar[3].expr}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1785
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: "=>", Expr: yyDollar[3].expr}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1791
		{
			yyVAL.pgTypes = []PgType{yyDollar[1].pgType}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1795
		{
			yyVAL.pgTypes = append(yyDollar[1].pgTypes, yyDollar[3].pgType)
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1801
		{
			yyVAL.arrayExpr = ArrayExpr(yyDollar[2].fields)
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1805
		{
			yyVAL.arrayExpr = yyDollar[2].arrayExpr
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1809
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1815
		{
			yyVAL.arrayExpr = ArrayExpr{yyDollar[1].arrayExpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1819
		{
			yyVAL.arrayExpr = append(yyDollar[1].arrayExpr, yyDollar[3].arrayExpr)
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1825
		{
			yyVAL.extractList = &ExtractList{Extract: yyDollar[1].expr, Time: yyDollar[3].expr}
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1829
		{
			yyVAL.extractList = nil
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1837
		{
			yyVAL.expr = AnyName{yyDollar[1].str}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1838
		{
			yyVAL.expr = AnyName{"year"}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1839
		{
			yyVAL.expr = AnyName{"month"}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1840
		{
			yyVAL.expr = AnyName{"day"}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1841
		{
			yyVAL.expr = AnyName{"hour"}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1842
		{
			yyVAL.expr = AnyName{"minute"}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1843
		{
			yyVAL.expr = AnyName{"second"}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1844
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1854
		{
			yyVAL.overlayList = OverlayList{Dest: yyDollar[1].expr, Placing: yyDollar[2].expr, From: yyDollar[3].expr, For: yyDollar[4].expr}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1858
		{
			yyVAL.overlayList = OverlayList{Dest: yyDollar[1].expr, Placing: yyDollar[2].expr, From: yyDollar[3].expr}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1864
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1872
		{
			yyVAL.positionList = &PositionList{Substring: yyDollar[1].expr, String: yyDollar[3].expr}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1875
		{
			yyVAL.positionList = nil
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1891
		{
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, From: yyDollar[2].expr, For: yyDollar[3].expr}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1895
		{
			/* not legal per SQL99, but might as well allow it */
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, From: yyDollar[3].expr, For: yyDollar[2].expr}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1899
		{
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, From: yyDollar[2].expr}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1903
		{
			yyVAL.placeholder = SubstrList{Source: yyDollar[1].expr, For: yyDollar[2].expr}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1907
		{
			yyVAL.placeholder = yyDollar[1].fields
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1911
		{
			yyVAL.placeholder = nil
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1917
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1923
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1929
		{
			yyVAL.trimList = TrimList{Left: yyDollar[1].expr, From: true, Right: yyDollar[3].fields}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1933
		{
			yyVAL.trimList = TrimList{From: true, Right: yyDollar[2].fields}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1937
		{
			yyVAL.trimList = TrimList{Right: yyDollar[1].fields}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1993
		{
			yyDollar[2].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1997
		{
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2001
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2007
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2012
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[3].lockingClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[4].limitClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2019
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[3].limitClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[4].lockingClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2028
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 339:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:2062
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyDollar[3].fields
			ss.IntoClause = yyDollar[4].intoClause
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 340:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:2076
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyDollar[2].fields
			ss.TargetList = yyDollar[3].fields
			ss.IntoClause = yyDollar[4].intoClause
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2089
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyDollar[1].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2095
		{
			ss := &SimpleSelect{}
			ss.Table = yyDollar[2].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2101
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2110
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2119
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2131
		{
			yyVAL.intoClause = yyDollar[2].intoClause
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2135
		{
			yyVAL.intoClause = nil
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2145
		{
			yyVAL.intoClause = &IntoClause{Options: "temporary", OptTable: yyDollar[2].boolean, Target: yyDollar[3].anyName}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2149
		{
			yyVAL.intoClause = &IntoClause{Options: "temp", OptTable: yyDollar[2].boolean, Target: yyDollar[3].anyName}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2153
		{
			yyVAL.intoClause = &IntoClause{Options: "local temporary", OptTable: yyDollar[3].boolean, Target: yyDollar[4].anyName}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2157
		{
			yyVAL.intoClause = &IntoClause{Options: "local temp", OptTable: yyDollar[3].boolean, Target: yyDollar[4].anyName}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2161
		{
			yyVAL.intoClause = &IntoClause{Options: "global temporary", OptTable: yyDollar[3].boolean, Target: yyDollar[4].anyName}
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2165
		{
			yyVAL.intoClause = &IntoClause{Options: "global temp", OptTable: yyDollar[3].boolean, Target: yyDollar[4].anyName}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2169
		{
			yyVAL.intoClause = &IntoClause{Options: "unlogged", OptTable: yyDollar[2].boolean, Target: yyDollar[3].anyName}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2173
		{
			yyVAL.intoClause = &IntoClause{OptTable: true, Target: yyDollar[2].anyName}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2177
		{
			yyVAL.intoClause = &IntoClause{Target: yyDollar[1].anyName}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2182
		{
			yyVAL.boolean = true
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2183
		{
			yyVAL.boolean = false
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2186
		{
			yyVAL.boolean = true
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2187
		{
			yyVAL.boolean = false
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2188
		{
			yyVAL.boolean = false
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2193
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2194
		{
			yyVAL.fields = yyDollar[4].fields
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2197
		{
			yyVAL.placeholder = nil
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2198
		{
			yyVAL.placeholder = nil
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2201
		{
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2202
		{
			yyVAL.orderClause = nil
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2205
		{
			yyVAL.orderClause = yyDollar[3].orderClause
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2209
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyDollar[1].orderExpr}}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2213
		{
			yyDollar[1].orderClause.Exprs = append(yyDollar[1].orderClause.Exprs, yyDollar[3].orderExpr)
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2221
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Using: yyDollar[3].anyName, Nulls: yyDollar[4].str}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2225
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Order: yyDollar[2].str, Nulls: yyDollar[3].str}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2250
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyDollar[3].fields}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2251
		{
			yyVAL.groupByClause = nil
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2255
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2259
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2272
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2273
		{
			yyVAL.expr = nil
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2276
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2277
		{
			yyVAL.lockingClause = nil
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2280
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2281
		{
			yyVAL.lockingClause = nil
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2285
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyDollar[1].lockingItem}}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2289
		{
			yyDollar[1].lockingClause.Locks = append(yyDollar[1].lockingClause.Locks, yyDollar[2].lockingItem)
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2296
		{
			yyVAL.lockingItem = LockingItem{Strength: yyDollar[1].str, LockedRels: yyDollar[2].anyNames, WaitPolicy: yyDollar[3].str}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2301
		{
			yyVAL.str = "update"
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2302
		{
			yyVAL.str = "no key update"
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2303
		{
			yyVAL.str = "share"
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2304
		{
			yyVAL.str = "key share"
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2307
		{
			yyVAL.anyNames = yyDollar[2].anyNames
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2308
		{
			yyVAL.anyNames = nil
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2316
		{
			yyVAL.windowDefinitions = yyDollar[2].windowDefinitions
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2319
		{
			yyVAL.windowDefinitions = nil
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2323
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyDollar[1].windowDefinition}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2327
		{
			yyVAL.windowDefinitions = append(yyDollar[1].windowDefinitions, yyDollar[3].windowDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2333
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyDollar[1].str, Specification: yyDollar[3].windowSpecification}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2339
		{
			spec := yyDollar[2].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2344
		{
			yyVAL.overClause = &OverClause{Name: yyDollar[2].str}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2347
		{
			yyVAL.overClause = nil
		}
	case 401:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2351
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyDollar[2].str, PartitionClause: yyDollar[3].partitionClause, OrderClause: yyDollar[4].orderClause, FrameClause: yyDollar[5].frameClause}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2366
		{
			yyVAL.str = yyDollar[1].str
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2367
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2370
		{
			yyVAL.partitionClause = PartitionClause(yyDollar[3].fields)
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2371
		{
			yyVAL.partitionClause = nil
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2382
		{
			yyDollar[2].frameClause.Mode = "range"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2387
		{
			yyDollar[2].frameClause.Mode = "rows"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2392
		{
			yyVAL.frameClause = nil
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2398
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[1].frameBound}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2402
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[2].frameBound, End: yyDollar[4].frameBound}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2413
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2417
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2421
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2425
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "preceding"}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2429
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "following"}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2437
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].anyName}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2441
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].anyName, Star: true}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2445
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[2].anyName, Only: true}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2449
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[3].anyName, Only: true}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2457
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr, Offset: yyDollar[2].expr}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2461
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[2].expr, Offset: yyDollar[1].expr}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2465
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2469
		{
			yyVAL.limitClause = &LimitClause{Offset: yyDollar[1].expr}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2476
		{
			yyVAL.limitClause = nil
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2480
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2485
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2491
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2496
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2501
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2503
		{
			yyVAL.expr = nil
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2508
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2517
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2518
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2519
		{
			yyVAL.expr = IntegerConst("1")
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2526
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2530
		{
			yyVAL.placeholder = 0
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2531
		{
			yyVAL.placeholder = 0
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2534
		{
			yyVAL.placeholder = 0
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2535
		{
			yyVAL.placeholder = 0
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2539
		{
			yyVAL.valuesClause = ValuesClause{yyDollar[2].valuesRow}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2543
		{
			yyVAL.valuesClause = append(yyDollar[1].valuesClause, yyDollar[3].valuesRow)
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2560
		{
			yyVAL.whereClause = &WhereClause{Expr: yyDollar[2].expr}
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2561
		{
			yyVAL.whereClause = nil
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2570
		{
			panic("TODO")
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2571
		{
			yyVAL.placeholder = nil
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2576
		{
			yyVAL.filterClause = &FilterClause{Expr: yyDollar[4].expr}
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2579
		{
			yyVAL.filterClause = nil
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2591
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyDollar[3].fields}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2595
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2599
		{
			yyVAL.row = Row{Exprs: append(yyDollar[2].fields, yyDollar[4].expr)}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2605
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyDollar[3].fields}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2609
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2615
		{
			yyVAL.row = Row{Exprs: append(yyDollar[2].fields, yyDollar[4].expr)}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2620
		{
			yyVAL.str = "any"
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2621
		{
			yyVAL.str = "some"
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2622
		{
			yyVAL.str = "all"
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2625
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2626
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2629
		{
			yyVAL.str = "+"
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2630
		{
			yyVAL.str = "-"
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2631
		{
			yyVAL.str = "*"
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2632
		{
			yyVAL.str = "/"
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2633
		{
			yyVAL.str = "%"
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2634
		{
			yyVAL.str = "^"
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2635
		{
			yyVAL.str = "<"
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2636
		{
			yyVAL.str = ">"
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2637
		{
			yyVAL.str = "="
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2638
		{
			yyVAL.str = "<="
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2639
		{
			yyVAL.str = ">="
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2640
		{
			yyVAL.str = "<>"
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2643
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2644
		{
			yyVAL.anyName = yyDollar[3].anyName
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2647
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2648
		{
			yyVAL.anyName = yyDollar[3].anyName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2652
		{
			yyVAL.expr = yyDollar[1].sqlSelect
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2656
		{
			yyVAL.expr = ValuesRow(yyDollar[2].fields)
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2669
		{
			yyVAL.expr = CaseExpr{CaseArg: yyDollar[2].expr, WhenClauses: yyDollar[3].whenClauses, Default: yyDollar[4].expr}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2676
		{
			yyVAL.whenClauses = []WhenClause{yyDollar[1].whenClause}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2680
		{
			yyVAL.whenClauses = append(yyDollar[1].whenClauses, yyDollar[2].whenClause)
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2686
		{
			yyVAL.whenClause = WhenClause{When: yyDollar[2].expr, Then: yyDollar[4].expr}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2691
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2692
		{
			yyVAL.expr = nil
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2695
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2696
		{
			yyVAL.expr = nil
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2700
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2704
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str, Indirection: yyDollar[2].indirection}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2712
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyDollar[2].str}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2716
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2720
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr}
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2724
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr, UpperSubscript: yyDollar[4].expr}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2729
		{
			yyVAL.indirection = Indirection{yyDollar[1].indirectionEl}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2730
		{
			yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2733
		{
			yyVAL.indirection = nil
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2735
		{
			if yyDollar[1].indirection != nil {
				yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyDollar[2].indirectionEl}
			}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2745
		{
			yyVAL.placeholder = nil
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2749
		{
			yyVAL.placeholder = nil
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2761
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2762
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2766
		{
			yyVAL.valuesRow = ValuesRow{yyDollar[1].expr}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2770
		{
			yyVAL.valuesRow = append(yyDollar[1].valuesRow, yyDollar[3].expr)
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2781
		{
			yyVAL.valuesRow = yyDollar[2].valuesRow
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2792
		{
			yyVAL.fields = yyDollar[1].fields
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2793
		{
			yyVAL.fields = nil
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2796
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2798
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2804
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2808
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2813
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2827
		{
			yyVAL.anyNames = []AnyName{yyDollar[1].anyName}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2831
		{
			yyVAL.anyNames = append(yyDollar[1].anyNames, yyDollar[3].anyName)
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2844
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2848
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
			for _, s := range yyDollar[2].indirection {
				yyVAL.anyName = append(yyVAL.anyName, s.Name)
			}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2856
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2858
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2863
		{
			yyVAL.str = yyDollar[1].str
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2866
		{
			yyVAL.str = yyDollar[1].str
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2879
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2883
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
			for _, s := range yyDollar[2].indirection {
				yyVAL.anyName = append(yyVAL.anyName, s.Name)
			}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2896
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2900
		{
			yyVAL.expr = FloatConst(yyDollar[1].str)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2904
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2908
		{
			yyVAL.expr = BitConst(yyDollar[1].str)
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2912
		{
			yyVAL.expr = BitConst(yyDollar[1].str)
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2916
		{
			yyVAL.expr = ConstTypeExpr{Typename: PgType{Name: yyDollar[1].anyName}, Expr: yyDollar[2].expr}
		}
	case 527:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2920
		{
			pgType := PgType{Name: yyDollar[1].anyName}

			/*
			 * We must use func_arg_list and opt_sort_clause in the
			 * production to avoid reduce/reduce conflicts, but we
			 * don't actually wish to allow NamedArgExpr in this
			 * context, nor ORDER BY.
			 */

			for _, arg := range yyDollar[3].funcArgs {
				if arg.Name != "" {
					yylex.Error("type modifier cannot have parameter name")
				}

				pgType.TypeMods = append(pgType.TypeMods, Expr(arg))
			}

			if yyDollar[4].orderClause != nil {
				yylex.Error("type modifier cannot have ORDER BY")
			}

			yyVAL.expr = ConstTypeExpr{Typename: pgType, Expr: yyDollar[6].expr}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2944
		{
			yyVAL.expr = ConstTypeExpr{Typename: yyDollar[1].pgType, Expr: yyDollar[2].expr}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2948
		{
			yyVAL.expr = ConstIntervalExpr{Value: yyDollar[2].expr, OptInterval: yyDollar[3].optInterval}
		}
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2952
		{
			yyVAL.expr = ConstIntervalExpr{Precision: yyDollar[3].iconst, Value: yyDollar[5].expr}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2956
		{
			yyVAL.expr = BoolConst(true)
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2960
		{
			yyVAL.expr = BoolConst(false)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2964
		{
			yyVAL.expr = NullConst{}
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2968
		{
			yyVAL.iconst = IntegerConst(yyDollar[1].str)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2969
		{
			yyVAL.expr = StringConst(yyDollar[1].str)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2972
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2973
		{
			yyVAL.expr = "+" + yyDollar[2].iconst
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2974
		{
			yyVAL.expr = "-" + yyDollar[2].iconst
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3013
		{
			yyVAL.str = yyDollar[1].str
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3014
		{
			yyVAL.str = yyDollar[1].str
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3015
		{
			yyVAL.str = yyDollar[1].str
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3016
		{
			yyVAL.str = yyDollar[1].str
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:3017
		{
			yyVAL.str = yyDollar[1].str
		}
	}
	goto yystack /* stack new state and value */
}

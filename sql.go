//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerLiteral
	optArrayBounds      []IntegerLiteral
}

const any_operator = 57346
const IDENT = 57347
const FCONST = 57348
const SCONST = 57349
const BCONST = 57350
const XCONST = 57351
const Op = 57352
const ICONST = 57353
const PARAM = 57354
const TYPECAST = 57355
const DOT_DOT = 57356
const COLON_EQUALS = 57357
const EQUALS_GREATER = 57358
const LESS_EQUALS = 57359
const GREATER_EQUALS = 57360
const NOT_EQUALS = 57361
const ABORT_P = 57362
const ABSOLUTE_P = 57363
const ACCESS = 57364
const ACTION = 57365
const ADD_P = 57366
const ADMIN = 57367
const AFTER = 57368
const AGGREGATE = 57369
const ALL = 57370
const ALSO = 57371
const ALTER = 57372
const ALWAYS = 57373
const ANALYSE = 57374
const ANALYZE = 57375
const AND = 57376
const ANY = 57377
const ARRAY = 57378
const AS = 57379
const ASC = 57380
const ASSERTION = 57381
const ASSIGNMENT = 57382
const ASYMMETRIC = 57383
const AT = 57384
const ATTRIBUTE = 57385
const AUTHORIZATION = 57386
const BACKWARD = 57387
const BEFORE = 57388
const BEGIN_P = 57389
const BETWEEN = 57390
const BIGINT = 57391
const BINARY = 57392
const BIT = 57393
const BOOLEAN_P = 57394
const BOTH = 57395
const BY = 57396
const CACHE = 57397
const CALLED = 57398
const CASCADE = 57399
const CASCADED = 57400
const CASE = 57401
const CAST = 57402
const CATALOG_P = 57403
const CHAIN = 57404
const CHAR_P = 57405
const CHARACTER = 57406
const CHARACTERISTICS = 57407
const CHECK = 57408
const CHECKPOINT = 57409
const CLASS = 57410
const CLOSE = 57411
const CLUSTER = 57412
const COALESCE = 57413
const COLLATE = 57414
const COLLATION = 57415
const COLUMN = 57416
const COMMENT = 57417
const COMMENTS = 57418
const COMMIT = 57419
const COMMITTED = 57420
const CONCURRENTLY = 57421
const CONFIGURATION = 57422
const CONFLICT = 57423
const CONNECTION = 57424
const CONSTRAINT = 57425
const CONSTRAINTS = 57426
const CONTENT_P = 57427
const CONTINUE_P = 57428
const CONVERSION_P = 57429
const COPY = 57430
const COST = 57431
const CREATE = 57432
const CROSS = 57433
const CSV = 57434
const CUBE = 57435
const CURRENT_P = 57436
const CURRENT_CATALOG = 57437
const CURRENT_DATE = 57438
const CURRENT_ROLE = 57439
const CURRENT_SCHEMA = 57440
const CURRENT_TIME = 57441
const CURRENT_TIMESTAMP = 57442
const CURRENT_USER = 57443
const CURSOR = 57444
const CYCLE = 57445
const DATA_P = 57446
const DATABASE = 57447
const DAY_P = 57448
const DEALLOCATE = 57449
const DEC = 57450
const DECIMAL_P = 57451
const DECLARE = 57452
const DEFAULT = 57453
const DEFAULTS = 57454
const DEFERRABLE = 57455
const DEFERRED = 57456
const DEFINER = 57457
const DELETE_P = 57458
const DELIMITER = 57459
const DELIMITERS = 57460
const DESC = 57461
const DICTIONARY = 57462
const DISABLE_P = 57463
const DISCARD = 57464
const DISTINCT = 57465
const DO = 57466
const DOCUMENT_P = 57467
const DOMAIN_P = 57468
const DOUBLE_P = 57469
const DROP = 57470
const EACH = 57471
const ELSE = 57472
const ENABLE_P = 57473
const ENCODING = 57474
const ENCRYPTED = 57475
const END_P = 57476
const ENUM_P = 57477
const ESCAPE = 57478
const EVENT = 57479
const EXCEPT = 57480
const EXCLUDE = 57481
const EXCLUDING = 57482
const EXCLUSIVE = 57483
const EXECUTE = 57484
const EXISTS = 57485
const EXPLAIN = 57486
const EXTENSION = 57487
const EXTERNAL = 57488
const EXTRACT = 57489
const FALSE_P = 57490
const FAMILY = 57491
const FETCH = 57492
const FILTER = 57493
const FIRST_P = 57494
const FLOAT_P = 57495
const FOLLOWING = 57496
const FOR = 57497
const FORCE = 57498
const FOREIGN = 57499
const FORWARD = 57500
const FREEZE = 57501
const FROM = 57502
const FULL = 57503
const FUNCTION = 57504
const FUNCTIONS = 57505
const GLOBAL = 57506
const GRANT = 57507
const GRANTED = 57508
const GREATEST = 57509
const GROUP_P = 57510
const GROUPING = 57511
const HANDLER = 57512
const HAVING = 57513
const HEADER_P = 57514
const HOLD = 57515
const HOUR_P = 57516
const IDENTITY_P = 57517
const IF_P = 57518
const ILIKE = 57519
const IMMEDIATE = 57520
const IMMUTABLE = 57521
const IMPLICIT_P = 57522
const IMPORT_P = 57523
const IN_P = 57524
const INCLUDING = 57525
const INCREMENT = 57526
const INDEX = 57527
const INDEXES = 57528
const INHERIT = 57529
const INHERITS = 57530
const INITIALLY = 57531
const INLINE_P = 57532
const INNER_P = 57533
const INOUT = 57534
const INPUT_P = 57535
const INSENSITIVE = 57536
const INSERT = 57537
const INSTEAD = 57538
const INT_P = 57539
const INTEGER = 57540
const INTERSECT = 57541
const INTERVAL = 57542
const INTO = 57543
const INVOKER = 57544
const IS = 57545
const ISNULL = 57546
const ISOLATION = 57547
const JOIN = 57548
const KEY = 57549
const LABEL = 57550
const LANGUAGE = 57551
const LARGE_P = 57552
const LAST_P = 57553
const LATERAL_P = 57554
const LEADING = 57555
const LEAKPROOF = 57556
const LEAST = 57557
const LEFT = 57558
const LEVEL = 57559
const LIKE = 57560
const LIMIT = 57561
const LISTEN = 57562
const LOAD = 57563
const LOCAL = 57564
const LOCALTIME = 57565
const LOCALTIMESTAMP = 57566
const LOCATION = 57567
const LOCK_P = 57568
const LOCKED = 57569
const LOGGED = 57570
const MAPPING = 57571
const MATCH = 57572
const MATERIALIZED = 57573
const MAXVALUE = 57574
const MINUTE_P = 57575
const MINVALUE = 57576
const MODE = 57577
const MONTH_P = 57578
const MOVE = 57579
const NAME_P = 57580
const NAMES = 57581
const NATIONAL = 57582
const NATURAL = 57583
const NCHAR = 57584
const NEXT = 57585
const NO = 57586
const NONE = 57587
const NOT = 57588
const NOTHING = 57589
const NOTIFY = 57590
const NOTNULL = 57591
const NOWAIT = 57592
const NULL_P = 57593
const NULLIF = 57594
const NULLS_P = 57595
const NUMERIC = 57596
const OBJECT_P = 57597
const OF = 57598
const OFF = 57599
const OFFSET = 57600
const OIDS = 57601
const ON = 57602
const ONLY = 57603
const OPERATOR = 57604
const OPTION = 57605
const OPTIONS = 57606
const OR = 57607
const ORDER = 57608
const ORDINALITY = 57609
const OUT_P = 57610
const OUTER_P = 57611
const OVER = 57612
const OVERLAPS = 57613
const OVERLAY = 57614
const OWNED = 57615
const OWNER = 57616
const PARSER = 57617
const PARTIAL = 57618
const PARTITION = 57619
const PASSING = 57620
const PASSWORD = 57621
const PLACING = 57622
const PLANS = 57623
const POLICY = 57624
const POSITION = 57625
const PRECEDING = 57626
const PRECISION = 57627
const PRESERVE = 57628
const PREPARE = 57629
const PREPARED = 57630
const PRIMARY = 57631
const PRIOR = 57632
const PRIVILEGES = 57633
const PROCEDURAL = 57634
const PROCEDURE = 57635
const PROGRAM = 57636
const QUOTE = 57637
const RANGE = 57638
const READ = 57639
const REAL = 57640
const REASSIGN = 57641
const RECHECK = 57642
const RECURSIVE = 57643
const REF = 57644
const REFERENCES = 57645
const REFRESH = 57646
const REINDEX = 57647
const RELATIVE_P = 57648
const RELEASE = 57649
const RENAME = 57650
const REPEATABLE = 57651
const REPLACE = 57652
const REPLICA = 57653
const RESET = 57654
const RESTART = 57655
const RESTRICT = 57656
const RETURNING = 57657
const RETURNS = 57658
const REVOKE = 57659
const RIGHT = 57660
const ROLE = 57661
const ROLLBACK = 57662
const ROLLUP = 57663
const ROW = 57664
const ROWS = 57665
const RULE = 57666
const SAVEPOINT = 57667
const SCHEMA = 57668
const SCROLL = 57669
const SEARCH = 57670
const SECOND_P = 57671
const SECURITY = 57672
const SELECT = 57673
const SEQUENCE = 57674
const SEQUENCES = 57675
const SERIALIZABLE = 57676
const SERVER = 57677
const SESSION = 57678
const SESSION_USER = 57679
const SET = 57680
const SETS = 57681
const SETOF = 57682
const SHARE = 57683
const SHOW = 57684
const SIMILAR = 57685
const SIMPLE = 57686
const SKIP = 57687
const SMALLINT = 57688
const SNAPSHOT = 57689
const SOME = 57690
const SQL_P = 57691
const STABLE = 57692
const STANDALONE_P = 57693
const START = 57694
const STATEMENT = 57695
const STATISTICS = 57696
const STDIN = 57697
const STDOUT = 57698
const STORAGE = 57699
const STRICT_P = 57700
const STRIP_P = 57701
const SUBSTRING = 57702
const SYMMETRIC = 57703
const SYSID = 57704
const SYSTEM_P = 57705
const TABLE = 57706
const TABLES = 57707
const TABLESAMPLE = 57708
const TABLESPACE = 57709
const TEMP = 57710
const TEMPLATE = 57711
const TEMPORARY = 57712
const TEXT_P = 57713
const THEN = 57714
const TIME = 57715
const TIMESTAMP = 57716
const TO = 57717
const TRAILING = 57718
const TRANSACTION = 57719
const TRANSFORM = 57720
const TREAT = 57721
const TRIGGER = 57722
const TRIM = 57723
const TRUE_P = 57724
const TRUNCATE = 57725
const TRUSTED = 57726
const TYPE_P = 57727
const TYPES_P = 57728
const UNBOUNDED = 57729
const UNCOMMITTED = 57730
const UNENCRYPTED = 57731
const UNION = 57732
const UNIQUE = 57733
const UNKNOWN = 57734
const UNLISTEN = 57735
const UNLOGGED = 57736
const UNTIL = 57737
const UPDATE = 57738
const USER = 57739
const USING = 57740
const VACUUM = 57741
const VALID = 57742
const VALIDATE = 57743
const VALIDATOR = 57744
const VALUE_P = 57745
const VALUES = 57746
const VARCHAR = 57747
const VARIADIC = 57748
const VARYING = 57749
const VERBOSE = 57750
const VERSION_P = 57751
const VIEW = 57752
const VIEWS = 57753
const VOLATILE = 57754
const WHEN = 57755
const WHERE = 57756
const WHITESPACE_P = 57757
const WINDOW = 57758
const WITH = 57759
const WITHIN = 57760
const WITHOUT = 57761
const WORK = 57762
const WRAPPER = 57763
const WRITE = 57764
const XML_P = 57765
const XMLATTRIBUTES = 57766
const XMLCONCAT = 57767
const XMLELEMENT = 57768
const XMLEXISTS = 57769
const XMLFOREST = 57770
const XMLPARSE = 57771
const XMLPI = 57772
const XMLROOT = 57773
const XMLSERIALIZE = 57774
const YEAR_P = 57775
const YES_P = 57776
const ZONE = 57777
const NOT_LA = 57778
const NULLS_LA = 57779
const WITH_LA = 57780
const OP = 57781
const POSTFIXOP = 57782
const UMINUS = 57783

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"any_operator",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"';'",
	"','",
	"':'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:2914

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 214,
	456, 214,
	-2, 222,
	-1, 5,
	1, 217,
	454, 217,
	456, 217,
	-2, 221,
	-1, 13,
	1, 218,
	454, 218,
	456, 218,
	-2, 238,
	-1, 402,
	15, 394,
	16, 394,
	453, 394,
	-2, 391,
	-1, 403,
	15, 395,
	16, 395,
	453, 395,
	-2, 392,
	-1, 420,
	15, 727,
	16, 727,
	453, 727,
	-2, 180,
	-1, 427,
	7, 39,
	-2, 675,
	-1, 428,
	7, 68,
	453, 68,
	-2, 676,
	-1, 429,
	7, 46,
	-2, 677,
	-1, 430,
	7, 68,
	64, 68,
	453, 68,
	-2, 678,
	-1, 431,
	7, 68,
	64, 68,
	453, 68,
	-2, 679,
	-1, 432,
	7, 35,
	-2, 681,
	-1, 433,
	7, 35,
	-2, 682,
	-1, 434,
	7, 48,
	-2, 685,
	-1, 435,
	7, 36,
	-2, 689,
	-1, 436,
	7, 37,
	-2, 690,
	-1, 438,
	7, 68,
	64, 68,
	453, 68,
	-2, 694,
	-1, 439,
	7, 35,
	-2, 697,
	-1, 440,
	7, 40,
	-2, 702,
	-1, 441,
	7, 38,
	-2, 705,
	-1, 442,
	7, 63,
	64, 63,
	453, 63,
	-2, 712,
	-1, 504,
	322, 308,
	323, 308,
	-2, 71,
	-1, 552,
	138, 222,
	150, 222,
	155, 222,
	199, 222,
	219, 222,
	258, 222,
	266, 222,
	390, 222,
	-2, 154,
	-1, 563,
	453, 380,
	-2, 348,
	-1, 664,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 83,
	-1, 665,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 84,
	-1, 666,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 85,
	-1, 667,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 86,
	-1, 668,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 87,
	-1, 669,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 88,
	-1, 673,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 96,
	-1, 678,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 100,
	-1, 799,
	453, 379,
	-2, 9,
	-1, 858,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 98,
	-1, 859,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 102,
	-1, 864,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 104,
	-1, 942,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 97,
	-1, 945,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 106,
	-1, 948,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 101,
	-1, 952,
	203, 0,
	204, 0,
	249, 0,
	-2, 118,
	-1, 1009,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 99,
	-1, 1010,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 103,
	-1, 1014,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 105,
	-1, 1015,
	203, 0,
	204, 0,
	249, 0,
	-2, 119,
	-1, 1019,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 122,
	-1, 1027,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 136,
	-1, 1028,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 137,
	-1, 1029,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 138,
	-1, 1030,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 139,
	-1, 1031,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 140,
	-1, 1032,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 141,
	-1, 1037,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 124,
	-1, 1061,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 107,
	-1, 1062,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 123,
	-1, 1063,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 125,
	-1, 1080,
	203, 0,
	-2, 145,
	-1, 1093,
	203, 0,
	-2, 146,
	-1, 1099,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 674,
}

const yyNprod = 822
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 12130

var yyAct = [...]int{

	378, 1098, 891, 1097, 1074, 1048, 996, 1052, 594, 391,
	775, 847, 926, 555, 14, 449, 560, 32, 954, 953,
	29, 796, 850, 779, 27, 843, 845, 786, 687, 580,
	625, 513, 608, 479, 515, 621, 777, 372, 29, 930,
	1108, 792, 1107, 1018, 584, 1106, 1095, 1064, 1017, 1018,
	1018, 1018, 992, 476, 18, 882, 918, 392, 913, 882,
	911, 882, 910, 882, 909, 882, 908, 882, 884, 882,
	883, 600, 882, 885, 599, 882, 1088, 1076, 824, 557,
	616, 516, 369, 556, 25, 557, 12, 389, 8, 556,
	517, 939, 855, 1096, 529, 530, 531, 1047, 1045, 1044,
	1043, 985, 915, 914, 906, 905, 904, 389, 903, 900,
	517, 533, 886, 818, 529, 530, 531, 595, 404, 519,
	561, 10, 7, 404, 369, 542, 368, 893, 1082, 1077,
	1069, 444, 951, 923, 872, 585, 588, 809, 790, 519,
	350, 562, 597, 578, 577, 542, 576, 575, 574, 518,
	389, 573, 572, 956, 932, 571, 570, 569, 7, 1079,
	1059, 11, 1058, 1007, 935, 561, 936, 475, 844, 518,
	856, 1049, 517, 846, 894, 889, 787, 956, 581, 492,
	517, 956, 820, 492, 1057, 394, 860, 554, 679, 931,
	657, 956, 689, 612, 603, 17, 355, 815, 1085, 356,
	677, 519, 1112, 5, 389, 685, 579, 956, 869, 519,
	7, 966, 967, 968, 782, 1111, 490, 357, 609, 610,
	490, 1041, 789, 351, 18, 1086, 919, 601, 1013, 473,
	683, 518, 360, 867, 1034, 506, 373, 373, 689, 518,
	1067, 499, 823, 924, 352, 896, 602, 1001, 1000, 16,
	359, 997, 359, 1081, 537, 354, 16, 568, 359, 1066,
	927, 950, 389, 871, 622, 956, 979, 363, 443, 966,
	967, 968, 595, 488, 537, 389, 487, 354, 517, 446,
	539, 540, 389, 403, 23, 517, 1012, 6, 613, 517,
	517, 375, 590, 589, 31, 535, 517, 1071, 998, 367,
	539, 540, 925, 1089, 938, 851, 956, 519, 1116, 349,
	445, 447, 31, 491, 519, 535, 873, 491, 519, 358,
	542, 358, 1056, 18, 371, 519, 541, 358, 681, 675,
	517, 389, 500, 680, 517, 474, 865, 518, 686, 545,
	404, 870, 534, 405, 518, 1110, 541, 472, 518, 518,
	901, 902, 1115, 1092, 897, 518, 1003, 1035, 360, 545,
	360, 13, 364, 519, 362, 406, 995, 1036, 489, 784,
	674, 408, 489, 1068, 532, 19, 3, 407, 395, 24,
	629, 365, 366, 448, 630, 627, 409, 695, 854, 655,
	381, 780, 1084, 518, 1040, 982, 788, 970, 1073, 401,
	385, 1011, 545, 400, 478, 929, 785, 887, 565, 384,
	587, 382, 605, 1051, 827, 826, 830, 798, 879, 614,
	538, 505, 611, 361, 353, 484, 502, 604, 386, 4,
	501, 495, 482, 26, 567, 498, 20, 618, 512, 848,
	538, 1091, 21, 22, 370, 9, 2, 15, 1, 537,
	0, 0, 0, 0, 0, 970, 545, 949, 787, 0,
	582, 583, 0, 0, 682, 0, 0, 866, 591, 0,
	0, 0, 0, 0, 684, 0, 0, 868, 586, 0,
	0, 532, 0, 0, 592, 0, 0, 29, 0, 0,
	535, 0, 0, 0, 0, 676, 0, 532, 0, 0,
	0, 0, 598, 0, 532, 0, 593, 596, 0, 0,
	0, 0, 862, 536, 545, 532, 29, 526, 527, 528,
	0, 520, 521, 522, 523, 524, 525, 545, 656, 880,
	0, 615, 0, 536, 545, 881, 624, 526, 527, 528,
	0, 520, 521, 522, 523, 524, 525, 532, 532, 532,
	532, 532, 532, 494, 623, 493, 607, 0, 688, 694,
	606, 693, 0, 0, 1004, 480, 508, 532, 774, 508,
	508, 486, 694, 496, 693, 503, 485, 774, 783, 563,
	690, 564, 514, 545, 957, 958, 959, 960, 961, 962,
	0, 546, 547, 548, 549, 550, 483, 0, 551, 805,
	806, 807, 808, 520, 521, 522, 523, 524, 525, 810,
	959, 960, 961, 962, 566, 538, 525, 962, 0, 812,
	813, 817, 957, 958, 959, 960, 961, 962, 800, 801,
	802, 803, 816, 819, 963, 964, 965, 821, 957, 958,
	959, 960, 961, 962, 0, 0, 811, 0, 825, 643,
	507, 814, 504, 510, 511, 0, 0, 852, 0, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 0, 853, 0, 0, 532,
	583, 582, 0, 586, 591, 592, 0, 0, 877, 877,
	0, 0, 963, 964, 965, 0, 957, 958, 959, 960,
	961, 962, 0, 0, 0, 0, 861, 0, 536, 520,
	521, 522, 523, 524, 525, 0, 520, 521, 522, 523,
	524, 525, 522, 523, 524, 525, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 0, 678, 0, 0, 0, 0, 0, 643, 0,
	0, 31, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 0, 778, 0, 0, 0, 0, 0, 0, 532,
	0, 0, 0, 532, 797, 0, 642, 0, 0, 804,
	31, 509, 0, 0, 509, 509, 0, 645, 532, 892,
	0, 647, 31, 0, 0, 532, 0, 895, 0, 0,
	0, 0, 552, 888, 480, 0, 558, 559, 0, 0,
	0, 822, 0, 532, 0, 916, 0, 692, 644, 631,
	0, 514, 0, 912, 29, 898, 899, 849, 0, 0,
	692, 0, 0, 917, 0, 0, 0, 0, 0, 921,
	532, 0, 922, 0, 0, 0, 0, 0, 0, 532,
	532, 0, 877, 877, 0, 532, 940, 0, 0, 389,
	0, 694, 517, 693, 969, 937, 877, 877, 877, 969,
	0, 799, 0, 628, 0, 0, 0, 0, 0, 858,
	859, 532, 0, 975, 864, 642, 0, 0, 0, 0,
	0, 519, 978, 983, 0, 0, 645, 0, 0, 0,
	647, 0, 0, 987, 988, 0, 0, 0, 986, 0,
	0, 0, 0, 0, 993, 0, 991, 0, 0, 532,
	994, 518, 0, 0, 0, 0, 0, 644, 631, 0,
	0, 999, 532, 532, 1002, 0, 532, 969, 969, 532,
	1008, 0, 0, 532, 0, 694, 0, 693, 877, 877,
	877, 877, 877, 877, 877, 877, 877, 877, 877, 877,
	877, 1016, 969, 969, 969, 1020, 0, 532, 532, 874,
	874, 532, 0, 0, 0, 532, 0, 0, 0, 829,
	532, 532, 628, 1005, 1006, 944, 840, 841, 842, 0,
	0, 1046, 890, 0, 643, 878, 0, 0, 797, 797,
	532, 532, 1054, 1055, 0, 532, 532, 0, 0, 0,
	532, 0, 969, 969, 969, 969, 969, 969, 969, 969,
	969, 969, 969, 969, 969, 0, 0, 1065, 532, 643,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 1072, 0, 532, 1070, 0, 0, 0, 1075,
	0, 928, 532, 532, 532, 1060, 0, 877, 0, 0,
	0, 941, 942, 31, 0, 945, 0, 0, 948, 532,
	0, 969, 877, 643, 1090, 0, 952, 0, 643, 1083,
	1103, 0, 1105, 1104, 969, 1087, 976, 977, 1075, 31,
	0, 1109, 1094, 532, 980, 799, 799, 0, 31, 984,
	0, 797, 0, 0, 0, 0, 989, 990, 1117, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 692,
	0, 642, 0, 0, 849, 0, 0, 849, 0, 0,
	643, 0, 645, 874, 874, 0, 647, 0, 1009, 1010,
	0, 0, 0, 0, 1014, 1015, 0, 874, 874, 874,
	1019, 0, 0, 0, 0, 0, 642, 31, 946, 947,
	0, 0, 0, 644, 631, 0, 0, 645, 0, 1037,
	0, 647, 971, 972, 973, 0, 1039, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 0, 0, 799, 0,
	0, 0, 1050, 1053, 643, 849, 849, 0, 644, 631,
	642, 0, 0, 692, 0, 642, 1061, 1062, 1063, 0,
	0, 645, 0, 0, 0, 647, 645, 0, 628, 0,
	647, 828, 0, 0, 0, 0, 0, 0, 0, 874,
	874, 874, 874, 874, 874, 874, 874, 874, 874, 874,
	874, 874, 644, 631, 0, 0, 0, 644, 631, 0,
	0, 0, 1078, 628, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 642, 0, 0,
	0, 1053, 0, 0, 0, 0, 0, 0, 645, 0,
	1102, 1102, 647, 520, 521, 522, 523, 524, 525, 0,
	0, 0, 0, 0, 1102, 0, 0, 628, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 0, 0, 644,
	631, 1102, 0, 31, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	0, 642, 0, 647, 0, 0, 0, 0, 874, 0,
	0, 0, 645, 0, 0, 0, 647, 0, 0, 0,
	0, 0, 31, 874, 0, 0, 0, 0, 0, 0,
	644, 631, 0, 1080, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 644, 631, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 837,
	838, 839, 0, 831, 832, 833, 834, 835, 836, 0,
	0, 0, 0, 0, 691, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 33,
	34, 35, 36, 37, 38, 39, 40, 696, 41, 42,
	43, 697, 698, 699, 700, 701, 702, 703, 44, 45,
	704, 46, 47, 450, 48, 49, 50, 301, 302, 451,
	303, 304, 705, 51, 52, 53, 54, 55, 706, 707,
	56, 57, 305, 306, 58, 708, 59, 60, 61, 62,
	307, 709, 452, 710, 63, 64, 65, 66, 453, 67,
	68, 69, 711, 70, 71, 72, 73, 74, 75, 712,
	454, 76, 77, 78, 713, 714, 715, 649, 716, 717,
	718, 79, 80, 81, 82, 83, 84, 308, 309, 85,
	719, 86, 720, 87, 88, 89, 90, 91, 721, 92,
	93, 94, 722, 723, 95, 96, 97, 98, 99, 724,
	100, 101, 102, 725, 103, 104, 105, 726, 106, 107,
	108, 109, 310, 110, 111, 112, 311, 727, 113, 728,
	114, 115, 312, 116, 729, 117, 730, 118, 455, 731,
	456, 119, 120, 121, 732, 122, 313, 733, 314, 123,
	734, 124, 125, 126, 127, 128, 457, 129, 130, 131,
	132, 735, 133, 134, 135, 136, 137, 138, 736, 139,
	458, 315, 140, 141, 142, 143, 316, 317, 737, 318,
	738, 144, 459, 460, 145, 461, 146, 147, 148, 149,
	150, 739, 740, 151, 319, 462, 152, 463, 741, 153,
	154, 155, 742, 743, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 320,
	464, 321, 171, 172, 322, 744, 173, 174, 465, 175,
	745, 323, 176, 324, 177, 178, 179, 746, 180, 747,
	748, 181, 182, 183, 749, 750, 184, 325, 466, 185,
	467, 326, 186, 187, 188, 189, 190, 191, 192, 751,
	193, 194, 327, 195, 328, 198, 196, 197, 752, 199,
	200, 201, 202, 203, 204, 205, 206, 329, 207, 208,
	209, 210, 753, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 754, 222, 223, 468, 224, 225,
	226, 330, 227, 228, 229, 230, 231, 232, 233, 234,
	755, 235, 236, 237, 238, 239, 756, 240, 241, 331,
	242, 243, 469, 244, 245, 332, 246, 757, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	758, 258, 259, 759, 260, 470, 261, 262, 263, 264,
	265, 760, 334, 335, 761, 762, 266, 267, 336, 268,
	337, 763, 269, 270, 271, 272, 273, 274, 275, 764,
	765, 276, 277, 278, 279, 280, 766, 767, 281, 282,
	283, 284, 285, 338, 339, 768, 286, 471, 287, 288,
	289, 290, 769, 770, 291, 771, 772, 292, 293, 294,
	295, 296, 297, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 776, 0, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 696, 41,
	42, 43, 697, 698, 699, 700, 701, 702, 703, 44,
	45, 704, 46, 47, 450, 48, 49, 50, 301, 302,
	451, 303, 304, 705, 51, 52, 53, 54, 55, 706,
	707, 56, 57, 305, 306, 58, 708, 59, 60, 61,
	62, 307, 709, 452, 710, 63, 64, 65, 66, 453,
	67, 68, 69, 711, 70, 71, 72, 73, 74, 75,
	712, 454, 76, 77, 78, 713, 714, 715, 649, 716,
	717, 718, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 719, 86, 720, 87, 88, 89, 90, 91, 721,
	92, 93, 94, 722, 723, 95, 96, 97, 98, 99,
	724, 100, 101, 102, 725, 103, 104, 105, 726, 106,
	107, 108, 109, 310, 110, 111, 112, 311, 727, 113,
	728, 114, 115, 312, 116, 729, 117, 730, 118, 455,
	731, 456, 119, 120, 121, 732, 122, 313, 733, 314,
	123, 734, 124, 125, 126, 127, 128, 457, 129, 130,
	131, 132, 735, 133, 134, 135, 136, 137, 138, 736,
	139, 458, 315, 140, 141, 142, 143, 316, 317, 737,
	318, 738, 144, 459, 460, 145, 461, 146, 147, 148,
	149, 150, 739, 740, 151, 319, 462, 152, 463, 741,
	153, 154, 155, 742, 743, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 464, 321, 171, 172, 322, 744, 173, 174, 465,
	175, 745, 323, 176, 324, 177, 178, 179, 746, 180,
	747, 748, 181, 182, 183, 749, 750, 184, 325, 466,
	185, 467, 326, 186, 187, 188, 189, 190, 191, 192,
	751, 193, 194, 327, 195, 328, 198, 196, 197, 752,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 753, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 754, 222, 223, 468, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 755, 235, 236, 237, 238, 239, 756, 240, 241,
	331, 242, 243, 469, 244, 245, 332, 246, 757, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 758, 258, 259, 759, 260, 470, 261, 262, 263,
	264, 265, 760, 334, 335, 761, 762, 266, 267, 336,
	268, 337, 763, 269, 270, 271, 272, 273, 274, 275,
	764, 765, 276, 277, 278, 279, 280, 766, 767, 281,
	282, 283, 284, 285, 338, 339, 768, 286, 471, 287,
	288, 289, 290, 769, 770, 291, 771, 772, 292, 293,
	294, 295, 296, 297, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 402, 393, 405, 0,
	0, 389, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 793,
	41, 42, 43, 0, 0, 0, 0, 388, 0, 0,
	44, 45, 0, 46, 47, 450, 48, 49, 50, 301,
	427, 451, 428, 429, 0, 51, 52, 53, 54, 55,
	399, 421, 56, 57, 430, 431, 58, 0, 59, 60,
	61, 62, 422, 0, 452, 0, 63, 64, 65, 66,
	453, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 454, 76, 77, 78, 419, 410, 415, 420,
	411, 412, 416, 79, 80, 81, 82, 83, 84, 432,
	433, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 794, 0, 95, 96, 426, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 387, 110, 111, 112, 311, 397,
	113, 0, 114, 115, 434, 116, 0, 117, 0, 118,
	455, 0, 456, 119, 120, 121, 0, 122, 423, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 457, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 458, 315, 140, 141, 142, 143, 435, 436,
	0, 318, 0, 144, 459, 460, 145, 461, 146, 147,
	148, 149, 150, 0, 0, 151, 424, 462, 152, 463,
	0, 153, 154, 155, 413, 414, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 437, 464, 438, 171, 172, 322, 379, 173, 174,
	465, 175, 398, 323, 176, 439, 177, 178, 179, 0,
	180, 0, 0, 390, 182, 183, 0, 0, 184, 325,
	466, 185, 467, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 440,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 468,
	224, 225, 226, 330, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 417, 240,
	241, 331, 242, 243, 469, 244, 245, 441, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 470, 261, 262,
	263, 264, 265, 0, 334, 335, 0, 0, 266, 267,
	336, 268, 337, 396, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 418, 0,
	281, 282, 283, 284, 285, 338, 442, 0, 286, 471,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 425, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 0, 0, 0, 376, 377, 795, 0, 0,
	0, 402, 393, 405, 383, 791, 389, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 388, 0, 0, 44, 45, 0, 46, 47,
	450, 48, 49, 50, 301, 427, 451, 428, 429, 0,
	51, 52, 53, 54, 55, 399, 421, 56, 57, 430,
	431, 58, 0, 59, 60, 61, 62, 422, 0, 452,
	0, 63, 64, 65, 66, 453, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 454, 76, 77,
	78, 419, 410, 415, 420, 411, 412, 416, 79, 80,
	81, 82, 83, 84, 432, 433, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 426, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 387,
	110, 111, 112, 311, 397, 113, 0, 114, 115, 434,
	116, 0, 117, 0, 118, 455, 0, 456, 119, 120,
	121, 0, 122, 423, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 457, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 458, 315, 140,
	141, 142, 143, 435, 436, 0, 318, 0, 144, 459,
	460, 145, 461, 146, 147, 148, 149, 150, 0, 0,
	151, 424, 462, 152, 463, 0, 153, 154, 155, 413,
	414, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 437, 464, 438, 171,
	172, 322, 379, 173, 174, 465, 175, 398, 323, 176,
	439, 177, 178, 179, 0, 180, 0, 0, 390, 182,
	183, 0, 0, 184, 325, 466, 185, 467, 326, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 440, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 468, 224, 225, 226, 330, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 417, 240, 241, 331, 242, 243, 469,
	244, 245, 441, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 470, 261, 262, 263, 264, 265, 0, 334,
	335, 0, 0, 266, 267, 336, 268, 337, 396, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 418, 0, 281, 282, 283, 284, 285,
	338, 442, 0, 286, 471, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 425, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 380, 0, 0, 0, 0, 402, 393, 405,
	376, 377, 389, 404, 0, 0, 0, 561, 781, 383,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 388, 0,
	0, 44, 45, 0, 46, 47, 450, 48, 49, 50,
	301, 427, 451, 428, 429, 0, 51, 52, 53, 54,
	55, 399, 421, 56, 57, 430, 431, 58, 0, 59,
	60, 61, 62, 422, 0, 452, 0, 63, 64, 65,
	66, 453, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 454, 76, 77, 78, 419, 410, 415,
	420, 411, 412, 416, 79, 80, 81, 82, 83, 84,
	432, 433, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 426,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 387, 110, 111, 112, 311,
	397, 113, 0, 114, 115, 434, 116, 0, 117, 0,
	118, 455, 0, 456, 119, 120, 121, 0, 122, 423,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 457,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 458, 315, 140, 141, 142, 143, 435,
	436, 0, 318, 0, 144, 459, 460, 145, 461, 146,
	147, 148, 149, 150, 0, 0, 151, 424, 462, 152,
	463, 0, 153, 154, 155, 413, 414, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 437, 464, 438, 171, 172, 322, 379, 173,
	174, 465, 175, 398, 323, 176, 439, 177, 178, 179,
	0, 180, 0, 0, 390, 182, 183, 0, 0, 184,
	325, 466, 185, 467, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	440, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	468, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 8, 235, 236, 237, 238, 239, 417,
	240, 241, 331, 242, 243, 469, 244, 245, 441, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 10, 260, 470, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 396, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 418,
	0, 281, 282, 283, 284, 285, 553, 442, 0, 286,
	471, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 425, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 380, 0,
	0, 0, 0, 402, 393, 405, 376, 377, 389, 404,
	0, 0, 0, 0, 0, 383, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 388, 0, 0, 44, 45, 0,
	46, 47, 450, 48, 49, 50, 301, 427, 451, 428,
	429, 0, 51, 52, 53, 54, 55, 399, 421, 56,
	57, 430, 431, 58, 0, 59, 60, 61, 62, 422,
	0, 452, 0, 63, 64, 65, 66, 453, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 454,
	76, 77, 78, 419, 410, 415, 420, 411, 412, 416,
	79, 80, 81, 82, 83, 84, 432, 433, 85, 481,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 426, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 387, 110, 111, 112, 311, 397, 113, 0, 114,
	115, 434, 116, 0, 117, 0, 118, 455, 0, 456,
	119, 120, 121, 0, 122, 423, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 457, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 458,
	315, 140, 141, 142, 143, 435, 436, 0, 318, 0,
	144, 459, 460, 145, 461, 146, 147, 148, 149, 150,
	0, 0, 151, 424, 462, 152, 463, 0, 153, 154,
	155, 413, 414, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 437, 464,
	438, 171, 172, 322, 379, 173, 174, 465, 175, 398,
	323, 176, 439, 177, 178, 179, 0, 180, 0, 0,
	390, 182, 183, 0, 0, 184, 325, 466, 185, 467,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 440, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 468, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 417, 240, 241, 331, 242,
	243, 469, 244, 245, 441, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 470, 261, 262, 263, 264, 265,
	0, 334, 335, 0, 0, 266, 267, 336, 268, 337,
	396, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 418, 0, 281, 282, 283,
	284, 285, 338, 442, 0, 286, 471, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 425, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 380, 0, 0, 0, 0, 402,
	393, 405, 376, 377, 389, 404, 0, 0, 0, 0,
	0, 383, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	388, 0, 0, 44, 45, 0, 46, 47, 450, 48,
	49, 50, 301, 427, 451, 428, 429, 0, 51, 52,
	53, 54, 55, 399, 421, 56, 57, 430, 431, 58,
	0, 59, 60, 61, 62, 422, 0, 452, 0, 63,
	64, 65, 66, 453, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 454, 76, 77, 78, 419,
	410, 415, 420, 411, 412, 416, 79, 80, 81, 82,
	83, 84, 432, 433, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 426, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 387, 110, 111,
	112, 311, 397, 113, 0, 114, 115, 434, 116, 0,
	117, 0, 118, 455, 0, 456, 119, 120, 121, 0,
	122, 423, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 457, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 458, 315, 140, 141, 142,
	143, 435, 436, 0, 318, 0, 144, 459, 460, 145,
	461, 146, 147, 148, 149, 150, 0, 0, 151, 424,
	462, 152, 463, 0, 153, 154, 155, 413, 414, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 437, 464, 438, 171, 172, 322,
	379, 173, 174, 465, 175, 398, 323, 176, 439, 177,
	178, 179, 0, 180, 0, 0, 390, 182, 183, 0,
	0, 184, 325, 466, 185, 467, 326, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 440, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 468, 224, 225, 226, 330, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 417, 240, 241, 331, 242, 243, 469, 244, 245,
	441, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	470, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 396, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 418, 0, 281, 282, 283, 284, 285, 338, 442,
	0, 286, 471, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 425,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	380, 0, 0, 0, 0, 0, 0, 0, 376, 377,
	374, 0, 0, 402, 393, 405, 0, 383, 389, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 497, 41, 42, 43,
	0, 0, 0, 0, 388, 0, 0, 44, 45, 0,
	46, 47, 450, 48, 49, 50, 301, 427, 451, 428,
	429, 0, 51, 52, 53, 54, 55, 399, 421, 56,
	57, 430, 431, 58, 0, 59, 60, 61, 62, 422,
	0, 452, 0, 63, 64, 65, 66, 453, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 454,
	76, 77, 78, 419, 410, 415, 420, 411, 412, 416,
	79, 80, 81, 82, 83, 84, 432, 433, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 426, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 387, 110, 111, 112, 311, 397, 113, 0, 114,
	115, 434, 116, 0, 117, 0, 118, 455, 0, 456,
	119, 120, 121, 0, 122, 423, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 457, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 458,
	315, 140, 141, 142, 143, 435, 436, 0, 318, 0,
	144, 459, 460, 145, 461, 146, 147, 148, 149, 150,
	0, 0, 151, 424, 462, 152, 463, 0, 153, 154,
	155, 413, 414, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 437, 464,
	438, 171, 172, 322, 379, 173, 174, 465, 175, 398,
	323, 176, 439, 177, 178, 179, 0, 180, 0, 0,
	390, 182, 183, 0, 0, 184, 325, 466, 185, 467,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 440, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 468, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 417, 240, 241, 331, 242,
	243, 469, 244, 245, 441, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 470, 261, 262, 263, 264, 265,
	0, 334, 335, 0, 0, 266, 267, 336, 268, 337,
	396, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 418, 0, 281, 282, 283,
	284, 285, 338, 442, 0, 286, 471, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 425, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 380, 0, 0, 0, 0, 402,
	393, 405, 376, 377, 389, 404, 0, 0, 0, 0,
	0, 383, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	388, 0, 0, 44, 45, 0, 46, 47, 450, 48,
	49, 50, 301, 427, 451, 428, 429, 0, 51, 52,
	53, 54, 55, 399, 421, 56, 57, 430, 431, 58,
	0, 59, 60, 61, 62, 422, 0, 452, 0, 63,
	64, 65, 66, 453, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 454, 76, 77, 1101, 419,
	410, 415, 420, 411, 412, 416, 79, 80, 81, 82,
	83, 84, 432, 433, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 426, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 387, 110, 111,
	112, 311, 397, 113, 0, 114, 115, 434, 116, 0,
	117, 0, 118, 455, 0, 456, 119, 120, 121, 0,
	122, 423, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 457, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 458, 315, 140, 141, 142,
	143, 435, 436, 0, 318, 0, 144, 459, 460, 145,
	461, 146, 147, 148, 149, 150, 0, 0, 151, 424,
	462, 152, 463, 0, 153, 154, 155, 413, 414, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 437, 464, 438, 171, 172, 322,
	379, 173, 174, 465, 175, 398, 323, 176, 439, 177,
	178, 179, 0, 180, 0, 0, 390, 182, 183, 0,
	0, 184, 325, 466, 185, 467, 326, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 440, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 468, 224, 225, 226, 330, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 417, 240, 241, 331, 242, 243, 469, 244, 245,
	441, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	470, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 396, 269, 270, 271,
	272, 1100, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 418, 0, 281, 282, 283, 284, 285, 338, 442,
	0, 286, 471, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 425,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	380, 0, 0, 0, 0, 402, 393, 405, 376, 377,
	389, 404, 0, 0, 0, 0, 0, 383, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 388, 0, 0, 44,
	45, 0, 46, 47, 450, 48, 49, 50, 1099, 427,
	451, 428, 429, 0, 51, 52, 53, 54, 55, 399,
	421, 56, 57, 430, 431, 58, 0, 59, 60, 61,
	62, 422, 0, 452, 0, 63, 64, 65, 66, 453,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 454, 76, 77, 1101, 419, 410, 415, 420, 411,
	412, 416, 79, 80, 81, 82, 83, 84, 432, 433,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 426, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 387, 110, 111, 112, 311, 397, 113,
	0, 114, 115, 434, 116, 0, 117, 0, 118, 455,
	0, 456, 119, 120, 121, 0, 122, 423, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 457, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 458, 315, 140, 141, 142, 143, 435, 436, 0,
	318, 0, 144, 459, 460, 145, 461, 146, 147, 148,
	149, 150, 0, 0, 151, 424, 462, 152, 463, 0,
	153, 154, 155, 413, 414, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	437, 464, 438, 171, 172, 322, 379, 173, 174, 465,
	175, 398, 323, 176, 439, 177, 178, 179, 0, 180,
	0, 0, 390, 182, 183, 0, 0, 184, 325, 466,
	185, 467, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 440, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 468, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 417, 240, 241,
	331, 242, 243, 469, 244, 245, 441, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 470, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 396, 269, 270, 271, 272, 1100, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 418, 0, 281,
	282, 283, 284, 285, 338, 442, 0, 286, 471, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 425, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 380, 0, 0, 0,
	0, 402, 393, 405, 376, 377, 389, 404, 0, 0,
	0, 0, 0, 383, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 388, 0, 0, 44, 45, 0, 46, 47,
	450, 48, 49, 50, 301, 427, 451, 428, 429, 0,
	51, 52, 53, 54, 55, 399, 421, 56, 57, 430,
	431, 58, 0, 59, 60, 61, 62, 422, 0, 452,
	0, 63, 64, 65, 66, 453, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 454, 76, 77,
	78, 419, 410, 415, 420, 411, 412, 416, 79, 80,
	81, 82, 83, 84, 432, 433, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 426, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 387,
	110, 111, 112, 311, 397, 113, 0, 114, 115, 434,
	116, 0, 117, 0, 118, 455, 0, 456, 119, 120,
	121, 0, 122, 423, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 457, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 458, 315, 140,
	141, 142, 143, 435, 436, 0, 318, 0, 144, 459,
	460, 145, 461, 146, 147, 148, 149, 150, 0, 0,
	151, 424, 462, 152, 463, 0, 153, 154, 155, 413,
	414, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 437, 464, 438, 171,
	172, 322, 379, 173, 174, 465, 175, 398, 323, 176,
	439, 177, 178, 179, 0, 180, 0, 0, 390, 182,
	183, 0, 0, 184, 325, 466, 185, 467, 326, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 440, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 468, 224, 225, 226, 330, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 417, 240, 241, 331, 242, 243, 469,
	244, 245, 441, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 470, 261, 262, 263, 264, 265, 0, 334,
	335, 0, 0, 266, 267, 336, 268, 337, 396, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 418, 0, 281, 282, 283, 284, 285,
	338, 442, 0, 286, 471, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 425, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 380, 0, 0, 0, 0, 402, 393, 405,
	376, 377, 389, 404, 0, 0, 0, 0, 0, 383,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 388, 0,
	0, 44, 45, 0, 46, 47, 450, 48, 49, 50,
	301, 427, 451, 428, 429, 0, 51, 52, 53, 54,
	55, 399, 421, 56, 57, 430, 431, 58, 0, 59,
	60, 61, 62, 422, 0, 452, 0, 63, 64, 65,
	66, 453, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 454, 76, 77, 78, 419, 410, 415,
	420, 411, 412, 416, 79, 80, 81, 82, 83, 84,
	432, 433, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 426,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 387, 110, 111, 112, 311,
	397, 113, 0, 114, 115, 434, 116, 0, 117, 0,
	118, 455, 0, 456, 119, 120, 121, 0, 122, 423,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 457,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 458, 315, 140, 141, 142, 143, 435,
	436, 0, 318, 0, 144, 459, 460, 145, 461, 146,
	147, 148, 149, 150, 0, 0, 151, 424, 462, 152,
	463, 0, 153, 154, 155, 413, 414, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 437, 464, 438, 171, 172, 322, 0, 173,
	174, 465, 175, 398, 323, 176, 439, 177, 178, 179,
	0, 180, 0, 0, 390, 182, 183, 0, 0, 184,
	325, 466, 185, 467, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	440, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	468, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 417,
	240, 241, 331, 242, 243, 469, 244, 245, 441, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 470, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 396, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 418,
	0, 281, 282, 283, 284, 285, 338, 442, 0, 286,
	471, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 425, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 0, 0,
	0, 0, 0, 402, 393, 405, 875, 876, 389, 404,
	0, 0, 0, 0, 0, 383, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 388, 0, 0, 44, 45, 0,
	46, 47, 450, 48, 49, 50, 301, 427, 451, 428,
	429, 0, 51, 52, 53, 54, 55, 399, 421, 56,
	57, 430, 431, 58, 0, 59, 60, 61, 62, 422,
	0, 452, 0, 63, 64, 65, 66, 453, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 454,
	76, 77, 78, 419, 410, 415, 420, 411, 412, 416,
	79, 80, 81, 82, 83, 84, 432, 433, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 426, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 387, 110, 111, 112, 311, 397, 113, 0, 114,
	115, 434, 116, 0, 117, 0, 118, 455, 0, 456,
	119, 120, 121, 0, 122, 423, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 457, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 458,
	315, 140, 141, 142, 143, 435, 436, 0, 318, 0,
	144, 0, 460, 145, 461, 146, 147, 148, 149, 150,
	0, 0, 151, 424, 462, 152, 463, 0, 153, 154,
	155, 413, 414, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 437, 464,
	438, 171, 172, 322, 0, 173, 174, 465, 175, 398,
	323, 176, 439, 177, 178, 179, 0, 180, 0, 0,
	390, 182, 183, 0, 0, 184, 325, 466, 185, 467,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 440, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 468, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 417, 240, 241, 331, 242,
	243, 469, 244, 245, 441, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 470, 261, 262, 263, 264, 265,
	0, 334, 335, 0, 0, 266, 267, 336, 268, 337,
	396, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 418, 0, 281, 282, 283,
	284, 285, 338, 442, 0, 286, 471, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 425, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 0, 0, 0, 0, 0, 402,
	393, 405, 875, 876, 389, 404, 0, 0, 0, 0,
	0, 383, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	388, 0, 0, 44, 45, 0, 46, 47, 450, 48,
	49, 50, 0, 427, 451, 428, 429, 0, 51, 52,
	53, 54, 55, 399, 421, 56, 57, 430, 431, 58,
	0, 59, 60, 61, 62, 422, 0, 452, 0, 63,
	64, 65, 66, 453, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 454, 76, 77, 1101, 419,
	410, 415, 420, 411, 412, 416, 79, 80, 81, 82,
	83, 84, 432, 433, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 426, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 387, 110, 111,
	112, 311, 397, 113, 0, 114, 115, 434, 116, 0,
	117, 0, 118, 455, 0, 456, 119, 120, 121, 0,
	122, 423, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 0, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 458, 315, 140, 141, 142,
	143, 435, 436, 0, 318, 0, 144, 0, 0, 145,
	461, 146, 147, 148, 149, 150, 0, 0, 151, 424,
	462, 152, 0, 0, 153, 154, 155, 413, 414, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 437, 464, 438, 171, 172, 322,
	379, 173, 174, 0, 175, 398, 323, 176, 439, 177,
	178, 179, 0, 180, 0, 0, 390, 182, 183, 0,
	0, 184, 325, 466, 185, 467, 326, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 440, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 468, 224, 225, 226, 330, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 417, 240, 241, 331, 242, 243, 0, 244, 245,
	441, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	470, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 396, 269, 270, 271,
	272, 1100, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 418, 0, 281, 282, 283, 284, 285, 338, 442,
	0, 286, 471, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 425,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	0, 0, 0, 0, 0, 402, 393, 405, 376, 377,
	389, 404, 0, 0, 0, 0, 0, 383, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 388, 0, 0, 44,
	45, 0, 46, 47, 450, 48, 49, 50, 0, 427,
	451, 428, 429, 0, 51, 52, 53, 54, 55, 399,
	421, 56, 57, 430, 431, 58, 0, 59, 60, 61,
	62, 422, 0, 452, 0, 63, 64, 65, 66, 453,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 454, 76, 77, 78, 419, 410, 415, 420, 411,
	412, 416, 79, 80, 81, 82, 83, 84, 432, 433,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 426, 98, 99,
	0, 100, 101, 102, 0, 103, 0, 105, 0, 106,
	107, 108, 109, 387, 110, 111, 112, 311, 397, 113,
	0, 114, 115, 434, 116, 0, 117, 0, 118, 455,
	0, 456, 119, 120, 121, 0, 122, 423, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 0, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 458, 315, 140, 141, 142, 143, 435, 436, 0,
	318, 0, 144, 0, 0, 145, 461, 146, 147, 148,
	149, 150, 0, 0, 151, 424, 462, 152, 0, 0,
	153, 154, 155, 413, 414, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	437, 464, 438, 171, 172, 322, 379, 173, 174, 0,
	175, 398, 323, 176, 439, 177, 178, 179, 0, 180,
	0, 0, 390, 182, 183, 0, 0, 184, 325, 466,
	185, 467, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 440, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 468, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 417, 240, 241,
	331, 242, 243, 0, 244, 245, 441, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 470, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 396, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 418, 0, 281,
	282, 283, 284, 285, 338, 442, 0, 286, 471, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 425, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 0, 0, 0, 30,
	389, 0, 0, 956, 376, 377, 0, 966, 967, 968,
	0, 0, 0, 383, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	0, 0, 0, 44, 45, 0, 46, 47, 0, 48,
	49, 50, 301, 302, 0, 303, 304, 0, 51, 52,
	53, 54, 55, 0, 0, 56, 57, 305, 306, 58,
	0, 59, 60, 61, 62, 307, 0, 0, 0, 63,
	64, 65, 66, 0, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 0, 76, 77, 78, 0,
	0, 0, 0, 0, 0, 0, 79, 80, 81, 82,
	83, 84, 308, 309, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 97, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 310, 110, 111,
	112, 311, 0, 113, 0, 114, 115, 312, 116, 0,
	117, 0, 118, 0, 0, 0, 119, 120, 121, 0,
	122, 313, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 0, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 0, 315, 140, 141, 142,
	143, 316, 317, 0, 318, 0, 144, 0, 0, 145,
	0, 146, 147, 148, 149, 150, 0, 0, 151, 319,
	0, 152, 0, 0, 153, 154, 155, 0, 0, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 320, 0, 321, 171, 172, 322,
	0, 173, 174, 0, 175, 0, 323, 176, 324, 177,
	178, 179, 545, 180, 0, 0, 181, 182, 183, 0,
	0, 184, 325, 0, 185, 0, 326, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 329, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 0, 224, 225, 226, 330, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 0, 240, 241, 331, 242, 243, 0, 244, 245,
	332, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	0, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 0, 0, 281, 282, 283, 284, 285, 338, 339,
	0, 286, 0, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	963, 964, 965, 30, 957, 958, 959, 960, 961, 962,
	0, 0, 0, 0, 0, 0, 0, 893, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 0, 0, 0, 44, 45, 0,
	46, 47, 0, 48, 49, 50, 301, 302, 0, 303,
	304, 0, 51, 52, 53, 54, 55, 0, 0, 56,
	57, 305, 306, 58, 0, 59, 60, 61, 62, 307,
	0, 0, 0, 63, 64, 65, 66, 0, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 0,
	76, 77, 78, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 81, 82, 83, 84, 308, 309, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 97, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 310, 110, 111, 112, 311, 0, 113, 0, 114,
	115, 312, 116, 0, 117, 0, 118, 0, 0, 0,
	119, 120, 121, 0, 122, 313, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 0, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 0,
	315, 140, 141, 142, 143, 316, 317, 0, 318, 0,
	144, 0, 0, 145, 0, 146, 147, 148, 149, 150,
	0, 0, 151, 319, 0, 152, 0, 0, 153, 154,
	155, 0, 0, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 320, 0,
	321, 171, 172, 322, 0, 173, 174, 0, 175, 0,
	323, 176, 324, 177, 178, 179, 0, 180, 0, 0,
	181, 182, 183, 0, 0, 184, 325, 0, 185, 0,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 329, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 0, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 0, 240, 241, 331, 242,
	243, 0, 244, 245, 332, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 0, 261, 262, 263, 264, 265,
	0, 334, 335, 0, 0, 266, 267, 336, 268, 337,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 0, 0, 281, 282, 283,
	284, 285, 338, 339, 0, 286, 0, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 341, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 0, 0, 0, 30, 0, 0,
	389, 0, 0, 956, 0, 0, 0, 966, 967, 968,
	0, 477, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 974, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 0, 48, 49, 50,
	301, 302, 0, 303, 304, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 305, 306, 58, 0, 59,
	60, 61, 62, 307, 0, 0, 0, 63, 64, 65,
	66, 0, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 0, 76, 77, 78, 0, 0, 0,
	0, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 97,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 310, 110, 111, 112, 311,
	0, 113, 0, 114, 115, 312, 116, 0, 117, 0,
	118, 0, 0, 0, 119, 120, 121, 0, 122, 313,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 0,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 0, 315, 140, 141, 142, 143, 316,
	317, 0, 318, 970, 144, 0, 0, 145, 0, 146,
	147, 148, 149, 150, 0, 0, 151, 319, 0, 152,
	0, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 0, 321, 171, 172, 322, 0, 173,
	174, 0, 175, 0, 323, 176, 324, 177, 178, 179,
	0, 180, 545, 28, 181, 182, 183, 0, 0, 184,
	325, 0, 185, 0, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	0, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 331, 242, 243, 0, 244, 245, 332, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 0, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 338, 339, 0, 286,
	0, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 30, 0,
	963, 964, 965, 0, 957, 958, 959, 960, 961, 962,
	0, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 0,
	0, 0, 44, 45, 0, 46, 47, 0, 48, 49,
	50, 301, 302, 0, 303, 304, 0, 51, 52, 53,
	54, 55, 0, 0, 56, 57, 305, 306, 58, 0,
	59, 60, 61, 62, 307, 0, 0, 0, 63, 64,
	65, 66, 0, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 0, 76, 77, 78, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 81, 82, 83,
	84, 308, 309, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	97, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 310, 110, 111, 112,
	311, 0, 113, 0, 114, 115, 312, 116, 0, 117,
	0, 118, 0, 0, 0, 119, 120, 121, 0, 122,
	313, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	0, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 0, 315, 140, 141, 142, 143,
	316, 317, 0, 318, 0, 144, 0, 0, 145, 0,
	146, 147, 148, 149, 150, 0, 0, 151, 319, 0,
	152, 0, 0, 153, 154, 155, 0, 0, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 320, 0, 321, 171, 172, 322, 0,
	173, 174, 0, 175, 0, 323, 176, 324, 177, 178,
	179, 0, 180, 0, 0, 181, 182, 183, 0, 0,
	184, 325, 0, 185, 0, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 329, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 0, 224, 225, 226, 330, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	0, 240, 241, 331, 242, 243, 0, 244, 245, 332,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 0,
	261, 262, 263, 264, 265, 0, 334, 335, 0, 0,
	266, 267, 336, 268, 337, 0, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	0, 0, 281, 282, 283, 284, 285, 338, 339, 0,
	286, 0, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 341, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 30,
	0, 0, 389, 0, 0, 956, 0, 0, 0, 966,
	967, 968, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 955, 0, 0, 0,
	0, 0, 0, 44, 45, 0, 46, 47, 0, 48,
	49, 50, 301, 302, 0, 303, 304, 0, 51, 52,
	53, 54, 55, 0, 0, 56, 57, 305, 306, 58,
	0, 59, 60, 61, 62, 307, 0, 0, 0, 63,
	64, 65, 66, 0, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 0, 76, 77, 78, 0,
	0, 0, 0, 0, 0, 0, 79, 80, 81, 82,
	83, 84, 308, 309, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 97, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 310, 110, 111,
	112, 311, 0, 113, 0, 114, 115, 312, 116, 0,
	117, 0, 118, 0, 0, 0, 119, 120, 121, 0,
	122, 313, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 0, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 0, 315, 140, 141, 142,
	143, 316, 317, 0, 318, 970, 144, 0, 0, 145,
	0, 146, 147, 148, 149, 150, 0, 0, 151, 319,
	0, 152, 0, 0, 153, 154, 155, 0, 0, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 320, 0, 321, 171, 172, 322,
	0, 173, 174, 0, 175, 0, 323, 176, 324, 177,
	178, 179, 0, 180, 545, 0, 181, 182, 183, 0,
	0, 184, 325, 0, 185, 0, 326, 186, 187, 188,
	189, 0, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	0, 206, 329, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 0, 224, 225, 226, 330, 0, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 0, 240, 241, 331, 242, 243, 0, 244, 245,
	332, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	0, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 0, 0, 281, 282, 283, 284, 285, 338, 339,
	0, 286, 0, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	646, 0, 963, 964, 965, 0, 957, 958, 959, 960,
	961, 962, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 0, 0, 0, 44, 45, 0, 46, 47, 450,
	48, 49, 50, 0, 635, 451, 648, 641, 0, 51,
	52, 53, 54, 55, 0, 0, 56, 57, 651, 650,
	58, 0, 59, 60, 61, 62, 0, 0, 452, 0,
	63, 64, 65, 66, 453, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 454, 76, 77, 78,
	0, 0, 0, 649, 0, 0, 0, 79, 80, 81,
	82, 83, 84, 639, 638, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 426, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 0, 110,
	111, 112, 0, 0, 113, 0, 114, 115, 637, 116,
	0, 117, 0, 118, 455, 0, 456, 119, 120, 121,
	0, 122, 0, 0, 0, 123, 0, 124, 125, 126,
	127, 128, 457, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 458, 0, 140, 141,
	142, 143, 632, 633, 0, 0, 0, 144, 459, 460,
	145, 461, 146, 147, 148, 149, 150, 0, 0, 151,
	0, 462, 152, 463, 0, 153, 154, 155, 0, 0,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 653, 464, 654, 171, 172,
	0, 0, 173, 174, 465, 175, 0, 0, 176, 640,
	177, 178, 179, 0, 180, 0, 0, 181, 182, 183,
	0, 0, 184, 0, 466, 185, 467, 0, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 0, 195,
	0, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 636, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 468, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 0, 240, 241, 626, 242, 243, 469, 244,
	245, 634, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 0, 0, 258, 259, 0,
	260, 470, 261, 262, 263, 264, 265, 0, 0, 0,
	0, 0, 266, 267, 0, 268, 0, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 0, 0, 281, 282, 283, 284, 285, 0,
	652, 0, 286, 471, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 299,
	300, 0, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	0, 0, 0, 44, 45, 0, 46, 47, 450, 48,
	49, 50, 0, 635, 451, 648, 641, 0, 51, 52,
	53, 54, 55, 0, 0, 56, 57, 651, 650, 58,
	0, 59, 60, 61, 62, 0, 0, 452, 0, 63,
	64, 65, 66, 453, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 454, 76, 77, 78, 0,
	0, 0, 649, 0, 0, 0, 79, 80, 81, 82,
	83, 84, 639, 638, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 426, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 0, 110, 111,
	112, 0, 0, 113, 0, 114, 115, 637, 116, 0,
	117, 0, 118, 455, 0, 456, 119, 120, 121, 0,
	122, 0, 0, 0, 123, 0, 124, 125, 126, 127,
	128, 457, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 458, 0, 140, 141, 142,
	143, 632, 633, 0, 0, 0, 144, 459, 460, 145,
	461, 146, 147, 148, 149, 150, 0, 0, 151, 0,
	462, 152, 463, 0, 153, 154, 155, 0, 0, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 653, 464, 654, 171, 172, 0,
	0, 173, 174, 465, 175, 0, 0, 176, 640, 177,
	178, 179, 0, 180, 0, 0, 181, 182, 183, 0,
	0, 184, 0, 466, 185, 467, 0, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 0, 195, 0,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 636, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 468, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 0, 240, 241, 0, 242, 243, 469, 244, 245,
	634, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 0, 0, 258, 259, 0, 260,
	470, 261, 262, 263, 264, 265, 0, 0, 0, 0,
	0, 266, 267, 0, 268, 0, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 0, 0, 281, 282, 283, 284, 285, 0, 652,
	0, 286, 471, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 0, 0, 389, 0, 0, 517, 298, 299, 300,
	529, 530, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 517, 0, 533, 0, 529,
	530, 531, 0, 0, 0, 519, 0, 0, 0, 0,
	0, 542, 389, 0, 0, 517, 533, 0, 0, 529,
	530, 531, 0, 0, 519, 0, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 518, 533, 0, 0, 0,
	389, 0, 0, 517, 519, 0, 0, 529, 530, 531,
	542, 0, 0, 0, 518, 0, 389, 0, 0, 517,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 519, 0, 518, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 0,
	0, 0, 389, 0, 0, 517, 0, 0, 0, 529,
	530, 531, 518, 0, 0, 0, 389, 0, 0, 517,
	0, 0, 0, 529, 530, 531, 533, 0, 518, 0,
	619, 0, 0, 0, 519, 0, 389, 0, 0, 517,
	542, 0, 0, 529, 530, 531, 0, 0, 519, 0,
	537, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 518, 0, 0, 0, 519, 537,
	0, 0, 0, 0, 542, 0, 539, 540, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	0, 535, 943, 0, 0, 539, 540, 0, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 620, 0, 0, 0, 539, 540, 537, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 545, 0, 0, 534, 0,
	0, 541, 0, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 545, 0, 0, 534, 535, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 537,
	0, 0, 0, 0, 545, 0, 0, 534, 0, 0,
	1114, 0, 0, 537, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 539, 540, 0, 0, 934,
	0, 0, 545, 537, 389, 534, 0, 517, 0, 0,
	535, 529, 530, 531, 0, 0, 538, 0, 545, 0,
	0, 0, 0, 0, 535, 0, 0, 0, 533, 539,
	540, 933, 0, 0, 0, 538, 519, 0, 0, 0,
	0, 541, 542, 0, 535, 0, 389, 0, 0, 517,
	0, 0, 0, 0, 545, 538, 0, 534, 0, 0,
	0, 0, 0, 0, 389, 0, 518, 517, 545, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 519, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 545, 0,
	0, 534, 0, 0, 0, 0, 519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 518, 536,
	1113, 0, 0, 526, 527, 528, 0, 520, 521, 522,
	523, 524, 525, 0, 0, 0, 518, 1042, 536, 0,
	0, 0, 526, 527, 528, 538, 520, 521, 522, 523,
	524, 525, 0, 0, 0, 0, 920, 0, 536, 538,
	0, 0, 526, 527, 528, 0, 520, 521, 522, 523,
	524, 525, 0, 0, 0, 0, 773, 0, 0, 538,
	0, 537, 863, 0, 0, 0, 536, 0, 0, 0,
	526, 527, 528, 0, 520, 521, 522, 523, 524, 525,
	617, 0, 1038, 0, 0, 0, 0, 539, 540, 0,
	520, 521, 522, 523, 524, 525, 0, 0, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 526, 527, 528, 0, 520, 521, 522, 523,
	524, 525, 536, 541, 0, 0, 526, 527, 528, 0,
	520, 521, 522, 523, 524, 525, 545, 0, 0, 534,
	0, 389, 536, 0, 517, 0, 526, 527, 528, 0,
	520, 521, 522, 523, 524, 525, 544, 0, 0, 0,
	0, 389, 0, 0, 517, 0, 0, 0, 529, 530,
	531, 0, 0, 519, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 389, 0, 533, 517, 0, 543, 0,
	529, 530, 531, 519, 0, 0, 545, 0, 0, 542,
	0, 389, 0, 518, 517, 0, 0, 533, 529, 530,
	531, 0, 0, 0, 0, 519, 0, 538, 0, 0,
	0, 542, 0, 518, 0, 533, 0, 0, 907, 0,
	0, 0, 0, 519, 389, 0, 0, 517, 0, 542,
	0, 529, 530, 531, 0, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 518, 0, 0, 519, 857, 0, 0,
	389, 0, 542, 517, 0, 0, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 0, 518, 0, 0, 0,
	0, 0, 519, 0, 0, 0, 0, 0, 542, 0,
	536, 0, 0, 0, 526, 527, 528, 0, 520, 521,
	522, 523, 524, 525, 0, 0, 0, 0, 537, 0,
	0, 0, 518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 0, 0, 0, 539, 540, 0, 0, 0, 0,
	520, 521, 522, 523, 524, 525, 0, 0, 537, 535,
	0, 0, 0, 0, 0, 0, 539, 540, 520, 521,
	522, 523, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 535, 0, 545, 539, 540, 0, 0, 0, 0,
	541, 537, 0, 0, 0, 0, 0, 0, 0, 535,
	0, 0, 0, 545, 0, 0, 534, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 539, 540, 0,
	0, 0, 0, 0, 0, 545, 0, 537, 534, 0,
	541, 0, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 535, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 0, 534,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 522, 523, 524,
	525, 0, 0, 0, 0, 0, 0, 536, 0, 0,
	0, 526, 527, 528, 0, 520, 521, 522, 523, 524,
	525, 0, 0, 538, 0, 0, 0, 0, 0, 536,
	0, 0, 0, 526, 527, 528, 0, 520, 521, 522,
	523, 524, 525, 0, 0, 0, 0, 536, 0, 0,
	0, 526, 527, 528, 0, 520, 521, 522, 523, 524,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 0, 0, 0, 526, 527, 528, 0, 520, 521,
	522, 523, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 0, 0,
	526, 527, 528, 0, 520, 521, 522, 523, 524, 525,
}
var yyPact = [...]int{

	-243, -1000, -370, -1000, -1000, -1000, 57, -243, 256, -373,
	8842, -313, -1000, -1000, 100, 239, 239, 239, 245, -328,
	-330, 4044, 4044, -1000, -31, -313, -1000, -279, 8408, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3608, 102, 122, 121, -24, -26, 108, -1000, 4488, 89,
	5796, -21, -243, -1000, -1000, -243, -243, 5796, -1000, -1000,
	-1000, -376, -1000, 11571, -1000, -1000, 5796, 5796, 5796, 5796,
	5796, -1000, -1000, 3172, -1000, -1000, -366, -295, -331, -1000,
	-312, -366, -1000, -1000, -1000, 336, -1000, -1000, -1000, 5796,
	106, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -296,
	-1000, -297, -298, -301, -302, -1000, -1000, -1000, -1000, -1000,
	-1000, -305, -306, -307, -309, -310, -79, -1000, -229, -1000,
	-229, -229, -318, -318, -317, -1000, -1000, 229, -229, -318,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 53, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -376, -311, -1000, -1000, -1000, 9273, -383, -1000,
	11644, -1000, -1000, -1000, -1000, -1000, -1000, -28, -34, -1000,
	39, -1000, -147, -1000, -1000, -1000, 11644, -1000, 107, -1000,
	-1000, -1000, -104, 11644, -1000, -57, 9273, 50, -1000, -1000,
	-1000, 50, -377, -1000, 11092, 104, 4044, 10135, 9273, -183,
	5796, 5796, 5796, 5796, 5796, 5796, 5796, 5796, 5796, 5796,
	5796, 5796, 7540, 5796, 5796, 5796, 152, 5796, -187, 82,
	-1000, -1000, 197, 1860, -1000, -312, 317, 317, 159, 97,
	97, 11012, -372, -313, -366, -1000, 1429, 5796, -1000, -1000,
	-1000, 2736, 365, -366, -1000, -237, 11644, -48, -315, 2291,
	329, 329, 329, 329, 5796, 5796, 5796, 5796, 5796, -1000,
	-316, -1000, -1000, -1000, -1000, 5796, -1000, -1000, 329, -229,
	-229, -1000, -1000, 329, -1000, -141, 104, 5796, -341, 3608,
	-1000, -1000, -214, -1000, -104, -1000, 5796, -1000, -1000, -1000,
	-1000, -1000, -1000, 15, -379, -1000, 5796, 979, -269, -1000,
	-1000, -241, 5796, -1000, -1000, 269, 10554, -1000, -1000, -1000,
	-1000, -318, -1000, -1000, -1000, -1000, -1000, -317, -318, -318,
	-318, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -229, -1000,
	-229, -229, -1000, 229, -229, -1000, -363, -265, 276, 276,
	167, 167, 167, 283, 272, 272, 272, 272, 272, 272,
	159, 97, 11680, 11551, 5796, 5796, -189, 151, 11336, 5796,
	-1000, 85, -1000, -1000, -1000, 103, -319, 6232, 6232, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 77, -382,
	-384, -1000, 11644, -1000, -342, 45, -1000, 5796, -1000, 7974,
	-240, -1000, -212, 5796, 5796, -345, -1000, 11644, 335, -1000,
	-346, -348, -349, -350, 11611, -388, -390, -392, -394, 5796,
	-396, -351, -1000, -1000, -352, 9273, -241, -398, -1000, -1000,
	-1000, -35, 10992, -1000, 9273, -1000, -269, -1000, -320, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 91, 92, 5796, -52, -1000, 11294,
	-287, -285, 268, -1000, -364, 1860, 5796, 5796, 11056, 859,
	5796, 6232, 6232, 5796, 321, -1000, -1000, -1000, -1000, 101,
	-321, 5796, 10135, 9702, -1000, 6232, 6232, 6232, 8840, -366,
	-1000, 5796, 5796, -1000, -1000, -286, -1000, 132, -1000, 5796,
	11593, -1000, -1000, 9704, 5796, -353, 5796, -1000, -212, -212,
	-1000, 5796, 5796, -1000, -1000, -1000, -1000, 10135, -1000, -1000,
	-1000, -1000, -402, -1000, -1000, 208, -1000, 92, -1000, -1000,
	-1000, -1000, -1000, 362, -1000, -1000, 80, 244, 11644, 5796,
	42, 41, 5796, 351, -1000, 112, 329, -287, -288, 1860,
	-1000, 277, 11354, 5796, 5796, 265, 252, 194, 11354, 5796,
	5796, 10135, 11106, -406, -1000, 5796, 10135, 6232, 6232, 6232,
	6232, 6232, 6232, 6232, 6232, 6232, 6232, 6232, 6232, 6668,
	111, 293, 293, 178, 5796, -1000, 11040, 11644, -1000, -1000,
	11644, 5796, -56, -1000, 10973, -1000, -1000, -354, -355, 11644,
	11644, -356, -1000, -1000, 80, -357, -245, 5796, 5796, -1000,
	5796, 5796, -76, -1000, -1000, -290, -292, 329, -1000, 11354,
	11354, 5796, 5796, 5796, 11354, 11106, -407, -1000, 10135, 11354,
	-1000, 164, 164, 168, 168, 168, 293, 140, 140, 140,
	140, 140, 140, 178, 99, 117, -323, 11354, -1000, 11644,
	-42, 243, -1000, -1000, -1000, -1000, -245, -1000, -1000, 9273,
	11644, -380, -1000, 11644, -1000, -1000, -324, 5796, -1000, -1000,
	-293, 11354, 11354, 11354, -1000, -1000, 6232, 93, -325, 10135,
	-98, 5796, -1000, -381, -1000, 266, 5796, 348, 11644, -1000,
	7970, 6232, 10135, -408, -361, 5360, 5360, -385, 9273, -326,
	-1000, -412, -1000, 7970, -414, -1000, -1000, -1000, -1000, 7104,
	61, -120, 11126, -1000, -1000, -1000, 347, -1000, -1000, 274,
	-1000, -1000, -1000, -1000, -1000, -1000, 4924, -1000,
}
var yyPgo = [...]int{

	0, 448, 446, 375, 428, 287, 203, 445, 444, 324,
	443, 23, 442, 11, 37, 214, 316, 291, 35, 441,
	439, 26, 31, 14, 354, 438, 437, 25, 8, 34,
	32, 435, 435, 28, 44, 434, 433, 244, 432, 196,
	199, 431, 430, 427, 426, 425, 223, 424, 217, 423,
	422, 421, 419, 419, 13, 187, 418, 10, 24, 9,
	418, 417, 416, 0, 415, 414, 12, 413, 7, 6,
	364, 29, 412, 185, 411, 57, 410, 409, 408, 407,
	406, 27, 33, 404, 309, 403, 41, 21, 400, 399,
	398, 5, 4, 2, 396, 395, 394, 392, 3, 1,
	16, 391, 390, 389, 388, 36, 283, 17, 311, 15,
	387, 386, 385, 365, 18, 30, 384, 310, 279, 383,
	268, 131, 380, 378, 377, 371, 19, 22, 371,
}
var yyR1 = [...]int{

	0, 1, 1, 26, 26, 26, 27, 27, 27, 61,
	13, 13, 13, 103, 103, 104, 104, 114, 114, 114,
	114, 114, 114, 127, 127, 127, 115, 115, 115, 115,
	123, 123, 123, 112, 34, 34, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 76, 76, 122,
	122, 124, 124, 120, 121, 116, 116, 125, 125, 117,
	118, 119, 119, 119, 119, 119, 119, 71, 71, 28,
	28, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 85,
	85, 85, 85, 85, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 19, 19, 20, 20,
	20, 20, 20, 18, 18, 18, 50, 50, 50, 11,
	11, 86, 86, 87, 87, 87, 126, 126, 100, 100,
	100, 101, 101, 2, 2, 4, 4, 3, 3, 3,
	3, 5, 5, 6, 6, 6, 6, 6, 6, 6,
	29, 70, 70, 70, 10, 10, 12, 12, 23, 23,
	24, 25, 25, 22, 22, 66, 66, 67, 67, 68,
	69, 69, 46, 46, 45, 45, 47, 47, 48, 49,
	49, 49, 49, 51, 51, 91, 91, 90, 90, 92,
	94, 94, 94, 93, 95, 95, 96, 96, 97, 97,
	97, 98, 98, 99, 99, 99, 99, 99, 36, 36,
	36, 36, 37, 37, 37, 37, 38, 38, 39, 39,
	40, 40, 41, 41, 42, 43, 43, 43, 44, 30,
	30, 31, 31, 7, 7, 21, 21, 32, 32, 35,
	35, 65, 65, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 63, 63, 64, 64, 77,
	80, 80, 81, 79, 79, 78, 78, 102, 102, 54,
	54, 54, 54, 55, 55, 56, 56, 33, 33, 82,
	82, 83, 83, 84, 8, 8, 9, 9, 14, 14,
	14, 14, 52, 52, 58, 53, 53, 60, 57, 111,
	111, 74, 74, 74, 74, 74, 74, 74, 75, 73,
	72, 59, 59, 59, 108, 108, 108, 128, 128, 128,
	128, 105, 105, 105, 105, 105, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 0, 2, 2, 0, 1,
	1, 3, 2, 1, 2, 2, 3, 2, 3, 5,
	6, 2, 3, 3, 4, 0, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 1,
	1, 1, 1, 5, 2, 1, 1, 1, 1, 5,
	2, 2, 2, 1, 3, 3, 2, 1, 0, 3,
	0, 1, 3, 3, 5, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 2,
	4, 2, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 1, 3, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 5, 6, 6, 7, 1,
	1, 4, 1, 1, 1, 2, 2, 2, 2, 3,
	5, 6, 6, 4, 3, 1, 1, 1, 4, 1,
	4, 1, 4, 1, 4, 1, 1, 1, 1, 1,
	1, 6, 4, 4, 4, 4, 1, 3, 3, 4,
	4, 7, 5, 2, 2, 0, 1, 2, 0, 1,
	3, 1, 3, 1, 3, 3, 1, 3, 3, 3,
	2, 1, 3, 1, 1, 3, 3, 1, 2, 4,
	4, 1, 1, 9, 9, 1, 2, 4, 4, 4,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	3, 1, 3, 4, 3, 3, 0, 1, 3, 1,
	2, 0, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 2, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 2, 2,
	0, 1, 4, 2, 2, 2, 2, 2, 1, 2,
	2, 4, 2, 2, 1, 1, 1, 0, 2, 5,
	2, 3, 1, 1, 1, 1, 3, 0, 1, 1,
	1, 1, 1, 2, 3, 2, 0, 5, 0, 5,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 1, 4, 5,
	1, 2, 4, 2, 0, 1, 0, 1, 2, 2,
	2, 3, 5, 1, 2, 0, 2, 1, 0, 1,
	1, 1, 3, 3, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}
var yyChk = [...]int{

	-1000, -1, -2, -3, -4, -6, -5, 453, 331, -7,
	364, 404, 456, -24, -23, 390, 199, 138, 266, -3,
	-4, -12, -10, 28, 123, 457, -36, -58, 261, -59,
	5, -106, -107, 20, 21, 22, 23, 24, 25, 26,
	27, 29, 30, 31, 39, 40, 42, 43, 45, 46,
	47, 54, 55, 56, 57, 58, 61, 62, 65, 67,
	68, 69, 70, 75, 76, 77, 78, 80, 81, 82,
	84, 85, 86, 87, 88, 89, 92, 93, 94, 102,
	103, 104, 105, 106, 107, 110, 112, 114, 115, 116,
	117, 118, 120, 121, 122, 125, 126, 127, 128, 129,
	131, 132, 133, 135, 136, 137, 139, 140, 141, 142,
	144, 145, 146, 149, 151, 152, 154, 156, 158, 162,
	163, 164, 166, 170, 172, 173, 174, 175, 176, 178,
	179, 180, 181, 183, 184, 185, 186, 187, 188, 190,
	193, 194, 195, 196, 202, 205, 207, 208, 209, 210,
	211, 214, 217, 220, 221, 222, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 243, 244, 247, 248, 250, 253, 255, 256, 257,
	259, 262, 263, 264, 267, 270, 273, 274, 275, 276,
	277, 278, 279, 281, 282, 284, 287, 288, 286, 290,
	291, 292, 293, 294, 295, 296, 297, 299, 300, 301,
	302, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 314, 316, 317, 319, 320, 321, 323, 324, 325,
	326, 327, 328, 329, 330, 332, 333, 334, 335, 336,
	338, 339, 341, 342, 344, 345, 347, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 362, 363,
	365, 367, 368, 369, 370, 371, 377, 378, 380, 383,
	384, 385, 386, 387, 388, 389, 392, 393, 394, 395,
	396, 399, 400, 401, 402, 403, 407, 409, 410, 411,
	412, 415, 418, 419, 420, 421, 422, 423, 433, 434,
	435, 48, 49, 51, 52, 63, 64, 71, 108, 109,
	143, 147, 153, 167, 169, 192, 197, 198, 200, 215,
	240, 242, 245, 252, 254, 268, 272, 283, 285, 298,
	322, 340, 346, 360, 373, 374, 379, 381, 404, 405,
	424, 425, 426, 427, 428, 429, 430, 431, 432, -84,
	453, -46, -37, -47, 155, -39, -40, -48, 219, 150,
	258, -49, -70, 28, 123, -70, -70, 54, 454, 454,
	-8, -9, -14, -15, 446, -17, 444, 445, -63, 246,
	436, -102, -74, 453, -77, -88, -4, 143, 36, 10,
	262, -59, -75, 6, -73, -123, 382, 148, 251, 59,
	-85, -89, 5, -106, 11, 7, -113, -124, -125, -111,
	96, 99, 100, 223, 224, 97, 101, 337, 397, 95,
	98, 60, 71, 167, 215, 425, 127, 49, 51, 52,
	63, 64, 108, 109, 153, 197, 198, 240, 242, 254,
	298, 346, 405, -120, -121, -117, -118, -108, -119, -109,
	44, 50, 73, 79, 91, 159, 161, 177, 191, 203,
	204, 206, 216, 218, 241, 249, 269, 271, 318, 343,
	366, 408, -9, 260, -84, 446, -58, 453, -83, -82,
	-15, 111, -38, -37, -45, -46, -48, 155, 297, 396,
	244, 341, 207, -40, -39, -41, -15, 28, -31, 152,
	243, -42, -44, -15, -17, -51, 256, -5, -6, -4,
	-5, -5, -25, -22, -15, -29, 457, 13, 72, 42,
	444, 445, 446, 447, 448, 449, 440, 441, 442, 17,
	18, 19, -63, 34, 265, 218, 436, 177, 343, 203,
	204, 249, 48, 37, 5, 262, -15, -15, -15, -15,
	-15, -15, -4, 404, -55, -54, 455, 451, -4, -4,
	-100, 451, 453, -55, -73, -78, -15, -35, 151, 453,
	453, 453, 453, 453, 453, 453, 453, 453, 453, 285,
	-71, 407, -71, -71, -34, 453, -34, -76, 453, 64,
	63, -71, -34, 453, -28, 64, -29, 453, -58, 457,
	454, 261, 207, 341, -43, -72, 453, -75, -30, 322,
	323, -50, 250, 345, -52, -58, 457, 398, -26, 38,
	119, -18, 160, -14, -114, -115, 340, -112, -113, -122,
	-116, -108, 197, 198, 346, 49, 298, 153, 109, 108,
	254, 52, -120, -121, -117, -118, 5, -106, 51, 98,
	64, 63, 405, 240, 242, -103, -59, 373, -15, -15,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, 218, 177, 343, 48, -15, 375,
	251, 246, 382, 148, 392, 123, 256, -33, 361, 41,
	-105, 5, -106, -107, -109, -110, 28, 32, 33, 34,
	35, 36, 37, 38, 41, 53, 59, 60, 66, 72,
	74, 83, 90, 95, 96, 97, 99, 100, 101, 111,
	113, 119, 123, 124, 130, 134, 138, 148, 150, 155,
	157, 160, 165, 168, 171, 182, 189, 199, 201, 212,
	213, 219, 223, 224, 246, 251, 258, 260, 261, 265,
	266, 280, 289, 303, 315, 331, 337, 348, 361, 364,
	372, 375, 376, 382, 390, 391, 397, 398, 406, 413,
	414, 416, 417, 454, -54, -57, 446, -105, -15, -11,
	-101, 452, -15, -100, 4, -80, -81, 413, -94, 270,
	453, 454, -86, 28, 123, 446, -87, -15, -61, -108,
	-75, -75, -75, -75, -15, -11, -11, -11, -11, 453,
	-11, -75, -71, -71, -75, 338, -18, -11, 454, -82,
	396, -30, -15, 227, 457, -22, -64, -65, 262, 10,
	-62, 444, 445, 446, 447, 448, 449, 440, 441, 442,
	17, 18, 19, -27, 437, -21, 414, -13, -20, -15,
	-127, 36, -115, -34, -104, 455, 435, 136, -15, -15,
	375, -33, 361, 136, -15, 251, 382, 148, 392, 123,
	256, 160, 453, -16, -17, 444, 445, -63, -16, -56,
	452, 458, 457, 452, 452, 457, 454, -79, -81, 130,
	-15, -93, -59, 453, 414, -23, 457, -24, -86, -86,
	454, 15, 16, 454, 454, 454, 454, 37, 454, 454,
	454, 454, -11, 454, 454, 454, -59, -21, 454, 261,
	454, -58, -27, 453, 152, 211, -66, 168, -15, 457,
	91, 241, 206, 37, 5, 451, 451, -127, 36, 455,
	-57, -15, -15, 136, 136, -15, -16, -16, -15, 136,
	160, 453, -15, -126, -114, 34, 13, 444, 445, 446,
	447, 448, 449, 440, 441, 442, 17, 18, 19, -63,
	203, -16, -16, -16, 34, -54, -15, -15, -100, 134,
	-15, 372, -95, -59, -15, 454, -87, -23, -23, -15,
	-15, -114, 454, -28, -66, 4, -69, 171, 54, -13,
	206, 206, -13, 5, 452, -75, -75, 451, -57, -15,
	-15, 136, 34, 34, -15, -15, -126, 454, 457, -15,
	-114, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, 123, 246, 256, -15, 452, -15,
	-96, 277, 454, 454, 454, 454, -69, 454, -91, 416,
	-15, -67, -68, -15, -13, -13, 398, 260, 452, 452,
	-75, -15, -15, -15, 454, -114, 160, 123, 256, 453,
	-23, 54, -91, -90, -92, -59, 457, 453, -15, 452,
	-16, 160, 453, -126, -97, 296, 323, -11, 457, 37,
	-68, -19, 5, -16, -126, 454, 454, -98, -99, 48,
	387, 94, -15, -98, -92, -93, 457, 454, 454, -99,
	284, 154, 322, 284, 154, 5, 34, -99,
}
var yyDef = [...]int{

	0, -2, 1, 213, -2, -2, 239, 0, 237, 225,
	0, 0, 2, -2, 0, 233, 233, 233, 0, 0,
	222, 365, 0, 236, 234, 0, 226, 288, 0, 374,
	391, 392, 393, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 313,
	0, 297, 255, 252, 0, 294, 295, 256, 0, 0,
	0, 264, 0, 231, 232, 0, 0, 0, 215, 216,
	230, 364, 366, 370, 371, 71, 0, 0, 0, 0,
	0, 149, 150, 0, 152, 153, 154, 683, 0, 335,
	554, 347, 381, 382, 383, 0, 385, 386, 387, 346,
	320, 165, -2, -2, 388, 389, 30, 31, 32, 0,
	166, 167, 169, 171, 173, 175, 176, 177, 178, 179,
	-2, 0, 680, 686, 692, 714, 470, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 693, -2, -2,
	-2, -2, -2, 51, 52, 57, 58, 379, 70, 396,
	722, 723, 724, 725, 726, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 230, 0, 314, 289, 290, 0, 0, 361,
	359, 360, 219, 296, 220, 254, 257, 0, 0, 259,
	0, 261, 0, 292, 293, 298, 302, 303, 307, 311,
	312, 300, 0, 304, -2, 198, 0, 227, 221, 222,
	228, 229, 240, 241, 5, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 91, 0, 0, 0, 0, 0, 0, 0,
	109, 111, 358, 0, 369, 0, 75, 76, 90, 94,
	95, 0, -2, 711, 155, 353, 0, 0, 156, 157,
	158, 0, 0, -2, 384, 0, 345, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	54, 67, 62, 61, 44, 0, 43, 41, 0, 68,
	68, 66, 45, 0, 60, 0, 195, 0, 0, 0,
	363, 253, 0, 262, 0, 305, 0, 390, 301, 309,
	310, 258, 196, 0, 263, 372, 0, 0, 8, 3,
	4, 316, 0, 367, 72, 25, 0, 26, 27, 28,
	29, 35, 36, 37, 38, 39, 40, 48, 35, 35,
	35, 46, 49, 50, 55, 56, 394, 395, 68, 727,
	68, 68, 63, 0, 68, 73, 13, 0, 77, 78,
	79, 80, 81, 82, -2, -2, -2, -2, -2, -2,
	89, 92, 93, -2, 0, 0, 0, 358, -2, 0,
	108, 0, 112, 114, 116, 0, 0, 0, 0, 357,
	368, 401, 402, 403, 404, 405, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 355, 354, 349, 350, 378, 0, 0,
	0, 210, 199, 211, 0, 344, 340, 0, 164, 0,
	0, 159, 239, 0, 0, 0, 201, 203, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 65, 0, 0, 316, 0, 291, 362,
	260, 0, 0, 197, 0, 242, 8, 337, 0, 321,
	322, 323, 324, 325, 326, 327, 328, 329, 330, 331,
	332, 333, 334, 244, 0, 246, 0, 193, 194, 10,
	17, 21, 25, 33, 14, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 110, 113, 115, 117, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 151,
	351, 0, 0, 208, 209, 0, 336, 0, 341, 0,
	0, 270, 271, 275, 0, 0, 0, 238, 239, 239,
	163, 0, 0, 168, 170, 172, 174, 0, 182, 183,
	184, 185, 0, 34, 47, 70, 69, 246, 235, 299,
	306, 373, 243, 0, 6, 7, 251, 0, 315, 0,
	0, 0, 0, 0, 12, 0, 0, 18, 22, 0,
	15, 74, -2, 0, 0, -2, 0, 0, -2, 0,
	0, 0, -2, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 128, 129, 143, 0, 356, 0, 200, 212, 339,
	343, 0, 277, 274, 0, 160, 202, 0, 0, 204,
	205, 0, 53, 59, 251, 0, 266, 0, 0, 188,
	0, 0, 0, 11, 23, 0, 0, 0, 16, -2,
	-2, 0, 0, 0, -2, -2, 0, 120, 0, -2,
	127, 130, 131, 132, 133, 134, 135, -2, -2, -2,
	-2, -2, -2, 142, 0, 0, 0, -2, 352, 342,
	239, 0, 319, 161, 162, 181, 266, 338, 223, 0,
	250, 245, 247, 249, 189, 190, 0, 0, 24, 19,
	0, -2, -2, -2, 121, 207, 0, 0, 0, 0,
	280, 0, 224, 265, 267, 0, 0, 0, 192, 20,
	-2, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	248, 0, 186, -2, 0, 147, 273, 278, 281, -2,
	646, 451, 0, 279, 268, 269, 0, 191, 148, 0,
	283, 284, 285, 286, 287, 187, 0, 282,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 448, 3, 3,
	453, 454, 446, 444, 457, 445, 455, 447, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 458, 456,
	440, 442, 441, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 451, 3, 452, 449,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 443, 57783, 450, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lookahead func() int
}

func (p *yyParserImpl) Lookahead() int {
	return p.lookahead()
}

func yyNewParser() yyParser {
	p := &yyParserImpl{
		lookahead: func() int { return -1 },
	}
	return p
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	var yyDollar []yySymType
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yytoken := -1 // yychar translated into internal numbering
	yyrcvr.lookahead = func() int { return yychar }
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yychar = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar, yytoken = yylex1(yylex, &yylval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yychar = -1
		yytoken = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar, yytoken = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yychar = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:362
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:367
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yyVAL.sqlSelect.Semicolon = true
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:374
		{
			yyVAL.str = "asc"
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:375
		{
			yyVAL.str = "desc"
		}
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:376
		{
			yyVAL.str = ""
		}
	case 6:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:379
		{
			yyVAL.str = "first"
		}
	case 7:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:380
		{
			yyVAL.str = "last"
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:381
		{
			yyVAL.str = ""
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:390
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:394
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 12:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:398
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:405
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 14:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:409
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyDollar[2].anyName...)
		}
	case 15:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:416
		{
			yyVAL.anyName = AnyName{yyDollar[2].str}
		}
	case 16:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:420
		{
			yyVAL.anyName = append(yyDollar[1].anyName, yyDollar[3].str)
		}
	case 17:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:437
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayBounds = yyDollar[2].optArrayBounds
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:442
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyDollar[3].optArrayBounds
		}
	case 19:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:449
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerLiteral{yyDollar[4].iconst}
		}
	case 20:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:455
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerLiteral{yyDollar[5].iconst}
		}
	case 21:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:462
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 22:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:467
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 23:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:475
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, "")
		}
	case 24:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:479
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, yyDollar[3].iconst)
		}
	case 25:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:483
		{
			yyVAL.optArrayBounds = nil
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:533
		{
			yyVAL.pgType = PgType{Name: yyDollar[1].str, TypeMods: yyDollar[2].fields}
		}
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:544
		{
			yyVAL.fields = yyDollar[2].fields
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:545
		{
			yyVAL.fields = nil
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:552
		{
			yyVAL.pgType = PgType{Name: "int"}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:556
		{
			yyVAL.pgType = PgType{Name: "integer"}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:560
		{
			yyVAL.pgType = PgType{Name: "smallint"}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:564
		{
			yyVAL.pgType = PgType{Name: "bigint"}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:568
		{
			yyVAL.pgType = PgType{Name: "real"}
		}
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:572
		{
			yyVAL.pgType = PgType{Name: "float"}
			if yyDollar[2].iconst != IntegerLiteral("") {
				yyVAL.pgType.TypeMods = []Expr{yyDollar[2].iconst}
			}
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:579
		{
			yyVAL.pgType = PgType{Name: "double precision"}
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:583
		{
			yyVAL.pgType = PgType{Name: "decimal", TypeMods: yyDollar[2].fields}
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:587
		{
			yyVAL.pgType = PgType{Name: "dec", TypeMods: yyDollar[2].fields}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:591
		{
			yyVAL.pgType = PgType{Name: "numeric", TypeMods: yyDollar[2].fields}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:595
		{
			yyVAL.pgType = PgType{Name: "bool"}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:601
		{
			yyVAL.iconst = yyDollar[2].iconst
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:605
		{
			yyVAL.iconst = IntegerLiteral("")
		}
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:619
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType.Name = "varbit"
			} else {
				yyVAL.pgType.Name = "bit"
			}
			yyVAL.pgType.TypeMods = yyDollar[4].fields
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:631
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: "varbit"}
			} else {
				yyVAL.pgType = PgType{Name: "bit"}
			}
		}
	case 59:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:654
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.TypeMods = []Expr{yyDollar[3].iconst}
			yyVAL.pgType.CharSet = yyDollar[5].str
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:662
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.CharSet = yyDollar[2].str
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:669
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:677
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:685
		{
			yyVAL.pgType = PgType{Name: "varchar"}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:689
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:697
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:705
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:715
		{
			yyVAL.boolean = true
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:719
		{
			yyVAL.boolean = false
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:725
		{
			yyVAL.str = yyDollar[3].str
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:729
		{
			yyVAL.str = ""
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:773
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:777
		{
			yyVAL.expr = CollateExpr{Expr: yyDollar[1].expr, Collation: yyDollar[3].anyName}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:781
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyDollar[1].expr, TimeZone: yyDollar[5].expr}
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:794
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyDollar[2].expr}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:798
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyDollar[2].expr}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:802
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "+", Right: yyDollar[3].expr}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:806
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "-", Right: yyDollar[3].expr}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:810
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "*", Right: yyDollar[3].expr}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:814
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "/", Right: yyDollar[3].expr}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:818
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "%", Right: yyDollar[3].expr}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:822
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "^", Right: yyDollar[3].expr}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:826
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "<", Right: yyDollar[3].expr}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:830
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: ">", Right: yyDollar[3].expr}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:834
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "=", Right: yyDollar[3].expr}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:838
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "<=", Right: yyDollar[3].expr}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:842
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: ">=", Right: yyDollar[3].expr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:846
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "!=", Right: yyDollar[3].expr}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:850
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:854
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:858
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].str}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:862
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "and", Right: yyDollar[3].expr}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:866
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "or", Right: yyDollar[3].expr}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:870
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:874
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:878
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr}
		}
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:882
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:886
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr}
		}
	case 99:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:890
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:894
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:898
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:902
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr}
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:906
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:911
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr}
		}
	case 105:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:915
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:919
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr}
		}
	case 107:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:923
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr, Escape: yyDollar[7].expr}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:936
		{
			yyVAL.expr = IsNullExpr{Expr: yyDollar[1].expr}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:940
		{
			yyVAL.expr = IsNullExpr{Expr: yyDollar[1].expr}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:944
		{
			yyVAL.expr = IsNullExpr{Expr: yyDollar[1].expr, Not: true}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:948
		{
			yyVAL.expr = IsNullExpr{Expr: yyDollar[1].expr, Not: true}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:955
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyDollar[1].expr, Op: "true"}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:959
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyDollar[1].expr, Not: true, Op: "true"}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:963
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyDollar[1].expr, Op: "false"}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:967
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyDollar[1].expr, Not: true, Op: "false"}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:971
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyDollar[1].expr, Op: "unknown"}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:975
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyDollar[1].expr, Not: true, Op: "unknown"}
		}
	case 118:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:979
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "is distinct from", Right: yyDollar[5].expr}
		}
	case 119:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:983
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "is not distinct from", Right: yyDollar[6].expr}
		}
	case 120:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:987
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 121:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:991
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 122:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:995
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 123:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:999
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 124:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1003
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Symmetric: true, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 125:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1007
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Symmetric: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1030
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1034
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1038
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyDollar[2].expr}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1042
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyDollar[2].expr}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1046
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "+", Right: yyDollar[3].expr}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1050
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "-", Right: yyDollar[3].expr}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1054
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "*", Right: yyDollar[3].expr}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1058
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "/", Right: yyDollar[3].expr}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1062
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "%", Right: yyDollar[3].expr}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1066
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "^", Right: yyDollar[3].expr}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1070
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "<", Right: yyDollar[3].expr}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1074
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: ">", Right: yyDollar[3].expr}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1078
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "=", Right: yyDollar[3].expr}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1082
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "<=", Right: yyDollar[3].expr}
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1086
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: ">=", Right: yyDollar[3].expr}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1090
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "!=", Right: yyDollar[3].expr}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1094
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1098
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1102
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].str}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1106
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "is distinct from", Right: yyDollar[5].expr}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1110
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: "is not distinct from", Right: yyDollar[6].expr}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1114
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1118
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1144
		{
			yyVAL.expr = yyDollar[1].columnRef
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1145
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1151
		{
			yyVAL.expr = ParenExpr{Expr: yyDollar[2].expr, Indirection: yyDollar[4].indirection}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1154
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1155
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1157
		{
			yyVAL.expr = yyDollar[1].sqlSelect
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1161
		{
			yyDollar[1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyDollar[1].sqlSelect, Indirection: yyDollar[2].indirection}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1166
		{
			yyVAL.expr = ExistsExpr(*yyDollar[2].sqlSelect)
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1170
		{
			yyVAL.expr = ArraySubselect(*yyDollar[2].sqlSelect)
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1173
		{
			yyVAL.expr = ArrayConstructorExpr(yyDollar[2].arrayExpr)
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1186
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str}
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1190
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Args: yyDollar[3].funcArgs, OrderClause: yyDollar[4].orderClause}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1198
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1202
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Distinct: true, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1206
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Star: true}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1222
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyDollar[1].funcApplication, FilterClause: yyDollar[2].filterClause, OverClause: yyDollar[3].overClause}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1226
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1241
		{
			yyVAL.expr = FuncExprNoParens("current_date")
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1245
		{
			yyVAL.expr = FuncExprNoParens("current_time")
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1249
		{
			yyVAL.expr = FuncApplication{Name: "current_time", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1253
		{
			yyVAL.expr = FuncExprNoParens("current_timestamp")
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1257
		{
			yyVAL.expr = FuncApplication{Name: "current_timestamp", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1261
		{
			yyVAL.expr = FuncExprNoParens("localtime")
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1265
		{
			yyVAL.expr = FuncApplication{Name: "localtime", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1269
		{
			yyVAL.expr = FuncExprNoParens("localtimestamp")
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1273
		{
			yyVAL.expr = FuncApplication{Name: "localtimestamp", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1277
		{
			yyVAL.expr = FuncExprNoParens("current_role")
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1281
		{
			yyVAL.expr = FuncExprNoParens("current_user")
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1285
		{
			yyVAL.expr = FuncExprNoParens("session_user")
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1289
		{
			yyVAL.expr = FuncExprNoParens("user")
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1293
		{
			yyVAL.expr = FuncExprNoParens("current_catalog")
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1297
		{
			yyVAL.expr = FuncExprNoParens("current_schema")
		}
	case 181:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1301
		{
			yyVAL.expr = CastFunc{Expr: yyDollar[3].expr, Type: yyDollar[5].pgType}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1317
		{
			fa := FuncApplication{Name: "coalesce"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1325
		{
			fa := FuncApplication{Name: "greatest"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1333
		{
			fa := FuncApplication{Name: "least"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1341
		{
			fa := FuncApplication{Name: "xmlconcat"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1367
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1371
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1377
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: ",", Right: yyDollar[3].expr}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1381
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "cross join", Right: yyDollar[4].expr}
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1385
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "natural join", Right: yyDollar[4].expr}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1389
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, Using: yyDollar[6].identifiers}
		}
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1393
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, On: yyDollar[5].expr}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1399
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1403
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1406
		{
			yyVAL.fromClause = nil
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1410
		{
			yyVAL.str = "nowait"
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1411
		{
			yyVAL.str = "skip locked"
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1412
		{
			yyVAL.str = ""
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1417
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1421
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1428
		{
			yyVAL.funcArgs = []FuncArg{yyDollar[1].funcArg}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1432
		{
			yyVAL.funcArgs = append(yyDollar[1].funcArgs, yyDollar[3].funcArg)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1438
		{
			yyVAL.funcArg = FuncArg{Expr: yyDollar[1].expr}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1442
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: ":=", Expr: yyDollar[3].expr}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1446
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: "=>", Expr: yyDollar[3].expr}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1452
		{
			yyVAL.pgTypes = []PgType{yyDollar[1].pgType}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1456
		{
			yyVAL.pgTypes = append(yyDollar[1].pgTypes, yyDollar[3].pgType)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1462
		{
			yyVAL.arrayExpr = ArrayExpr(yyDollar[2].fields)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1466
		{
			yyVAL.arrayExpr = yyDollar[2].arrayExpr
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1470
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1476
		{
			yyVAL.arrayExpr = ArrayExpr{yyDollar[1].arrayExpr}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1480
		{
			yyVAL.arrayExpr = append(yyDollar[1].arrayExpr, yyDollar[3].arrayExpr)
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1536
		{
			yyDollar[2].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1540
		{
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1544
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1550
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1555
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[3].lockingClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[4].limitClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1562
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[3].limitClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[4].lockingClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1571
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 223:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1605
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyDollar[3].fields
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 224:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1618
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyDollar[2].fields
			ss.TargetList = yyDollar[3].fields
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1630
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyDollar[1].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1636
		{
			ss := &SimpleSelect{}
			ss.Table = yyDollar[2].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1642
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1651
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1660
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1684
		{
			yyVAL.placeholder = nil
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1689
		{
			yyVAL.boolean = true
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1690
		{
			yyVAL.boolean = false
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1691
		{
			yyVAL.boolean = false
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1696
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 235:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1697
		{
			yyVAL.fields = yyDollar[4].fields
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1700
		{
			yyVAL.placeholder = nil
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1701
		{
			yyVAL.placeholder = nil
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1704
		{
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1705
		{
			yyVAL.orderClause = nil
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1708
		{
			yyVAL.orderClause = yyDollar[3].orderClause
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1712
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyDollar[1].orderExpr}}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1716
		{
			yyDollar[1].orderClause.Exprs = append(yyDollar[1].orderClause.Exprs, yyDollar[3].orderExpr)
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1724
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Using: yyDollar[3].str, Nulls: yyDollar[4].str}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1728
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Order: yyDollar[2].str, Nulls: yyDollar[3].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1753
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyDollar[3].fields}
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1754
		{
			yyVAL.groupByClause = nil
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1758
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1762
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1775
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1776
		{
			yyVAL.expr = nil
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1779
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1780
		{
			yyVAL.lockingClause = nil
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1783
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1784
		{
			yyVAL.lockingClause = nil
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1788
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyDollar[1].lockingItem}}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1792
		{
			yyDollar[1].lockingClause.Locks = append(yyDollar[1].lockingClause.Locks, yyDollar[2].lockingItem)
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1799
		{
			yyVAL.lockingItem = LockingItem{Strength: yyDollar[1].str, LockedRels: yyDollar[2].identifiers, WaitPolicy: yyDollar[3].str}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1804
		{
			yyVAL.str = "update"
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1805
		{
			yyVAL.str = "no key update"
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1806
		{
			yyVAL.str = "share"
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1807
		{
			yyVAL.str = "key share"
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1810
		{
			yyVAL.identifiers = yyDollar[2].identifiers
		}
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1811
		{
			yyVAL.identifiers = nil
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1819
		{
			yyVAL.windowDefinitions = yyDollar[2].windowDefinitions
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1822
		{
			yyVAL.windowDefinitions = nil
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1826
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyDollar[1].windowDefinition}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1830
		{
			yyVAL.windowDefinitions = append(yyDollar[1].windowDefinitions, yyDollar[3].windowDefinition)
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1836
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyDollar[1].str, Specification: yyDollar[3].windowSpecification}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1842
		{
			spec := yyDollar[2].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1847
		{
			yyVAL.overClause = &OverClause{Name: yyDollar[2].str}
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1850
		{
			yyVAL.overClause = nil
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1854
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyDollar[2].str, PartitionClause: yyDollar[3].partitionClause, OrderClause: yyDollar[4].orderClause, FrameClause: yyDollar[5].frameClause}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1869
		{
			yyVAL.str = yyDollar[1].str
		}
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1870
		{
			yyVAL.str = ""
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1873
		{
			yyVAL.partitionClause = PartitionClause(yyDollar[3].fields)
		}
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1874
		{
			yyVAL.partitionClause = nil
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1885
		{
			yyDollar[2].frameClause.Mode = "range"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1890
		{
			yyDollar[2].frameClause.Mode = "rows"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1895
		{
			yyVAL.frameClause = nil
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1901
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[1].frameBound}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1905
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[2].frameBound, End: yyDollar[4].frameBound}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1916
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1920
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1924
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1928
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "preceding"}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1932
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "following"}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1940
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].str}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1944
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].str, Star: true}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1948
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[2].str, Only: true}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1952
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[3].str, Only: true}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1960
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr, Offset: yyDollar[2].expr}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1964
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[2].expr, Offset: yyDollar[1].expr}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1968
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1972
		{
			yyVAL.limitClause = &LimitClause{Offset: yyDollar[1].expr}
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1979
		{
			yyVAL.limitClause = nil
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1983
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1988
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1994
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1999
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2004
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2006
		{
			yyVAL.expr = nil
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2011
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2020
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2021
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2022
		{
			yyVAL.expr = IntegerLiteral("1")
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2029
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2033
		{
			yyVAL.placeholder = 0
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2034
		{
			yyVAL.placeholder = 0
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2037
		{
			yyVAL.placeholder = 0
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2038
		{
			yyVAL.placeholder = 0
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2042
		{
			yyVAL.valuesClause = ValuesClause{yyDollar[2].valuesRow}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2046
		{
			yyVAL.valuesClause = append(yyDollar[1].valuesClause, yyDollar[3].valuesRow)
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2063
		{
			yyVAL.whereClause = &WhereClause{Expr: yyDollar[2].expr}
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2064
		{
			yyVAL.whereClause = nil
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2073
		{
			panic("TODO")
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2074
		{
			yyVAL.placeholder = nil
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2079
		{
			yyVAL.filterClause = &FilterClause{Expr: yyDollar[4].expr}
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2082
		{
			yyVAL.filterClause = nil
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2086
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2087
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2090
		{
			yyVAL.str = "+"
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2091
		{
			yyVAL.str = "-"
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2092
		{
			yyVAL.str = "*"
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2093
		{
			yyVAL.str = "/"
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2094
		{
			yyVAL.str = "%"
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2095
		{
			yyVAL.str = "^"
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2096
		{
			yyVAL.str = "<"
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2097
		{
			yyVAL.str = ">"
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2098
		{
			yyVAL.str = "="
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2099
		{
			yyVAL.str = "<="
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2100
		{
			yyVAL.str = ">="
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2101
		{
			yyVAL.str = "<>"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2105
		{
			yyVAL.str = yyDollar[3].str
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2108
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2109
		{
			yyVAL.str = yyDollar[3].str
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2121
		{
			yyVAL.expr = CaseExpr{CaseArg: yyDollar[2].expr, WhenClauses: yyDollar[3].whenClauses, Default: yyDollar[4].expr}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2128
		{
			yyVAL.whenClauses = []WhenClause{yyDollar[1].whenClause}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2132
		{
			yyVAL.whenClauses = append(yyDollar[1].whenClauses, yyDollar[2].whenClause)
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2138
		{
			yyVAL.whenClause = WhenClause{When: yyDollar[2].expr, Then: yyDollar[4].expr}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2143
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2144
		{
			yyVAL.expr = nil
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2147
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2148
		{
			yyVAL.expr = nil
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2152
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2156
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str, Indirection: yyDollar[2].indirection}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2164
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyDollar[2].str}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2168
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2172
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2176
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr, UpperSubscript: yyDollar[4].expr}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2181
		{
			yyVAL.indirection = Indirection{yyDollar[1].indirectionEl}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2182
		{
			yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2185
		{
			yyVAL.indirection = nil
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2187
		{
			if yyDollar[1].indirection != nil {
				yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyDollar[2].indirectionEl}
			}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2197
		{
			yyVAL.placeholder = nil
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2201
		{
			yyVAL.placeholder = nil
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2213
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2214
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2218
		{
			yyVAL.valuesRow = ValuesRow{yyDollar[1].expr}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2222
		{
			yyVAL.valuesRow = append(yyDollar[1].valuesRow, yyDollar[3].expr)
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2233
		{
			yyVAL.valuesRow = yyDollar[2].valuesRow
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2244
		{
			yyVAL.fields = yyDollar[1].fields
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2245
		{
			yyVAL.fields = nil
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2248
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2250
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2256
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2260
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2265
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2279
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2283
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2296
		{
			yyVAL.str = yyDollar[1].str
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2328
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2330
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2335
		{
			yyVAL.str = yyDollar[1].str
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2338
		{
			yyVAL.str = yyDollar[1].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2351
		{
			yyVAL.str = yyDollar[1].str
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2355
		{
			panic("TODO")
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2365
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2369
		{
			yyVAL.expr = FloatConst(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2373
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2383
		{
			yyVAL.expr = ConstTypeExpr{Typename: yyDollar[1].pgType, Expr: yyDollar[2].expr}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2391
		{
			yyVAL.expr = BoolLiteral(true)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2395
		{
			yyVAL.expr = BoolLiteral(false)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2399
		{
			yyVAL.expr = NullLiteral{}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2403
		{
			yyVAL.iconst = IntegerLiteral(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2404
		{
			yyVAL.expr = StringLiteral(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2407
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2450
		{
			yyVAL.str = yyDollar[1].str
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2454
		{
			yyVAL.str = yyDollar[1].str
		}
	}
	goto yystack /* stack new state and value */
}

//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	row                 Row
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerConst
	optArrayBounds      []IntegerConst
	optInterval         *OptInterval
	intervalSecond      *IntervalSecond
}

const any_operator = 57346
const IDENT = 57347
const FCONST = 57348
const SCONST = 57349
const BCONST = 57350
const XCONST = 57351
const Op = 57352
const ICONST = 57353
const PARAM = 57354
const TYPECAST = 57355
const DOT_DOT = 57356
const COLON_EQUALS = 57357
const EQUALS_GREATER = 57358
const LESS_EQUALS = 57359
const GREATER_EQUALS = 57360
const NOT_EQUALS = 57361
const ABORT_P = 57362
const ABSOLUTE_P = 57363
const ACCESS = 57364
const ACTION = 57365
const ADD_P = 57366
const ADMIN = 57367
const AFTER = 57368
const AGGREGATE = 57369
const ALL = 57370
const ALSO = 57371
const ALTER = 57372
const ALWAYS = 57373
const ANALYSE = 57374
const ANALYZE = 57375
const AND = 57376
const ANY = 57377
const ARRAY = 57378
const AS = 57379
const ASC = 57380
const ASSERTION = 57381
const ASSIGNMENT = 57382
const ASYMMETRIC = 57383
const AT = 57384
const ATTRIBUTE = 57385
const AUTHORIZATION = 57386
const BACKWARD = 57387
const BEFORE = 57388
const BEGIN_P = 57389
const BETWEEN = 57390
const BIGINT = 57391
const BINARY = 57392
const BIT = 57393
const BOOLEAN_P = 57394
const BOTH = 57395
const BY = 57396
const CACHE = 57397
const CALLED = 57398
const CASCADE = 57399
const CASCADED = 57400
const CASE = 57401
const CAST = 57402
const CATALOG_P = 57403
const CHAIN = 57404
const CHAR_P = 57405
const CHARACTER = 57406
const CHARACTERISTICS = 57407
const CHECK = 57408
const CHECKPOINT = 57409
const CLASS = 57410
const CLOSE = 57411
const CLUSTER = 57412
const COALESCE = 57413
const COLLATE = 57414
const COLLATION = 57415
const COLUMN = 57416
const COMMENT = 57417
const COMMENTS = 57418
const COMMIT = 57419
const COMMITTED = 57420
const CONCURRENTLY = 57421
const CONFIGURATION = 57422
const CONFLICT = 57423
const CONNECTION = 57424
const CONSTRAINT = 57425
const CONSTRAINTS = 57426
const CONTENT_P = 57427
const CONTINUE_P = 57428
const CONVERSION_P = 57429
const COPY = 57430
const COST = 57431
const CREATE = 57432
const CROSS = 57433
const CSV = 57434
const CUBE = 57435
const CURRENT_P = 57436
const CURRENT_CATALOG = 57437
const CURRENT_DATE = 57438
const CURRENT_ROLE = 57439
const CURRENT_SCHEMA = 57440
const CURRENT_TIME = 57441
const CURRENT_TIMESTAMP = 57442
const CURRENT_USER = 57443
const CURSOR = 57444
const CYCLE = 57445
const DATA_P = 57446
const DATABASE = 57447
const DAY_P = 57448
const DEALLOCATE = 57449
const DEC = 57450
const DECIMAL_P = 57451
const DECLARE = 57452
const DEFAULT = 57453
const DEFAULTS = 57454
const DEFERRABLE = 57455
const DEFERRED = 57456
const DEFINER = 57457
const DELETE_P = 57458
const DELIMITER = 57459
const DELIMITERS = 57460
const DESC = 57461
const DICTIONARY = 57462
const DISABLE_P = 57463
const DISCARD = 57464
const DISTINCT = 57465
const DO = 57466
const DOCUMENT_P = 57467
const DOMAIN_P = 57468
const DOUBLE_P = 57469
const DROP = 57470
const EACH = 57471
const ELSE = 57472
const ENABLE_P = 57473
const ENCODING = 57474
const ENCRYPTED = 57475
const END_P = 57476
const ENUM_P = 57477
const ESCAPE = 57478
const EVENT = 57479
const EXCEPT = 57480
const EXCLUDE = 57481
const EXCLUDING = 57482
const EXCLUSIVE = 57483
const EXECUTE = 57484
const EXISTS = 57485
const EXPLAIN = 57486
const EXTENSION = 57487
const EXTERNAL = 57488
const EXTRACT = 57489
const FALSE_P = 57490
const FAMILY = 57491
const FETCH = 57492
const FILTER = 57493
const FIRST_P = 57494
const FLOAT_P = 57495
const FOLLOWING = 57496
const FOR = 57497
const FORCE = 57498
const FOREIGN = 57499
const FORWARD = 57500
const FREEZE = 57501
const FROM = 57502
const FULL = 57503
const FUNCTION = 57504
const FUNCTIONS = 57505
const GLOBAL = 57506
const GRANT = 57507
const GRANTED = 57508
const GREATEST = 57509
const GROUP_P = 57510
const GROUPING = 57511
const HANDLER = 57512
const HAVING = 57513
const HEADER_P = 57514
const HOLD = 57515
const HOUR_P = 57516
const IDENTITY_P = 57517
const IF_P = 57518
const ILIKE = 57519
const IMMEDIATE = 57520
const IMMUTABLE = 57521
const IMPLICIT_P = 57522
const IMPORT_P = 57523
const IN_P = 57524
const INCLUDING = 57525
const INCREMENT = 57526
const INDEX = 57527
const INDEXES = 57528
const INHERIT = 57529
const INHERITS = 57530
const INITIALLY = 57531
const INLINE_P = 57532
const INNER_P = 57533
const INOUT = 57534
const INPUT_P = 57535
const INSENSITIVE = 57536
const INSERT = 57537
const INSTEAD = 57538
const INT_P = 57539
const INTEGER = 57540
const INTERSECT = 57541
const INTERVAL = 57542
const INTO = 57543
const INVOKER = 57544
const IS = 57545
const ISNULL = 57546
const ISOLATION = 57547
const JOIN = 57548
const KEY = 57549
const LABEL = 57550
const LANGUAGE = 57551
const LARGE_P = 57552
const LAST_P = 57553
const LATERAL_P = 57554
const LEADING = 57555
const LEAKPROOF = 57556
const LEAST = 57557
const LEFT = 57558
const LEVEL = 57559
const LIKE = 57560
const LIMIT = 57561
const LISTEN = 57562
const LOAD = 57563
const LOCAL = 57564
const LOCALTIME = 57565
const LOCALTIMESTAMP = 57566
const LOCATION = 57567
const LOCK_P = 57568
const LOCKED = 57569
const LOGGED = 57570
const MAPPING = 57571
const MATCH = 57572
const MATERIALIZED = 57573
const MAXVALUE = 57574
const MINUTE_P = 57575
const MINVALUE = 57576
const MODE = 57577
const MONTH_P = 57578
const MOVE = 57579
const NAME_P = 57580
const NAMES = 57581
const NATIONAL = 57582
const NATURAL = 57583
const NCHAR = 57584
const NEXT = 57585
const NO = 57586
const NONE = 57587
const NOT = 57588
const NOTHING = 57589
const NOTIFY = 57590
const NOTNULL = 57591
const NOWAIT = 57592
const NULL_P = 57593
const NULLIF = 57594
const NULLS_P = 57595
const NUMERIC = 57596
const OBJECT_P = 57597
const OF = 57598
const OFF = 57599
const OFFSET = 57600
const OIDS = 57601
const ON = 57602
const ONLY = 57603
const OPERATOR = 57604
const OPTION = 57605
const OPTIONS = 57606
const OR = 57607
const ORDER = 57608
const ORDINALITY = 57609
const OUT_P = 57610
const OUTER_P = 57611
const OVER = 57612
const OVERLAPS = 57613
const OVERLAY = 57614
const OWNED = 57615
const OWNER = 57616
const PARSER = 57617
const PARTIAL = 57618
const PARTITION = 57619
const PASSING = 57620
const PASSWORD = 57621
const PLACING = 57622
const PLANS = 57623
const POLICY = 57624
const POSITION = 57625
const PRECEDING = 57626
const PRECISION = 57627
const PRESERVE = 57628
const PREPARE = 57629
const PREPARED = 57630
const PRIMARY = 57631
const PRIOR = 57632
const PRIVILEGES = 57633
const PROCEDURAL = 57634
const PROCEDURE = 57635
const PROGRAM = 57636
const QUOTE = 57637
const RANGE = 57638
const READ = 57639
const REAL = 57640
const REASSIGN = 57641
const RECHECK = 57642
const RECURSIVE = 57643
const REF = 57644
const REFERENCES = 57645
const REFRESH = 57646
const REINDEX = 57647
const RELATIVE_P = 57648
const RELEASE = 57649
const RENAME = 57650
const REPEATABLE = 57651
const REPLACE = 57652
const REPLICA = 57653
const RESET = 57654
const RESTART = 57655
const RESTRICT = 57656
const RETURNING = 57657
const RETURNS = 57658
const REVOKE = 57659
const RIGHT = 57660
const ROLE = 57661
const ROLLBACK = 57662
const ROLLUP = 57663
const ROW = 57664
const ROWS = 57665
const RULE = 57666
const SAVEPOINT = 57667
const SCHEMA = 57668
const SCROLL = 57669
const SEARCH = 57670
const SECOND_P = 57671
const SECURITY = 57672
const SELECT = 57673
const SEQUENCE = 57674
const SEQUENCES = 57675
const SERIALIZABLE = 57676
const SERVER = 57677
const SESSION = 57678
const SESSION_USER = 57679
const SET = 57680
const SETS = 57681
const SETOF = 57682
const SHARE = 57683
const SHOW = 57684
const SIMILAR = 57685
const SIMPLE = 57686
const SKIP = 57687
const SMALLINT = 57688
const SNAPSHOT = 57689
const SOME = 57690
const SQL_P = 57691
const STABLE = 57692
const STANDALONE_P = 57693
const START = 57694
const STATEMENT = 57695
const STATISTICS = 57696
const STDIN = 57697
const STDOUT = 57698
const STORAGE = 57699
const STRICT_P = 57700
const STRIP_P = 57701
const SUBSTRING = 57702
const SYMMETRIC = 57703
const SYSID = 57704
const SYSTEM_P = 57705
const TABLE = 57706
const TABLES = 57707
const TABLESAMPLE = 57708
const TABLESPACE = 57709
const TEMP = 57710
const TEMPLATE = 57711
const TEMPORARY = 57712
const TEXT_P = 57713
const THEN = 57714
const TIME = 57715
const TIMESTAMP = 57716
const TO = 57717
const TRAILING = 57718
const TRANSACTION = 57719
const TRANSFORM = 57720
const TREAT = 57721
const TRIGGER = 57722
const TRIM = 57723
const TRUE_P = 57724
const TRUNCATE = 57725
const TRUSTED = 57726
const TYPE_P = 57727
const TYPES_P = 57728
const UNBOUNDED = 57729
const UNCOMMITTED = 57730
const UNENCRYPTED = 57731
const UNION = 57732
const UNIQUE = 57733
const UNKNOWN = 57734
const UNLISTEN = 57735
const UNLOGGED = 57736
const UNTIL = 57737
const UPDATE = 57738
const USER = 57739
const USING = 57740
const VACUUM = 57741
const VALID = 57742
const VALIDATE = 57743
const VALIDATOR = 57744
const VALUE_P = 57745
const VALUES = 57746
const VARCHAR = 57747
const VARIADIC = 57748
const VARYING = 57749
const VERBOSE = 57750
const VERSION_P = 57751
const VIEW = 57752
const VIEWS = 57753
const VOLATILE = 57754
const WHEN = 57755
const WHERE = 57756
const WHITESPACE_P = 57757
const WINDOW = 57758
const WITH = 57759
const WITHIN = 57760
const WITHOUT = 57761
const WORK = 57762
const WRAPPER = 57763
const WRITE = 57764
const XML_P = 57765
const XMLATTRIBUTES = 57766
const XMLCONCAT = 57767
const XMLELEMENT = 57768
const XMLEXISTS = 57769
const XMLFOREST = 57770
const XMLPARSE = 57771
const XMLPI = 57772
const XMLROOT = 57773
const XMLSERIALIZE = 57774
const YEAR_P = 57775
const YES_P = 57776
const ZONE = 57777
const NOT_LA = 57778
const NULLS_LA = 57779
const WITH_LA = 57780
const OP = 57781
const POSTFIXOP = 57782
const UMINUS = 57783

var yyToknames = []string{
	"any_operator",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
}
var yyStatenames = []string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:3105

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = []int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 249,
	456, 249,
	-2, 257,
	-1, 5,
	1, 252,
	454, 252,
	456, 252,
	-2, 256,
	-1, 13,
	1, 253,
	454, 253,
	456, 253,
	-2, 273,
	-1, 408,
	7, 443,
	15, 443,
	16, 443,
	453, 443,
	-2, 440,
	-1, 409,
	7, 444,
	15, 444,
	16, 444,
	453, 444,
	-2, 441,
	-1, 417,
	7, 80,
	453, 80,
	-2, 740,
	-1, 429,
	7, 776,
	15, 776,
	16, 776,
	453, 776,
	-2, 215,
	-1, 436,
	7, 44,
	-2, 724,
	-1, 437,
	7, 73,
	453, 73,
	-2, 725,
	-1, 438,
	7, 51,
	-2, 726,
	-1, 439,
	7, 73,
	64, 73,
	453, 73,
	-2, 727,
	-1, 440,
	7, 73,
	64, 73,
	453, 73,
	-2, 728,
	-1, 441,
	7, 40,
	-2, 730,
	-1, 442,
	7, 40,
	-2, 731,
	-1, 443,
	7, 53,
	-2, 734,
	-1, 444,
	7, 41,
	-2, 738,
	-1, 445,
	7, 42,
	-2, 739,
	-1, 447,
	7, 73,
	64, 73,
	453, 73,
	-2, 743,
	-1, 448,
	7, 40,
	-2, 746,
	-1, 449,
	7, 45,
	-2, 751,
	-1, 450,
	7, 43,
	-2, 754,
	-1, 451,
	7, 83,
	-2, 756,
	-1, 452,
	7, 83,
	-2, 757,
	-1, 453,
	7, 68,
	64, 68,
	453, 68,
	-2, 761,
	-1, 513,
	322, 343,
	323, 343,
	-2, 100,
	-1, 563,
	138, 257,
	150, 257,
	155, 257,
	199, 257,
	219, 257,
	258, 257,
	266, 257,
	390, 257,
	-2, 186,
	-1, 576,
	7, 423,
	453, 423,
	-2, 391,
	-1, 695,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 112,
	-1, 696,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 113,
	-1, 697,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 114,
	-1, 698,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 115,
	-1, 699,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 116,
	-1, 700,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 117,
	-1, 704,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 125,
	-1, 710,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 129,
	-1, 825,
	271, 357,
	-2, 360,
	-1, 834,
	15, 9,
	16, 9,
	-2, 422,
	-1, 918,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 127,
	-1, 919,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 131,
	-1, 925,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 133,
	-1, 954,
	271, 356,
	-2, 359,
	-1, 1023,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 126,
	-1, 1026,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 135,
	-1, 1029,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 130,
	-1, 1033,
	203, 0,
	204, 0,
	249, 0,
	-2, 148,
	-1, 1063,
	271, 358,
	-2, 361,
	-1, 1110,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 128,
	-1, 1111,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 132,
	-1, 1115,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 134,
	-1, 1116,
	203, 0,
	204, 0,
	249, 0,
	-2, 149,
	-1, 1120,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 152,
	-1, 1128,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 168,
	-1, 1129,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 169,
	-1, 1130,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 170,
	-1, 1131,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 171,
	-1, 1132,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 172,
	-1, 1133,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 173,
	-1, 1141,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 154,
	-1, 1169,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 136,
	-1, 1170,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 153,
	-1, 1171,
	48, 0,
	177, 0,
	182, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 155,
	-1, 1191,
	203, 0,
	-2, 177,
	-1, 1205,
	203, 0,
	-2, 178,
	-1, 1211,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 723,
}

const yyNprod = 871
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 14175

var yyAct = []int{

	378, 1210, 973, 1209, 1185, 1034, 395, 1160, 904, 14,
	1096, 611, 814, 1005, 617, 567, 454, 29, 398, 831,
	601, 1156, 907, 1035, 841, 387, 4, 900, 27, 902,
	845, 572, 722, 20, 827, 29, 719, 913, 522, 633,
	597, 488, 646, 816, 32, 372, 524, 381, 949, 835,
	1220, 838, 1219, 1119, 412, 1218, 650, 485, 1207, 1009,
	1179, 1119, 18, 949, 1172, 392, 1142, 1119, 1037, 949,
	1200, 1187, 1047, 1048, 1049, 1118, 1090, 1138, 1119, 949,
	409, 1058, 997, 988, 949, 949, 949, 986, 1061, 1114,
	949, 31, 985, 984, 983, 949, 949, 949, 951, 954,
	950, 392, 949, 952, 526, 949, 881, 623, 812, 31,
	622, 569, 641, 525, 369, 568, 25, 392, 569, 839,
	526, 602, 568, 1019, 538, 539, 540, 602, 12, 914,
	1019, 410, 914, 528, 8, 613, 1208, 613, 1155, 551,
	1153, 542, 1148, 1147, 1146, 644, 1108, 1067, 994, 528,
	993, 990, 989, 981, 612, 551, 612, 980, 979, 978,
	968, 960, 953, 527, 873, 809, 411, 10, 526, 610,
	573, 614, 7, 618, 1011, 369, 368, 975, 840, 527,
	1193, 837, 1188, 1037, 1177, 411, 1056, 1032, 1002, 967,
	943, 392, 933, 724, 1037, 602, 564, 528, 1047, 1048,
	1049, 605, 860, 850, 849, 392, 350, 11, 1037, 1010,
	410, 574, 1047, 1048, 1049, 1113, 620, 595, 594, 392,
	593, 592, 526, 591, 590, 589, 645, 527, 588, 401,
	587, 575, 7, 1190, 1167, 1166, 1107, 1014, 573, 392,
	1015, 484, 526, 613, 416, 901, 538, 539, 540, 992,
	456, 528, 838, 956, 455, 991, 7, 458, 1051, 375,
	916, 1157, 612, 542, 903, 976, 846, 598, 546, 1165,
	501, 528, 875, 552, 842, 966, 526, 551, 501, 965,
	392, 527, 964, 526, 546, 963, 971, 566, 1037, 552,
	920, 711, 867, 866, 688, 526, 810, 934, 357, 637,
	626, 527, 355, 1037, 356, 528, 1074, 499, 351, 544,
	548, 549, 528, 721, 17, 499, 352, 555, 721, 870,
	839, 717, 842, 392, 528, 544, 1037, 1077, 634, 635,
	1047, 1048, 1049, 1224, 457, 527, 1197, 596, 1223, 1151,
	561, 18, 527, 848, 998, 1112, 715, 1057, 624, 482,
	1135, 360, 359, 555, 527, 708, 550, 354, 359, 392,
	497, 515, 1037, 1198, 508, 1075, 396, 1073, 880, 555,
	359, 1003, 543, 625, 541, 16, 1175, 5, 836, 840,
	1101, 1100, 837, 1006, 1051, 6, 16, 1097, 518, 586,
	1192, 518, 518, 886, 638, 1174, 1031, 932, 911, 647,
	897, 898, 899, 496, 500, 354, 546, 1164, 585, 618,
	563, 552, 500, 1082, 570, 571, 363, 413, 578, 579,
	580, 358, 23, 842, 1182, 1008, 526, 358, 607, 606,
	1004, 1098, 548, 549, 547, 367, 1201, 1017, 908, 358,
	1228, 1037, 18, 555, 713, 526, 349, 544, 526, 712,
	547, 371, 961, 962, 718, 509, 410, 555, 411, 498,
	360, 842, 1227, 603, 615, 1204, 360, 498, 1222, 609,
	1103, 555, 483, 1136, 481, 842, 1095, 528, 550, 957,
	599, 600, 823, 1137, 706, 527, 13, 415, 608, 709,
	541, 555, 414, 29, 543, 1044, 1045, 1046, 400, 1038,
	1039, 1040, 1041, 1042, 1043, 642, 541, 527, 654, 1176,
	480, 364, 362, 541, 655, 621, 1051, 24, 19, 3,
	652, 399, 29, 730, 541, 705, 686, 545, 619, 365,
	366, 382, 555, 819, 687, 529, 530, 531, 532, 533,
	534, 1196, 1150, 545, 640, 1085, 847, 535, 536, 537,
	649, 529, 530, 531, 532, 533, 534, 541, 541, 541,
	541, 541, 616, 541, 631, 632, 15, 31, 1184, 846,
	729, 648, 547, 629, 407, 555, 386, 406, 723, 836,
	714, 658, 813, 391, 541, 729, 390, 487, 844, 969,
	716, 582, 813, 385, 604, 383, 31, 725, 728, 529,
	530, 531, 532, 533, 534, 822, 628, 677, 31, 808,
	1159, 555, 581, 728, 1038, 1039, 1040, 1041, 1042, 1043,
	513, 1044, 1045, 1046, 884, 1038, 1039, 1040, 1041, 1042,
	1043, 577, 834, 922, 727, 1044, 1045, 1046, 720, 1038,
	1039, 1040, 1041, 1042, 1043, 885, 883, 863, 864, 727,
	707, 1104, 495, 529, 530, 531, 532, 533, 534, 503,
	502, 494, 871, 887, 874, 545, 833, 876, 492, 535,
	536, 537, 945, 529, 530, 531, 532, 533, 534, 912,
	882, 947, 639, 576, 514, 615, 603, 948, 609, 636,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 658, 910, 909, 361,
	353, 541, 534, 493, 529, 530, 531, 532, 533, 534,
	938, 938, 600, 599, 1043, 915, 608, 511, 531, 532,
	533, 534, 677, 627, 510, 723, 1040, 1041, 1042, 1043,
	517, 504, 923, 517, 517, 921, 491, 26, 516, 584,
	563, 519, 520, 1044, 1045, 1046, 657, 1038, 1039, 1040,
	1041, 1042, 1043, 507, 643, 521, 905, 1203, 21, 22,
	818, 656, 824, 370, 9, 2, 1, 670, 0, 0,
	0, 669, 0, 0, 672, 0, 0, 0, 821, 856,
	857, 858, 859, 1038, 1039, 1040, 1041, 1042, 1043, 861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 373, 0, 0, 0, 0, 0, 872, 541, 0,
	0, 0, 541, 894, 895, 896, 0, 888, 889, 890,
	891, 892, 893, 541, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 974, 541, 0, 0, 0,
	0, 671, 0, 958, 959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 630, 970, 0, 995, 541, 0,
	0, 657, 0, 834, 834, 0, 0, 0, 29, 0,
	0, 0, 0, 0, 0, 0, 656, 0, 0, 0,
	0, 996, 670, 0, 0, 0, 669, 541, 0, 672,
	1000, 1001, 0, 0, 0, 0, 0, 0, 0, 541,
	541, 942, 938, 938, 0, 0, 541, 1021, 0, 31,
	0, 729, 1016, 0, 1020, 1050, 0, 938, 938, 938,
	0, 0, 1050, 0, 653, 0, 0, 541, 843, 930,
	0, 31, 0, 0, 851, 852, 853, 854, 0, 728,
	0, 1062, 31, 0, 0, 563, 0, 0, 1069, 1070,
	0, 0, 862, 541, 928, 0, 1068, 865, 541, 935,
	935, 868, 1086, 869, 1066, 0, 671, 1081, 658, 1076,
	1078, 1079, 0, 0, 0, 727, 0, 0, 878, 879,
	0, 0, 1091, 0, 0, 1092, 1089, 944, 541, 1093,
	1094, 834, 0, 0, 677, 0, 0, 1099, 941, 0,
	1102, 0, 0, 541, 541, 0, 0, 541, 1050, 1050,
	541, 0, 1109, 0, 541, 0, 729, 658, 1117, 938,
	938, 938, 938, 938, 938, 938, 938, 938, 938, 938,
	938, 938, 0, 1050, 1050, 1050, 31, 987, 0, 0,
	0, 1121, 0, 677, 728, 541, 541, 0, 0, 653,
	0, 0, 541, 541, 0, 0, 0, 926, 0, 0,
	0, 0, 931, 0, 541, 0, 1145, 658, 541, 0,
	0, 0, 658, 0, 0, 0, 0, 0, 0, 0,
	727, 0, 0, 0, 0, 1154, 0, 0, 0, 1162,
	1163, 541, 541, 677, 0, 0, 541, 541, 677, 0,
	0, 541, 0, 1050, 1050, 1050, 1050, 1050, 1050, 1050,
	1050, 1050, 1050, 1050, 1050, 1050, 1055, 0, 0, 489,
	1059, 0, 541, 1173, 541, 0, 0, 505, 0, 512,
	541, 0, 0, 0, 0, 0, 523, 0, 0, 541,
	1181, 0, 541, 657, 1186, 556, 557, 558, 559, 560,
	541, 541, 541, 562, 658, 938, 1183, 0, 656, 541,
	0, 935, 935, 1194, 670, 0, 0, 0, 669, 0,
	541, 672, 1050, 938, 583, 1202, 935, 935, 935, 1206,
	677, 0, 1215, 0, 1217, 1216, 1050, 1186, 927, 0,
	0, 0, 657, 1221, 0, 541, 0, 0, 929, 1027,
	1028, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	1229, 0, 658, 670, 1052, 1053, 1054, 669, 31, 0,
	672, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 0, 1139, 0, 0, 0, 0, 677, 0,
	0, 0, 657, 0, 0, 0, 0, 657, 671, 0,
	0, 0, 0, 0, 677, 0, 0, 656, 1018, 0,
	0, 31, 656, 670, 0, 0, 0, 669, 670, 0,
	672, 0, 669, 0, 0, 672, 0, 0, 935, 935,
	935, 935, 935, 935, 935, 935, 935, 935, 935, 935,
	935, 0, 0, 0, 373, 0, 0, 671, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 1080, 710, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 657,
	0, 653, 392, 0, 0, 526, 0, 0, 817, 538,
	539, 540, 0, 0, 656, 0, 832, 671, 0, 0,
	670, 0, 671, 0, 669, 0, 542, 672, 0, 1199,
	855, 1105, 1106, 0, 528, 0, 0, 0, 0, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	653, 392, 0, 0, 526, 0, 0, 657, 538, 539,
	540, 489, 0, 0, 527, 0, 0, 392, 877, 0,
	1037, 0, 656, 657, 1047, 1048, 1049, 0, 670, 0,
	523, 0, 669, 528, 935, 672, 906, 0, 656, 551,
	0, 1036, 0, 392, 670, 0, 526, 0, 669, 0,
	653, 672, 935, 0, 671, 653, 0, 0, 0, 392,
	0, 0, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 0, 1191, 0, 1168, 528, 0, 0, 392, 0,
	0, 526, 0, 0, 0, 538, 539, 540, 0, 0,
	1205, 528, 0, 0, 918, 919, 0, 0, 0, 0,
	925, 392, 542, 0, 526, 527, 0, 0, 0, 0,
	528, 0, 671, 0, 0, 0, 551, 0, 0, 546,
	0, 527, 392, 0, 552, 526, 0, 0, 671, 0,
	0, 0, 0, 528, 0, 0, 0, 653, 0, 0,
	527, 0, 0, 0, 0, 548, 549, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 0, 392, 0,
	544, 526, 0, 527, 0, 0, 0, 0, 546, 1030,
	0, 0, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 1025, 0, 0, 0, 0,
	528, 550, 0, 0, 0, 653, 0, 0, 0, 0,
	0, 946, 0, 0, 555, 0, 0, 543, 0, 544,
	1051, 653, 0, 0, 0, 0, 0, 832, 832, 0,
	527, 0, 0, 0, 0, 0, 0, 1024, 0, 0,
	0, 0, 0, 0, 0, 972, 0, 0, 0, 977,
	0, 0, 0, 0, 0, 546, 0, 0, 924, 0,
	552, 0, 0, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 555,
	0, 548, 549, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 917, 547, 544, 0, 0, 0,
	0, 0, 1007, 0, 0, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1022, 1023, 0, 0, 1026,
	0, 555, 0, 1029, 0, 0, 0, 550, 0, 0,
	0, 1033, 0, 0, 0, 0, 0, 0, 562, 0,
	555, 0, 0, 543, 547, 0, 0, 1064, 1065, 0,
	0, 0, 0, 0, 0, 832, 0, 0, 0, 0,
	1071, 1072, 0, 555, 0, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 0, 0, 0, 545, 0,
	0, 0, 535, 536, 537, 0, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 1195, 906, 0, 0,
	906, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 547, 0, 1110, 1111, 0, 0, 0, 0, 1115,
	1116, 0, 0, 0, 0, 1120, 0, 545, 0, 0,
	0, 535, 536, 537, 0, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 1141, 1044, 1045, 1046,
	1143, 1038, 1039, 1040, 1041, 1042, 1043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1149, 0, 0, 0, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 1158, 1161, 0, 906,
	906, 0, 0, 529, 530, 531, 532, 533, 534, 0,
	0, 1169, 1170, 1171, 545, 0, 0, 0, 535, 536,
	537, 0, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 1180, 0, 0, 0, 0, 1178, 0, 0,
	0, 0, 0, 0, 0, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1189, 0, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 1214, 0, 0,
	0, 0, 529, 530, 531, 532, 533, 534, 0, 0,
	1214, 0, 0, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1214, 33, 34,
	35, 36, 37, 38, 39, 40, 731, 41, 42, 43,
	732, 733, 734, 735, 736, 737, 738, 44, 45, 739,
	46, 47, 459, 48, 49, 50, 301, 302, 460, 303,
	304, 740, 51, 52, 53, 54, 55, 741, 742, 56,
	57, 305, 306, 58, 743, 59, 60, 61, 62, 307,
	744, 679, 745, 63, 64, 65, 66, 461, 67, 68,
	69, 746, 70, 71, 72, 73, 74, 75, 747, 462,
	76, 77, 78, 748, 749, 750, 680, 751, 752, 753,
	79, 80, 81, 82, 83, 84, 308, 309, 85, 754,
	86, 755, 87, 88, 89, 90, 91, 756, 92, 93,
	94, 757, 758, 95, 96, 97, 98, 99, 759, 100,
	101, 102, 760, 103, 104, 105, 761, 106, 107, 108,
	109, 310, 110, 111, 112, 311, 762, 113, 763, 114,
	115, 312, 116, 764, 117, 765, 118, 463, 766, 464,
	119, 120, 121, 767, 122, 313, 768, 314, 123, 769,
	124, 125, 126, 127, 128, 465, 129, 130, 131, 132,
	770, 133, 134, 135, 136, 137, 138, 771, 139, 466,
	315, 140, 141, 142, 143, 316, 317, 772, 318, 773,
	144, 467, 468, 145, 469, 146, 147, 148, 149, 150,
	774, 775, 151, 319, 470, 152, 471, 776, 153, 154,
	155, 777, 778, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 320, 472,
	321, 171, 172, 322, 779, 173, 174, 473, 175, 780,
	323, 176, 324, 177, 178, 179, 781, 180, 782, 783,
	181, 182, 183, 784, 785, 184, 325, 474, 185, 475,
	326, 186, 187, 188, 189, 190, 191, 192, 786, 193,
	194, 327, 195, 328, 198, 196, 197, 787, 199, 200,
	201, 202, 203, 204, 205, 206, 329, 207, 208, 209,
	210, 788, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 789, 222, 223, 476, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 790,
	235, 236, 237, 238, 239, 791, 240, 241, 331, 242,
	243, 477, 244, 245, 332, 246, 792, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 793,
	258, 259, 794, 260, 478, 261, 262, 263, 264, 265,
	795, 334, 335, 796, 797, 266, 267, 336, 268, 337,
	798, 269, 270, 271, 272, 273, 274, 275, 799, 800,
	276, 277, 278, 279, 280, 801, 802, 281, 282, 283,
	284, 285, 338, 339, 803, 286, 479, 287, 288, 289,
	290, 804, 805, 291, 806, 807, 292, 293, 294, 295,
	296, 297, 340, 341, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 815, 0, 0, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 731, 41, 42,
	43, 732, 733, 734, 735, 736, 737, 738, 44, 45,
	739, 46, 47, 459, 48, 49, 50, 301, 302, 460,
	303, 304, 740, 51, 52, 53, 54, 55, 741, 742,
	56, 57, 305, 306, 58, 743, 59, 60, 61, 62,
	307, 744, 679, 745, 63, 64, 65, 66, 461, 67,
	68, 69, 746, 70, 71, 72, 73, 74, 75, 747,
	462, 76, 77, 78, 748, 749, 750, 680, 751, 752,
	753, 79, 80, 81, 82, 83, 84, 308, 309, 85,
	754, 86, 755, 87, 88, 89, 90, 91, 756, 92,
	93, 94, 757, 758, 95, 96, 97, 98, 99, 759,
	100, 101, 102, 760, 103, 104, 105, 761, 106, 107,
	108, 109, 310, 110, 111, 112, 311, 762, 113, 763,
	114, 115, 312, 116, 764, 117, 765, 118, 463, 766,
	464, 119, 120, 121, 767, 122, 313, 768, 314, 123,
	769, 124, 125, 126, 127, 128, 465, 129, 130, 131,
	132, 770, 133, 134, 135, 136, 137, 138, 771, 139,
	466, 315, 140, 141, 142, 143, 316, 317, 772, 318,
	773, 144, 467, 468, 145, 469, 146, 147, 148, 149,
	150, 774, 775, 151, 319, 470, 152, 471, 776, 153,
	154, 155, 777, 778, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 320,
	472, 321, 171, 172, 322, 779, 173, 174, 473, 175,
	780, 323, 176, 324, 177, 178, 179, 781, 180, 782,
	783, 181, 182, 183, 784, 785, 184, 325, 474, 185,
	475, 326, 186, 187, 188, 189, 190, 191, 192, 786,
	193, 194, 327, 195, 328, 198, 196, 197, 787, 199,
	200, 201, 202, 203, 204, 205, 206, 329, 207, 208,
	209, 210, 788, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 789, 222, 223, 476, 224, 225,
	226, 330, 227, 228, 229, 230, 231, 232, 233, 234,
	790, 235, 236, 237, 238, 239, 791, 240, 241, 331,
	242, 243, 477, 244, 245, 332, 246, 792, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	793, 258, 259, 794, 260, 478, 261, 262, 263, 264,
	265, 795, 334, 335, 796, 797, 266, 267, 336, 268,
	337, 798, 269, 270, 271, 272, 273, 274, 275, 799,
	800, 276, 277, 278, 279, 280, 801, 802, 281, 282,
	283, 284, 285, 338, 339, 803, 286, 479, 287, 288,
	289, 290, 804, 805, 291, 806, 807, 292, 293, 294,
	295, 296, 297, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 408, 397, 411, 0, 0,
	392, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 828, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 459, 48, 49, 50, 301, 436,
	460, 437, 438, 0, 51, 52, 53, 54, 55, 405,
	430, 56, 57, 439, 440, 58, 0, 59, 60, 61,
	62, 431, 0, 418, 0, 63, 64, 65, 66, 461,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 462, 76, 77, 78, 428, 419, 424, 429, 420,
	421, 425, 79, 80, 81, 82, 83, 84, 441, 442,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 829, 0, 95, 96, 435, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 311, 403, 113,
	0, 114, 115, 443, 116, 0, 117, 0, 118, 463,
	0, 464, 119, 120, 121, 0, 122, 432, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 465, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 466, 315, 140, 141, 142, 143, 444, 445, 0,
	417, 0, 144, 467, 468, 145, 469, 146, 147, 148,
	149, 150, 0, 0, 151, 433, 470, 152, 471, 0,
	153, 154, 155, 422, 423, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	446, 472, 447, 171, 172, 322, 379, 173, 174, 473,
	175, 404, 323, 176, 448, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 474,
	185, 475, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 449, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 476, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 426, 240, 241,
	331, 242, 243, 477, 244, 245, 450, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 478, 261, 262, 263,
	264, 265, 0, 451, 452, 0, 0, 266, 267, 336,
	268, 337, 402, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 427, 0, 281,
	282, 283, 284, 285, 338, 453, 0, 286, 479, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 434, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 380, 0, 0, 0,
	0, 0, 0, 0, 376, 377, 830, 0, 0, 0,
	408, 397, 411, 384, 826, 392, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 459,
	48, 49, 50, 301, 436, 460, 437, 438, 0, 51,
	52, 53, 54, 55, 405, 430, 56, 57, 439, 440,
	58, 0, 59, 60, 61, 62, 431, 0, 418, 0,
	63, 64, 65, 66, 461, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 462, 76, 77, 78,
	428, 419, 424, 429, 420, 421, 425, 79, 80, 81,
	82, 83, 84, 441, 442, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 435, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 403, 113, 0, 114, 115, 443, 116,
	0, 117, 0, 118, 463, 0, 464, 119, 120, 121,
	0, 122, 432, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 465, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 466, 315, 140, 141,
	142, 143, 444, 445, 0, 417, 0, 144, 467, 468,
	145, 469, 146, 147, 148, 149, 150, 0, 0, 151,
	433, 470, 152, 471, 0, 153, 154, 155, 422, 423,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 446, 472, 447, 171, 172,
	322, 379, 173, 174, 473, 175, 404, 323, 176, 448,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 474, 185, 475, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 449, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 476, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 426, 240, 241, 331, 242, 243, 477, 244,
	245, 450, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 478, 261, 262, 263, 264, 265, 0, 451, 452,
	0, 0, 266, 267, 336, 268, 337, 402, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 427, 0, 281, 282, 283, 284, 285, 338,
	453, 0, 286, 479, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	434, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 380, 0, 0, 0, 0, 408, 397, 411, 376,
	377, 392, 410, 0, 0, 0, 0, 0, 384, 1140,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 459, 48, 49, 50, 301,
	436, 460, 437, 438, 0, 51, 52, 53, 54, 55,
	405, 430, 56, 57, 439, 440, 58, 0, 59, 60,
	61, 62, 431, 0, 418, 0, 63, 64, 65, 66,
	461, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 462, 76, 77, 78, 428, 419, 424, 429,
	420, 421, 425, 79, 80, 81, 82, 83, 84, 441,
	442, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 435, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 403,
	113, 0, 114, 115, 443, 116, 0, 117, 0, 118,
	463, 0, 464, 119, 120, 121, 0, 122, 432, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 465, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 466, 315, 140, 141, 142, 143, 444, 445,
	0, 417, 0, 144, 467, 468, 145, 469, 146, 147,
	148, 149, 150, 0, 0, 151, 433, 470, 152, 471,
	0, 153, 154, 155, 422, 423, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 446, 472, 447, 171, 172, 322, 379, 173, 174,
	473, 175, 404, 323, 176, 448, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	474, 185, 475, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 449,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 476,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 426, 240,
	241, 331, 242, 243, 477, 244, 245, 450, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 478, 261, 262,
	263, 264, 265, 0, 451, 452, 0, 0, 266, 267,
	336, 268, 337, 402, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 427, 0,
	281, 282, 283, 284, 285, 338, 453, 0, 286, 479,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 434, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 408, 397, 411, 376, 377, 392, 410, 0,
	0, 0, 0, 0, 384, 1060, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 459, 48, 49, 50, 301, 436, 460, 437, 438,
	0, 51, 52, 53, 54, 55, 405, 430, 56, 57,
	439, 440, 58, 0, 59, 60, 61, 62, 431, 0,
	418, 0, 63, 64, 65, 66, 461, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 462, 76,
	77, 78, 428, 419, 424, 429, 420, 421, 425, 79,
	80, 81, 82, 83, 84, 441, 442, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 435, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 311, 403, 113, 0, 114, 115,
	443, 116, 0, 117, 0, 118, 463, 0, 464, 119,
	120, 121, 0, 122, 432, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 465, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 466, 315,
	140, 141, 142, 143, 444, 445, 0, 417, 0, 144,
	467, 468, 145, 469, 146, 147, 148, 149, 150, 0,
	0, 151, 433, 470, 152, 471, 0, 153, 154, 155,
	422, 423, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 446, 472, 447,
	171, 172, 322, 379, 173, 174, 473, 175, 404, 323,
	176, 448, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 474, 185, 475, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 449, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 476, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 8, 235,
	236, 237, 238, 239, 426, 240, 241, 331, 242, 243,
	477, 244, 245, 450, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 10, 260, 478, 261, 262, 263, 264, 265, 0,
	451, 452, 0, 0, 266, 267, 336, 268, 337, 402,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 427, 0, 281, 282, 283, 284,
	285, 565, 453, 0, 286, 479, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 434, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 380, 0, 0, 0, 0, 408, 397,
	411, 376, 377, 392, 410, 0, 0, 0, 0, 0,
	384, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 459, 48, 49,
	50, 301, 436, 460, 437, 438, 0, 51, 52, 53,
	54, 55, 405, 430, 56, 57, 439, 440, 58, 0,
	59, 60, 61, 62, 431, 0, 418, 0, 63, 64,
	65, 66, 461, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 462, 76, 77, 78, 428, 419,
	424, 429, 420, 421, 425, 79, 80, 81, 82, 83,
	84, 441, 442, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	435, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	311, 403, 113, 0, 114, 115, 443, 116, 0, 117,
	0, 118, 463, 0, 464, 119, 120, 121, 0, 122,
	432, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	465, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 466, 315, 140, 141, 142, 143,
	444, 445, 0, 417, 0, 144, 467, 468, 145, 469,
	146, 147, 148, 149, 150, 0, 0, 151, 433, 470,
	152, 471, 0, 153, 154, 155, 422, 423, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 446, 472, 447, 171, 172, 322, 379,
	173, 174, 473, 175, 404, 323, 176, 448, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 474, 185, 475, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 449, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 476, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	426, 240, 241, 331, 242, 243, 477, 244, 245, 450,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 478,
	261, 262, 263, 264, 265, 0, 451, 452, 0, 0,
	266, 267, 336, 268, 337, 402, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	427, 0, 281, 282, 283, 284, 285, 338, 453, 0,
	286, 479, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 434, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 380,
	0, 0, 0, 0, 408, 397, 411, 376, 377, 392,
	410, 0, 0, 0, 0, 0, 384, 825, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 459, 48, 49, 50, 301, 436, 460,
	437, 438, 0, 51, 52, 53, 54, 55, 405, 430,
	56, 57, 439, 440, 58, 0, 59, 60, 61, 62,
	431, 0, 418, 0, 63, 64, 65, 66, 461, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	462, 76, 77, 78, 428, 419, 424, 429, 420, 421,
	425, 79, 80, 81, 82, 83, 84, 441, 442, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 435, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 311, 403, 113, 0,
	114, 115, 443, 116, 0, 117, 0, 118, 463, 0,
	464, 119, 120, 121, 0, 122, 432, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 465, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	466, 315, 140, 141, 142, 143, 444, 445, 0, 417,
	0, 144, 467, 468, 145, 469, 146, 147, 148, 149,
	150, 0, 0, 151, 433, 470, 152, 471, 0, 153,
	154, 155, 422, 423, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 446,
	472, 447, 171, 172, 322, 379, 173, 174, 473, 175,
	404, 323, 176, 448, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 474, 185,
	475, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 449, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 476, 224, 225,
	226, 394, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 426, 240, 241, 331,
	242, 243, 477, 244, 245, 450, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 478, 261, 262, 263, 264,
	265, 0, 451, 452, 0, 0, 266, 267, 336, 268,
	337, 402, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 427, 0, 281, 282,
	283, 284, 285, 338, 453, 0, 286, 479, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 434, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 380, 0, 0, 0, 0,
	408, 397, 411, 376, 377, 392, 410, 0, 0, 0,
	573, 820, 384, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 459,
	48, 49, 50, 301, 436, 460, 437, 438, 0, 51,
	52, 53, 54, 55, 405, 430, 56, 57, 439, 440,
	58, 0, 59, 60, 61, 62, 431, 0, 418, 0,
	63, 64, 65, 66, 461, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 462, 76, 77, 78,
	428, 419, 424, 429, 420, 421, 425, 79, 80, 81,
	82, 83, 84, 441, 442, 85, 490, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 435, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 403, 113, 0, 114, 115, 443, 116,
	0, 117, 0, 118, 463, 0, 464, 119, 120, 121,
	0, 122, 432, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 465, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 466, 315, 140, 141,
	142, 143, 444, 445, 0, 417, 0, 144, 467, 468,
	145, 469, 146, 147, 148, 149, 150, 0, 0, 151,
	433, 470, 152, 471, 0, 153, 154, 155, 422, 423,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 446, 472, 447, 171, 172,
	322, 379, 173, 174, 473, 175, 404, 323, 176, 448,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 474, 185, 475, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 449, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 476, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 426, 240, 241, 331, 242, 243, 477, 244,
	245, 450, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 478, 261, 262, 263, 264, 265, 0, 451, 452,
	0, 0, 266, 267, 336, 268, 337, 402, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 427, 0, 281, 282, 283, 284, 285, 338,
	453, 0, 286, 479, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	434, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 380, 0, 0, 0, 0, 408, 397, 411, 376,
	377, 392, 410, 0, 0, 0, 0, 0, 384, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 459, 48, 49, 50, 301,
	436, 460, 437, 438, 0, 51, 52, 53, 54, 55,
	405, 430, 56, 57, 439, 440, 58, 0, 59, 60,
	61, 62, 431, 0, 418, 0, 63, 64, 65, 66,
	461, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 462, 76, 77, 78, 428, 419, 424, 429,
	420, 421, 425, 79, 80, 81, 82, 83, 84, 441,
	442, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 435, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 403,
	113, 0, 114, 115, 443, 116, 0, 117, 0, 118,
	463, 0, 464, 119, 120, 121, 0, 122, 432, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 465, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 466, 315, 140, 141, 142, 143, 444, 445,
	0, 417, 0, 144, 467, 468, 145, 469, 146, 147,
	148, 149, 150, 0, 0, 151, 433, 470, 152, 471,
	0, 153, 154, 155, 422, 423, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 446, 472, 447, 171, 172, 322, 379, 173, 174,
	473, 175, 404, 323, 176, 448, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	474, 185, 475, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 449,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 476,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 426, 240,
	241, 331, 242, 243, 477, 244, 245, 450, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 478, 261, 262,
	263, 264, 265, 0, 451, 452, 0, 0, 266, 267,
	336, 268, 337, 402, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 427, 0,
	281, 282, 283, 284, 285, 338, 453, 0, 286, 479,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 434, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 0, 0, 0, 376, 377, 374, 0, 0,
	408, 397, 411, 0, 384, 392, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 506, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 459,
	48, 49, 50, 301, 436, 460, 437, 438, 0, 51,
	52, 53, 54, 55, 405, 430, 56, 57, 439, 440,
	58, 0, 59, 60, 61, 62, 431, 0, 418, 0,
	63, 64, 65, 66, 461, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 462, 76, 77, 78,
	428, 419, 424, 429, 420, 421, 425, 79, 80, 81,
	82, 83, 84, 441, 442, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 435, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 403, 113, 0, 114, 115, 443, 116,
	0, 117, 0, 118, 463, 0, 464, 119, 120, 121,
	0, 122, 432, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 465, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 466, 315, 140, 141,
	142, 143, 444, 445, 0, 417, 0, 144, 467, 468,
	145, 469, 146, 147, 148, 149, 150, 0, 0, 151,
	433, 470, 152, 471, 0, 153, 154, 155, 422, 423,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 446, 472, 447, 171, 172,
	322, 379, 173, 174, 473, 175, 404, 323, 176, 448,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 474, 185, 475, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 449, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 476, 224, 225, 226, 394, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 426, 240, 241, 331, 242, 243, 477, 244,
	245, 450, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 478, 261, 262, 263, 264, 265, 0, 451, 452,
	0, 0, 266, 267, 336, 268, 337, 402, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 427, 0, 281, 282, 283, 284, 285, 338,
	453, 0, 286, 479, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	434, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 380, 0, 0, 0, 0, 408, 397, 411, 376,
	377, 392, 410, 0, 0, 0, 0, 0, 384, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 459, 48, 49, 50, 301,
	436, 460, 437, 438, 0, 51, 52, 53, 54, 55,
	405, 430, 56, 57, 439, 440, 58, 0, 59, 60,
	61, 62, 431, 0, 418, 0, 63, 64, 65, 66,
	461, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 462, 76, 77, 1213, 428, 419, 424, 429,
	420, 421, 425, 79, 80, 81, 82, 83, 84, 441,
	442, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 435, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 403,
	113, 0, 114, 115, 443, 116, 0, 117, 0, 118,
	463, 0, 464, 119, 120, 121, 0, 122, 432, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 465, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 466, 315, 140, 141, 142, 143, 444, 445,
	0, 417, 0, 144, 467, 468, 145, 469, 146, 147,
	148, 149, 150, 0, 0, 151, 433, 470, 152, 471,
	0, 153, 154, 155, 422, 423, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 446, 472, 447, 171, 172, 322, 379, 173, 174,
	473, 175, 404, 323, 176, 448, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	474, 185, 475, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 449,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 476,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 426, 240,
	241, 331, 242, 243, 477, 244, 245, 450, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 478, 261, 262,
	263, 264, 265, 0, 451, 452, 0, 0, 266, 267,
	336, 268, 337, 402, 269, 270, 271, 272, 1212, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 427, 0,
	281, 282, 283, 284, 285, 338, 453, 0, 286, 479,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 434, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 408, 397, 411, 376, 377, 392, 410, 0,
	0, 0, 0, 0, 384, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 459, 48, 49, 50, 1211, 436, 460, 437, 438,
	0, 51, 52, 53, 54, 55, 405, 430, 56, 57,
	439, 440, 58, 0, 59, 60, 61, 62, 431, 0,
	418, 0, 63, 64, 65, 66, 461, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 462, 76,
	77, 1213, 428, 419, 424, 429, 420, 421, 425, 79,
	80, 81, 82, 83, 84, 441, 442, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 435, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 311, 403, 113, 0, 114, 115,
	443, 116, 0, 117, 0, 118, 463, 0, 464, 119,
	120, 121, 0, 122, 432, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 465, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 466, 315,
	140, 141, 142, 143, 444, 445, 0, 417, 0, 144,
	467, 468, 145, 469, 146, 147, 148, 149, 150, 0,
	0, 151, 433, 470, 152, 471, 0, 153, 154, 155,
	422, 423, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 446, 472, 447,
	171, 172, 322, 379, 173, 174, 473, 175, 404, 323,
	176, 448, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 474, 185, 475, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 449, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 476, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 426, 240, 241, 331, 242, 243,
	477, 244, 245, 450, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 478, 261, 262, 263, 264, 265, 0,
	451, 452, 0, 0, 266, 267, 336, 268, 337, 402,
	269, 270, 271, 272, 1212, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 427, 0, 281, 282, 283, 284,
	285, 338, 453, 0, 286, 479, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 434, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 380, 0, 0, 0, 0, 408, 397,
	411, 376, 377, 392, 410, 0, 0, 0, 0, 0,
	384, 0, 0, 33, 34, 35, 36, 37, 38, 39,
	40, 0, 41, 42, 43, 0, 0, 0, 0, 389,
	0, 0, 44, 45, 0, 46, 47, 459, 48, 49,
	50, 301, 436, 460, 437, 438, 0, 51, 52, 53,
	54, 55, 405, 430, 56, 57, 439, 440, 58, 0,
	59, 60, 61, 62, 431, 0, 418, 0, 63, 64,
	65, 66, 461, 67, 68, 69, 0, 70, 71, 72,
	73, 74, 75, 0, 462, 76, 77, 78, 428, 419,
	424, 429, 420, 421, 425, 79, 80, 81, 82, 83,
	84, 441, 442, 85, 0, 86, 0, 87, 88, 89,
	90, 91, 0, 92, 93, 94, 0, 0, 95, 96,
	435, 98, 99, 0, 100, 101, 102, 0, 103, 104,
	105, 0, 106, 107, 108, 109, 388, 110, 111, 112,
	311, 403, 113, 0, 114, 115, 443, 116, 0, 117,
	0, 118, 463, 0, 464, 119, 120, 121, 0, 122,
	432, 0, 314, 123, 0, 124, 125, 126, 127, 128,
	465, 129, 130, 131, 132, 0, 133, 134, 135, 136,
	137, 138, 0, 139, 466, 315, 140, 141, 142, 143,
	444, 445, 0, 417, 0, 144, 467, 468, 145, 469,
	146, 147, 148, 149, 150, 0, 0, 151, 433, 470,
	152, 471, 0, 153, 154, 155, 422, 423, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 446, 472, 447, 171, 172, 322, 379,
	173, 174, 473, 175, 404, 323, 176, 448, 177, 178,
	179, 0, 180, 0, 0, 393, 182, 183, 0, 0,
	184, 325, 474, 185, 475, 326, 186, 187, 188, 189,
	190, 191, 192, 0, 193, 194, 327, 195, 328, 198,
	196, 197, 0, 199, 200, 201, 202, 203, 204, 205,
	206, 449, 207, 208, 209, 210, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 0, 222,
	223, 476, 224, 225, 226, 394, 227, 228, 229, 230,
	231, 232, 233, 234, 0, 235, 236, 237, 238, 239,
	426, 240, 241, 331, 242, 243, 477, 244, 245, 450,
	246, 0, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 333, 0, 258, 259, 0, 260, 478,
	261, 262, 263, 264, 265, 0, 451, 452, 0, 0,
	266, 267, 336, 268, 337, 402, 269, 270, 271, 272,
	273, 274, 275, 0, 0, 276, 277, 278, 279, 280,
	427, 0, 281, 282, 283, 284, 285, 338, 453, 0,
	286, 479, 287, 288, 289, 290, 0, 0, 291, 0,
	0, 292, 293, 294, 295, 296, 297, 340, 434, 342,
	343, 344, 345, 346, 347, 348, 298, 299, 300, 380,
	0, 0, 0, 0, 408, 397, 411, 376, 377, 392,
	410, 0, 0, 0, 0, 0, 384, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 389, 0, 0, 44, 45,
	0, 46, 47, 459, 48, 49, 50, 301, 436, 460,
	437, 438, 0, 51, 52, 53, 54, 55, 405, 430,
	56, 57, 439, 440, 58, 0, 59, 60, 61, 62,
	431, 0, 418, 0, 63, 64, 65, 66, 461, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	462, 76, 77, 78, 428, 419, 424, 429, 420, 421,
	425, 79, 80, 81, 82, 83, 84, 441, 442, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 435, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 388, 110, 111, 112, 311, 403, 113, 0,
	114, 115, 443, 116, 0, 117, 0, 118, 463, 0,
	464, 119, 120, 121, 0, 122, 432, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 465, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	466, 315, 140, 141, 142, 143, 444, 445, 0, 417,
	0, 144, 467, 468, 145, 469, 146, 147, 148, 149,
	150, 0, 0, 151, 433, 470, 152, 471, 0, 153,
	154, 155, 422, 423, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 446,
	472, 447, 171, 172, 322, 0, 173, 174, 473, 175,
	404, 323, 176, 448, 177, 178, 179, 0, 180, 0,
	0, 393, 182, 183, 0, 0, 184, 325, 474, 185,
	475, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 449, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 476, 224, 225,
	226, 940, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 426, 240, 241, 331,
	242, 243, 477, 244, 245, 450, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 478, 261, 262, 263, 264,
	265, 0, 451, 452, 0, 0, 266, 267, 336, 268,
	337, 402, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 427, 0, 281, 282,
	283, 284, 285, 338, 453, 0, 286, 479, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 434, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 0, 0, 0, 0, 0,
	408, 397, 411, 936, 937, 392, 410, 0, 0, 0,
	0, 0, 939, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 389, 0, 0, 44, 45, 0, 46, 47, 459,
	48, 49, 50, 301, 436, 460, 437, 438, 0, 51,
	52, 53, 54, 55, 405, 430, 56, 57, 439, 440,
	58, 0, 59, 60, 61, 62, 431, 0, 418, 0,
	63, 64, 65, 66, 461, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 462, 76, 77, 78,
	428, 419, 424, 429, 420, 421, 425, 79, 80, 81,
	82, 83, 84, 441, 442, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 435, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 388, 110,
	111, 112, 311, 403, 113, 0, 114, 115, 443, 116,
	0, 117, 0, 118, 463, 0, 464, 119, 120, 121,
	0, 122, 432, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 465, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 466, 315, 140, 141,
	142, 143, 444, 445, 0, 417, 0, 144, 0, 468,
	145, 469, 146, 147, 148, 149, 150, 0, 0, 151,
	433, 470, 152, 471, 0, 153, 154, 155, 422, 423,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 446, 472, 447, 171, 172,
	322, 0, 173, 174, 473, 175, 404, 323, 176, 448,
	177, 178, 179, 0, 180, 0, 0, 393, 182, 183,
	0, 0, 184, 325, 474, 185, 475, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 449, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 476, 224, 225, 226, 940, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 426, 240, 241, 331, 242, 243, 477, 244,
	245, 450, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 478, 261, 262, 263, 264, 265, 0, 451, 452,
	0, 0, 266, 267, 336, 268, 337, 402, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 427, 0, 281, 282, 283, 284, 285, 338,
	453, 0, 286, 479, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	434, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 0, 0, 0, 0, 0, 408, 397, 411, 936,
	937, 392, 410, 0, 0, 0, 0, 0, 939, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 459, 48, 49, 50, 0,
	436, 460, 437, 438, 0, 51, 52, 53, 54, 55,
	405, 430, 56, 57, 439, 440, 58, 0, 59, 60,
	61, 62, 431, 0, 418, 0, 63, 64, 65, 66,
	461, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 462, 76, 77, 1213, 428, 419, 424, 429,
	420, 421, 425, 79, 80, 81, 82, 83, 84, 441,
	442, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 435, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 311, 403,
	113, 0, 114, 115, 443, 116, 0, 117, 0, 118,
	463, 0, 464, 119, 120, 121, 0, 122, 432, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 466, 315, 140, 141, 142, 143, 444, 445,
	0, 417, 0, 144, 0, 0, 145, 469, 146, 147,
	148, 149, 150, 0, 0, 151, 433, 470, 152, 0,
	0, 153, 154, 155, 422, 423, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 446, 472, 447, 171, 172, 322, 379, 173, 174,
	0, 175, 404, 323, 176, 448, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	474, 185, 475, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 449,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 476,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 426, 240,
	241, 331, 242, 243, 0, 244, 245, 450, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 478, 261, 262,
	263, 264, 265, 0, 451, 452, 0, 0, 266, 267,
	336, 268, 337, 402, 269, 270, 271, 272, 1212, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 427, 0,
	281, 282, 283, 284, 285, 338, 453, 0, 286, 479,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 434, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 0, 0, 0,
	0, 0, 408, 397, 411, 376, 377, 392, 410, 0,
	0, 0, 0, 0, 384, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 389, 0, 0, 44, 45, 0, 46,
	47, 459, 48, 49, 50, 0, 436, 460, 437, 438,
	0, 51, 52, 53, 54, 55, 405, 430, 56, 57,
	439, 440, 58, 0, 59, 60, 61, 62, 431, 0,
	418, 0, 63, 64, 65, 66, 461, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 462, 76,
	77, 78, 428, 419, 424, 429, 420, 421, 425, 79,
	80, 81, 82, 83, 84, 441, 442, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 435, 98, 99, 0, 100, 101,
	102, 0, 103, 0, 105, 0, 106, 107, 108, 109,
	388, 110, 111, 112, 311, 403, 113, 0, 114, 115,
	443, 116, 0, 117, 0, 118, 463, 0, 464, 119,
	120, 121, 0, 122, 432, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 0, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 466, 315,
	140, 141, 142, 143, 444, 445, 0, 417, 0, 144,
	0, 0, 145, 469, 146, 147, 148, 149, 150, 0,
	0, 151, 433, 470, 152, 0, 0, 153, 154, 155,
	422, 423, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 446, 472, 447,
	171, 172, 322, 379, 173, 174, 0, 175, 404, 323,
	176, 448, 177, 178, 179, 0, 180, 0, 0, 393,
	182, 183, 0, 0, 184, 325, 474, 185, 475, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 449, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 476, 224, 225, 226, 394,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 426, 240, 241, 331, 242, 243,
	0, 244, 245, 450, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 478, 261, 262, 263, 264, 265, 0,
	451, 452, 0, 0, 266, 267, 336, 268, 337, 402,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 427, 0, 281, 282, 283, 284,
	285, 338, 453, 0, 286, 479, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 434, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 0, 0, 0, 30, 0, 0, 0,
	0, 376, 377, 0, 0, 0, 0, 0, 0, 0,
	384, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 0, 48, 49, 50, 301,
	302, 0, 303, 304, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 305, 306, 58, 0, 59, 60,
	61, 62, 307, 0, 0, 0, 63, 64, 65, 66,
	0, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 0, 76, 77, 78, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 97, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 0,
	113, 0, 114, 115, 312, 116, 0, 117, 0, 118,
	0, 0, 0, 119, 120, 121, 0, 122, 313, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 0, 315, 140, 141, 142, 143, 316, 317,
	0, 318, 0, 144, 0, 0, 145, 0, 146, 147,
	148, 149, 150, 0, 0, 151, 319, 0, 152, 0,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 0, 321, 171, 172, 322, 0, 173, 174,
	0, 175, 0, 323, 176, 324, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 325,
	0, 185, 0, 326, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 329,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 0,
	224, 225, 226, 330, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 331, 242, 243, 0, 244, 245, 332, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 0, 261, 262,
	263, 264, 265, 0, 334, 335, 0, 0, 266, 267,
	336, 268, 337, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 338, 339, 0, 286, 0,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 0, 0, 0,
	30, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 975, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 0, 0, 0, 44, 45, 0, 46, 47, 0,
	48, 49, 50, 301, 302, 0, 303, 304, 0, 51,
	52, 53, 54, 55, 0, 0, 56, 57, 305, 306,
	58, 0, 59, 60, 61, 62, 307, 0, 0, 0,
	63, 64, 65, 66, 0, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 0, 76, 77, 78,
	0, 0, 0, 0, 0, 0, 0, 79, 80, 81,
	82, 83, 84, 308, 309, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 97, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 310, 110,
	111, 112, 311, 0, 113, 0, 114, 115, 312, 116,
	0, 117, 0, 118, 0, 0, 0, 119, 120, 121,
	0, 122, 313, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 0, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 0, 315, 140, 141,
	142, 143, 316, 317, 0, 318, 0, 144, 0, 0,
	145, 0, 146, 147, 148, 149, 150, 0, 0, 151,
	319, 0, 152, 0, 0, 153, 154, 155, 0, 0,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 320, 0, 321, 171, 172,
	322, 0, 173, 174, 0, 175, 0, 323, 176, 324,
	177, 178, 179, 0, 180, 0, 0, 181, 182, 183,
	0, 0, 184, 325, 0, 185, 0, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 329, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 0, 224, 225, 226, 330, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 0, 240, 241, 331, 242, 243, 0, 244,
	245, 332, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 0, 261, 262, 263, 264, 265, 0, 334, 335,
	0, 0, 266, 267, 336, 268, 337, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 0, 0, 281, 282, 283, 284, 285, 338,
	339, 0, 286, 0, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	341, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 0, 0, 0, 30, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 0, 0, 0, 44, 45,
	0, 46, 47, 0, 48, 49, 50, 301, 302, 0,
	303, 304, 0, 51, 52, 53, 54, 55, 0, 0,
	56, 57, 305, 306, 58, 0, 59, 60, 61, 62,
	307, 0, 0, 0, 63, 64, 65, 66, 0, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	0, 76, 77, 78, 0, 0, 0, 0, 0, 0,
	0, 79, 80, 81, 82, 83, 84, 308, 309, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 97, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 310, 110, 111, 112, 311, 0, 113, 0,
	114, 115, 312, 116, 0, 117, 0, 118, 0, 0,
	0, 119, 120, 121, 0, 122, 313, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 0, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	0, 315, 140, 141, 142, 143, 316, 317, 0, 318,
	0, 144, 0, 0, 145, 0, 146, 147, 148, 149,
	150, 0, 0, 151, 319, 0, 152, 0, 0, 153,
	154, 155, 0, 0, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 320,
	0, 321, 171, 172, 322, 0, 173, 174, 0, 175,
	0, 323, 176, 324, 177, 178, 179, 0, 180, 0,
	28, 181, 182, 183, 0, 0, 184, 325, 0, 185,
	0, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 329, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 0, 224, 225,
	226, 330, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 0, 240, 241, 331,
	242, 243, 0, 244, 245, 332, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 0, 261, 262, 263, 264,
	265, 0, 334, 335, 0, 0, 266, 267, 336, 268,
	337, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 0, 0, 281, 282,
	283, 284, 285, 338, 339, 0, 286, 0, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 0, 0, 0, 44,
	45, 0, 46, 47, 0, 48, 49, 50, 301, 302,
	0, 303, 304, 0, 51, 52, 53, 54, 55, 0,
	0, 56, 57, 305, 306, 58, 0, 59, 60, 61,
	62, 307, 0, 0, 0, 63, 64, 65, 66, 0,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 0, 76, 77, 78, 0, 0, 0, 0, 0,
	0, 0, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 97, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 310, 110, 111, 112, 311, 0, 113,
	0, 114, 115, 312, 116, 0, 117, 0, 118, 0,
	0, 0, 119, 120, 121, 0, 122, 313, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 0, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 0, 315, 140, 141, 142, 143, 316, 317, 0,
	318, 0, 144, 0, 0, 145, 0, 146, 147, 148,
	149, 150, 0, 0, 151, 319, 0, 152, 0, 0,
	153, 154, 155, 0, 0, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 0, 321, 171, 172, 322, 0, 173, 174, 0,
	175, 0, 323, 176, 324, 177, 178, 179, 0, 180,
	0, 0, 181, 182, 183, 0, 0, 184, 325, 0,
	185, 0, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 0, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 0, 240, 241,
	331, 242, 243, 0, 244, 245, 332, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 0, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 0, 0, 281,
	282, 283, 284, 285, 338, 339, 0, 286, 0, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 30, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 0, 48, 49, 50, 301,
	302, 0, 303, 304, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 305, 306, 58, 0, 59, 60,
	61, 62, 307, 0, 0, 0, 63, 64, 65, 66,
	0, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 0, 76, 77, 78, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 308,
	309, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 97, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 310, 110, 111, 112, 311, 0,
	113, 0, 114, 115, 312, 116, 0, 117, 0, 118,
	0, 0, 0, 119, 120, 121, 0, 122, 313, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 0, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 0, 315, 140, 141, 142, 143, 316, 317,
	0, 318, 0, 144, 0, 0, 145, 0, 146, 147,
	148, 149, 150, 0, 0, 151, 319, 0, 152, 0,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 320, 0, 321, 171, 172, 322, 0, 173, 174,
	0, 175, 0, 323, 176, 324, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 325,
	0, 185, 0, 326, 186, 187, 188, 189, 0, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 0, 206, 329,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 0,
	224, 225, 226, 330, 0, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 331, 242, 243, 0, 244, 245, 332, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 0, 261, 262,
	263, 264, 265, 0, 334, 335, 0, 0, 266, 267,
	336, 268, 337, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 338, 339, 0, 286, 0,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 341, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 46, 47, 459, 48, 49, 50,
	0, 662, 460, 678, 668, 0, 51, 52, 53, 54,
	55, 0, 0, 56, 57, 682, 681, 58, 0, 59,
	60, 61, 62, 0, 0, 679, 0, 63, 64, 65,
	66, 461, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 462, 76, 77, 78, 0, 0, 0,
	680, 0, 0, 0, 79, 80, 81, 82, 83, 84,
	666, 665, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 435,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 0, 110, 111, 112, 0,
	0, 113, 0, 114, 115, 664, 116, 0, 117, 0,
	118, 463, 0, 464, 119, 120, 121, 0, 122, 0,
	0, 0, 123, 0, 124, 125, 126, 127, 128, 465,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 466, 0, 140, 141, 142, 143, 659,
	660, 0, 675, 0, 144, 467, 468, 145, 469, 146,
	147, 148, 149, 150, 0, 0, 151, 0, 470, 152,
	471, 0, 153, 154, 155, 0, 0, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 684, 472, 685, 171, 172, 0, 0, 173,
	174, 473, 175, 0, 0, 176, 667, 177, 178, 179,
	0, 180, 0, 0, 181, 182, 183, 0, 0, 184,
	0, 474, 185, 475, 0, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 0, 195, 0, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	663, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	476, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 0,
	240, 241, 651, 242, 243, 477, 244, 245, 661, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 0, 0, 258, 259, 0, 260, 478, 261,
	262, 263, 264, 265, 0, 674, 673, 0, 0, 266,
	267, 0, 268, 0, 0, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 0,
	0, 281, 282, 283, 284, 285, 0, 683, 0, 286,
	479, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 676, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 299, 300, 0, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 459, 48, 49, 50, 0,
	662, 460, 678, 668, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 682, 681, 58, 0, 59, 60,
	61, 62, 0, 0, 679, 0, 63, 64, 65, 66,
	461, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 462, 76, 77, 78, 0, 0, 0, 680,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 666,
	665, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 435, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 0, 110, 111, 112, 0, 0,
	113, 0, 114, 115, 664, 116, 0, 117, 0, 118,
	463, 0, 464, 119, 120, 121, 0, 122, 0, 0,
	0, 123, 0, 124, 125, 126, 127, 128, 465, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 466, 0, 140, 141, 142, 143, 659, 660,
	0, 675, 0, 144, 467, 468, 145, 469, 146, 147,
	148, 149, 150, 0, 0, 151, 0, 470, 152, 471,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 684, 472, 685, 171, 172, 0, 0, 173, 174,
	473, 175, 0, 0, 176, 667, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 0,
	474, 185, 475, 0, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 0, 195, 0, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 663,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 476,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 0, 242, 243, 477, 244, 245, 661, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 0, 0, 258, 259, 0, 260, 478, 261, 262,
	263, 264, 265, 0, 674, 673, 0, 0, 266, 267,
	0, 268, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 0, 683, 0, 286, 479,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 0, 0, 0, 0, 0,
	392, 0, 0, 526, 298, 299, 300, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 526, 0, 542, 0, 538, 539, 540, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 551, 392,
	0, 0, 526, 542, 0, 0, 538, 539, 540, 0,
	0, 528, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 0, 527, 542, 0, 0, 0, 0, 0, 0,
	0, 528, 0, 0, 0, 0, 392, 551, 0, 526,
	0, 527, 0, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 526, 0,
	542, 527, 538, 539, 540, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 551, 392, 0, 0, 526, 542,
	0, 0, 538, 539, 540, 0, 0, 528, 0, 0,
	0, 0, 0, 551, 0, 0, 0, 0, 527, 542,
	0, 0, 0, 0, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 551, 0, 0, 0, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 552, 0, 548, 549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 544, 0,
	0, 552, 548, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 0, 0,
	0, 0, 548, 549, 0, 0, 0, 0, 0, 550,
	0, 0, 0, 546, 0, 0, 0, 544, 552, 0,
	0, 0, 555, 0, 0, 543, 0, 0, 550, 0,
	0, 0, 546, 0, 0, 0, 0, 552, 0, 548,
	549, 555, 0, 0, 543, 0, 0, 0, 550, 0,
	0, 0, 546, 0, 544, 0, 0, 552, 548, 549,
	0, 555, 0, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 0, 0, 0, 0, 548, 549,
	0, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 544, 0, 0, 0, 0, 555, 0,
	0, 543, 0, 547, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 555, 0, 0,
	543, 0, 547, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 555, 0, 0,
	543, 0, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 547, 0,
	535, 536, 537, 0, 529, 530, 531, 532, 533, 534,
	0, 0, 0, 0, 1152, 545, 0, 0, 547, 535,
	536, 537, 0, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 1088, 0, 545, 0, 0, 0, 535,
	536, 537, 0, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 1063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 535, 536, 537, 0,
	529, 530, 531, 532, 533, 534, 0, 0, 0, 0,
	999, 545, 0, 0, 0, 535, 536, 537, 0, 529,
	530, 531, 532, 533, 534, 392, 0, 0, 526, 811,
	0, 545, 538, 539, 540, 535, 536, 537, 0, 529,
	530, 531, 532, 533, 534, 0, 0, 1144, 1013, 542,
	0, 0, 0, 392, 0, 0, 526, 528, 0, 0,
	538, 539, 540, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 542, 0, 0,
	1012, 392, 0, 0, 526, 528, 0, 527, 538, 539,
	540, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 553, 392,
	0, 0, 526, 528, 0, 527, 538, 539, 540, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 0, 0, 0, 0, 0,
	0, 528, 0, 527, 0, 0, 0, 551, 0, 392,
	0, 0, 526, 0, 0, 0, 538, 539, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 527, 0, 542, 0, 0, 982, 392, 0, 0,
	526, 528, 0, 0, 538, 539, 540, 551, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 552, 0, 0,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 528,
	0, 527, 0, 0, 0, 551, 0, 0, 548, 549,
	546, 0, 0, 0, 0, 552, 0, 0, 392, 0,
	0, 526, 0, 544, 0, 538, 539, 540, 0, 527,
	0, 0, 0, 0, 0, 0, 548, 549, 546, 0,
	0, 0, 542, 552, 0, 0, 0, 0, 0, 0,
	528, 544, 0, 0, 550, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 548, 549, 546, 555, 0, 0,
	543, 552, 0, 0, 0, 0, 0, 0, 0, 544,
	527, 0, 550, 0, 0, 0, 0, 0, 0, 1225,
	0, 0, 548, 549, 0, 555, 0, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 546, 544, 0, 0,
	550, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 555, 0, 0, 543, 0, 0, 0,
	0, 0, 548, 549, 546, 0, 0, 0, 550, 552,
	0, 0, 0, 0, 0, 0, 0, 544, 547, 0,
	0, 555, 0, 0, 543, 392, 0, 0, 526, 0,
	548, 549, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 547, 0, 550, 0,
	0, 0, 0, 0, 0, 546, 0, 528, 0, 0,
	552, 555, 0, 551, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 547, 0, 550, 0, 0, 0,
	0, 548, 549, 0, 0, 0, 0, 527, 0, 555,
	0, 0, 543, 0, 0, 0, 544, 0, 0, 0,
	0, 0, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 535, 536, 537, 0, 529,
	530, 531, 532, 533, 534, 0, 0, 550, 0, 0,
	0, 1084, 0, 0, 0, 0, 0, 0, 0, 545,
	555, 0, 547, 535, 536, 537, 0, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 0, 0,
	547, 535, 536, 537, 0, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 545, 0, 552, 0, 535,
	536, 537, 0, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 549,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 0, 545, 0, 0, 0, 535,
	536, 537, 0, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 550, 0, 0, 535, 536, 537,
	0, 529, 530, 531, 532, 533, 534, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 535, 536,
	537, 0, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 535, 536, 537, 0, 529,
	530, 531, 532, 533, 534,
}
var yyPact = []int{

	-197, -1000, -328, -1000, -1000, -1000, 176, -197, 394, -341,
	10719, -247, -1000, -1000, 202, 388, 388, 388, 381, -278,
	-279, 5921, 5921, -1000, 89, -247, -1000, -205, 10285, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	5485, 208, 250, 248, 63, 93, 220, -1000, 6365, 212,
	7673, 105, -197, -1000, -1000, -197, -197, 7673, -1000, -1000,
	-1000, -344, -1000, 13441, -1000, -1000, 7673, 7673, 7673, 7673,
	7673, 69, -1000, -1000, 4177, -1000, -1000, -333, -221, -281,
	-1000, -1000, -1000, -242, -222, -333, -1000, -1000, -1000, 178,
	451, 159, -1000, -1000, -1000, 7673, 257, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 234, -1000,
	-223, -225, -228, -229, -1000, -1000, -1000, -1000, -1000, -1000,
	-230, -232, -233, -235, -236, 52, -1000, -140, -1000, -140,
	-140, -258, -258, -252, -1000, -1000, 365, -140, -258, -1000,
	-1000, -284, -282, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	109, -344, -237, -1000, -1000, -1000, 11150, -347, -1000, 13537,
	-1000, -1000, -1000, -1000, -1000, -1000, 71, 87, -1000, 166,
	-1000, -41, -1000, -1000, -1000, 13537, -1000, 120, -1000, -1000,
	-1000, 6, 13537, -1000, 49, 11150, 187, -1000, -1000, -1000,
	187, -345, -1000, 107, 239, 5921, 12012, 11150, -79, 7673,
	7673, 7673, 7673, 7673, 7673, 7673, 7673, 7673, 7673, 7673,
	7673, 9417, 7673, 7673, 7673, 307, 7673, -84, 198, -1000,
	-1000, 277, -260, 2429, -1000, -242, 432, 432, 155, 13725,
	13725, -157, 12945, -340, -349, -247, -333, -1000, 1998, 7673,
	-1000, -1000, -1000, 5049, 478, 4613, -333, 2860, -1000, -1000,
	146, 445, -147, 13537, 73, -249, -250, 445, 445, 445,
	445, 7673, 7673, 7673, 7673, 7673, -1000, -251, -1000, -1000,
	-1000, -1000, 7673, -1000, -1000, 445, -140, -140, -1000, -1000,
	445, -1000, -80, -81, 445, -1000, 445, -1000, -19, 239,
	7673, -290, 5485, -1000, -1000, -124, -1000, 6, -1000, 7673,
	-1000, 445, 445, -1000, -1000, -1000, -1000, -1000, 141, -351,
	-1000, 7673, 383, -192, -1000, -1000, -150, 7673, -1000, -1000,
	402, 12431, -1000, -1000, -1000, -1000, -1000, -55, -326, -1000,
	-1000, -1000, -1000, -1000, -252, -258, -258, -258, -1000, -1000,
	-1000, -1000, -1000, -282, -284, -1000, -1000, -1000, -140, -1000,
	-1000, -140, -140, -1000, 365, -140, -1000, -323, -175, 282,
	282, 263, 263, 263, 435, 91, 91, 91, 91, 91,
	91, 155, 13725, 13588, 1548, 7673, 7673, -85, 272, -260,
	1512, 7673, -1000, 826, -1000, -1000, -1000, 237, -261, 8109,
	8109, -1000, -1000, -1000, 4177, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -263,
	7673, -1000, 7673, -1000, -1000, -1000, -1000, 229, -352, -354,
	-1000, 13537, -1000, -292, -355, -1000, -1000, -204, 7673, 7673,
	-293, -1000, 13537, 437, -1000, -1000, -90, -1000, -93, -96,
	-100, -1000, -264, -294, 156, -1000, 7673, -1000, 9851, -149,
	7673, -295, -296, -297, -301, 13509, -360, -361, -362, -367,
	7673, -371, -302, -1000, -1000, -303, -180, -186, -304, -306,
	11150, -150, -372, -1000, -1000, -1000, 83, 12926, -1000, -1000,
	-1000, 11150, -1000, -192, -1000, -265, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 219, 215, 7673, -32, -1000, 13413, -214, -211, 401,
	-1000, 445, -1000, -332, 2429, -325, 7673, 7673, 1491, 1449,
	7673, 8109, 8109, -1000, 7673, 1433, -1000, -1000, -1000, -1000,
	236, -266, 7673, 12012, 1407, -1000, 8109, 8109, 8109, 4177,
	-267, 313, -373, 3741, -369, -333, 12889, -1000, 7673, 7673,
	-1000, -1000, -213, -1000, -1000, -307, 7673, -1000, -204, -204,
	-1000, 7673, 7673, 131, 132, 94, -7, 445, 451, 279,
	-1000, 7673, 13469, -1000, -1000, 11581, 7673, 12869, -1000, -1000,
	-1000, -1000, 12012, -1000, -1000, -1000, -1000, -378, -1000, -1000,
	-176, -1000, -1000, -176, 345, -1000, 215, -1000, -1000, -1000,
	-1000, -1000, 472, -1000, -1000, 216, 377, 13537, 7673, 175,
	174, 7673, 465, -1000, 199, 445, -214, -215, -308, 2429,
	-1000, -1000, 413, 270, 7673, 7673, 209, 181, 55, 270,
	7673, 7673, 12012, 1391, -379, -1000, 7673, 12012, 8109, 8109,
	8109, 8109, 8109, 8109, 8109, 8109, 8109, 8109, 8109, 8109,
	8545, 227, 428, 428, 170, -380, 3305, 7673, -1000, -388,
	-1000, 7673, -1000, -1000, 12965, 13537, -1000, 451, -1000, -310,
	-311, 13537, 13537, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-312, -1000, -1000, 13537, 7673, 62, -1000, 12850, -1000, -314,
	-1000, -1000, -1000, -1000, 216, -316, -155, 7673, 7673, -1000,
	7673, 7673, 9, -1000, -1000, -217, -218, 445, -1000, -1000,
	270, 270, 7673, 7673, 7673, 270, 1391, -390, -1000, 12012,
	270, -1000, 290, 290, 275, 275, 275, 428, 349, 349,
	349, 349, 349, 349, 170, 235, 253, -269, 7673, -394,
	-1000, 270, -1000, 1468, -1000, -1000, -1000, -1000, -1000, 13537,
	75, 370, -1000, -1000, -155, -1000, -1000, 11150, 13537, -386,
	-1000, 13537, -1000, -1000, -271, 7673, -1000, -1000, -219, 270,
	270, 270, -1000, -1000, 8109, 230, -273, 12012, 1342, -1000,
	-1000, 40, 7673, -1000, -387, -1000, 399, 7673, 460, 13537,
	-1000, 195, 8109, 12012, -396, -1000, -318, 7237, 7237, -409,
	11150, -276, -1000, -402, -1000, 195, -404, -1000, -1000, -1000,
	-1000, 8981, 184, 11, 13385, -1000, -1000, -1000, 457, -1000,
	-1000, 406, -1000, -1000, -1000, -1000, -1000, -1000, 6801, -1000,
}
var yyPgo = []int{

	0, 776, 775, 518, 25, 385, 377, 774, 773, 451,
	769, 196, 768, 8, 45, 788, 297, 259, 42, 767,
	766, 29, 38, 9, 479, 765, 764, 27, 14, 46,
	39, 763, 763, 36, 20, 749, 747, 316, 746, 302,
	304, 741, 734, 733, 727, 713, 308, 710, 298, 709,
	689, 684, 682, 682, 15, 287, 672, 12, 28, 6,
	672, 666, 663, 0, 646, 624, 13, 610, 7, 32,
	10, 512, 40, 11, 606, 18, 595, 366, 594, 593,
	591, 589, 588, 30, 41, 587, 446, 47, 586, 583,
	577, 34, 19, 576, 574, 568, 21, 4, 2, 546,
	545, 542, 541, 3, 1, 49, 24, 31, 533, 531,
	526, 37, 43, 80, 44, 54, 16, 523, 521, 520,
	417, 23, 56, 514, 334, 257, 510, 254, 250, 508,
	498, 492, 487, 244, 5, 22, 229, 487,
}
var yyR1 = []int{

	0, 1, 1, 26, 26, 26, 27, 27, 27, 61,
	13, 13, 13, 110, 110, 111, 111, 121, 121, 121,
	121, 121, 121, 135, 135, 135, 122, 122, 122, 122,
	122, 122, 122, 130, 130, 130, 130, 119, 119, 34,
	34, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 78, 78, 129, 129, 131, 131, 127, 128,
	123, 123, 132, 132, 124, 125, 126, 126, 126, 126,
	126, 126, 72, 72, 28, 28, 133, 133, 133, 133,
	136, 73, 73, 73, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 106, 106,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 90, 90, 90, 90, 90, 93, 93,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 19, 19, 20, 20, 20, 20, 20, 18, 18,
	18, 50, 50, 50, 11, 11, 91, 91, 92, 92,
	92, 134, 134, 107, 107, 107, 108, 108, 2, 2,
	4, 4, 3, 3, 3, 3, 5, 5, 6, 6,
	6, 6, 6, 6, 6, 29, 71, 71, 71, 10,
	10, 12, 12, 23, 23, 24, 25, 25, 22, 22,
	66, 66, 67, 67, 68, 70, 70, 46, 46, 45,
	45, 47, 47, 48, 49, 49, 49, 49, 51, 51,
	96, 96, 95, 95, 97, 99, 99, 99, 98, 100,
	100, 101, 101, 102, 102, 102, 103, 103, 104, 104,
	104, 104, 104, 36, 36, 36, 36, 37, 37, 37,
	37, 38, 38, 39, 39, 40, 40, 41, 41, 42,
	43, 43, 43, 44, 30, 30, 31, 31, 7, 7,
	21, 21, 32, 32, 35, 35, 87, 87, 87, 88,
	88, 89, 65, 65, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 63, 63, 64, 64,
	69, 69, 79, 82, 82, 83, 81, 81, 80, 80,
	109, 109, 54, 54, 54, 54, 55, 55, 56, 56,
	33, 33, 84, 84, 85, 85, 86, 8, 8, 9,
	9, 14, 14, 14, 14, 52, 52, 58, 53, 53,
	60, 57, 118, 118, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 77, 75, 74, 74, 74,
	59, 59, 59, 115, 115, 115, 137, 137, 137, 137,
	112, 112, 112, 112, 112, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117,
}
var yyR2 = []int{

	0, 1, 2, 1, 1, 0, 2, 2, 0, 1,
	1, 3, 2, 1, 2, 2, 3, 2, 3, 5,
	6, 2, 3, 3, 4, 0, 1, 1, 1, 1,
	1, 2, 4, 1, 1, 1, 1, 2, 3, 3,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 1, 1, 1, 1, 5, 2,
	1, 1, 1, 1, 5, 2, 2, 2, 1, 3,
	3, 2, 1, 0, 3, 0, 5, 2, 5, 2,
	1, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 4,
	1, 3, 3, 5, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 1, 3,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 5, 6, 6,
	7, 1, 1, 4, 1, 1, 1, 2, 2, 2,
	2, 1, 1, 3, 5, 6, 6, 4, 3, 1,
	5, 1, 1, 4, 1, 4, 1, 4, 1, 4,
	1, 1, 1, 1, 1, 1, 6, 4, 4, 4,
	4, 1, 3, 3, 4, 4, 7, 5, 2, 2,
	0, 1, 2, 0, 1, 3, 1, 3, 1, 3,
	3, 1, 3, 3, 3, 2, 1, 3, 1, 1,
	3, 3, 1, 2, 4, 4, 1, 1, 9, 9,
	1, 2, 4, 4, 4, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 3, 1, 3, 4, 3,
	3, 0, 1, 3, 1, 2, 0, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 2, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 2, 2, 0, 1, 4, 2, 2,
	2, 2, 2, 1, 2, 2, 4, 2, 2, 1,
	1, 1, 0, 2, 5, 2, 3, 1, 1, 1,
	1, 3, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 0, 5, 0, 5, 0, 4, 3, 5, 4,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 1, 4,
	1, 3, 5, 1, 2, 4, 2, 0, 1, 0,
	1, 2, 2, 2, 3, 5, 1, 2, 0, 2,
	1, 0, 1, 1, 1, 3, 3, 1, 0, 1,
	3, 3, 2, 1, 1, 1, 3, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 2, 6, 2,
	3, 5, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}
var yyChk = []int{

	-1000, -1, -2, -3, -4, -6, -5, 453, 331, -7,
	364, 404, 456, -24, -23, 390, 199, 138, 266, -3,
	-4, -12, -10, 28, 123, 457, -36, -58, 261, -59,
	5, -113, -114, 20, 21, 22, 23, 24, 25, 26,
	27, 29, 30, 31, 39, 40, 42, 43, 45, 46,
	47, 54, 55, 56, 57, 58, 61, 62, 65, 67,
	68, 69, 70, 75, 76, 77, 78, 80, 81, 82,
	84, 85, 86, 87, 88, 89, 92, 93, 94, 102,
	103, 104, 105, 106, 107, 110, 112, 114, 115, 116,
	117, 118, 120, 121, 122, 125, 126, 127, 128, 129,
	131, 132, 133, 135, 136, 137, 139, 140, 141, 142,
	144, 145, 146, 149, 151, 152, 154, 156, 158, 162,
	163, 164, 166, 170, 172, 173, 174, 175, 176, 178,
	179, 180, 181, 183, 184, 185, 186, 187, 188, 190,
	193, 194, 195, 196, 202, 205, 207, 208, 209, 210,
	211, 214, 217, 220, 221, 222, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 243, 244, 247, 248, 250, 253, 255, 256, 257,
	259, 262, 263, 264, 267, 270, 273, 274, 275, 276,
	277, 278, 279, 281, 282, 284, 287, 288, 286, 290,
	291, 292, 293, 294, 295, 296, 297, 299, 300, 301,
	302, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 314, 316, 317, 319, 320, 321, 323, 324, 325,
	326, 327, 328, 329, 330, 332, 333, 334, 335, 336,
	338, 339, 341, 342, 344, 345, 347, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 362, 363,
	365, 367, 368, 369, 370, 371, 377, 378, 380, 383,
	384, 385, 386, 387, 388, 389, 392, 393, 394, 395,
	396, 399, 400, 401, 402, 403, 407, 409, 410, 411,
	412, 415, 418, 419, 420, 421, 422, 423, 433, 434,
	435, 48, 49, 51, 52, 63, 64, 71, 108, 109,
	143, 147, 153, 167, 169, 192, 197, 198, 200, 215,
	240, 242, 245, 252, 254, 268, 272, 283, 285, 298,
	322, 340, 346, 360, 373, 374, 379, 381, 404, 405,
	424, 425, 426, 427, 428, 429, 430, 431, 432, -86,
	453, -46, -37, -47, 155, -39, -40, -48, 219, 150,
	258, -49, -71, 28, 123, -71, -71, 54, 454, 454,
	-8, -9, -14, -15, 446, -17, 444, 445, -63, 246,
	436, -87, -109, -76, 453, -79, -93, -4, 143, 36,
	-88, -89, 10, 262, 322, -59, -77, 6, -75, -118,
	-130, -136, 382, 148, 251, 59, -90, -94, 5, -113,
	11, 7, -115, -120, -131, -132, -133, 200, 73, 96,
	99, 100, 223, 224, 97, 101, 337, 397, 95, 98,
	60, 71, 167, 215, 425, 127, 49, 51, 52, 63,
	64, 108, 109, 153, 197, 198, 240, 242, 254, 298,
	346, 373, 374, 405, -116, -127, -128, -124, -125, 44,
	50, 79, 91, 159, 161, 177, 191, 203, 204, 206,
	216, 218, 241, 249, 269, 271, 318, 343, 366, 408,
	-126, -9, 260, -86, 446, -58, 453, -85, -84, -15,
	111, -38, -37, -45, -46, -48, 155, 297, 396, 244,
	341, 207, -40, -39, -41, -15, 28, -31, 152, 243,
	-42, -44, -15, -17, -51, 256, -5, -6, -4, -5,
	-5, -25, -22, -15, -29, 457, 13, 72, 42, 444,
	445, 446, 447, 448, 449, 440, 441, 442, 17, 18,
	19, -63, 34, 265, 218, 436, 177, 343, 203, 204,
	249, 48, 182, 37, 5, 262, -15, -15, -15, -15,
	-15, 271, -15, -4, -11, 404, -55, -54, 455, 451,
	-4, -4, -107, 451, 453, 453, -55, 453, -75, -75,
	-75, 453, -80, -15, -35, 151, 155, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 285, -72, 407, -72,
	-72, -34, 453, -34, -78, 453, 64, 63, -72, -34,
	453, -73, 438, 419, 453, -73, 453, -28, 64, -29,
	453, -58, 457, 454, 261, 207, 341, -43, -74, 453,
	-77, 444, 445, -30, 322, 323, -50, 250, 345, -52,
	-58, 457, 398, -26, 38, 119, -18, 160, -14, -121,
	-122, 340, -119, -120, -129, -123, -133, -136, -115, 197,
	198, 346, 49, 298, 153, 109, 108, 254, 52, -127,
	-128, -124, -125, 374, 373, 200, 5, -113, 51, 73,
	98, 64, 63, 405, 240, 242, -110, -59, 373, -15,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, 218, 177, 343, 48, 182,
	-15, 375, 251, 246, 382, 148, 392, 123, 256, -33,
	361, 41, -69, -4, 453, -112, 5, -113, -114, -116,
	-117, 28, 32, 33, 34, 35, 36, 37, 38, 41,
	53, 59, 60, 66, 72, 74, 83, 90, 95, 96,
	97, 99, 100, 101, 111, 113, 119, 123, 124, 130,
	134, 138, 148, 150, 155, 157, 160, 165, 168, 171,
	182, 189, 199, 201, 212, 213, 219, 223, 224, 246,
	251, 258, 260, 261, 265, 266, 280, 289, 303, 315,
	331, 337, 348, 361, 364, 372, 375, 376, 382, 390,
	391, 397, 398, 406, 413, 414, 416, 417, -87, 322,
	453, 454, 457, -54, -57, 446, -112, -15, -11, -108,
	452, -15, -107, 4, -11, 454, 454, -91, 28, 123,
	446, -92, -15, -61, -115, -105, 433, 236, 106, 174,
	233, -106, 329, -77, -82, -83, 413, -99, 270, 453,
	453, -77, -77, -77, -77, -15, -11, -11, -11, -11,
	453, -11, -77, -72, -72, -77, 373, 373, -77, -77,
	338, -18, -11, 454, -84, 396, -30, -15, -77, -77,
	227, 457, -22, -64, -65, 262, 10, -62, 444, 445,
	446, 447, 448, 449, 440, 441, 442, 17, 18, 19,
	-27, 437, -21, 414, -13, -20, -15, -135, 36, -122,
	-105, 453, -34, -111, 455, -111, 435, 136, -15, -15,
	375, -33, 361, -69, 136, -15, 251, 382, 148, 392,
	123, 256, 160, 453, -16, -17, 444, 445, -63, 453,
	322, -16, -11, 453, -11, -56, -15, 452, 458, 457,
	452, 452, 457, 454, 454, -23, 457, -24, -91, -91,
	454, 15, 16, 375, 375, 375, 375, 453, 454, -81,
	-83, 130, -15, -98, -59, 453, 414, -15, 454, 454,
	454, 454, 37, 454, 454, 454, 454, -11, 454, 454,
	454, 435, 435, 454, 454, -59, -21, 454, 261, 454,
	-58, -27, 453, 152, 211, -66, 168, -15, 457, 91,
	241, 206, 37, 5, 451, 451, -135, 36, -77, 455,
	-34, -57, -15, -15, 136, 136, -15, -16, -16, -15,
	136, 160, 453, -15, -134, -121, 34, 13, 444, 445,
	446, 447, 448, 449, 440, 441, 442, 17, 18, 19,
	-63, 203, -16, -16, -16, -11, 453, 34, 454, -11,
	454, 457, -54, 454, -15, -15, -107, 454, -92, -23,
	-23, -15, -15, 236, 174, 233, -106, 233, -106, -106,
	-77, -75, 134, -15, 372, -100, -59, -15, 454, -121,
	454, -73, -73, -28, -66, 4, -70, 171, 54, -13,
	206, 206, -13, 5, 452, -77, -77, 451, 454, -57,
	-15, -15, 136, 34, 34, -15, -15, -134, 454, 457,
	-15, -121, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, 123, 246, 256, 457, -11,
	454, -15, 454, -15, 452, -75, 454, 454, 454, -15,
	-101, 277, 454, 454, -70, 454, -96, 416, -15, -67,
	-68, -15, -13, -13, 398, 260, 452, 452, -77, -15,
	-15, -15, 454, -121, 160, 123, 256, 453, -15, 454,
	454, -23, 54, -96, -95, -97, -59, 457, 453, -15,
	452, -16, 160, 453, -134, 454, -102, 296, 323, -11,
	457, 37, -68, -19, 5, -16, -134, 454, 454, -103,
	-104, 48, 387, 94, -15, -103, -97, -98, 457, 454,
	454, -104, 284, 154, 322, 284, 154, 5, 34, -104,
}
var yyDef = []int{

	0, -2, 1, 248, -2, -2, 274, 0, 272, 260,
	0, 0, 2, -2, 0, 268, 268, 268, 0, 0,
	257, 408, 0, 271, 269, 0, 261, 323, 0, 417,
	440, 441, 442, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 348,
	0, 332, 290, 287, 0, 329, 330, 291, 0, 0,
	0, 299, 0, 266, 267, 0, 0, 0, 250, 251,
	265, 407, 409, 413, 414, 100, 0, 0, 0, 0,
	0, 0, 181, 182, 0, 184, 185, 186, 732, 0,
	191, 192, 376, 603, 752, 390, 424, 425, 426, 0,
	0, 0, 432, 433, 434, 389, 355, 199, -2, -2,
	435, 436, 422, 33, 34, 35, 36, -2, 773, 201,
	202, 204, 206, 208, 210, 211, 212, 213, 214, -2,
	0, 729, 735, 741, 763, 519, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 742, -2, -2, -2,
	-2, -2, -2, -2, 445, 56, 57, 62, 63, 771,
	772, 774, 775, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	75, 265, 0, 349, 324, 325, 0, 0, 404, 402,
	403, 254, 331, 255, 289, 292, 0, 0, 294, 0,
	296, 0, 327, 328, 333, 337, 338, 342, 346, 347,
	335, 0, 339, -2, 233, 0, 262, 256, 257, 263,
	264, 275, 276, 5, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 0, 0, 0, 0, 0, 0, 0, 138,
	140, 401, 0, 0, 412, 0, 104, 105, 119, 123,
	124, 0, 234, -2, 0, 760, 187, 396, 0, 0,
	188, 189, 190, 0, 0, 0, -2, 0, 427, 429,
	97, 0, 0, 388, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 47, 59, 72, 67,
	66, 49, 0, 48, 46, 0, 73, 73, 71, 50,
	0, 79, 0, 0, 0, 77, 0, 65, 0, 230,
	0, 0, 0, 406, 288, 0, 297, 0, 340, 0,
	437, 0, 0, 336, 344, 345, 293, 231, 0, 298,
	415, 0, 0, 8, 3, 4, 351, 0, 410, 101,
	25, 0, 26, 27, 28, 29, 30, 97, 40, 41,
	42, 43, 44, 45, 53, 40, 40, 40, 51, 54,
	55, 60, 61, 83, 83, 80, 443, 444, 73, 773,
	776, 73, 73, 68, 0, 73, 102, 13, 0, 106,
	107, 108, 109, 110, 111, -2, -2, -2, -2, -2,
	-2, 118, 121, 122, -2, 0, 0, 0, 401, 0,
	-2, 0, 137, 0, 142, 144, 146, 0, 0, 0,
	0, 400, 156, 380, 0, 411, 450, 451, 452, 453,
	454, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 141, 0,
	0, 398, 0, 397, 392, 393, 421, 0, 0, 0,
	245, 234, 246, 0, 0, -2, 193, 274, 0, 0,
	0, 236, 238, 0, -2, 430, 84, 85, 86, 87,
	88, 89, 98, 0, 387, 383, 0, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 0, 0, 0, 0,
	0, 351, 0, 326, 405, 295, 0, 0, 438, 439,
	232, 0, 277, 8, 378, 0, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	279, 0, 281, 0, 228, 229, 10, 17, 21, 25,
	31, 0, 37, 40, 0, 14, 0, 0, -2, -2,
	0, 0, 0, 157, 0, -2, 139, 143, 145, 147,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 183, 235, 394, 0, 0,
	243, 244, 0, 377, -2, 0, 0, 273, 274, 274,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 305, 306, 310, 0, 0, 203, 205,
	207, 209, 0, 217, 218, 219, 220, 0, 39, 52,
	83, 81, 82, 83, 75, 74, 281, 270, 334, 341,
	416, 278, 0, 6, 7, 286, 0, 350, 0, 0,
	0, 0, 0, 12, 0, 0, 18, 22, 0, 0,
	38, 15, 103, -2, 0, 0, -2, 0, 0, -2,
	0, 0, 0, -2, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 160, 161, 175, 0, 0, 0, 381, 0,
	357, 0, 399, -2, 0, 235, 247, 194, 237, 0,
	0, 239, 240, 90, 91, 92, 93, 94, 95, 96,
	0, 431, 382, 386, 0, 312, 309, 0, 200, 0,
	58, 78, 76, 64, 286, 0, 301, 0, 0, 223,
	0, 0, 0, 11, 23, 0, 0, 0, 32, 16,
	-2, -2, 0, 0, 0, -2, -2, 0, 150, 0,
	-2, 159, 162, 163, 164, 165, 166, 167, -2, -2,
	-2, -2, -2, -2, 174, 0, 0, 0, 0, 0,
	360, -2, 356, 235, 395, 428, 195, 196, 99, 385,
	274, 0, 354, 216, 301, 379, 258, 0, 285, 280,
	282, 284, 224, 225, 0, 0, 24, 19, 0, -2,
	-2, -2, 151, 242, 0, 0, 0, 0, 235, 359,
	358, 315, 0, 259, 300, 302, 0, 0, 0, 227,
	20, -2, 0, 0, 0, 361, 0, 0, 0, 311,
	0, 0, 283, 0, 221, -2, 0, 179, 308, 313,
	316, -2, 695, 500, 0, 314, 303, 304, 0, 226,
	180, 0, 318, 319, 320, 321, 322, 222, 0, 317,
}
var yyTok1 = []int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 448, 3, 3,
	453, 454, 446, 444, 457, 445, 455, 447, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 458, 456,
	440, 442, 441, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 451, 3, 452, 449,
}
var yyTok2 = []int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = []int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 443, 57783, 450, 0,
}

//line yaccpar:1

/*	parser for yacc output	*/

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

const yyFlag = -1000

func yyTokname(c int) string {
	// 4 is TOKSTART above
	if c >= 4 && c-4 < len(yyToknames) {
		if yyToknames[c-4] != "" {
			return yyToknames[c-4]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yylex1(lex yyLexer, lval *yySymType) int {
	c := 0
	char := lex.Lex(lval)
	if char <= 0 {
		c = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		c = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			c = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		c = yyTok3[i+0]
		if c == char {
			c = yyTok3[i+1]
			goto out
		}
	}

out:
	if c == 0 {
		c = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(c), uint(char))
	}
	return c
}

func yyParse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yychar), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar = yylex1(yylex, &yylval)
	}
	yyn += yychar
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yychar { /* valid shift */
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yychar {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error("syntax error")
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yychar))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}
			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		//line sql.y:371
		{
			yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
			yylex.(*sqlLex).stmt = yyS[yypt-0].sqlSelect
		}
	case 2:
		//line sql.y:376
		{
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
			yyVAL.sqlSelect.Semicolon = true
			yylex.(*sqlLex).stmt = yyS[yypt-1].sqlSelect
		}
	case 3:
		//line sql.y:383
		{
			yyVAL.str = "asc"
		}
	case 4:
		//line sql.y:384
		{
			yyVAL.str = "desc"
		}
	case 5:
		//line sql.y:385
		{
			yyVAL.str = ""
		}
	case 6:
		//line sql.y:388
		{
			yyVAL.str = "first"
		}
	case 7:
		//line sql.y:389
		{
			yyVAL.str = "last"
		}
	case 8:
		//line sql.y:390
		{
			yyVAL.str = ""
		}
	case 9:
		yyVAL.str = yyS[yypt-0].str
	case 10:
		//line sql.y:399
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 11:
		//line sql.y:403
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 12:
		//line sql.y:407
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 13:
		//line sql.y:414
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 14:
		//line sql.y:418
		{
			yyVAL.anyName = AnyName{yyS[yypt-1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyS[yypt-0].anyName...)
		}
	case 15:
		//line sql.y:425
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 16:
		//line sql.y:429
		{
			yyVAL.anyName = append(yyS[yypt-2].anyName, yyS[yypt-0].str)
		}
	case 17:
		//line sql.y:446
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 18:
		//line sql.y:451
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 19:
		//line sql.y:458
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyS[yypt-1].iconst}
		}
	case 20:
		//line sql.y:464
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyS[yypt-1].iconst}
		}
	case 21:
		//line sql.y:471
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 22:
		//line sql.y:476
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 23:
		//line sql.y:484
		{
			yyVAL.optArrayBounds = append(yyS[yypt-2].optArrayBounds, "")
		}
	case 24:
		//line sql.y:488
		{
			yyVAL.optArrayBounds = append(yyS[yypt-3].optArrayBounds, yyS[yypt-1].iconst)
		}
	case 25:
		//line sql.y:492
		{
			yyVAL.optArrayBounds = nil
		}
	case 26:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 27:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 28:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 29:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 30:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 31:
		//line sql.y:501
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, OptInterval: yyS[yypt-0].optInterval}
		}
	case 32:
		//line sql.y:505
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, TypeMods: []Expr{yyS[yypt-1].iconst}}
		}
	case 33:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 34:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 35:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 36:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 37:
		//line sql.y:536
		{
			yyVAL.pgType = PgType{Name: AnyName{yyS[yypt-1].str}, TypeMods: yyS[yypt-0].fields}
		}
	case 38:
		//line sql.y:540
		{
			yyVAL.pgType = PgType{Name: append(AnyName{yyS[yypt-2].str}, yyS[yypt-1].anyName...), TypeMods: yyS[yypt-0].fields}
		}
	case 39:
		//line sql.y:545
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 40:
		//line sql.y:546
		{
			yyVAL.fields = nil
		}
	case 41:
		//line sql.y:553
		{
			yyVAL.pgType = PgType{Name: AnyName{"int"}}
		}
	case 42:
		//line sql.y:557
		{
			yyVAL.pgType = PgType{Name: AnyName{"integer"}}
		}
	case 43:
		//line sql.y:561
		{
			yyVAL.pgType = PgType{Name: AnyName{"smallint"}}
		}
	case 44:
		//line sql.y:565
		{
			yyVAL.pgType = PgType{Name: AnyName{"bigint"}}
		}
	case 45:
		//line sql.y:569
		{
			yyVAL.pgType = PgType{Name: AnyName{"real"}}
		}
	case 46:
		//line sql.y:573
		{
			yyVAL.pgType = PgType{Name: AnyName{"float"}}
			if yyS[yypt-0].iconst != IntegerConst("") {
				yyVAL.pgType.TypeMods = []Expr{yyS[yypt-0].iconst}
			}
		}
	case 47:
		//line sql.y:580
		{
			yyVAL.pgType = PgType{Name: AnyName{"double precision"}}
		}
	case 48:
		//line sql.y:584
		{
			yyVAL.pgType = PgType{Name: AnyName{"decimal"}, TypeMods: yyS[yypt-0].fields}
		}
	case 49:
		//line sql.y:588
		{
			yyVAL.pgType = PgType{Name: AnyName{"dec"}, TypeMods: yyS[yypt-0].fields}
		}
	case 50:
		//line sql.y:592
		{
			yyVAL.pgType = PgType{Name: AnyName{"numeric"}, TypeMods: yyS[yypt-0].fields}
		}
	case 51:
		//line sql.y:596
		{
			yyVAL.pgType = PgType{Name: AnyName{"bool"}}
		}
	case 52:
		//line sql.y:602
		{
			yyVAL.iconst = yyS[yypt-1].iconst
		}
	case 53:
		//line sql.y:606
		{
			yyVAL.iconst = IntegerConst("")
		}
	case 54:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 55:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 56:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 57:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 58:
		//line sql.y:620
		{
			yyVAL.pgType = PgType{}
			if yyS[yypt-3].boolean {
				yyVAL.pgType.Name = AnyName{"varbit"}
			} else {
				yyVAL.pgType.Name = AnyName{"bit"}
			}
			yyVAL.pgType.TypeMods = yyS[yypt-1].fields
		}
	case 59:
		//line sql.y:632
		{
			yyVAL.pgType = PgType{}
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varbit"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"bit"}}
			}
		}
	case 60:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 61:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 62:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 63:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 64:
		//line sql.y:655
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.TypeMods = []Expr{yyS[yypt-2].iconst}
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 65:
		//line sql.y:663
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 66:
		//line sql.y:670
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 67:
		//line sql.y:678
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 68:
		//line sql.y:686
		{
			yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
		}
	case 69:
		//line sql.y:690
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 70:
		//line sql.y:698
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 71:
		//line sql.y:706
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 72:
		//line sql.y:716
		{
			yyVAL.boolean = true
		}
	case 73:
		//line sql.y:720
		{
			yyVAL.boolean = false
		}
	case 74:
		//line sql.y:726
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 75:
		//line sql.y:730
		{
			yyVAL.str = ""
		}
	case 76:
		//line sql.y:739
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, TypeMods: []Expr{yyS[yypt-2].iconst}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 77:
		//line sql.y:743
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 78:
		//line sql.y:747
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, TypeMods: []Expr{yyS[yypt-2].iconst}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 79:
		//line sql.y:751
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, WithTimeZone: yyS[yypt-0].boolean}
		}
	case 81:
		//line sql.y:760
		{
			yyVAL.boolean = true
		}
	case 82:
		//line sql.y:764
		{
			yyVAL.boolean = false
		}
	case 83:
		//line sql.y:768
		{
			yyVAL.boolean = false
		}
	case 84:
		//line sql.y:774
		{
			yyVAL.optInterval = &OptInterval{Left: "year"}
		}
	case 85:
		//line sql.y:778
		{
			yyVAL.optInterval = &OptInterval{Left: "month"}
		}
	case 86:
		//line sql.y:782
		{
			yyVAL.optInterval = &OptInterval{Left: "day"}
		}
	case 87:
		//line sql.y:786
		{
			yyVAL.optInterval = &OptInterval{Left: "hour"}
		}
	case 88:
		//line sql.y:790
		{
			yyVAL.optInterval = &OptInterval{Left: "minute"}
		}
	case 89:
		//line sql.y:794
		{
			yyVAL.optInterval = &OptInterval{Second: yyS[yypt-0].intervalSecond}
		}
	case 90:
		//line sql.y:798
		{
			yyVAL.optInterval = &OptInterval{Left: "year", Right: "month"}
		}
	case 91:
		//line sql.y:802
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "hour"}
		}
	case 92:
		//line sql.y:806
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "minute"}
		}
	case 93:
		//line sql.y:810
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Second: yyS[yypt-0].intervalSecond}
		}
	case 94:
		//line sql.y:814
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Right: "minute"}
		}
	case 95:
		//line sql.y:818
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Second: yyS[yypt-0].intervalSecond}
		}
	case 96:
		//line sql.y:822
		{
			yyVAL.optInterval = &OptInterval{Left: "minute", Second: yyS[yypt-0].intervalSecond}
		}
	case 97:
		//line sql.y:826
		{
			yyVAL.optInterval = nil
		}
	case 98:
		//line sql.y:832
		{
			yyVAL.intervalSecond = &IntervalSecond{}
		}
	case 99:
		//line sql.y:836
		{
			yyVAL.intervalSecond = &IntervalSecond{Precision: yyS[yypt-1].iconst}
		}
	case 100:
		yyVAL.expr = yyS[yypt-0].expr
	case 101:
		//line sql.y:872
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 102:
		//line sql.y:876
		{
			yyVAL.expr = CollateExpr{Expr: yyS[yypt-2].expr, Collation: yyS[yypt-0].anyName}
		}
	case 103:
		//line sql.y:880
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyS[yypt-4].expr, TimeZone: yyS[yypt-0].expr}
		}
	case 104:
		//line sql.y:893
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyS[yypt-0].expr}
		}
	case 105:
		//line sql.y:897
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyS[yypt-0].expr}
		}
	case 106:
		//line sql.y:901
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "+", Right: yyS[yypt-0].expr}
		}
	case 107:
		//line sql.y:905
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "-", Right: yyS[yypt-0].expr}
		}
	case 108:
		//line sql.y:909
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "*", Right: yyS[yypt-0].expr}
		}
	case 109:
		//line sql.y:913
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "/", Right: yyS[yypt-0].expr}
		}
	case 110:
		//line sql.y:917
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "%", Right: yyS[yypt-0].expr}
		}
	case 111:
		//line sql.y:921
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "^", Right: yyS[yypt-0].expr}
		}
	case 112:
		//line sql.y:925
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<", Right: yyS[yypt-0].expr}
		}
	case 113:
		//line sql.y:929
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">", Right: yyS[yypt-0].expr}
		}
	case 114:
		//line sql.y:933
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "=", Right: yyS[yypt-0].expr}
		}
	case 115:
		//line sql.y:937
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<=", Right: yyS[yypt-0].expr}
		}
	case 116:
		//line sql.y:941
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">=", Right: yyS[yypt-0].expr}
		}
	case 117:
		//line sql.y:945
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "!=", Right: yyS[yypt-0].expr}
		}
	case 118:
		//line sql.y:949
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].str, Right: yyS[yypt-0].expr}
		}
	case 119:
		//line sql.y:953
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].str, Expr: yyS[yypt-0].expr}
		}
	case 120:
		//line sql.y:957
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].str}
		}
	case 121:
		//line sql.y:961
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "and", Right: yyS[yypt-0].expr}
		}
	case 122:
		//line sql.y:965
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "or", Right: yyS[yypt-0].expr}
		}
	case 123:
		//line sql.y:969
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 124:
		//line sql.y:973
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 125:
		//line sql.y:977
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "like", Right: yyS[yypt-0].expr}
		}
	case 126:
		//line sql.y:981
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 127:
		//line sql.y:985
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not like", Right: yyS[yypt-0].expr}
		}
	case 128:
		//line sql.y:989
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 129:
		//line sql.y:993
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "ilike", Right: yyS[yypt-0].expr}
		}
	case 130:
		//line sql.y:997
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 131:
		//line sql.y:1001
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not ilike", Right: yyS[yypt-0].expr}
		}
	case 132:
		//line sql.y:1005
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 133:
		//line sql.y:1010
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "similar to", Right: yyS[yypt-0].expr}
		}
	case 134:
		//line sql.y:1014
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 135:
		//line sql.y:1018
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "not similar to", Right: yyS[yypt-0].expr}
		}
	case 136:
		//line sql.y:1022
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-6].expr, Operator: "not similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 137:
		//line sql.y:1035
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-2].expr}
		}
	case 138:
		//line sql.y:1039
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr}
		}
	case 139:
		//line sql.y:1043
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-3].expr, Not: true}
		}
	case 140:
		//line sql.y:1047
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr, Not: true}
		}
	case 141:
		//line sql.y:1051
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].row, Operator: "overlaps", Right: yyS[yypt-0].row}
		}
	case 142:
		//line sql.y:1055
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "true"}
		}
	case 143:
		//line sql.y:1059
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "true"}
		}
	case 144:
		//line sql.y:1063
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "false"}
		}
	case 145:
		//line sql.y:1067
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "false"}
		}
	case 146:
		//line sql.y:1071
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "unknown"}
		}
	case 147:
		//line sql.y:1075
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "unknown"}
		}
	case 148:
		//line sql.y:1079
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: "is distinct from", Right: yyS[yypt-0].expr}
		}
	case 149:
		//line sql.y:1083
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: "is not distinct from", Right: yyS[yypt-0].expr}
		}
	case 150:
		//line sql.y:1087
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 151:
		//line sql.y:1091
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 152:
		//line sql.y:1095
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 153:
		//line sql.y:1099
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 154:
		//line sql.y:1103
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 155:
		//line sql.y:1107
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 156:
		//line sql.y:1111
		{
			yyVAL.expr = InExpr{Value: yyS[yypt-2].expr, In: yyS[yypt-0].expr}
		}
	case 157:
		//line sql.y:1115
		{
			yyVAL.expr = InExpr{Value: yyS[yypt-3].expr, Not: true, In: yyS[yypt-0].expr}
		}
	case 158:
		//line sql.y:1136
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 159:
		//line sql.y:1140
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 160:
		//line sql.y:1144
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyS[yypt-0].expr}
		}
	case 161:
		//line sql.y:1148
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyS[yypt-0].expr}
		}
	case 162:
		//line sql.y:1152
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "+", Right: yyS[yypt-0].expr}
		}
	case 163:
		//line sql.y:1156
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "-", Right: yyS[yypt-0].expr}
		}
	case 164:
		//line sql.y:1160
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "*", Right: yyS[yypt-0].expr}
		}
	case 165:
		//line sql.y:1164
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "/", Right: yyS[yypt-0].expr}
		}
	case 166:
		//line sql.y:1168
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "%", Right: yyS[yypt-0].expr}
		}
	case 167:
		//line sql.y:1172
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "^", Right: yyS[yypt-0].expr}
		}
	case 168:
		//line sql.y:1176
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<", Right: yyS[yypt-0].expr}
		}
	case 169:
		//line sql.y:1180
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">", Right: yyS[yypt-0].expr}
		}
	case 170:
		//line sql.y:1184
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "=", Right: yyS[yypt-0].expr}
		}
	case 171:
		//line sql.y:1188
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<=", Right: yyS[yypt-0].expr}
		}
	case 172:
		//line sql.y:1192
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">=", Right: yyS[yypt-0].expr}
		}
	case 173:
		//line sql.y:1196
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "!=", Right: yyS[yypt-0].expr}
		}
	case 174:
		//line sql.y:1200
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].str, Right: yyS[yypt-0].expr}
		}
	case 175:
		//line sql.y:1204
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].str, Expr: yyS[yypt-0].expr}
		}
	case 176:
		//line sql.y:1208
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].str}
		}
	case 177:
		//line sql.y:1212
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: "is distinct from", Right: yyS[yypt-0].expr}
		}
	case 178:
		//line sql.y:1216
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: "is not distinct from", Right: yyS[yypt-0].expr}
		}
	case 179:
		//line sql.y:1220
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 180:
		//line sql.y:1224
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 181:
		//line sql.y:1250
		{
			yyVAL.expr = yyS[yypt-0].columnRef
		}
	case 182:
		//line sql.y:1251
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 183:
		//line sql.y:1259
		{
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-2].expr, Indirection: yyS[yypt-0].indirection}
		}
	case 184:
		//line sql.y:1262
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 185:
		//line sql.y:1263
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 186:
		//line sql.y:1265
		{
			yyVAL.expr = yyS[yypt-0].sqlSelect
		}
	case 187:
		//line sql.y:1269
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-1].sqlSelect, Indirection: yyS[yypt-0].indirection}
		}
	case 188:
		//line sql.y:1274
		{
			yyVAL.expr = ExistsExpr(*yyS[yypt-0].sqlSelect)
		}
	case 189:
		//line sql.y:1278
		{
			yyVAL.expr = ArraySubselect(*yyS[yypt-0].sqlSelect)
		}
	case 190:
		//line sql.y:1281
		{
			yyVAL.expr = ArrayConstructorExpr(yyS[yypt-0].arrayExpr)
		}
	case 191:
		//line sql.y:1285
		{
			yyVAL.expr = yyS[yypt-0].row
		}
	case 192:
		//line sql.y:1289
		{
			yyVAL.expr = yyS[yypt-0].row
		}
	case 193:
		//line sql.y:1300
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-2].str}
		}
	case 194:
		//line sql.y:1304
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-4].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 195:
		//line sql.y:1312
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 196:
		//line sql.y:1316
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Distinct: true, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 197:
		//line sql.y:1320
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-3].str, Star: true}
		}
	case 198:
		//line sql.y:1336
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyS[yypt-2].funcApplication, FilterClause: yyS[yypt-1].filterClause, OverClause: yyS[yypt-0].overClause}
		}
	case 199:
		//line sql.y:1340
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 200:
		//line sql.y:1353
		{
			yyVAL.expr = FuncApplication{Name: "collation for", Args: []FuncArg{{Expr: yyS[yypt-1].expr}}}
		}
	case 201:
		//line sql.y:1357
		{
			yyVAL.expr = FuncExprNoParens("current_date")
		}
	case 202:
		//line sql.y:1361
		{
			yyVAL.expr = FuncExprNoParens("current_time")
		}
	case 203:
		//line sql.y:1365
		{
			yyVAL.expr = FuncApplication{Name: "current_time", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 204:
		//line sql.y:1369
		{
			yyVAL.expr = FuncExprNoParens("current_timestamp")
		}
	case 205:
		//line sql.y:1373
		{
			yyVAL.expr = FuncApplication{Name: "current_timestamp", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 206:
		//line sql.y:1377
		{
			yyVAL.expr = FuncExprNoParens("localtime")
		}
	case 207:
		//line sql.y:1381
		{
			yyVAL.expr = FuncApplication{Name: "localtime", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 208:
		//line sql.y:1385
		{
			yyVAL.expr = FuncExprNoParens("localtimestamp")
		}
	case 209:
		//line sql.y:1389
		{
			yyVAL.expr = FuncApplication{Name: "localtimestamp", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 210:
		//line sql.y:1393
		{
			yyVAL.expr = FuncExprNoParens("current_role")
		}
	case 211:
		//line sql.y:1397
		{
			yyVAL.expr = FuncExprNoParens("current_user")
		}
	case 212:
		//line sql.y:1401
		{
			yyVAL.expr = FuncExprNoParens("session_user")
		}
	case 213:
		//line sql.y:1405
		{
			yyVAL.expr = FuncExprNoParens("user")
		}
	case 214:
		//line sql.y:1409
		{
			yyVAL.expr = FuncExprNoParens("current_catalog")
		}
	case 215:
		//line sql.y:1413
		{
			yyVAL.expr = FuncExprNoParens("current_schema")
		}
	case 216:
		//line sql.y:1417
		{
			yyVAL.expr = CastFunc{Expr: yyS[yypt-3].expr, Type: yyS[yypt-1].pgType}
		}
	case 217:
		//line sql.y:1433
		{
			fa := FuncApplication{Name: "coalesce"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 218:
		//line sql.y:1441
		{
			fa := FuncApplication{Name: "greatest"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 219:
		//line sql.y:1449
		{
			fa := FuncApplication{Name: "least"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 220:
		//line sql.y:1457
		{
			fa := FuncApplication{Name: "xmlconcat"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 221:
		//line sql.y:1483
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 222:
		//line sql.y:1487
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 223:
		//line sql.y:1493
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-2].expr, Join: ",", Right: yyS[yypt-0].expr}
		}
	case 224:
		//line sql.y:1497
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "cross join", Right: yyS[yypt-0].expr}
		}
	case 225:
		//line sql.y:1501
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "natural join", Right: yyS[yypt-0].expr}
		}
	case 226:
		//line sql.y:1505
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-6].expr, Join: "join", Right: yyS[yypt-4].expr, Using: yyS[yypt-1].identifiers}
		}
	case 227:
		//line sql.y:1509
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-4].expr, Join: "join", Right: yyS[yypt-2].expr, On: yyS[yypt-0].expr}
		}
	case 228:
		//line sql.y:1515
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 229:
		//line sql.y:1519
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 230:
		//line sql.y:1522
		{
			yyVAL.fromClause = nil
		}
	case 231:
		//line sql.y:1526
		{
			yyVAL.str = "nowait"
		}
	case 232:
		//line sql.y:1527
		{
			yyVAL.str = "skip locked"
		}
	case 233:
		//line sql.y:1528
		{
			yyVAL.str = ""
		}
	case 234:
		//line sql.y:1533
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 235:
		//line sql.y:1537
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 236:
		//line sql.y:1544
		{
			yyVAL.funcArgs = []FuncArg{yyS[yypt-0].funcArg}
		}
	case 237:
		//line sql.y:1548
		{
			yyVAL.funcArgs = append(yyS[yypt-2].funcArgs, yyS[yypt-0].funcArg)
		}
	case 238:
		//line sql.y:1554
		{
			yyVAL.funcArg = FuncArg{Expr: yyS[yypt-0].expr}
		}
	case 239:
		//line sql.y:1558
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: ":=", Expr: yyS[yypt-0].expr}
		}
	case 240:
		//line sql.y:1562
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: "=>", Expr: yyS[yypt-0].expr}
		}
	case 241:
		//line sql.y:1568
		{
			yyVAL.pgTypes = []PgType{yyS[yypt-0].pgType}
		}
	case 242:
		//line sql.y:1572
		{
			yyVAL.pgTypes = append(yyS[yypt-2].pgTypes, yyS[yypt-0].pgType)
		}
	case 243:
		//line sql.y:1578
		{
			yyVAL.arrayExpr = ArrayExpr(yyS[yypt-1].fields)
		}
	case 244:
		//line sql.y:1582
		{
			yyVAL.arrayExpr = yyS[yypt-1].arrayExpr
		}
	case 245:
		//line sql.y:1586
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 246:
		//line sql.y:1592
		{
			yyVAL.arrayExpr = ArrayExpr{yyS[yypt-0].arrayExpr}
		}
	case 247:
		//line sql.y:1596
		{
			yyVAL.arrayExpr = append(yyS[yypt-2].arrayExpr, yyS[yypt-0].arrayExpr)
		}
	case 248:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 249:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 250:
		//line sql.y:1652
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 251:
		//line sql.y:1656
		{
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 252:
		//line sql.y:1660
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 253:
		//line sql.y:1666
		{
			yyS[yypt-1].sqlSelect.OrderClause = yyS[yypt-0].orderClause
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 254:
		//line sql.y:1671
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-1].lockingClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-0].limitClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 255:
		//line sql.y:1678
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-1].limitClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-0].lockingClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 256:
		//line sql.y:1687
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 257:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 258:
		//line sql.y:1721
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 259:
		//line sql.y:1734
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyS[yypt-7].fields
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 260:
		//line sql.y:1746
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyS[yypt-0].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 261:
		//line sql.y:1752
		{
			ss := &SimpleSelect{}
			ss.Table = yyS[yypt-0].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 262:
		//line sql.y:1758
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 263:
		//line sql.y:1767
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 264:
		//line sql.y:1776
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 265:
		//line sql.y:1800
		{
			yyVAL.placeholder = nil
		}
	case 266:
		//line sql.y:1805
		{
			yyVAL.boolean = true
		}
	case 267:
		//line sql.y:1806
		{
			yyVAL.boolean = false
		}
	case 268:
		//line sql.y:1807
		{
			yyVAL.boolean = false
		}
	case 269:
		//line sql.y:1812
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 270:
		//line sql.y:1813
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 271:
		//line sql.y:1816
		{
			yyVAL.placeholder = nil
		}
	case 272:
		//line sql.y:1817
		{
			yyVAL.placeholder = nil
		}
	case 273:
		//line sql.y:1820
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 274:
		//line sql.y:1821
		{
			yyVAL.orderClause = nil
		}
	case 275:
		//line sql.y:1824
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 276:
		//line sql.y:1828
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyS[yypt-0].orderExpr}}
		}
	case 277:
		//line sql.y:1832
		{
			yyS[yypt-2].orderClause.Exprs = append(yyS[yypt-2].orderClause.Exprs, yyS[yypt-0].orderExpr)
			yyVAL.orderClause = yyS[yypt-2].orderClause
		}
	case 278:
		//line sql.y:1840
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-3].expr, Using: yyS[yypt-1].str, Nulls: yyS[yypt-0].str}
		}
	case 279:
		//line sql.y:1844
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-2].expr, Order: yyS[yypt-1].str, Nulls: yyS[yypt-0].str}
		}
	case 280:
		//line sql.y:1869
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyS[yypt-0].fields}
		}
	case 281:
		//line sql.y:1870
		{
			yyVAL.groupByClause = nil
		}
	case 282:
		//line sql.y:1874
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 283:
		//line sql.y:1878
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 284:
		yyVAL.expr = yyS[yypt-0].expr
	case 285:
		//line sql.y:1891
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 286:
		//line sql.y:1892
		{
			yyVAL.expr = nil
		}
	case 287:
		//line sql.y:1895
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 288:
		//line sql.y:1896
		{
			yyVAL.lockingClause = nil
		}
	case 289:
		//line sql.y:1899
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 290:
		//line sql.y:1900
		{
			yyVAL.lockingClause = nil
		}
	case 291:
		//line sql.y:1904
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyS[yypt-0].lockingItem}}
		}
	case 292:
		//line sql.y:1908
		{
			yyS[yypt-1].lockingClause.Locks = append(yyS[yypt-1].lockingClause.Locks, yyS[yypt-0].lockingItem)
			yyVAL.lockingClause = yyS[yypt-1].lockingClause
		}
	case 293:
		//line sql.y:1915
		{
			yyVAL.lockingItem = LockingItem{Strength: yyS[yypt-2].str, LockedRels: yyS[yypt-1].identifiers, WaitPolicy: yyS[yypt-0].str}
		}
	case 294:
		//line sql.y:1920
		{
			yyVAL.str = "update"
		}
	case 295:
		//line sql.y:1921
		{
			yyVAL.str = "no key update"
		}
	case 296:
		//line sql.y:1922
		{
			yyVAL.str = "share"
		}
	case 297:
		//line sql.y:1923
		{
			yyVAL.str = "key share"
		}
	case 298:
		//line sql.y:1926
		{
			yyVAL.identifiers = yyS[yypt-0].identifiers
		}
	case 299:
		//line sql.y:1927
		{
			yyVAL.identifiers = nil
		}
	case 300:
		//line sql.y:1935
		{
			yyVAL.windowDefinitions = yyS[yypt-0].windowDefinitions
		}
	case 301:
		//line sql.y:1938
		{
			yyVAL.windowDefinitions = nil
		}
	case 302:
		//line sql.y:1942
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyS[yypt-0].windowDefinition}
		}
	case 303:
		//line sql.y:1946
		{
			yyVAL.windowDefinitions = append(yyS[yypt-2].windowDefinitions, yyS[yypt-0].windowDefinition)
		}
	case 304:
		//line sql.y:1952
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyS[yypt-2].str, Specification: yyS[yypt-0].windowSpecification}
		}
	case 305:
		//line sql.y:1958
		{
			spec := yyS[yypt-0].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 306:
		//line sql.y:1963
		{
			yyVAL.overClause = &OverClause{Name: yyS[yypt-0].str}
		}
	case 307:
		//line sql.y:1966
		{
			yyVAL.overClause = nil
		}
	case 308:
		//line sql.y:1970
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyS[yypt-4].str, PartitionClause: yyS[yypt-3].partitionClause, OrderClause: yyS[yypt-2].orderClause, FrameClause: yyS[yypt-1].frameClause}
		}
	case 309:
		//line sql.y:1985
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 310:
		//line sql.y:1986
		{
			yyVAL.str = ""
		}
	case 311:
		//line sql.y:1989
		{
			yyVAL.partitionClause = PartitionClause(yyS[yypt-0].fields)
		}
	case 312:
		//line sql.y:1990
		{
			yyVAL.partitionClause = nil
		}
	case 313:
		//line sql.y:2001
		{
			yyS[yypt-0].frameClause.Mode = "range"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 314:
		//line sql.y:2006
		{
			yyS[yypt-0].frameClause.Mode = "rows"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 315:
		//line sql.y:2011
		{
			yyVAL.frameClause = nil
		}
	case 316:
		//line sql.y:2017
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-0].frameBound}
		}
	case 317:
		//line sql.y:2021
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-2].frameBound, End: yyS[yypt-0].frameBound}
		}
	case 318:
		//line sql.y:2032
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 319:
		//line sql.y:2036
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 320:
		//line sql.y:2040
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 321:
		//line sql.y:2044
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "preceding"}
		}
	case 322:
		//line sql.y:2048
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "following"}
		}
	case 323:
		//line sql.y:2056
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str}
		}
	case 324:
		//line sql.y:2060
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Star: true}
		}
	case 325:
		//line sql.y:2064
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str, Only: true}
		}
	case 326:
		//line sql.y:2068
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Only: true}
		}
	case 327:
		//line sql.y:2076
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-1].expr, Offset: yyS[yypt-0].expr}
		}
	case 328:
		//line sql.y:2080
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr, Offset: yyS[yypt-1].expr}
		}
	case 329:
		//line sql.y:2084
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr}
		}
	case 330:
		//line sql.y:2088
		{
			yyVAL.limitClause = &LimitClause{Offset: yyS[yypt-0].expr}
		}
	case 331:
		yyVAL.limitClause = yyS[yypt-0].limitClause
	case 332:
		//line sql.y:2095
		{
			yyVAL.limitClause = nil
		}
	case 333:
		//line sql.y:2099
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 334:
		//line sql.y:2104
		{
			yyVAL.expr = yyS[yypt-2].expr
		}
	case 335:
		//line sql.y:2110
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 336:
		//line sql.y:2115
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 337:
		//line sql.y:2120
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 338:
		//line sql.y:2122
		{
			yyVAL.expr = nil
		}
	case 339:
		//line sql.y:2127
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 340:
		//line sql.y:2136
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 341:
		//line sql.y:2137
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 342:
		//line sql.y:2138
		{
			yyVAL.expr = IntegerConst("1")
		}
	case 343:
		//line sql.y:2145
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 344:
		//line sql.y:2149
		{
			yyVAL.placeholder = 0
		}
	case 345:
		//line sql.y:2150
		{
			yyVAL.placeholder = 0
		}
	case 346:
		//line sql.y:2153
		{
			yyVAL.placeholder = 0
		}
	case 347:
		//line sql.y:2154
		{
			yyVAL.placeholder = 0
		}
	case 348:
		//line sql.y:2158
		{
			yyVAL.valuesClause = ValuesClause{yyS[yypt-0].valuesRow}
		}
	case 349:
		//line sql.y:2162
		{
			yyVAL.valuesClause = append(yyS[yypt-2].valuesClause, yyS[yypt-0].valuesRow)
		}
	case 350:
		//line sql.y:2179
		{
			yyVAL.whereClause = &WhereClause{Expr: yyS[yypt-0].expr}
		}
	case 351:
		//line sql.y:2180
		{
			yyVAL.whereClause = nil
		}
	case 352:
		//line sql.y:2189
		{
			panic("TODO")
		}
	case 353:
		//line sql.y:2190
		{
			yyVAL.placeholder = nil
		}
	case 354:
		//line sql.y:2195
		{
			yyVAL.filterClause = &FilterClause{Expr: yyS[yypt-1].expr}
		}
	case 355:
		//line sql.y:2198
		{
			yyVAL.filterClause = nil
		}
	case 356:
		//line sql.y:2210
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyS[yypt-1].fields}
		}
	case 357:
		//line sql.y:2214
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 358:
		//line sql.y:2218
		{
			yyVAL.row = Row{Exprs: append(yyS[yypt-3].fields, yyS[yypt-1].expr)}
		}
	case 359:
		//line sql.y:2224
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyS[yypt-1].fields}
		}
	case 360:
		//line sql.y:2228
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 361:
		//line sql.y:2234
		{
			yyVAL.row = Row{Exprs: append(yyS[yypt-3].fields, yyS[yypt-1].expr)}
		}
	case 362:
		//line sql.y:2240
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 363:
		//line sql.y:2241
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 364:
		//line sql.y:2244
		{
			yyVAL.str = "+"
		}
	case 365:
		//line sql.y:2245
		{
			yyVAL.str = "-"
		}
	case 366:
		//line sql.y:2246
		{
			yyVAL.str = "*"
		}
	case 367:
		//line sql.y:2247
		{
			yyVAL.str = "/"
		}
	case 368:
		//line sql.y:2248
		{
			yyVAL.str = "%"
		}
	case 369:
		//line sql.y:2249
		{
			yyVAL.str = "^"
		}
	case 370:
		//line sql.y:2250
		{
			yyVAL.str = "<"
		}
	case 371:
		//line sql.y:2251
		{
			yyVAL.str = ">"
		}
	case 372:
		//line sql.y:2252
		{
			yyVAL.str = "="
		}
	case 373:
		//line sql.y:2253
		{
			yyVAL.str = "<="
		}
	case 374:
		//line sql.y:2254
		{
			yyVAL.str = ">="
		}
	case 375:
		//line sql.y:2255
		{
			yyVAL.str = "<>"
		}
	case 376:
		//line sql.y:2258
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 377:
		//line sql.y:2259
		{
			yyVAL.str = yyS[yypt-1].str
		}
	case 378:
		//line sql.y:2262
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 379:
		//line sql.y:2263
		{
			yyVAL.str = yyS[yypt-1].str
		}
	case 380:
		//line sql.y:2267
		{
			yyVAL.expr = yyS[yypt-0].sqlSelect
		}
	case 381:
		//line sql.y:2271
		{
			yyVAL.expr = ValuesRow(yyS[yypt-1].fields)
		}
	case 382:
		//line sql.y:2284
		{
			yyVAL.expr = CaseExpr{CaseArg: yyS[yypt-3].expr, WhenClauses: yyS[yypt-2].whenClauses, Default: yyS[yypt-1].expr}
		}
	case 383:
		//line sql.y:2291
		{
			yyVAL.whenClauses = []WhenClause{yyS[yypt-0].whenClause}
		}
	case 384:
		//line sql.y:2295
		{
			yyVAL.whenClauses = append(yyS[yypt-1].whenClauses, yyS[yypt-0].whenClause)
		}
	case 385:
		//line sql.y:2301
		{
			yyVAL.whenClause = WhenClause{When: yyS[yypt-2].expr, Then: yyS[yypt-0].expr}
		}
	case 386:
		//line sql.y:2306
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 387:
		//line sql.y:2307
		{
			yyVAL.expr = nil
		}
	case 388:
		//line sql.y:2310
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 389:
		//line sql.y:2311
		{
			yyVAL.expr = nil
		}
	case 390:
		//line sql.y:2315
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-0].str}
		}
	case 391:
		//line sql.y:2319
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-1].str, Indirection: yyS[yypt-0].indirection}
		}
	case 392:
		//line sql.y:2327
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyS[yypt-0].str}
		}
	case 393:
		//line sql.y:2331
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 394:
		//line sql.y:2335
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-1].expr}
		}
	case 395:
		//line sql.y:2339
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-3].expr, UpperSubscript: yyS[yypt-1].expr}
		}
	case 396:
		//line sql.y:2344
		{
			yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
		}
	case 397:
		//line sql.y:2345
		{
			yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
		}
	case 398:
		//line sql.y:2348
		{
			yyVAL.indirection = nil
		}
	case 399:
		//line sql.y:2350
		{
			if yyS[yypt-1].indirection != nil {
				yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
			}
		}
	case 400:
		//line sql.y:2360
		{
			yyVAL.placeholder = nil
		}
	case 401:
		//line sql.y:2364
		{
			yyVAL.placeholder = nil
		}
	case 402:
		//line sql.y:2376
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 403:
		//line sql.y:2377
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 404:
		//line sql.y:2381
		{
			yyVAL.valuesRow = ValuesRow{yyS[yypt-0].expr}
		}
	case 405:
		//line sql.y:2385
		{
			yyVAL.valuesRow = append(yyS[yypt-2].valuesRow, yyS[yypt-0].expr)
		}
	case 406:
		//line sql.y:2396
		{
			yyVAL.valuesRow = yyS[yypt-1].valuesRow
		}
	case 407:
		//line sql.y:2407
		{
			yyVAL.fields = yyS[yypt-0].fields
		}
	case 408:
		//line sql.y:2408
		{
			yyVAL.fields = nil
		}
	case 409:
		//line sql.y:2411
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 410:
		//line sql.y:2413
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 411:
		//line sql.y:2419
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 412:
		//line sql.y:2423
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 413:
		yyVAL.expr = yyS[yypt-0].expr
	case 414:
		//line sql.y:2428
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 415:
		//line sql.y:2442
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 416:
		//line sql.y:2446
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 417:
		//line sql.y:2459
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 418:
		//line sql.y:2491
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 419:
		//line sql.y:2493
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 420:
		//line sql.y:2498
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 421:
		//line sql.y:2501
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 422:
		//line sql.y:2514
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 423:
		//line sql.y:2518
		{
			panic("TODO")
		}
	case 424:
		//line sql.y:2528
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 425:
		//line sql.y:2532
		{
			yyVAL.expr = FloatConst(yyS[yypt-0].str)
		}
	case 426:
		//line sql.y:2536
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 427:
		//line sql.y:2544
		{
			yyVAL.expr = ConstTypeExpr{Typename: PgType{Name: AnyName{yyS[yypt-1].str}}, Expr: yyS[yypt-0].expr}
		}
	case 428:
		//line sql.y:2548
		{
			pgType := PgType{Name: AnyName{yyS[yypt-5].str}}

			/*
			 * We must use func_arg_list and opt_sort_clause in the
			 * production to avoid reduce/reduce conflicts, but we
			 * don't actually wish to allow NamedArgExpr in this
			 * context, nor ORDER BY.
			 */

			for _, arg := range yyS[yypt-3].funcArgs {
				if arg.Name != "" {
					yylex.Error("type modifier cannot have parameter name")
				}

				pgType.TypeMods = append(pgType.TypeMods, Expr(arg))
			}

			if yyS[yypt-2].orderClause != nil {
				yylex.Error("type modifier cannot have ORDER BY")
			}

			yyVAL.expr = ConstTypeExpr{Typename: pgType, Expr: yyS[yypt-0].expr}
		}
	case 429:
		//line sql.y:2572
		{
			yyVAL.expr = ConstTypeExpr{Typename: yyS[yypt-1].pgType, Expr: yyS[yypt-0].expr}
		}
	case 430:
		//line sql.y:2576
		{
			yyVAL.expr = ConstIntervalExpr{Value: yyS[yypt-1].expr, OptInterval: yyS[yypt-0].optInterval}
		}
	case 431:
		//line sql.y:2580
		{
			yyVAL.expr = ConstIntervalExpr{Precision: yyS[yypt-2].iconst, Value: yyS[yypt-0].expr}
		}
	case 432:
		//line sql.y:2584
		{
			yyVAL.expr = BoolConst(true)
		}
	case 433:
		//line sql.y:2588
		{
			yyVAL.expr = BoolConst(false)
		}
	case 434:
		//line sql.y:2592
		{
			yyVAL.expr = NullConst{}
		}
	case 435:
		//line sql.y:2596
		{
			yyVAL.iconst = IntegerConst(yyS[yypt-0].str)
		}
	case 436:
		//line sql.y:2597
		{
			yyVAL.expr = StringConst(yyS[yypt-0].str)
		}
	case 437:
		//line sql.y:2600
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 438:
		//line sql.y:2601
		{
			yyVAL.expr = "+" + yyS[yypt-0].iconst
		}
	case 439:
		//line sql.y:2602
		{
			yyVAL.expr = "-" + yyS[yypt-0].iconst
		}
	case 440:
		yyVAL.str = yyS[yypt-0].str
	case 441:
		yyVAL.str = yyS[yypt-0].str
	case 442:
		yyVAL.str = yyS[yypt-0].str
	case 443:
		yyVAL.str = yyS[yypt-0].str
	case 444:
		yyVAL.str = yyS[yypt-0].str
	case 445:
		yyVAL.str = yyS[yypt-0].str
	case 450:
		//line sql.y:2641
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 451:
		//line sql.y:2642
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 452:
		//line sql.y:2643
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 453:
		//line sql.y:2644
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 454:
		//line sql.y:2645
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 455:
		yyVAL.str = yyS[yypt-0].str
	case 456:
		yyVAL.str = yyS[yypt-0].str
	case 457:
		yyVAL.str = yyS[yypt-0].str
	case 458:
		yyVAL.str = yyS[yypt-0].str
	case 459:
		yyVAL.str = yyS[yypt-0].str
	case 460:
		yyVAL.str = yyS[yypt-0].str
	case 461:
		yyVAL.str = yyS[yypt-0].str
	case 462:
		yyVAL.str = yyS[yypt-0].str
	case 463:
		yyVAL.str = yyS[yypt-0].str
	case 464:
		yyVAL.str = yyS[yypt-0].str
	case 465:
		yyVAL.str = yyS[yypt-0].str
	case 466:
		yyVAL.str = yyS[yypt-0].str
	case 467:
		yyVAL.str = yyS[yypt-0].str
	case 468:
		yyVAL.str = yyS[yypt-0].str
	case 469:
		yyVAL.str = yyS[yypt-0].str
	case 470:
		yyVAL.str = yyS[yypt-0].str
	case 471:
		yyVAL.str = yyS[yypt-0].str
	case 472:
		yyVAL.str = yyS[yypt-0].str
	case 473:
		yyVAL.str = yyS[yypt-0].str
	case 474:
		yyVAL.str = yyS[yypt-0].str
	case 475:
		yyVAL.str = yyS[yypt-0].str
	case 476:
		yyVAL.str = yyS[yypt-0].str
	case 477:
		yyVAL.str = yyS[yypt-0].str
	case 478:
		yyVAL.str = yyS[yypt-0].str
	case 479:
		yyVAL.str = yyS[yypt-0].str
	case 480:
		yyVAL.str = yyS[yypt-0].str
	case 481:
		yyVAL.str = yyS[yypt-0].str
	case 482:
		yyVAL.str = yyS[yypt-0].str
	case 483:
		yyVAL.str = yyS[yypt-0].str
	case 484:
		yyVAL.str = yyS[yypt-0].str
	case 485:
		yyVAL.str = yyS[yypt-0].str
	case 486:
		yyVAL.str = yyS[yypt-0].str
	case 487:
		yyVAL.str = yyS[yypt-0].str
	case 488:
		yyVAL.str = yyS[yypt-0].str
	case 489:
		yyVAL.str = yyS[yypt-0].str
	case 490:
		yyVAL.str = yyS[yypt-0].str
	case 491:
		yyVAL.str = yyS[yypt-0].str
	case 492:
		yyVAL.str = yyS[yypt-0].str
	case 493:
		yyVAL.str = yyS[yypt-0].str
	case 494:
		yyVAL.str = yyS[yypt-0].str
	case 495:
		yyVAL.str = yyS[yypt-0].str
	case 496:
		yyVAL.str = yyS[yypt-0].str
	case 497:
		yyVAL.str = yyS[yypt-0].str
	case 498:
		yyVAL.str = yyS[yypt-0].str
	case 499:
		yyVAL.str = yyS[yypt-0].str
	case 500:
		yyVAL.str = yyS[yypt-0].str
	case 501:
		yyVAL.str = yyS[yypt-0].str
	case 502:
		yyVAL.str = yyS[yypt-0].str
	case 503:
		yyVAL.str = yyS[yypt-0].str
	case 504:
		yyVAL.str = yyS[yypt-0].str
	case 505:
		yyVAL.str = yyS[yypt-0].str
	case 506:
		yyVAL.str = yyS[yypt-0].str
	case 507:
		yyVAL.str = yyS[yypt-0].str
	case 508:
		yyVAL.str = yyS[yypt-0].str
	case 509:
		yyVAL.str = yyS[yypt-0].str
	case 510:
		yyVAL.str = yyS[yypt-0].str
	case 511:
		yyVAL.str = yyS[yypt-0].str
	case 512:
		yyVAL.str = yyS[yypt-0].str
	case 513:
		yyVAL.str = yyS[yypt-0].str
	case 514:
		yyVAL.str = yyS[yypt-0].str
	case 515:
		yyVAL.str = yyS[yypt-0].str
	case 516:
		yyVAL.str = yyS[yypt-0].str
	case 517:
		yyVAL.str = yyS[yypt-0].str
	case 518:
		yyVAL.str = yyS[yypt-0].str
	case 519:
		yyVAL.str = yyS[yypt-0].str
	case 520:
		yyVAL.str = yyS[yypt-0].str
	case 521:
		yyVAL.str = yyS[yypt-0].str
	case 522:
		yyVAL.str = yyS[yypt-0].str
	case 523:
		yyVAL.str = yyS[yypt-0].str
	case 524:
		yyVAL.str = yyS[yypt-0].str
	case 525:
		yyVAL.str = yyS[yypt-0].str
	case 526:
		yyVAL.str = yyS[yypt-0].str
	case 527:
		yyVAL.str = yyS[yypt-0].str
	case 528:
		yyVAL.str = yyS[yypt-0].str
	case 529:
		yyVAL.str = yyS[yypt-0].str
	case 530:
		yyVAL.str = yyS[yypt-0].str
	case 531:
		yyVAL.str = yyS[yypt-0].str
	case 532:
		yyVAL.str = yyS[yypt-0].str
	case 533:
		yyVAL.str = yyS[yypt-0].str
	case 534:
		yyVAL.str = yyS[yypt-0].str
	case 535:
		yyVAL.str = yyS[yypt-0].str
	case 536:
		yyVAL.str = yyS[yypt-0].str
	case 537:
		yyVAL.str = yyS[yypt-0].str
	case 538:
		yyVAL.str = yyS[yypt-0].str
	case 539:
		yyVAL.str = yyS[yypt-0].str
	case 540:
		yyVAL.str = yyS[yypt-0].str
	case 541:
		yyVAL.str = yyS[yypt-0].str
	case 542:
		yyVAL.str = yyS[yypt-0].str
	case 543:
		yyVAL.str = yyS[yypt-0].str
	case 544:
		yyVAL.str = yyS[yypt-0].str
	case 545:
		yyVAL.str = yyS[yypt-0].str
	case 546:
		yyVAL.str = yyS[yypt-0].str
	case 547:
		yyVAL.str = yyS[yypt-0].str
	case 548:
		yyVAL.str = yyS[yypt-0].str
	case 549:
		yyVAL.str = yyS[yypt-0].str
	case 550:
		yyVAL.str = yyS[yypt-0].str
	case 551:
		yyVAL.str = yyS[yypt-0].str
	case 552:
		yyVAL.str = yyS[yypt-0].str
	case 553:
		yyVAL.str = yyS[yypt-0].str
	case 554:
		yyVAL.str = yyS[yypt-0].str
	case 555:
		yyVAL.str = yyS[yypt-0].str
	case 556:
		yyVAL.str = yyS[yypt-0].str
	case 557:
		yyVAL.str = yyS[yypt-0].str
	case 558:
		yyVAL.str = yyS[yypt-0].str
	case 559:
		yyVAL.str = yyS[yypt-0].str
	case 560:
		yyVAL.str = yyS[yypt-0].str
	case 561:
		yyVAL.str = yyS[yypt-0].str
	case 562:
		yyVAL.str = yyS[yypt-0].str
	case 563:
		yyVAL.str = yyS[yypt-0].str
	case 564:
		yyVAL.str = yyS[yypt-0].str
	case 565:
		yyVAL.str = yyS[yypt-0].str
	case 566:
		yyVAL.str = yyS[yypt-0].str
	case 567:
		yyVAL.str = yyS[yypt-0].str
	case 568:
		yyVAL.str = yyS[yypt-0].str
	case 569:
		yyVAL.str = yyS[yypt-0].str
	case 570:
		yyVAL.str = yyS[yypt-0].str
	case 571:
		yyVAL.str = yyS[yypt-0].str
	case 572:
		yyVAL.str = yyS[yypt-0].str
	case 573:
		yyVAL.str = yyS[yypt-0].str
	case 574:
		yyVAL.str = yyS[yypt-0].str
	case 575:
		yyVAL.str = yyS[yypt-0].str
	case 576:
		yyVAL.str = yyS[yypt-0].str
	case 577:
		yyVAL.str = yyS[yypt-0].str
	case 578:
		yyVAL.str = yyS[yypt-0].str
	case 579:
		yyVAL.str = yyS[yypt-0].str
	case 580:
		yyVAL.str = yyS[yypt-0].str
	case 581:
		yyVAL.str = yyS[yypt-0].str
	case 582:
		yyVAL.str = yyS[yypt-0].str
	case 583:
		yyVAL.str = yyS[yypt-0].str
	case 584:
		yyVAL.str = yyS[yypt-0].str
	case 585:
		yyVAL.str = yyS[yypt-0].str
	case 586:
		yyVAL.str = yyS[yypt-0].str
	case 587:
		yyVAL.str = yyS[yypt-0].str
	case 588:
		yyVAL.str = yyS[yypt-0].str
	case 589:
		yyVAL.str = yyS[yypt-0].str
	case 590:
		yyVAL.str = yyS[yypt-0].str
	case 591:
		yyVAL.str = yyS[yypt-0].str
	case 592:
		yyVAL.str = yyS[yypt-0].str
	case 593:
		yyVAL.str = yyS[yypt-0].str
	case 594:
		yyVAL.str = yyS[yypt-0].str
	case 595:
		yyVAL.str = yyS[yypt-0].str
	case 596:
		yyVAL.str = yyS[yypt-0].str
	case 597:
		yyVAL.str = yyS[yypt-0].str
	case 598:
		yyVAL.str = yyS[yypt-0].str
	case 599:
		yyVAL.str = yyS[yypt-0].str
	case 600:
		yyVAL.str = yyS[yypt-0].str
	case 601:
		yyVAL.str = yyS[yypt-0].str
	case 602:
		yyVAL.str = yyS[yypt-0].str
	case 603:
		yyVAL.str = yyS[yypt-0].str
	case 604:
		yyVAL.str = yyS[yypt-0].str
	case 605:
		yyVAL.str = yyS[yypt-0].str
	case 606:
		yyVAL.str = yyS[yypt-0].str
	case 607:
		yyVAL.str = yyS[yypt-0].str
	case 608:
		yyVAL.str = yyS[yypt-0].str
	case 609:
		yyVAL.str = yyS[yypt-0].str
	case 610:
		yyVAL.str = yyS[yypt-0].str
	case 611:
		yyVAL.str = yyS[yypt-0].str
	case 612:
		yyVAL.str = yyS[yypt-0].str
	case 613:
		yyVAL.str = yyS[yypt-0].str
	case 614:
		yyVAL.str = yyS[yypt-0].str
	case 615:
		yyVAL.str = yyS[yypt-0].str
	case 616:
		yyVAL.str = yyS[yypt-0].str
	case 617:
		yyVAL.str = yyS[yypt-0].str
	case 618:
		yyVAL.str = yyS[yypt-0].str
	case 619:
		yyVAL.str = yyS[yypt-0].str
	case 620:
		yyVAL.str = yyS[yypt-0].str
	case 621:
		yyVAL.str = yyS[yypt-0].str
	case 622:
		yyVAL.str = yyS[yypt-0].str
	case 623:
		yyVAL.str = yyS[yypt-0].str
	case 624:
		yyVAL.str = yyS[yypt-0].str
	case 625:
		yyVAL.str = yyS[yypt-0].str
	case 626:
		yyVAL.str = yyS[yypt-0].str
	case 627:
		yyVAL.str = yyS[yypt-0].str
	case 628:
		yyVAL.str = yyS[yypt-0].str
	case 629:
		yyVAL.str = yyS[yypt-0].str
	case 630:
		yyVAL.str = yyS[yypt-0].str
	case 631:
		yyVAL.str = yyS[yypt-0].str
	case 632:
		yyVAL.str = yyS[yypt-0].str
	case 633:
		yyVAL.str = yyS[yypt-0].str
	case 634:
		yyVAL.str = yyS[yypt-0].str
	case 635:
		yyVAL.str = yyS[yypt-0].str
	case 636:
		yyVAL.str = yyS[yypt-0].str
	case 637:
		yyVAL.str = yyS[yypt-0].str
	case 638:
		yyVAL.str = yyS[yypt-0].str
	case 639:
		yyVAL.str = yyS[yypt-0].str
	case 640:
		yyVAL.str = yyS[yypt-0].str
	case 641:
		yyVAL.str = yyS[yypt-0].str
	case 642:
		yyVAL.str = yyS[yypt-0].str
	case 643:
		yyVAL.str = yyS[yypt-0].str
	case 644:
		yyVAL.str = yyS[yypt-0].str
	case 645:
		yyVAL.str = yyS[yypt-0].str
	case 646:
		yyVAL.str = yyS[yypt-0].str
	case 647:
		yyVAL.str = yyS[yypt-0].str
	case 648:
		yyVAL.str = yyS[yypt-0].str
	case 649:
		yyVAL.str = yyS[yypt-0].str
	case 650:
		yyVAL.str = yyS[yypt-0].str
	case 651:
		yyVAL.str = yyS[yypt-0].str
	case 652:
		yyVAL.str = yyS[yypt-0].str
	case 653:
		yyVAL.str = yyS[yypt-0].str
	case 654:
		yyVAL.str = yyS[yypt-0].str
	case 655:
		yyVAL.str = yyS[yypt-0].str
	case 656:
		yyVAL.str = yyS[yypt-0].str
	case 657:
		yyVAL.str = yyS[yypt-0].str
	case 658:
		yyVAL.str = yyS[yypt-0].str
	case 659:
		yyVAL.str = yyS[yypt-0].str
	case 660:
		yyVAL.str = yyS[yypt-0].str
	case 661:
		yyVAL.str = yyS[yypt-0].str
	case 662:
		yyVAL.str = yyS[yypt-0].str
	case 663:
		yyVAL.str = yyS[yypt-0].str
	case 664:
		yyVAL.str = yyS[yypt-0].str
	case 665:
		yyVAL.str = yyS[yypt-0].str
	case 666:
		yyVAL.str = yyS[yypt-0].str
	case 667:
		yyVAL.str = yyS[yypt-0].str
	case 668:
		yyVAL.str = yyS[yypt-0].str
	case 669:
		yyVAL.str = yyS[yypt-0].str
	case 670:
		yyVAL.str = yyS[yypt-0].str
	case 671:
		yyVAL.str = yyS[yypt-0].str
	case 672:
		yyVAL.str = yyS[yypt-0].str
	case 673:
		yyVAL.str = yyS[yypt-0].str
	case 674:
		yyVAL.str = yyS[yypt-0].str
	case 675:
		yyVAL.str = yyS[yypt-0].str
	case 676:
		yyVAL.str = yyS[yypt-0].str
	case 677:
		yyVAL.str = yyS[yypt-0].str
	case 678:
		yyVAL.str = yyS[yypt-0].str
	case 679:
		yyVAL.str = yyS[yypt-0].str
	case 680:
		yyVAL.str = yyS[yypt-0].str
	case 681:
		yyVAL.str = yyS[yypt-0].str
	case 682:
		yyVAL.str = yyS[yypt-0].str
	case 683:
		yyVAL.str = yyS[yypt-0].str
	case 684:
		yyVAL.str = yyS[yypt-0].str
	case 685:
		yyVAL.str = yyS[yypt-0].str
	case 686:
		yyVAL.str = yyS[yypt-0].str
	case 687:
		yyVAL.str = yyS[yypt-0].str
	case 688:
		yyVAL.str = yyS[yypt-0].str
	case 689:
		yyVAL.str = yyS[yypt-0].str
	case 690:
		yyVAL.str = yyS[yypt-0].str
	case 691:
		yyVAL.str = yyS[yypt-0].str
	case 692:
		yyVAL.str = yyS[yypt-0].str
	case 693:
		yyVAL.str = yyS[yypt-0].str
	case 694:
		yyVAL.str = yyS[yypt-0].str
	case 695:
		yyVAL.str = yyS[yypt-0].str
	case 696:
		yyVAL.str = yyS[yypt-0].str
	case 697:
		yyVAL.str = yyS[yypt-0].str
	case 698:
		yyVAL.str = yyS[yypt-0].str
	case 699:
		yyVAL.str = yyS[yypt-0].str
	case 700:
		yyVAL.str = yyS[yypt-0].str
	case 701:
		yyVAL.str = yyS[yypt-0].str
	case 702:
		yyVAL.str = yyS[yypt-0].str
	case 703:
		yyVAL.str = yyS[yypt-0].str
	case 704:
		yyVAL.str = yyS[yypt-0].str
	case 705:
		yyVAL.str = yyS[yypt-0].str
	case 706:
		yyVAL.str = yyS[yypt-0].str
	case 707:
		yyVAL.str = yyS[yypt-0].str
	case 708:
		yyVAL.str = yyS[yypt-0].str
	case 709:
		yyVAL.str = yyS[yypt-0].str
	case 710:
		yyVAL.str = yyS[yypt-0].str
	case 711:
		yyVAL.str = yyS[yypt-0].str
	case 712:
		yyVAL.str = yyS[yypt-0].str
	case 713:
		yyVAL.str = yyS[yypt-0].str
	case 714:
		yyVAL.str = yyS[yypt-0].str
	case 715:
		yyVAL.str = yyS[yypt-0].str
	case 716:
		yyVAL.str = yyS[yypt-0].str
	case 717:
		yyVAL.str = yyS[yypt-0].str
	case 718:
		yyVAL.str = yyS[yypt-0].str
	case 719:
		yyVAL.str = yyS[yypt-0].str
	case 720:
		yyVAL.str = yyS[yypt-0].str
	case 721:
		yyVAL.str = yyS[yypt-0].str
	case 722:
		yyVAL.str = yyS[yypt-0].str
	case 723:
		yyVAL.str = yyS[yypt-0].str
	case 724:
		yyVAL.str = yyS[yypt-0].str
	case 725:
		yyVAL.str = yyS[yypt-0].str
	case 726:
		yyVAL.str = yyS[yypt-0].str
	case 727:
		yyVAL.str = yyS[yypt-0].str
	case 728:
		yyVAL.str = yyS[yypt-0].str
	case 729:
		yyVAL.str = yyS[yypt-0].str
	case 730:
		yyVAL.str = yyS[yypt-0].str
	case 731:
		yyVAL.str = yyS[yypt-0].str
	case 732:
		yyVAL.str = yyS[yypt-0].str
	case 733:
		yyVAL.str = yyS[yypt-0].str
	case 734:
		yyVAL.str = yyS[yypt-0].str
	case 735:
		yyVAL.str = yyS[yypt-0].str
	case 736:
		yyVAL.str = yyS[yypt-0].str
	case 737:
		yyVAL.str = yyS[yypt-0].str
	case 738:
		yyVAL.str = yyS[yypt-0].str
	case 739:
		yyVAL.str = yyS[yypt-0].str
	case 740:
		yyVAL.str = yyS[yypt-0].str
	case 741:
		yyVAL.str = yyS[yypt-0].str
	case 742:
		yyVAL.str = yyS[yypt-0].str
	case 743:
		yyVAL.str = yyS[yypt-0].str
	case 744:
		yyVAL.str = yyS[yypt-0].str
	case 745:
		yyVAL.str = yyS[yypt-0].str
	case 746:
		yyVAL.str = yyS[yypt-0].str
	case 747:
		yyVAL.str = yyS[yypt-0].str
	case 748:
		yyVAL.str = yyS[yypt-0].str
	case 749:
		yyVAL.str = yyS[yypt-0].str
	case 750:
		yyVAL.str = yyS[yypt-0].str
	case 751:
		yyVAL.str = yyS[yypt-0].str
	case 752:
		yyVAL.str = yyS[yypt-0].str
	case 753:
		yyVAL.str = yyS[yypt-0].str
	case 754:
		yyVAL.str = yyS[yypt-0].str
	case 755:
		yyVAL.str = yyS[yypt-0].str
	case 756:
		yyVAL.str = yyS[yypt-0].str
	case 757:
		yyVAL.str = yyS[yypt-0].str
	case 758:
		yyVAL.str = yyS[yypt-0].str
	case 759:
		yyVAL.str = yyS[yypt-0].str
	case 760:
		yyVAL.str = yyS[yypt-0].str
	case 761:
		yyVAL.str = yyS[yypt-0].str
	case 762:
		yyVAL.str = yyS[yypt-0].str
	case 763:
		yyVAL.str = yyS[yypt-0].str
	case 764:
		yyVAL.str = yyS[yypt-0].str
	case 765:
		yyVAL.str = yyS[yypt-0].str
	case 766:
		yyVAL.str = yyS[yypt-0].str
	case 767:
		yyVAL.str = yyS[yypt-0].str
	case 768:
		yyVAL.str = yyS[yypt-0].str
	case 769:
		yyVAL.str = yyS[yypt-0].str
	case 770:
		yyVAL.str = yyS[yypt-0].str
	case 771:
		yyVAL.str = yyS[yypt-0].str
	case 772:
		yyVAL.str = yyS[yypt-0].str
	case 773:
		yyVAL.str = yyS[yypt-0].str
	case 774:
		yyVAL.str = yyS[yypt-0].str
	case 775:
		yyVAL.str = yyS[yypt-0].str
	case 776:
		yyVAL.str = yyS[yypt-0].str
	case 777:
		yyVAL.str = yyS[yypt-0].str
	case 778:
		yyVAL.str = yyS[yypt-0].str
	case 779:
		yyVAL.str = yyS[yypt-0].str
	case 780:
		yyVAL.str = yyS[yypt-0].str
	case 781:
		yyVAL.str = yyS[yypt-0].str
	case 782:
		yyVAL.str = yyS[yypt-0].str
	case 783:
		yyVAL.str = yyS[yypt-0].str
	case 784:
		yyVAL.str = yyS[yypt-0].str
	case 785:
		yyVAL.str = yyS[yypt-0].str
	case 786:
		yyVAL.str = yyS[yypt-0].str
	case 787:
		yyVAL.str = yyS[yypt-0].str
	case 788:
		yyVAL.str = yyS[yypt-0].str
	case 789:
		yyVAL.str = yyS[yypt-0].str
	case 790:
		yyVAL.str = yyS[yypt-0].str
	case 791:
		yyVAL.str = yyS[yypt-0].str
	case 792:
		yyVAL.str = yyS[yypt-0].str
	case 793:
		yyVAL.str = yyS[yypt-0].str
	case 794:
		yyVAL.str = yyS[yypt-0].str
	case 795:
		yyVAL.str = yyS[yypt-0].str
	case 796:
		yyVAL.str = yyS[yypt-0].str
	case 797:
		yyVAL.str = yyS[yypt-0].str
	case 798:
		yyVAL.str = yyS[yypt-0].str
	case 799:
		yyVAL.str = yyS[yypt-0].str
	case 800:
		yyVAL.str = yyS[yypt-0].str
	case 801:
		yyVAL.str = yyS[yypt-0].str
	case 802:
		yyVAL.str = yyS[yypt-0].str
	case 803:
		yyVAL.str = yyS[yypt-0].str
	case 804:
		yyVAL.str = yyS[yypt-0].str
	case 805:
		yyVAL.str = yyS[yypt-0].str
	case 806:
		yyVAL.str = yyS[yypt-0].str
	case 807:
		yyVAL.str = yyS[yypt-0].str
	case 808:
		yyVAL.str = yyS[yypt-0].str
	case 809:
		yyVAL.str = yyS[yypt-0].str
	case 810:
		yyVAL.str = yyS[yypt-0].str
	case 811:
		yyVAL.str = yyS[yypt-0].str
	case 812:
		yyVAL.str = yyS[yypt-0].str
	case 813:
		yyVAL.str = yyS[yypt-0].str
	case 814:
		yyVAL.str = yyS[yypt-0].str
	case 815:
		yyVAL.str = yyS[yypt-0].str
	case 816:
		yyVAL.str = yyS[yypt-0].str
	case 817:
		yyVAL.str = yyS[yypt-0].str
	case 818:
		yyVAL.str = yyS[yypt-0].str
	case 819:
		yyVAL.str = yyS[yypt-0].str
	case 820:
		yyVAL.str = yyS[yypt-0].str
	case 821:
		yyVAL.str = yyS[yypt-0].str
	case 822:
		yyVAL.str = yyS[yypt-0].str
	case 823:
		yyVAL.str = yyS[yypt-0].str
	case 824:
		yyVAL.str = yyS[yypt-0].str
	case 825:
		yyVAL.str = yyS[yypt-0].str
	case 826:
		yyVAL.str = yyS[yypt-0].str
	case 827:
		yyVAL.str = yyS[yypt-0].str
	case 828:
		yyVAL.str = yyS[yypt-0].str
	case 829:
		yyVAL.str = yyS[yypt-0].str
	case 830:
		yyVAL.str = yyS[yypt-0].str
	case 831:
		yyVAL.str = yyS[yypt-0].str
	case 832:
		yyVAL.str = yyS[yypt-0].str
	case 833:
		yyVAL.str = yyS[yypt-0].str
	case 834:
		yyVAL.str = yyS[yypt-0].str
	case 835:
		yyVAL.str = yyS[yypt-0].str
	case 836:
		yyVAL.str = yyS[yypt-0].str
	case 837:
		yyVAL.str = yyS[yypt-0].str
	case 838:
		yyVAL.str = yyS[yypt-0].str
	case 839:
		yyVAL.str = yyS[yypt-0].str
	case 840:
		yyVAL.str = yyS[yypt-0].str
	case 841:
		yyVAL.str = yyS[yypt-0].str
	case 842:
		yyVAL.str = yyS[yypt-0].str
	case 843:
		yyVAL.str = yyS[yypt-0].str
	case 844:
		yyVAL.str = yyS[yypt-0].str
	case 845:
		yyVAL.str = yyS[yypt-0].str
	case 846:
		yyVAL.str = yyS[yypt-0].str
	case 847:
		yyVAL.str = yyS[yypt-0].str
	case 848:
		yyVAL.str = yyS[yypt-0].str
	case 849:
		yyVAL.str = yyS[yypt-0].str
	case 850:
		yyVAL.str = yyS[yypt-0].str
	case 851:
		yyVAL.str = yyS[yypt-0].str
	case 852:
		yyVAL.str = yyS[yypt-0].str
	case 853:
		yyVAL.str = yyS[yypt-0].str
	case 854:
		yyVAL.str = yyS[yypt-0].str
	case 855:
		yyVAL.str = yyS[yypt-0].str
	case 856:
		yyVAL.str = yyS[yypt-0].str
	case 857:
		yyVAL.str = yyS[yypt-0].str
	case 858:
		yyVAL.str = yyS[yypt-0].str
	case 859:
		yyVAL.str = yyS[yypt-0].str
	case 860:
		yyVAL.str = yyS[yypt-0].str
	case 861:
		yyVAL.str = yyS[yypt-0].str
	case 862:
		yyVAL.str = yyS[yypt-0].str
	case 863:
		yyVAL.str = yyS[yypt-0].str
	case 864:
		yyVAL.str = yyS[yypt-0].str
	case 865:
		yyVAL.str = yyS[yypt-0].str
	case 866:
		yyVAL.str = yyS[yypt-0].str
	case 867:
		yyVAL.str = yyS[yypt-0].str
	case 868:
		yyVAL.str = yyS[yypt-0].str
	case 869:
		yyVAL.str = yyS[yypt-0].str
	case 870:
		yyVAL.str = yyS[yypt-0].str
	}
	goto yystack /* stack new state and value */
}

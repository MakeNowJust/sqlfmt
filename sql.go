//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerLiteral
	optArrayBounds      []IntegerLiteral
}

const any_operator = 57346
const IDENT = 57347
const FCONST = 57348
const SCONST = 57349
const BCONST = 57350
const XCONST = 57351
const Op = 57352
const ICONST = 57353
const PARAM = 57354
const TYPECAST = 57355
const DOT_DOT = 57356
const COLON_EQUALS = 57357
const EQUALS_GREATER = 57358
const LESS_EQUALS = 57359
const GREATER_EQUALS = 57360
const NOT_EQUALS = 57361
const ABORT_P = 57362
const ABSOLUTE_P = 57363
const ACCESS = 57364
const ACTION = 57365
const ADD_P = 57366
const ADMIN = 57367
const AFTER = 57368
const AGGREGATE = 57369
const ALL = 57370
const ALSO = 57371
const ALTER = 57372
const ALWAYS = 57373
const ANALYSE = 57374
const ANALYZE = 57375
const AND = 57376
const ANY = 57377
const ARRAY = 57378
const AS = 57379
const ASC = 57380
const ASSERTION = 57381
const ASSIGNMENT = 57382
const ASYMMETRIC = 57383
const AT = 57384
const ATTRIBUTE = 57385
const AUTHORIZATION = 57386
const BACKWARD = 57387
const BEFORE = 57388
const BEGIN_P = 57389
const BETWEEN = 57390
const BIGINT = 57391
const BINARY = 57392
const BIT = 57393
const BOOLEAN_P = 57394
const BOTH = 57395
const BY = 57396
const CACHE = 57397
const CALLED = 57398
const CASCADE = 57399
const CASCADED = 57400
const CASE = 57401
const CAST = 57402
const CATALOG_P = 57403
const CHAIN = 57404
const CHAR_P = 57405
const CHARACTER = 57406
const CHARACTERISTICS = 57407
const CHECK = 57408
const CHECKPOINT = 57409
const CLASS = 57410
const CLOSE = 57411
const CLUSTER = 57412
const COALESCE = 57413
const COLLATE = 57414
const COLLATION = 57415
const COLUMN = 57416
const COMMENT = 57417
const COMMENTS = 57418
const COMMIT = 57419
const COMMITTED = 57420
const CONCURRENTLY = 57421
const CONFIGURATION = 57422
const CONFLICT = 57423
const CONNECTION = 57424
const CONSTRAINT = 57425
const CONSTRAINTS = 57426
const CONTENT_P = 57427
const CONTINUE_P = 57428
const CONVERSION_P = 57429
const COPY = 57430
const COST = 57431
const CREATE = 57432
const CROSS = 57433
const CSV = 57434
const CUBE = 57435
const CURRENT_P = 57436
const CURRENT_CATALOG = 57437
const CURRENT_DATE = 57438
const CURRENT_ROLE = 57439
const CURRENT_SCHEMA = 57440
const CURRENT_TIME = 57441
const CURRENT_TIMESTAMP = 57442
const CURRENT_USER = 57443
const CURSOR = 57444
const CYCLE = 57445
const DATA_P = 57446
const DATABASE = 57447
const DAY_P = 57448
const DEALLOCATE = 57449
const DEC = 57450
const DECIMAL_P = 57451
const DECLARE = 57452
const DEFAULT = 57453
const DEFAULTS = 57454
const DEFERRABLE = 57455
const DEFERRED = 57456
const DEFINER = 57457
const DELETE_P = 57458
const DELIMITER = 57459
const DELIMITERS = 57460
const DESC = 57461
const DICTIONARY = 57462
const DISABLE_P = 57463
const DISCARD = 57464
const DISTINCT = 57465
const DO = 57466
const DOCUMENT_P = 57467
const DOMAIN_P = 57468
const DOUBLE_P = 57469
const DROP = 57470
const EACH = 57471
const ELSE = 57472
const ENABLE_P = 57473
const ENCODING = 57474
const ENCRYPTED = 57475
const END_P = 57476
const ENUM_P = 57477
const ESCAPE = 57478
const EVENT = 57479
const EXCEPT = 57480
const EXCLUDE = 57481
const EXCLUDING = 57482
const EXCLUSIVE = 57483
const EXECUTE = 57484
const EXISTS = 57485
const EXPLAIN = 57486
const EXTENSION = 57487
const EXTERNAL = 57488
const EXTRACT = 57489
const FALSE_P = 57490
const FAMILY = 57491
const FETCH = 57492
const FILTER = 57493
const FIRST_P = 57494
const FLOAT_P = 57495
const FOLLOWING = 57496
const FOR = 57497
const FORCE = 57498
const FOREIGN = 57499
const FORWARD = 57500
const FREEZE = 57501
const FROM = 57502
const FULL = 57503
const FUNCTION = 57504
const FUNCTIONS = 57505
const GLOBAL = 57506
const GRANT = 57507
const GRANTED = 57508
const GREATEST = 57509
const GROUP_P = 57510
const GROUPING = 57511
const HANDLER = 57512
const HAVING = 57513
const HEADER_P = 57514
const HOLD = 57515
const HOUR_P = 57516
const IDENTITY_P = 57517
const IF_P = 57518
const ILIKE = 57519
const IMMEDIATE = 57520
const IMMUTABLE = 57521
const IMPLICIT_P = 57522
const IMPORT_P = 57523
const IN_P = 57524
const INCLUDING = 57525
const INCREMENT = 57526
const INDEX = 57527
const INDEXES = 57528
const INHERIT = 57529
const INHERITS = 57530
const INITIALLY = 57531
const INLINE_P = 57532
const INNER_P = 57533
const INOUT = 57534
const INPUT_P = 57535
const INSENSITIVE = 57536
const INSERT = 57537
const INSTEAD = 57538
const INT_P = 57539
const INTEGER = 57540
const INTERSECT = 57541
const INTERVAL = 57542
const INTO = 57543
const INVOKER = 57544
const IS = 57545
const ISNULL = 57546
const ISOLATION = 57547
const JOIN = 57548
const KEY = 57549
const LABEL = 57550
const LANGUAGE = 57551
const LARGE_P = 57552
const LAST_P = 57553
const LATERAL_P = 57554
const LEADING = 57555
const LEAKPROOF = 57556
const LEAST = 57557
const LEFT = 57558
const LEVEL = 57559
const LIKE = 57560
const LIMIT = 57561
const LISTEN = 57562
const LOAD = 57563
const LOCAL = 57564
const LOCALTIME = 57565
const LOCALTIMESTAMP = 57566
const LOCATION = 57567
const LOCK_P = 57568
const LOCKED = 57569
const LOGGED = 57570
const MAPPING = 57571
const MATCH = 57572
const MATERIALIZED = 57573
const MAXVALUE = 57574
const MINUTE_P = 57575
const MINVALUE = 57576
const MODE = 57577
const MONTH_P = 57578
const MOVE = 57579
const NAME_P = 57580
const NAMES = 57581
const NATIONAL = 57582
const NATURAL = 57583
const NCHAR = 57584
const NEXT = 57585
const NO = 57586
const NONE = 57587
const NOT = 57588
const NOTHING = 57589
const NOTIFY = 57590
const NOTNULL = 57591
const NOWAIT = 57592
const NULL_P = 57593
const NULLIF = 57594
const NULLS_P = 57595
const NUMERIC = 57596
const OBJECT_P = 57597
const OF = 57598
const OFF = 57599
const OFFSET = 57600
const OIDS = 57601
const ON = 57602
const ONLY = 57603
const OPERATOR = 57604
const OPTION = 57605
const OPTIONS = 57606
const OR = 57607
const ORDER = 57608
const ORDINALITY = 57609
const OUT_P = 57610
const OUTER_P = 57611
const OVER = 57612
const OVERLAPS = 57613
const OVERLAY = 57614
const OWNED = 57615
const OWNER = 57616
const PARSER = 57617
const PARTIAL = 57618
const PARTITION = 57619
const PASSING = 57620
const PASSWORD = 57621
const PLACING = 57622
const PLANS = 57623
const POLICY = 57624
const POSITION = 57625
const PRECEDING = 57626
const PRECISION = 57627
const PRESERVE = 57628
const PREPARE = 57629
const PREPARED = 57630
const PRIMARY = 57631
const PRIOR = 57632
const PRIVILEGES = 57633
const PROCEDURAL = 57634
const PROCEDURE = 57635
const PROGRAM = 57636
const QUOTE = 57637
const RANGE = 57638
const READ = 57639
const REAL = 57640
const REASSIGN = 57641
const RECHECK = 57642
const RECURSIVE = 57643
const REF = 57644
const REFERENCES = 57645
const REFRESH = 57646
const REINDEX = 57647
const RELATIVE_P = 57648
const RELEASE = 57649
const RENAME = 57650
const REPEATABLE = 57651
const REPLACE = 57652
const REPLICA = 57653
const RESET = 57654
const RESTART = 57655
const RESTRICT = 57656
const RETURNING = 57657
const RETURNS = 57658
const REVOKE = 57659
const RIGHT = 57660
const ROLE = 57661
const ROLLBACK = 57662
const ROLLUP = 57663
const ROW = 57664
const ROWS = 57665
const RULE = 57666
const SAVEPOINT = 57667
const SCHEMA = 57668
const SCROLL = 57669
const SEARCH = 57670
const SECOND_P = 57671
const SECURITY = 57672
const SELECT = 57673
const SEQUENCE = 57674
const SEQUENCES = 57675
const SERIALIZABLE = 57676
const SERVER = 57677
const SESSION = 57678
const SESSION_USER = 57679
const SET = 57680
const SETS = 57681
const SETOF = 57682
const SHARE = 57683
const SHOW = 57684
const SIMILAR = 57685
const SIMPLE = 57686
const SKIP = 57687
const SMALLINT = 57688
const SNAPSHOT = 57689
const SOME = 57690
const SQL_P = 57691
const STABLE = 57692
const STANDALONE_P = 57693
const START = 57694
const STATEMENT = 57695
const STATISTICS = 57696
const STDIN = 57697
const STDOUT = 57698
const STORAGE = 57699
const STRICT_P = 57700
const STRIP_P = 57701
const SUBSTRING = 57702
const SYMMETRIC = 57703
const SYSID = 57704
const SYSTEM_P = 57705
const TABLE = 57706
const TABLES = 57707
const TABLESAMPLE = 57708
const TABLESPACE = 57709
const TEMP = 57710
const TEMPLATE = 57711
const TEMPORARY = 57712
const TEXT_P = 57713
const THEN = 57714
const TIME = 57715
const TIMESTAMP = 57716
const TO = 57717
const TRAILING = 57718
const TRANSACTION = 57719
const TRANSFORM = 57720
const TREAT = 57721
const TRIGGER = 57722
const TRIM = 57723
const TRUE_P = 57724
const TRUNCATE = 57725
const TRUSTED = 57726
const TYPE_P = 57727
const TYPES_P = 57728
const UNBOUNDED = 57729
const UNCOMMITTED = 57730
const UNENCRYPTED = 57731
const UNION = 57732
const UNIQUE = 57733
const UNKNOWN = 57734
const UNLISTEN = 57735
const UNLOGGED = 57736
const UNTIL = 57737
const UPDATE = 57738
const USER = 57739
const USING = 57740
const VACUUM = 57741
const VALID = 57742
const VALIDATE = 57743
const VALIDATOR = 57744
const VALUE_P = 57745
const VALUES = 57746
const VARCHAR = 57747
const VARIADIC = 57748
const VARYING = 57749
const VERBOSE = 57750
const VERSION_P = 57751
const VIEW = 57752
const VIEWS = 57753
const VOLATILE = 57754
const WHEN = 57755
const WHERE = 57756
const WHITESPACE_P = 57757
const WINDOW = 57758
const WITH = 57759
const WITHIN = 57760
const WITHOUT = 57761
const WORK = 57762
const WRAPPER = 57763
const WRITE = 57764
const XML_P = 57765
const XMLATTRIBUTES = 57766
const XMLCONCAT = 57767
const XMLELEMENT = 57768
const XMLEXISTS = 57769
const XMLFOREST = 57770
const XMLPARSE = 57771
const XMLPI = 57772
const XMLROOT = 57773
const XMLSERIALIZE = 57774
const YEAR_P = 57775
const YES_P = 57776
const ZONE = 57777
const NOT_LA = 57778
const NULLS_LA = 57779
const WITH_LA = 57780
const OP = 57781
const POSTFIXOP = 57782
const UMINUS = 57783

var yyToknames = []string{
	"any_operator",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
}
var yyStatenames = []string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:2881

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = []int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 202,
	456, 202,
	-2, 210,
	-1, 5,
	1, 205,
	454, 205,
	456, 205,
	-2, 209,
	-1, 13,
	1, 206,
	454, 206,
	456, 206,
	-2, 226,
	-1, 401,
	15, 381,
	16, 381,
	453, 381,
	-2, 378,
	-1, 402,
	15, 382,
	16, 382,
	453, 382,
	-2, 379,
	-1, 416,
	15, 714,
	16, 714,
	453, 714,
	-2, 168,
	-1, 478,
	322, 296,
	323, 296,
	-2, 59,
	-1, 526,
	138, 210,
	150, 210,
	155, 210,
	199, 210,
	219, 210,
	258, 210,
	266, 210,
	390, 210,
	-2, 142,
	-1, 537,
	453, 368,
	-2, 336,
	-1, 618,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 71,
	-1, 619,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 72,
	-1, 620,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 73,
	-1, 621,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 74,
	-1, 622,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 75,
	-1, 623,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 76,
	-1, 627,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 84,
	-1, 632,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 88,
	-1, 753,
	453, 367,
	-2, 9,
	-1, 821,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 86,
	-1, 822,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 90,
	-1, 827,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 92,
	-1, 906,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 85,
	-1, 909,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 94,
	-1, 912,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 89,
	-1, 916,
	203, 0,
	204, 0,
	249, 0,
	-2, 106,
	-1, 975,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 87,
	-1, 976,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 91,
	-1, 980,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 93,
	-1, 981,
	203, 0,
	204, 0,
	249, 0,
	-2, 107,
	-1, 985,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 110,
	-1, 993,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 124,
	-1, 994,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 125,
	-1, 995,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 126,
	-1, 996,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 127,
	-1, 997,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 128,
	-1, 998,
	17, 0,
	18, 0,
	19, 0,
	440, 0,
	441, 0,
	442, 0,
	-2, 129,
	-1, 1003,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 112,
	-1, 1028,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 95,
	-1, 1029,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 111,
	-1, 1030,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 113,
	-1, 1047,
	203, 0,
	-2, 133,
	-1, 1060,
	203, 0,
	-2, 134,
	-1, 1066,
	48, 0,
	177, 0,
	218, 0,
	343, 0,
	436, 0,
	-2, 661,
}

const yyNprod = 809
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 12280

var yyAct = []int{

	378, 1065, 391, 854, 733, 809, 1018, 1041, 14, 1014,
	1064, 423, 884, 29, 958, 534, 32, 729, 918, 750,
	797, 27, 790, 529, 746, 792, 740, 641, 917, 811,
	487, 29, 564, 453, 800, 375, 372, 577, 18, 731,
	1075, 888, 1074, 984, 1062, 1073, 845, 984, 1031, 581,
	450, 984, 983, 970, 876, 984, 845, 845, 874, 1055,
	794, 845, 389, 873, 872, 491, 845, 845, 871, 847,
	846, 845, 1043, 556, 848, 845, 555, 771, 572, 531,
	490, 389, 369, 530, 491, 8, 25, 531, 503, 504,
	505, 530, 1063, 12, 493, 903, 818, 1013, 1011, 1010,
	1009, 972, 971, 949, 869, 507, 868, 867, 866, 575,
	863, 849, 765, 493, 535, 810, 7, 856, 10, 516,
	403, 369, 368, 1049, 492, 1044, 1036, 915, 881, 835,
	801, 803, 403, 389, 744, 350, 491, 536, 553, 551,
	503, 504, 505, 492, 920, 550, 549, 548, 547, 546,
	545, 544, 543, 542, 7, 1046, 890, 507, 11, 1025,
	1024, 969, 893, 535, 894, 493, 449, 791, 819, 1015,
	389, 516, 793, 491, 491, 920, 857, 503, 504, 505,
	852, 741, 812, 1023, 466, 767, 823, 489, 977, 633,
	576, 889, 528, 611, 466, 492, 357, 352, 559, 568,
	900, 1052, 493, 493, 17, 565, 566, 7, 516, 355,
	643, 639, 643, 1079, 804, 389, 1078, 1007, 920, 5,
	356, 464, 930, 931, 932, 6, 422, 743, 1053, 859,
	351, 464, 492, 492, 389, 18, 637, 920, 447, 979,
	877, 930, 931, 932, 557, 480, 360, 1000, 511, 1034,
	359, 473, 770, 359, 389, 354, 882, 491, 978, 963,
	359, 503, 504, 505, 558, 16, 962, 16, 959, 885,
	402, 1048, 832, 1033, 513, 514, 389, 914, 507, 491,
	834, 31, 578, 461, 462, 354, 493, 392, 541, 509,
	943, 363, 516, 389, 569, 23, 491, 830, 491, 31,
	511, 491, 815, 814, 810, 1038, 960, 920, 493, 367,
	1056, 896, 798, 1083, 519, 883, 492, 631, 465, 358,
	515, 1022, 358, 349, 371, 493, 513, 514, 465, 358,
	493, 920, 18, 519, 635, 491, 508, 511, 492, 634,
	403, 509, 474, 1082, 640, 389, 1077, 446, 920, 448,
	362, 1059, 930, 931, 932, 492, 965, 492, 360, 860,
	492, 360, 864, 865, 957, 738, 13, 365, 366, 938,
	1001, 602, 515, 463, 506, 19, 3, 599, 509, 598,
	1002, 491, 1035, 463, 585, 519, 364, 584, 508, 583,
	24, 405, 649, 817, 609, 381, 478, 734, 1051, 1006,
	828, 946, 913, 742, 1040, 833, 400, 887, 934, 836,
	493, 385, 399, 452, 512, 491, 739, 850, 538, 908,
	384, 511, 519, 802, 382, 394, 561, 934, 1017, 774,
	773, 777, 752, 842, 570, 479, 567, 361, 353, 458,
	492, 476, 560, 475, 493, 469, 629, 513, 514, 456,
	26, 540, 472, 574, 29, 506, 15, 486, 795, 1058,
	21, 22, 509, 741, 370, 9, 512, 519, 2, 573,
	636, 506, 1, 554, 492, 0, 0, 0, 506, 0,
	638, 0, 0, 29, 0, 0, 519, 628, 0, 506,
	0, 0, 0, 515, 0, 610, 494, 495, 496, 497,
	498, 499, 571, 512, 808, 0, 519, 510, 0, 508,
	580, 500, 501, 502, 0, 494, 495, 496, 497, 498,
	499, 506, 506, 506, 506, 506, 506, 579, 519, 648,
	825, 829, 642, 0, 647, 0, 0, 0, 934, 0,
	506, 831, 648, 0, 0, 519, 0, 647, 0, 457,
	460, 737, 728, 759, 760, 761, 762, 644, 764, 510,
	0, 728, 562, 500, 501, 502, 468, 494, 495, 496,
	497, 498, 499, 966, 0, 843, 467, 923, 924, 925,
	926, 844, 482, 459, 537, 482, 482, 512, 481, 766,
	763, 484, 485, 768, 0, 0, 510, 519, 0, 0,
	500, 501, 502, 772, 494, 495, 496, 497, 498, 499,
	499, 926, 630, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 805,
	806, 807, 799, 506, 552, 813, 0, 0, 816, 0,
	0, 0, 840, 840, 0, 927, 928, 929, 0, 921,
	922, 923, 924, 925, 926, 0, 0, 0, 0, 824,
	736, 0, 0, 0, 927, 928, 929, 0, 921, 922,
	923, 924, 925, 926, 0, 0, 0, 837, 837, 0,
	510, 0, 373, 373, 500, 501, 502, 0, 494, 495,
	496, 497, 498, 499, 0, 0, 0, 0, 1008, 0,
	389, 0, 0, 920, 0, 0, 0, 930, 931, 932,
	494, 495, 496, 497, 498, 499, 0, 0, 586, 0,
	0, 0, 31, 0, 919, 0, 0, 494, 495, 496,
	497, 498, 499, 506, 0, 0, 0, 506, 921, 922,
	923, 924, 925, 926, 0, 0, 855, 0, 0, 0,
	0, 31, 506, 0, 0, 858, 386, 4, 0, 506,
	563, 0, 601, 31, 20, 0, 851, 0, 0, 753,
	506, 0, 861, 862, 29, 927, 928, 929, 0, 921,
	922, 923, 924, 925, 926, 0, 0, 0, 646, 875,
	0, 0, 0, 879, 0, 0, 880, 506, 0, 0,
	0, 646, 0, 0, 0, 0, 897, 0, 0, 586,
	0, 0, 494, 495, 496, 497, 498, 499, 0, 0,
	895, 0, 506, 506, 0, 840, 840, 0, 506, 0,
	648, 754, 755, 756, 757, 647, 904, 933, 0, 840,
	840, 840, 933, 389, 901, 902, 920, 0, 496, 497,
	498, 499, 0, 601, 506, 0, 0, 0, 0, 947,
	837, 837, 0, 0, 942, 0, 939, 0, 0, 0,
	951, 952, 0, 0, 837, 837, 837, 0, 0, 950,
	0, 0, 0, 0, 0, 0, 0, 506, 956, 955,
	0, 0, 0, 934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 973, 0, 0, 506, 506, 0, 0,
	506, 933, 933, 506, 0, 648, 0, 506, 0, 0,
	647, 974, 840, 840, 840, 840, 840, 840, 840, 840,
	840, 840, 840, 840, 840, 0, 933, 933, 933, 986,
	0, 506, 506, 0, 982, 506, 0, 389, 961, 506,
	491, 964, 519, 0, 506, 506, 0, 837, 837, 837,
	837, 837, 837, 837, 837, 837, 837, 837, 837, 837,
	0, 1012, 0, 0, 753, 753, 506, 506, 1027, 493,
	0, 506, 506, 0, 0, 0, 506, 0, 933, 933,
	933, 933, 933, 933, 933, 933, 933, 933, 933, 933,
	933, 0, 0, 1032, 506, 0, 506, 0, 0, 492,
	0, 454, 0, 389, 31, 1037, 491, 506, 1042, 470,
	506, 477, 1039, 1020, 1021, 0, 0, 0, 488, 506,
	506, 506, 0, 0, 840, 0, 0, 520, 521, 522,
	523, 524, 31, 1054, 525, 493, 506, 0, 933, 840,
	1057, 0, 841, 0, 0, 0, 0, 0, 1042, 539,
	1072, 933, 586, 1071, 1070, 1050, 0, 0, 1076, 837,
	506, 0, 0, 907, 0, 492, 0, 0, 1061, 0,
	0, 0, 0, 0, 837, 1084, 753, 0, 0, 646,
	0, 898, 0, 0, 0, 519, 899, 586, 0, 0,
	389, 0, 0, 920, 0, 0, 601, 930, 931, 932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 389, 483, 483, 491, 0, 0, 31, 0, 0,
	927, 928, 929, 0, 921, 922, 923, 924, 925, 926,
	526, 601, 586, 0, 532, 533, 0, 586, 0, 0,
	0, 373, 0, 493, 0, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 31, 632, 0, 646, 0, 0, 0, 0, 0,
	776, 967, 968, 492, 0, 0, 601, 787, 788, 789,
	0, 601, 732, 0, 0, 0, 0, 0, 0, 519,
	0, 0, 0, 751, 0, 0, 0, 0, 758, 0,
	0, 586, 0, 0, 0, 0, 454, 0, 0, 0,
	0, 389, 0, 769, 491, 0, 0, 0, 503, 504,
	505, 0, 0, 488, 910, 911, 0, 389, 0, 796,
	491, 0, 0, 0, 0, 507, 0, 826, 935, 936,
	937, 0, 0, 493, 0, 601, 0, 1026, 0, 516,
	0, 0, 0, 586, 0, 519, 0, 0, 0, 493,
	0, 0, 0, 0, 0, 516, 586, 921, 922, 923,
	924, 925, 926, 492, 0, 0, 31, 0, 0, 821,
	822, 0, 0, 0, 827, 0, 0, 389, 0, 492,
	491, 0, 0, 0, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 0, 0, 0, 0, 0, 31, 0, 0, 493,
	0, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 0, 0, 0, 0, 0, 0,
	0, 494, 495, 496, 497, 498, 499, 0, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 853, 0, 511, 0, 0, 0, 751, 751,
	0, 0, 0, 0, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 820, 0, 0, 0, 0, 0, 509,
	0, 0, 775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1047, 0, 509, 0, 494, 495, 496,
	497, 498, 499, 0, 886, 0, 0, 0, 1060, 0,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 0, 0, 508, 0, 0, 0,
	905, 906, 0, 0, 909, 0, 0, 912, 0, 519,
	0, 0, 0, 0, 0, 916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 940, 941, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 0, 948, 0,
	751, 0, 0, 0, 0, 953, 954, 0, 0, 0,
	927, 928, 929, 0, 921, 922, 923, 924, 925, 926,
	0, 0, 0, 0, 0, 0, 0, 0, 796, 519,
	0, 796, 0, 0, 512, 494, 495, 496, 497, 498,
	499, 0, 0, 0, 0, 0, 0, 0, 975, 976,
	512, 0, 0, 0, 980, 981, 0, 0, 0, 0,
	985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1003,
	0, 0, 0, 0, 0, 0, 1005, 0, 0, 0,
	784, 785, 786, 0, 778, 779, 780, 781, 782, 783,
	1016, 1019, 0, 796, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1028, 1029,
	1030, 0, 0, 0, 0, 0, 0, 510, 0, 0,
	0, 500, 501, 502, 0, 494, 495, 496, 497, 498,
	499, 0, 0, 510, 0, 878, 0, 0, 0, 0,
	0, 494, 495, 496, 497, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 1045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1019, 0, 0, 0, 0, 0,
	0, 0, 0, 1069, 1069, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1069, 0, 0,
	645, 494, 495, 496, 497, 498, 499, 0, 0, 0,
	0, 0, 0, 0, 1069, 33, 34, 35, 36, 37,
	38, 39, 40, 650, 41, 42, 43, 651, 652, 653,
	654, 655, 656, 657, 44, 45, 658, 46, 47, 424,
	48, 49, 50, 301, 302, 425, 303, 304, 659, 51,
	52, 53, 54, 55, 660, 661, 56, 57, 305, 306,
	58, 662, 59, 60, 61, 62, 307, 663, 426, 664,
	63, 64, 65, 66, 427, 67, 68, 69, 665, 70,
	71, 72, 73, 74, 75, 666, 428, 76, 77, 78,
	667, 668, 669, 603, 670, 671, 672, 79, 80, 81,
	82, 83, 84, 308, 309, 85, 673, 86, 674, 87,
	88, 89, 90, 91, 675, 92, 93, 94, 676, 677,
	95, 96, 97, 98, 99, 678, 100, 101, 102, 679,
	103, 104, 105, 680, 106, 107, 108, 109, 310, 110,
	111, 112, 311, 681, 113, 682, 114, 115, 312, 116,
	683, 117, 684, 118, 429, 685, 430, 119, 120, 121,
	686, 122, 313, 687, 314, 123, 688, 124, 125, 126,
	127, 128, 431, 129, 130, 131, 132, 689, 133, 134,
	135, 136, 137, 138, 690, 139, 432, 315, 140, 141,
	142, 143, 316, 317, 691, 318, 692, 144, 433, 434,
	145, 435, 146, 147, 148, 149, 150, 693, 694, 151,
	319, 436, 152, 437, 695, 153, 154, 155, 696, 697,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 320, 438, 321, 171, 172,
	322, 698, 173, 174, 439, 175, 699, 323, 176, 324,
	177, 178, 179, 700, 180, 701, 702, 181, 182, 183,
	703, 704, 184, 325, 440, 185, 441, 326, 186, 187,
	188, 189, 190, 191, 192, 705, 193, 194, 327, 195,
	328, 198, 196, 197, 706, 199, 200, 201, 202, 203,
	204, 205, 206, 329, 207, 208, 209, 210, 707, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	708, 222, 223, 442, 224, 225, 226, 330, 227, 228,
	229, 230, 231, 232, 233, 234, 709, 235, 236, 237,
	238, 239, 710, 240, 241, 331, 242, 243, 443, 244,
	245, 332, 246, 711, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 712, 258, 259, 713,
	260, 444, 261, 262, 263, 264, 265, 714, 334, 335,
	715, 716, 266, 267, 336, 268, 337, 717, 269, 270,
	271, 272, 273, 274, 275, 718, 719, 276, 277, 278,
	279, 280, 720, 721, 281, 282, 283, 284, 285, 338,
	339, 722, 286, 445, 287, 288, 289, 290, 723, 724,
	291, 725, 726, 292, 293, 294, 295, 296, 297, 340,
	341, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 650, 41, 42, 43, 651, 652,
	653, 654, 655, 656, 657, 44, 45, 658, 46, 47,
	424, 48, 49, 50, 301, 302, 425, 303, 304, 659,
	51, 52, 53, 54, 55, 660, 661, 56, 57, 305,
	306, 58, 662, 59, 60, 61, 62, 307, 663, 426,
	664, 63, 64, 65, 66, 427, 67, 68, 69, 665,
	70, 71, 72, 73, 74, 75, 666, 428, 76, 77,
	78, 667, 668, 669, 603, 670, 671, 672, 79, 80,
	81, 82, 83, 84, 308, 309, 85, 673, 86, 674,
	87, 88, 89, 90, 91, 675, 92, 93, 94, 676,
	677, 95, 96, 97, 98, 99, 678, 100, 101, 102,
	679, 103, 104, 105, 680, 106, 107, 108, 109, 310,
	110, 111, 112, 311, 681, 113, 682, 114, 115, 312,
	116, 683, 117, 684, 118, 429, 685, 430, 119, 120,
	121, 686, 122, 313, 687, 314, 123, 688, 124, 125,
	126, 127, 128, 431, 129, 130, 131, 132, 689, 133,
	134, 135, 136, 137, 138, 690, 139, 432, 315, 140,
	141, 142, 143, 316, 317, 691, 318, 692, 144, 433,
	434, 145, 435, 146, 147, 148, 149, 150, 693, 694,
	151, 319, 436, 152, 437, 695, 153, 154, 155, 696,
	697, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 320, 438, 321, 171,
	172, 322, 698, 173, 174, 439, 175, 699, 323, 176,
	324, 177, 178, 179, 700, 180, 701, 702, 181, 182,
	183, 703, 704, 184, 325, 440, 185, 441, 326, 186,
	187, 188, 189, 190, 191, 192, 705, 193, 194, 327,
	195, 328, 198, 196, 197, 706, 199, 200, 201, 202,
	203, 204, 205, 206, 329, 207, 208, 209, 210, 707,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 708, 222, 223, 442, 224, 225, 226, 330, 227,
	228, 229, 230, 231, 232, 233, 234, 709, 235, 236,
	237, 238, 239, 710, 240, 241, 331, 242, 243, 443,
	244, 245, 332, 246, 711, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 712, 258, 259,
	713, 260, 444, 261, 262, 263, 264, 265, 714, 334,
	335, 715, 716, 266, 267, 336, 268, 337, 717, 269,
	270, 271, 272, 273, 274, 275, 718, 719, 276, 277,
	278, 279, 280, 720, 721, 281, 282, 283, 284, 285,
	338, 339, 722, 286, 445, 287, 288, 289, 290, 723,
	724, 291, 725, 726, 292, 293, 294, 295, 296, 297,
	340, 341, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 401, 393, 404, 0, 0, 389, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 747, 41, 42, 43, 0,
	0, 0, 0, 388, 0, 0, 44, 45, 0, 46,
	47, 424, 48, 49, 50, 301, 302, 425, 303, 304,
	0, 51, 52, 53, 54, 55, 398, 417, 56, 57,
	305, 306, 58, 0, 59, 60, 61, 62, 418, 0,
	426, 0, 63, 64, 65, 66, 427, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 428, 76,
	77, 78, 415, 406, 411, 416, 407, 408, 412, 79,
	80, 81, 82, 83, 84, 308, 309, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	748, 0, 95, 96, 97, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	387, 110, 111, 112, 311, 396, 113, 0, 114, 115,
	312, 116, 0, 117, 0, 118, 429, 0, 430, 119,
	120, 121, 0, 122, 419, 0, 314, 123, 0, 124,
	125, 126, 127, 128, 431, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 432, 315,
	140, 141, 142, 143, 316, 317, 0, 318, 0, 144,
	433, 434, 145, 435, 146, 147, 148, 149, 150, 0,
	0, 151, 420, 436, 152, 437, 0, 153, 154, 155,
	409, 410, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 320, 438, 321,
	171, 172, 322, 379, 173, 174, 439, 175, 397, 323,
	176, 324, 177, 178, 179, 0, 180, 0, 0, 390,
	182, 183, 0, 0, 184, 325, 440, 185, 441, 326,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	327, 195, 328, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 329, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 442, 224, 225, 226, 330,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 413, 240, 241, 331, 242, 243,
	443, 244, 245, 332, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 333, 0, 258,
	259, 0, 260, 444, 261, 262, 263, 264, 265, 0,
	334, 335, 0, 0, 266, 267, 336, 268, 337, 395,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 414, 0, 281, 282, 283, 284,
	285, 338, 339, 0, 286, 445, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 340, 421, 342, 343, 344, 345, 346, 347, 348,
	298, 299, 300, 380, 0, 0, 0, 0, 0, 0,
	0, 376, 377, 749, 0, 0, 0, 401, 393, 404,
	383, 745, 389, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 388, 0,
	0, 44, 45, 0, 46, 47, 424, 48, 49, 50,
	301, 302, 425, 303, 304, 0, 51, 52, 53, 54,
	55, 398, 417, 56, 57, 305, 306, 58, 0, 59,
	60, 61, 62, 418, 0, 426, 0, 63, 64, 65,
	66, 427, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 428, 76, 77, 78, 415, 406, 411,
	416, 407, 408, 412, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 97,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 387, 110, 111, 112, 311,
	396, 113, 0, 114, 115, 312, 116, 0, 117, 0,
	118, 429, 0, 430, 119, 120, 121, 0, 122, 419,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 431,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 432, 315, 140, 141, 142, 143, 316,
	317, 0, 318, 0, 144, 433, 434, 145, 435, 146,
	147, 148, 149, 150, 0, 0, 151, 420, 436, 152,
	437, 0, 153, 154, 155, 409, 410, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 438, 321, 171, 172, 322, 379, 173,
	174, 439, 175, 397, 323, 176, 324, 177, 178, 179,
	0, 180, 0, 0, 390, 182, 183, 0, 0, 184,
	325, 440, 185, 441, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	442, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 413,
	240, 241, 331, 242, 243, 443, 244, 245, 332, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 444, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 395, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 414,
	0, 281, 282, 283, 284, 285, 338, 339, 0, 286,
	445, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 421, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 380, 0,
	0, 0, 0, 401, 393, 404, 376, 377, 389, 403,
	0, 0, 0, 535, 735, 383, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 388, 0, 0, 44, 45, 0,
	46, 47, 424, 48, 49, 50, 301, 302, 425, 303,
	304, 0, 51, 52, 53, 54, 55, 398, 417, 56,
	57, 305, 306, 58, 0, 59, 60, 61, 62, 418,
	0, 426, 0, 63, 64, 65, 66, 427, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 428,
	76, 77, 78, 415, 406, 411, 416, 407, 408, 412,
	79, 80, 81, 82, 83, 84, 308, 309, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 97, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 387, 110, 111, 112, 311, 396, 113, 0, 114,
	115, 312, 116, 0, 117, 0, 118, 429, 0, 430,
	119, 120, 121, 0, 122, 419, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 431, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 432,
	315, 140, 141, 142, 143, 316, 317, 0, 318, 0,
	144, 433, 434, 145, 435, 146, 147, 148, 149, 150,
	0, 0, 151, 420, 436, 152, 437, 0, 153, 154,
	155, 409, 410, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 320, 438,
	321, 171, 172, 322, 379, 173, 174, 439, 175, 397,
	323, 176, 324, 177, 178, 179, 0, 180, 0, 0,
	390, 182, 183, 0, 0, 184, 325, 440, 185, 441,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 329, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 442, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 8,
	235, 236, 237, 238, 239, 413, 240, 241, 331, 242,
	243, 443, 244, 245, 332, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 10, 260, 444, 261, 262, 263, 264, 265,
	0, 334, 335, 0, 0, 266, 267, 336, 268, 337,
	395, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 414, 0, 281, 282, 283,
	284, 285, 527, 339, 0, 286, 445, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 421, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 380, 0, 0, 0, 0, 401,
	393, 404, 376, 377, 389, 403, 0, 0, 0, 0,
	0, 383, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	388, 0, 0, 44, 45, 0, 46, 47, 424, 48,
	49, 50, 301, 302, 425, 303, 304, 0, 51, 52,
	53, 54, 55, 398, 417, 56, 57, 305, 306, 58,
	0, 59, 60, 61, 62, 418, 0, 426, 0, 63,
	64, 65, 66, 427, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 428, 76, 77, 78, 415,
	406, 411, 416, 407, 408, 412, 79, 80, 81, 82,
	83, 84, 308, 309, 85, 455, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 97, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 387, 110, 111,
	112, 311, 396, 113, 0, 114, 115, 312, 116, 0,
	117, 0, 118, 429, 0, 430, 119, 120, 121, 0,
	122, 419, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 431, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 432, 315, 140, 141, 142,
	143, 316, 317, 0, 318, 0, 144, 433, 434, 145,
	435, 146, 147, 148, 149, 150, 0, 0, 151, 420,
	436, 152, 437, 0, 153, 154, 155, 409, 410, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 320, 438, 321, 171, 172, 322,
	379, 173, 174, 439, 175, 397, 323, 176, 324, 177,
	178, 179, 0, 180, 0, 0, 390, 182, 183, 0,
	0, 184, 325, 440, 185, 441, 326, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 329, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 442, 224, 225, 226, 330, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 413, 240, 241, 331, 242, 243, 443, 244, 245,
	332, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	444, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 395, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 414, 0, 281, 282, 283, 284, 285, 338, 339,
	0, 286, 445, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 421,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	380, 0, 0, 0, 0, 401, 393, 404, 376, 377,
	389, 403, 0, 0, 0, 0, 0, 383, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 388, 0, 0, 44,
	45, 0, 46, 47, 424, 48, 49, 50, 301, 302,
	425, 303, 304, 0, 51, 52, 53, 54, 55, 398,
	417, 56, 57, 305, 306, 58, 0, 59, 60, 61,
	62, 418, 0, 426, 0, 63, 64, 65, 66, 427,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 428, 76, 77, 78, 415, 406, 411, 416, 407,
	408, 412, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 97, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 387, 110, 111, 112, 311, 396, 113,
	0, 114, 115, 312, 116, 0, 117, 0, 118, 429,
	0, 430, 119, 120, 121, 0, 122, 419, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 431, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 432, 315, 140, 141, 142, 143, 316, 317, 0,
	318, 0, 144, 433, 434, 145, 435, 146, 147, 148,
	149, 150, 0, 0, 151, 420, 436, 152, 437, 0,
	153, 154, 155, 409, 410, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 438, 321, 171, 172, 322, 379, 173, 174, 439,
	175, 397, 323, 176, 324, 177, 178, 179, 0, 180,
	0, 0, 390, 182, 183, 0, 0, 184, 325, 440,
	185, 441, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 442, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 413, 240, 241,
	331, 242, 243, 443, 244, 245, 332, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 444, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 395, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 414, 0, 281,
	282, 283, 284, 285, 338, 339, 0, 286, 445, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 421, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 380, 0, 0, 0,
	0, 0, 0, 0, 376, 377, 374, 0, 0, 401,
	393, 404, 0, 383, 389, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 471, 41, 42, 43, 0, 0, 0, 0,
	388, 0, 0, 44, 45, 0, 46, 47, 424, 48,
	49, 50, 301, 302, 425, 303, 304, 0, 51, 52,
	53, 54, 55, 398, 417, 56, 57, 305, 306, 58,
	0, 59, 60, 61, 62, 418, 0, 426, 0, 63,
	64, 65, 66, 427, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 428, 76, 77, 78, 415,
	406, 411, 416, 407, 408, 412, 79, 80, 81, 82,
	83, 84, 308, 309, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 97, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 387, 110, 111,
	112, 311, 396, 113, 0, 114, 115, 312, 116, 0,
	117, 0, 118, 429, 0, 430, 119, 120, 121, 0,
	122, 419, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 431, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 432, 315, 140, 141, 142,
	143, 316, 317, 0, 318, 0, 144, 433, 434, 145,
	435, 146, 147, 148, 149, 150, 0, 0, 151, 420,
	436, 152, 437, 0, 153, 154, 155, 409, 410, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 320, 438, 321, 171, 172, 322,
	379, 173, 174, 439, 175, 397, 323, 176, 324, 177,
	178, 179, 0, 180, 0, 0, 390, 182, 183, 0,
	0, 184, 325, 440, 185, 441, 326, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 329, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 442, 224, 225, 226, 330, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 413, 240, 241, 331, 242, 243, 443, 244, 245,
	332, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	444, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 395, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 414, 0, 281, 282, 283, 284, 285, 338, 339,
	0, 286, 445, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 421,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	380, 0, 0, 0, 0, 401, 393, 404, 376, 377,
	389, 403, 0, 0, 0, 0, 0, 383, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 388, 0, 0, 44,
	45, 0, 46, 47, 424, 48, 49, 50, 301, 302,
	425, 303, 304, 0, 51, 52, 53, 54, 55, 398,
	417, 56, 57, 305, 306, 58, 0, 59, 60, 61,
	62, 418, 0, 426, 0, 63, 64, 65, 66, 427,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 428, 76, 77, 1068, 415, 406, 411, 416, 407,
	408, 412, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 97, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 387, 110, 111, 112, 311, 396, 113,
	0, 114, 115, 312, 116, 0, 117, 0, 118, 429,
	0, 430, 119, 120, 121, 0, 122, 419, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 431, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 432, 315, 140, 141, 142, 143, 316, 317, 0,
	318, 0, 144, 433, 434, 145, 435, 146, 147, 148,
	149, 150, 0, 0, 151, 420, 436, 152, 437, 0,
	153, 154, 155, 409, 410, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 438, 321, 171, 172, 322, 379, 173, 174, 439,
	175, 397, 323, 176, 324, 177, 178, 179, 0, 180,
	0, 0, 390, 182, 183, 0, 0, 184, 325, 440,
	185, 441, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 442, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 413, 240, 241,
	331, 242, 243, 443, 244, 245, 332, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 444, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 395, 269, 270, 271, 272, 1067, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 414, 0, 281,
	282, 283, 284, 285, 338, 339, 0, 286, 445, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 421, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 380, 0, 0, 0,
	0, 401, 393, 404, 376, 377, 389, 403, 0, 0,
	0, 0, 0, 383, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 388, 0, 0, 44, 45, 0, 46, 47,
	424, 48, 49, 50, 1066, 302, 425, 303, 304, 0,
	51, 52, 53, 54, 55, 398, 417, 56, 57, 305,
	306, 58, 0, 59, 60, 61, 62, 418, 0, 426,
	0, 63, 64, 65, 66, 427, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 428, 76, 77,
	1068, 415, 406, 411, 416, 407, 408, 412, 79, 80,
	81, 82, 83, 84, 308, 309, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 97, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 387,
	110, 111, 112, 311, 396, 113, 0, 114, 115, 312,
	116, 0, 117, 0, 118, 429, 0, 430, 119, 120,
	121, 0, 122, 419, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 431, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 432, 315, 140,
	141, 142, 143, 316, 317, 0, 318, 0, 144, 433,
	434, 145, 435, 146, 147, 148, 149, 150, 0, 0,
	151, 420, 436, 152, 437, 0, 153, 154, 155, 409,
	410, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 320, 438, 321, 171,
	172, 322, 379, 173, 174, 439, 175, 397, 323, 176,
	324, 177, 178, 179, 0, 180, 0, 0, 390, 182,
	183, 0, 0, 184, 325, 440, 185, 441, 326, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 329, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 442, 224, 225, 226, 330, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 413, 240, 241, 331, 242, 243, 443,
	244, 245, 332, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 444, 261, 262, 263, 264, 265, 0, 334,
	335, 0, 0, 266, 267, 336, 268, 337, 395, 269,
	270, 271, 272, 1067, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 414, 0, 281, 282, 283, 284, 285,
	338, 339, 0, 286, 445, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 421, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 380, 0, 0, 0, 0, 401, 393, 404,
	376, 377, 389, 403, 0, 0, 0, 0, 0, 383,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 388, 0,
	0, 44, 45, 0, 46, 47, 424, 48, 49, 50,
	301, 302, 425, 303, 304, 0, 51, 52, 53, 54,
	55, 398, 417, 56, 57, 305, 306, 58, 0, 59,
	60, 61, 62, 418, 0, 426, 0, 63, 64, 65,
	66, 427, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 428, 76, 77, 78, 415, 406, 411,
	416, 407, 408, 412, 79, 80, 81, 82, 83, 84,
	308, 309, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 97,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 387, 110, 111, 112, 311,
	396, 113, 0, 114, 115, 312, 116, 0, 117, 0,
	118, 429, 0, 430, 119, 120, 121, 0, 122, 419,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 431,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 432, 315, 140, 141, 142, 143, 316,
	317, 0, 318, 0, 144, 433, 434, 145, 435, 146,
	147, 148, 149, 150, 0, 0, 151, 420, 436, 152,
	437, 0, 153, 154, 155, 409, 410, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 320, 438, 321, 171, 172, 322, 379, 173,
	174, 439, 175, 397, 323, 176, 324, 177, 178, 179,
	0, 180, 0, 0, 390, 182, 183, 0, 0, 184,
	325, 440, 185, 441, 326, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	329, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	442, 224, 225, 226, 330, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 413,
	240, 241, 331, 242, 243, 443, 244, 245, 332, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 444, 261,
	262, 263, 264, 265, 0, 334, 335, 0, 0, 266,
	267, 336, 268, 337, 395, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 414,
	0, 281, 282, 283, 284, 285, 338, 339, 0, 286,
	445, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 421, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 380, 0,
	0, 0, 0, 401, 393, 404, 376, 377, 389, 403,
	0, 0, 0, 0, 0, 383, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 388, 0, 0, 44, 45, 0,
	46, 47, 424, 48, 49, 50, 301, 302, 425, 303,
	304, 0, 51, 52, 53, 54, 55, 398, 417, 56,
	57, 305, 306, 58, 0, 59, 60, 61, 62, 418,
	0, 426, 0, 63, 64, 65, 66, 427, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 428,
	76, 77, 78, 415, 406, 411, 416, 407, 408, 412,
	79, 80, 81, 82, 83, 84, 308, 309, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 97, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 387, 110, 111, 112, 311, 396, 113, 0, 114,
	115, 312, 116, 0, 117, 0, 118, 429, 0, 430,
	119, 120, 121, 0, 122, 419, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 431, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 432,
	315, 140, 141, 142, 143, 316, 317, 0, 318, 0,
	144, 433, 434, 145, 435, 146, 147, 148, 149, 150,
	0, 0, 151, 420, 436, 152, 437, 0, 153, 154,
	155, 409, 410, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 320, 438,
	321, 171, 172, 322, 0, 173, 174, 439, 175, 397,
	323, 176, 324, 177, 178, 179, 0, 180, 0, 0,
	390, 182, 183, 0, 0, 184, 325, 440, 185, 441,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 329, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 442, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 413, 240, 241, 331, 242,
	243, 443, 244, 245, 332, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 444, 261, 262, 263, 264, 265,
	0, 334, 335, 0, 0, 266, 267, 336, 268, 337,
	395, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 414, 0, 281, 282, 283,
	284, 285, 338, 339, 0, 286, 445, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 421, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 0, 0, 0, 0, 0, 401,
	393, 404, 838, 839, 389, 403, 0, 0, 0, 0,
	0, 383, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	388, 0, 0, 44, 45, 0, 46, 47, 424, 48,
	49, 50, 301, 302, 425, 303, 304, 0, 51, 52,
	53, 54, 55, 398, 417, 56, 57, 305, 306, 58,
	0, 59, 60, 61, 62, 418, 0, 426, 0, 63,
	64, 65, 66, 427, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 428, 76, 77, 78, 415,
	406, 411, 416, 407, 408, 412, 79, 80, 81, 82,
	83, 84, 308, 309, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 97, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 387, 110, 111,
	112, 311, 396, 113, 0, 114, 115, 312, 116, 0,
	117, 0, 118, 429, 0, 430, 119, 120, 121, 0,
	122, 419, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 431, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 432, 315, 140, 141, 142,
	143, 316, 317, 0, 318, 0, 144, 0, 434, 145,
	435, 146, 147, 148, 149, 150, 0, 0, 151, 420,
	436, 152, 437, 0, 153, 154, 155, 409, 410, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 320, 438, 321, 171, 172, 322,
	0, 173, 174, 439, 175, 397, 323, 176, 324, 177,
	178, 179, 0, 180, 0, 0, 390, 182, 183, 0,
	0, 184, 325, 440, 185, 441, 326, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 329, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 442, 224, 225, 226, 330, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 413, 240, 241, 331, 242, 243, 443, 244, 245,
	332, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	444, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 395, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 414, 0, 281, 282, 283, 284, 285, 338, 339,
	0, 286, 445, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 421,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	0, 0, 0, 0, 0, 401, 393, 404, 838, 839,
	389, 403, 0, 0, 0, 0, 0, 383, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 388, 0, 0, 44,
	45, 0, 46, 47, 424, 48, 49, 50, 0, 302,
	425, 303, 304, 0, 51, 52, 53, 54, 55, 398,
	417, 56, 57, 305, 306, 58, 0, 59, 60, 61,
	62, 418, 0, 426, 0, 63, 64, 65, 66, 427,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 428, 76, 77, 1068, 415, 406, 411, 416, 407,
	408, 412, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 97, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 387, 110, 111, 112, 311, 396, 113,
	0, 114, 115, 312, 116, 0, 117, 0, 118, 429,
	0, 430, 119, 120, 121, 0, 122, 419, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 0, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 432, 315, 140, 141, 142, 143, 316, 317, 0,
	318, 0, 144, 0, 0, 145, 435, 146, 147, 148,
	149, 150, 0, 0, 151, 420, 436, 152, 0, 0,
	153, 154, 155, 409, 410, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 438, 321, 171, 172, 322, 379, 173, 174, 0,
	175, 397, 323, 176, 324, 177, 178, 179, 0, 180,
	0, 0, 390, 182, 183, 0, 0, 184, 325, 440,
	185, 441, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 442, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 413, 240, 241,
	331, 242, 243, 0, 244, 245, 332, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 444, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 395, 269, 270, 271, 272, 1067, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 414, 0, 281,
	282, 283, 284, 285, 338, 339, 0, 286, 445, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 421, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 0, 0, 0, 0,
	0, 401, 393, 404, 376, 377, 389, 403, 0, 0,
	0, 0, 0, 383, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 388, 0, 0, 44, 45, 0, 46, 47,
	424, 48, 49, 50, 0, 302, 425, 303, 304, 0,
	51, 52, 53, 54, 55, 398, 417, 56, 57, 305,
	306, 58, 0, 59, 60, 61, 62, 418, 0, 426,
	0, 63, 64, 65, 66, 427, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 428, 76, 77,
	78, 415, 406, 411, 416, 407, 408, 412, 79, 80,
	81, 82, 83, 84, 308, 309, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 97, 98, 99, 0, 100, 101, 102,
	0, 103, 0, 105, 0, 106, 107, 108, 109, 387,
	110, 111, 112, 311, 396, 113, 0, 114, 115, 312,
	116, 0, 117, 0, 118, 429, 0, 430, 119, 120,
	121, 0, 122, 419, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 0, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 432, 315, 140,
	141, 142, 143, 316, 317, 0, 318, 0, 144, 0,
	0, 145, 435, 146, 147, 148, 149, 150, 0, 0,
	151, 420, 436, 152, 0, 0, 153, 154, 155, 409,
	410, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 320, 438, 321, 171,
	172, 322, 379, 173, 174, 0, 175, 397, 323, 176,
	324, 177, 178, 179, 0, 180, 0, 0, 390, 182,
	183, 0, 0, 184, 325, 440, 185, 441, 326, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 329, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 442, 224, 225, 226, 330, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 413, 240, 241, 331, 242, 243, 0,
	244, 245, 332, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 444, 261, 262, 263, 264, 265, 0, 334,
	335, 0, 0, 266, 267, 336, 268, 337, 395, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 414, 0, 281, 282, 283, 284, 285,
	338, 339, 0, 286, 445, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 421, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 0, 0, 0, 30, 0, 0, 0, 0,
	376, 377, 0, 0, 0, 0, 0, 0, 0, 383,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 0, 0, 0, 44,
	45, 0, 46, 47, 0, 48, 49, 50, 301, 302,
	0, 303, 304, 0, 51, 52, 53, 54, 55, 0,
	0, 56, 57, 305, 306, 58, 0, 59, 60, 61,
	62, 307, 0, 0, 0, 63, 64, 65, 66, 0,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 0, 76, 77, 78, 0, 0, 0, 0, 0,
	0, 0, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 97, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 310, 110, 111, 112, 311, 0, 113,
	0, 114, 115, 312, 116, 0, 117, 0, 118, 0,
	0, 0, 119, 120, 121, 0, 122, 313, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 0, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 0, 315, 140, 141, 142, 143, 316, 317, 0,
	318, 0, 144, 0, 0, 145, 0, 146, 147, 148,
	149, 150, 0, 0, 151, 319, 0, 152, 0, 0,
	153, 154, 155, 0, 0, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 0, 321, 171, 172, 322, 0, 173, 174, 0,
	175, 0, 323, 176, 324, 177, 178, 179, 0, 180,
	0, 0, 181, 182, 183, 0, 0, 184, 325, 0,
	185, 0, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 0, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 0, 240, 241,
	331, 242, 243, 0, 244, 245, 332, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 0, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 0, 0, 281,
	282, 283, 284, 285, 338, 339, 0, 286, 0, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 0, 0, 0, 30,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 856, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	0, 0, 0, 44, 45, 0, 46, 47, 0, 48,
	49, 50, 301, 302, 0, 303, 304, 0, 51, 52,
	53, 54, 55, 0, 0, 56, 57, 305, 306, 58,
	0, 59, 60, 61, 62, 307, 0, 0, 0, 63,
	64, 65, 66, 0, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 0, 76, 77, 78, 0,
	0, 0, 0, 0, 0, 0, 79, 80, 81, 82,
	83, 84, 308, 309, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 97, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 310, 110, 111,
	112, 311, 0, 113, 0, 114, 115, 312, 116, 0,
	117, 0, 118, 0, 0, 0, 119, 120, 121, 0,
	122, 313, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 0, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 0, 315, 140, 141, 142,
	143, 316, 317, 0, 318, 0, 144, 0, 0, 145,
	0, 146, 147, 148, 149, 150, 0, 0, 151, 319,
	0, 152, 0, 0, 153, 154, 155, 0, 0, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 320, 0, 321, 171, 172, 322,
	0, 173, 174, 0, 175, 0, 323, 176, 324, 177,
	178, 179, 0, 180, 0, 0, 181, 182, 183, 0,
	0, 184, 325, 0, 185, 0, 326, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 329, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 0, 224, 225, 226, 330, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 0, 240, 241, 331, 242, 243, 0, 244, 245,
	332, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	0, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 0, 0, 281, 282, 283, 284, 285, 338, 339,
	0, 286, 0, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	0, 0, 0, 30, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 451, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 0, 0, 0, 44, 45, 0,
	46, 47, 0, 48, 49, 50, 301, 302, 0, 303,
	304, 0, 51, 52, 53, 54, 55, 0, 0, 56,
	57, 305, 306, 58, 0, 59, 60, 61, 62, 307,
	0, 0, 0, 63, 64, 65, 66, 0, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 0,
	76, 77, 78, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 81, 82, 83, 84, 308, 309, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 97, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 310, 110, 111, 112, 311, 0, 113, 0, 114,
	115, 312, 116, 0, 117, 0, 118, 0, 0, 0,
	119, 120, 121, 0, 122, 313, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 0, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 0,
	315, 140, 141, 142, 143, 316, 317, 0, 318, 0,
	144, 0, 0, 145, 0, 146, 147, 148, 149, 150,
	0, 0, 151, 319, 0, 152, 0, 0, 153, 154,
	155, 0, 0, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 320, 0,
	321, 171, 172, 322, 0, 173, 174, 0, 175, 0,
	323, 176, 324, 177, 178, 179, 0, 180, 0, 28,
	181, 182, 183, 0, 0, 184, 325, 0, 185, 0,
	326, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 329, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 0, 224, 225, 226,
	330, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 0, 240, 241, 331, 242,
	243, 0, 244, 245, 332, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 0, 261, 262, 263, 264, 265,
	0, 334, 335, 0, 0, 266, 267, 336, 268, 337,
	0, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 0, 0, 281, 282, 283,
	284, 285, 338, 339, 0, 286, 0, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 341, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 30, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 33,
	34, 35, 36, 37, 38, 39, 40, 0, 41, 42,
	43, 0, 0, 0, 0, 0, 0, 0, 44, 45,
	0, 46, 47, 0, 48, 49, 50, 301, 302, 0,
	303, 304, 0, 51, 52, 53, 54, 55, 0, 0,
	56, 57, 305, 306, 58, 0, 59, 60, 61, 62,
	307, 0, 0, 0, 63, 64, 65, 66, 0, 67,
	68, 69, 0, 70, 71, 72, 73, 74, 75, 0,
	0, 76, 77, 78, 0, 0, 0, 0, 0, 0,
	0, 79, 80, 81, 82, 83, 84, 308, 309, 85,
	0, 86, 0, 87, 88, 89, 90, 91, 0, 92,
	93, 94, 0, 0, 95, 96, 97, 98, 99, 0,
	100, 101, 102, 0, 103, 104, 105, 0, 106, 107,
	108, 109, 310, 110, 111, 112, 311, 0, 113, 0,
	114, 115, 312, 116, 0, 117, 0, 118, 0, 0,
	0, 119, 120, 121, 0, 122, 313, 0, 314, 123,
	0, 124, 125, 126, 127, 128, 0, 129, 130, 131,
	132, 0, 133, 134, 135, 136, 137, 138, 0, 139,
	0, 315, 140, 141, 142, 143, 316, 317, 0, 318,
	0, 144, 0, 0, 145, 0, 146, 147, 148, 149,
	150, 0, 0, 151, 319, 0, 152, 0, 0, 153,
	154, 155, 0, 0, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 320,
	0, 321, 171, 172, 322, 0, 173, 174, 0, 175,
	0, 323, 176, 324, 177, 178, 179, 0, 180, 0,
	0, 181, 182, 183, 0, 0, 184, 325, 0, 185,
	0, 326, 186, 187, 188, 189, 190, 191, 192, 0,
	193, 194, 327, 195, 328, 198, 196, 197, 0, 199,
	200, 201, 202, 203, 204, 205, 206, 329, 207, 208,
	209, 210, 0, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 222, 223, 0, 224, 225,
	226, 330, 227, 228, 229, 230, 231, 232, 233, 234,
	0, 235, 236, 237, 238, 239, 0, 240, 241, 331,
	242, 243, 0, 244, 245, 332, 246, 0, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	0, 258, 259, 0, 260, 0, 261, 262, 263, 264,
	265, 0, 334, 335, 0, 0, 266, 267, 336, 268,
	337, 0, 269, 270, 271, 272, 273, 274, 275, 0,
	0, 276, 277, 278, 279, 280, 0, 0, 281, 282,
	283, 284, 285, 338, 339, 0, 286, 0, 287, 288,
	289, 290, 0, 0, 291, 0, 0, 292, 293, 294,
	295, 296, 297, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 0, 0, 0, 44,
	45, 0, 46, 47, 0, 48, 49, 50, 301, 302,
	0, 303, 304, 0, 51, 52, 53, 54, 55, 0,
	0, 56, 57, 305, 306, 58, 0, 59, 60, 61,
	62, 307, 0, 0, 0, 63, 64, 65, 66, 0,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 0, 76, 77, 78, 0, 0, 0, 0, 0,
	0, 0, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 97, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 310, 110, 111, 112, 311, 0, 113,
	0, 114, 115, 312, 116, 0, 117, 0, 118, 0,
	0, 0, 119, 120, 121, 0, 122, 313, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 0, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 0, 315, 140, 141, 142, 143, 316, 317, 0,
	318, 0, 144, 0, 0, 145, 0, 146, 147, 148,
	149, 150, 0, 0, 151, 319, 0, 152, 0, 0,
	153, 154, 155, 0, 0, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 0, 321, 171, 172, 322, 0, 173, 174, 0,
	175, 0, 323, 176, 324, 177, 178, 179, 0, 180,
	0, 0, 181, 182, 183, 0, 0, 184, 325, 0,
	185, 0, 326, 186, 187, 188, 189, 0, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 0, 206, 329, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 0, 224,
	225, 226, 330, 0, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 0, 240, 241,
	331, 242, 243, 0, 244, 245, 332, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 0, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 0, 0, 281,
	282, 283, 284, 285, 338, 339, 0, 286, 0, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 0,
	41, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 46, 47, 424, 48, 49, 50, 0,
	590, 425, 0, 597, 0, 51, 52, 53, 54, 55,
	0, 0, 56, 57, 605, 604, 58, 0, 59, 60,
	61, 62, 0, 0, 426, 0, 63, 64, 65, 66,
	427, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 428, 76, 77, 78, 0, 0, 0, 603,
	0, 0, 0, 79, 80, 81, 82, 83, 84, 595,
	594, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 0, 0, 95, 96, 593, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 0, 110, 111, 112, 0, 0,
	113, 0, 114, 115, 592, 116, 0, 117, 0, 118,
	429, 0, 430, 119, 120, 121, 0, 122, 0, 0,
	0, 123, 0, 124, 125, 126, 127, 128, 431, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 432, 0, 140, 141, 142, 143, 587, 588,
	0, 0, 0, 144, 433, 434, 145, 435, 146, 147,
	148, 149, 150, 0, 0, 151, 0, 436, 152, 437,
	0, 153, 154, 155, 0, 0, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 607, 438, 608, 171, 172, 0, 0, 173, 174,
	439, 175, 0, 0, 176, 596, 177, 178, 179, 0,
	180, 0, 0, 181, 182, 183, 0, 0, 184, 0,
	440, 185, 441, 0, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 0, 195, 0, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 591,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 442,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 0, 240,
	241, 582, 242, 243, 443, 244, 245, 589, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 0, 0, 258, 259, 0, 260, 444, 261, 262,
	263, 264, 265, 0, 0, 0, 0, 0, 266, 267,
	0, 268, 0, 0, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 0, 0,
	281, 282, 283, 284, 285, 0, 606, 0, 286, 445,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 299, 300, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 0, 0, 0, 44,
	45, 0, 46, 47, 424, 48, 49, 50, 0, 590,
	425, 0, 597, 0, 51, 52, 53, 54, 55, 0,
	0, 56, 57, 605, 604, 58, 0, 59, 60, 61,
	62, 0, 0, 426, 0, 63, 64, 65, 66, 427,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 428, 76, 77, 78, 0, 0, 0, 603, 0,
	0, 0, 79, 80, 81, 82, 83, 84, 595, 594,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 593, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 0, 110, 111, 112, 0, 0, 113,
	0, 114, 115, 592, 116, 0, 117, 0, 118, 429,
	0, 430, 119, 120, 121, 0, 122, 0, 0, 0,
	123, 0, 124, 125, 126, 127, 128, 431, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 432, 0, 140, 141, 142, 143, 587, 588, 0,
	0, 0, 144, 433, 434, 145, 435, 146, 147, 148,
	149, 150, 0, 0, 151, 0, 436, 152, 437, 0,
	153, 154, 155, 0, 0, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	607, 438, 608, 171, 172, 0, 0, 173, 174, 439,
	175, 0, 0, 176, 596, 177, 178, 179, 0, 180,
	0, 0, 181, 182, 183, 0, 0, 184, 0, 440,
	185, 441, 0, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 0, 195, 0, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 591, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 442, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 0, 240, 241,
	0, 242, 243, 443, 244, 245, 589, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	0, 0, 258, 259, 0, 260, 444, 261, 262, 263,
	264, 265, 0, 0, 0, 0, 0, 266, 267, 0,
	268, 0, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 0, 0, 281,
	282, 283, 284, 285, 0, 606, 0, 286, 445, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 0, 0, 0, 0, 0, 389,
	0, 0, 491, 298, 299, 300, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 491, 0, 507, 0, 503, 504, 505, 0, 0,
	0, 493, 0, 0, 0, 0, 389, 516, 0, 491,
	0, 0, 507, 503, 504, 505, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	507, 492, 0, 0, 892, 0, 0, 0, 493, 389,
	0, 0, 491, 0, 516, 0, 503, 504, 505, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 0, 0, 891, 0, 492, 0,
	0, 493, 0, 0, 518, 0, 0, 516, 0, 389,
	0, 0, 491, 0, 0, 0, 503, 504, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 507, 0, 0, 517, 0, 0, 0,
	0, 493, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 389, 0, 0, 491, 0, 0, 0, 503, 504,
	505, 0, 0, 0, 0, 0, 511, 0, 0, 0,
	0, 492, 0, 0, 0, 507, 0, 0, 0, 0,
	1081, 0, 0, 493, 0, 511, 0, 0, 0, 516,
	0, 0, 513, 514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 0, 0, 0, 509, 0, 0,
	0, 513, 514, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 0, 0, 513,
	514, 0, 0, 0, 0, 0, 511, 0, 515, 0,
	0, 0, 0, 0, 509, 0, 0, 0, 0, 0,
	0, 519, 0, 0, 508, 0, 0, 515, 0, 0,
	0, 0, 513, 514, 0, 0, 0, 0, 0, 0,
	519, 0, 0, 508, 0, 515, 511, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 0,
	0, 508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 0, 0, 0, 0, 515, 0,
	1080, 0, 0, 0, 0, 0, 0, 509, 511, 0,
	0, 519, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 514, 0, 0, 515, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 509,
	0, 519, 0, 0, 508, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 491, 0,
	515, 0, 503, 504, 505, 0, 0, 0, 0, 0,
	0, 0, 512, 519, 0, 0, 508, 389, 0, 507,
	491, 0, 870, 0, 503, 504, 505, 493, 0, 0,
	0, 0, 0, 516, 0, 510, 0, 0, 0, 500,
	501, 502, 0, 494, 495, 496, 497, 498, 499, 493,
	0, 0, 512, 727, 510, 516, 0, 492, 500, 501,
	502, 0, 494, 495, 496, 497, 498, 499, 0, 0,
	1004, 0, 510, 0, 0, 0, 500, 501, 502, 492,
	494, 495, 496, 497, 498, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 510, 0, 0, 0, 500,
	501, 502, 0, 494, 495, 496, 497, 498, 499, 0,
	0, 0, 0, 945, 0, 0, 0, 0, 389, 0,
	0, 491, 0, 0, 0, 503, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 510, 0, 0, 0, 500,
	501, 502, 507, 494, 495, 496, 497, 498, 499, 0,
	493, 0, 511, 0, 0, 0, 516, 0, 0, 0,
	389, 0, 0, 491, 0, 0, 0, 503, 504, 505,
	0, 0, 0, 0, 511, 0, 0, 510, 513, 514,
	492, 500, 501, 502, 507, 494, 495, 496, 497, 498,
	499, 0, 493, 509, 0, 0, 0, 0, 516, 0,
	513, 514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 0, 0, 0, 0,
	0, 0, 492, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 0, 0,
	508, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 514, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 0, 0, 0, 509, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 513, 514, 0, 0, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 0,
	519, 0, 0, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 519, 0, 0, 500, 501, 502, 0, 494,
	495, 496, 497, 498, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 0, 0, 0, 500, 501, 502,
	0, 494, 495, 496, 497, 498, 499, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 0, 0, 0, 500, 501,
	502, 0, 494, 495, 496, 497, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 0, 0, 0,
	500, 501, 502, 0, 494, 495, 496, 497, 498, 499,
}
var yyPact = []int{

	-246, -1000, -363, -1000, -1000, -1000, 66, -246, 267, -371,
	9138, -318, -1000, -1000, 100, 263, 263, 263, 255, -332,
	-333, 4340, 4340, -1000, -22, -318, -1000, -280, 8704, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3904, 103, 130, 128, -13, -12, 110, -1000, 4784, 99,
	6092, -11, -246, -1000, -1000, -246, -246, 6092, -1000, -1000,
	-1000, -377, -1000, 11379, -1000, -1000, 6092, 6092, 6092, 6092,
	6092, -1000, -1000, 3468, -1000, -1000, -364, -299, -337, -1000,
	-316, -364, -1000, -1000, -1000, -1000, -1000, -1000, 6092, 137,
	-1000, -1000, -1000, -1000, -1000, -300, -1000, -301, -302, -303,
	-304, -1000, -1000, -1000, -1000, -1000, -1000, -305, -306, -307,
	-308, -314, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -377, -315, -1000, -1000,
	-1000, 9569, -381, -1000, 11788, -1000, -1000, -1000, -1000, -1000,
	-1000, -23, -17, -1000, 57, -1000, -143, -1000, -1000, -1000,
	11788, -1000, 109, -1000, -1000, -1000, -117, 11788, -1000, -51,
	9569, 68, -1000, -1000, -1000, 68, -379, -1000, 71, 122,
	4340, 10431, 9569, -180, 6092, 6092, 6092, 6092, 6092, 6092,
	6092, 6092, 6092, 6092, 6092, 6092, 7836, 6092, 6092, 6092,
	269, 6092, -186, 88, -1000, -1000, 171, 2156, -1000, -316,
	322, 322, 368, 11677, 11677, 11269, -372, -318, -364, -1000,
	1725, 6092, -1000, -1000, -1000, 3032, 361, -364, -232, 11788,
	-43, -319, 2587, 329, 329, 329, 329, 6092, 6092, 6092,
	6092, 6092, 122, 6092, -342, 3904, -1000, -1000, -211, -1000,
	-117, -1000, 6092, -1000, -1000, -1000, -1000, -1000, -1000, 25,
	-380, -1000, 6092, 1170, -270, -1000, -1000, -242, 6092, -1000,
	-1000, 276, 10850, -1000, -1000, -1000, -323, -1000, -1000, -1000,
	-1000, -1000, -322, -71, -323, -323, -323, -1000, -1000, -1000,
	-1000, -1000, 51, -1000, -225, -225, -1000, 239, -225, -1000,
	-359, -267, 402, 402, 161, 161, 161, 288, 1227, 1227,
	1227, 1227, 1227, 1227, 368, 11677, 11830, 1287, 6092, 6092,
	-189, 169, 1111, 6092, -1000, 149, -1000, -1000, -1000, 120,
	-324, 6528, 6528, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 123, -382, -383, -1000, 11788, -1000, -343, 50,
	-1000, 6092, -1000, 8270, -238, -1000, -228, 6092, 6092, -344,
	-1000, 11788, 347, -1000, -346, -347, -348, -350, 11655, -386,
	-390, -391, -396, -242, -400, -1000, -1000, -1000, -21, 1211,
	-1000, 9569, -1000, -270, -1000, -325, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 104, 101, 6092, -50, -1000, 11339, -289, -287, 275,
	-1000, 6092, -1000, 329, -1000, -1000, -1000, -1000, 329, -1000,
	-138, -1000, -1000, -1000, -225, -225, -1000, -360, 2156, 6092,
	6092, 937, 283, 6092, 6528, 6528, 6092, 266, -1000, -1000,
	-1000, -1000, 117, -326, 6092, 10431, 690, -1000, 6528, 6528,
	6528, 335, -364, -1000, 6092, 6092, -1000, -1000, -288, -1000,
	156, -1000, 6092, 11421, -1000, -1000, 10000, 6092, -351, 6092,
	-1000, -228, -228, -1000, 6092, 6092, -1000, -1000, -1000, -1000,
	10431, -1000, -1000, -1000, -1000, 101, -1000, -1000, -1000, -1000,
	-1000, 360, -1000, -1000, 97, 252, 11788, 6092, 60, 53,
	6092, 351, -1000, 121, 329, -289, -290, -401, -352, -353,
	9569, -1000, -1000, 2156, -1000, 285, 1003, 6092, 6092, 52,
	224, 205, 1003, 6092, 6092, 10431, 160, -402, -1000, 6092,
	10431, 6528, 6528, 6528, 6528, 6528, 6528, 6528, 6528, 6528,
	6528, 6528, 6528, 6964, 124, 318, 318, 294, 6092, -1000,
	11288, 11788, -1000, -1000, 11788, 6092, -60, -1000, 244, -1000,
	-1000, -354, -355, 11788, 11788, -356, 97, -357, -247, 6092,
	6092, -1000, 6092, 6092, -77, -1000, -1000, -292, -293, 329,
	-1000, -1000, 240, -1000, -1000, 1003, 1003, 6092, 6092, 6092,
	1003, 160, -406, -1000, 10431, 1003, -1000, 131, 131, 162,
	162, 162, 318, 833, 833, 833, 833, 833, 833, 294,
	113, 126, -327, 1003, -1000, 11788, -31, 251, -1000, -1000,
	-1000, -1000, -247, -1000, -1000, 9569, 11788, -385, -1000, 11788,
	-1000, -1000, -328, 6092, -1000, -1000, -297, -1000, 1003, 1003,
	1003, -1000, -1000, 6528, 111, -330, 10431, -95, 6092, -1000,
	-398, -1000, 273, 6092, 346, 11788, -1000, 1090, 6528, 10431,
	-410, -362, 5656, 5656, -411, 9569, -336, -1000, -412, -1000,
	1090, -414, -1000, -1000, -1000, -1000, 7400, 62, -109, 11306,
	-1000, -1000, -1000, 338, -1000, -1000, 279, -1000, -1000, -1000,
	-1000, -1000, -1000, 5220, -1000,
}
var yyPgo = []int{

	0, 472, 468, 375, 756, 225, 219, 465, 464, 324,
	461, 4, 460, 60, 36, 660, 409, 35, 37, 459,
	458, 25, 30, 8, 359, 457, 453, 22, 5, 187,
	32, 452, 452, 27, 34, 451, 450, 197, 449, 209,
	220, 445, 443, 442, 441, 439, 230, 438, 196, 437,
	436, 435, 434, 434, 23, 192, 433, 17, 21, 2,
	433, 432, 431, 0, 430, 429, 12, 428, 6, 14,
	350, 29, 426, 425, 424, 287, 423, 420, 418, 417,
	416, 26, 33, 413, 323, 412, 24, 19, 411, 406,
	404, 9, 7, 3, 403, 401, 399, 398, 10, 1,
	15, 397, 395, 394, 393, 39, 270, 16, 226, 11,
	392, 391, 389, 387, 18, 49, 384, 379, 377, 371,
	28, 20, 371,
}
var yyR1 = []int{

	0, 1, 1, 26, 26, 26, 27, 27, 27, 61,
	13, 13, 13, 103, 103, 104, 104, 114, 114, 114,
	114, 114, 114, 121, 121, 121, 115, 115, 115, 112,
	34, 34, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 76, 76, 116, 116, 117, 118, 119,
	119, 119, 119, 119, 119, 71, 71, 28, 28, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 85, 85, 85,
	85, 85, 88, 88, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 19, 19, 20, 20, 20, 20,
	20, 18, 18, 18, 50, 50, 50, 11, 11, 86,
	86, 87, 87, 87, 120, 120, 100, 100, 100, 101,
	101, 2, 2, 4, 4, 3, 3, 3, 3, 5,
	5, 6, 6, 6, 6, 6, 6, 6, 29, 70,
	70, 70, 10, 10, 12, 12, 23, 23, 24, 25,
	25, 22, 22, 66, 66, 67, 67, 68, 69, 69,
	46, 46, 45, 45, 47, 47, 48, 49, 49, 49,
	49, 51, 51, 91, 91, 90, 90, 92, 94, 94,
	94, 93, 95, 95, 96, 96, 97, 97, 97, 98,
	98, 99, 99, 99, 99, 99, 36, 36, 36, 36,
	37, 37, 37, 37, 38, 38, 39, 39, 40, 40,
	41, 41, 42, 43, 43, 43, 44, 30, 30, 31,
	31, 7, 7, 21, 21, 32, 32, 35, 35, 65,
	65, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 63, 63, 64, 64, 77, 80, 80,
	81, 79, 79, 78, 78, 102, 102, 54, 54, 54,
	54, 55, 55, 56, 56, 33, 33, 82, 82, 83,
	83, 84, 8, 8, 9, 9, 14, 14, 14, 14,
	52, 52, 58, 53, 53, 60, 57, 111, 111, 74,
	74, 74, 74, 74, 74, 75, 73, 72, 59, 59,
	59, 108, 108, 108, 122, 122, 122, 122, 105, 105,
	105, 105, 105, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110,
}
var yyR2 = []int{

	0, 1, 2, 1, 1, 0, 2, 2, 0, 1,
	1, 3, 2, 1, 2, 2, 3, 2, 3, 5,
	6, 2, 3, 3, 4, 0, 1, 1, 1, 2,
	3, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 1, 1, 5, 2, 2,
	2, 1, 3, 3, 2, 1, 0, 3, 0, 1,
	3, 3, 5, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 2, 4, 2,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 1, 3, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 5, 6, 6, 7, 1, 1, 4,
	1, 1, 1, 2, 2, 2, 2, 3, 5, 6,
	6, 4, 3, 1, 1, 1, 4, 1, 4, 1,
	4, 1, 4, 1, 1, 1, 1, 1, 1, 6,
	4, 4, 4, 4, 1, 3, 3, 4, 4, 7,
	5, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	3, 1, 3, 3, 1, 3, 3, 3, 2, 1,
	3, 1, 1, 3, 3, 1, 2, 4, 4, 1,
	1, 9, 9, 1, 2, 4, 4, 4, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 3, 1,
	3, 4, 3, 3, 0, 1, 3, 1, 2, 0,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 2, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 2, 2, 0, 1,
	4, 2, 2, 2, 2, 2, 1, 2, 2, 4,
	2, 2, 1, 1, 1, 0, 2, 5, 2, 3,
	1, 1, 1, 1, 3, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 0, 5, 0, 5, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 1, 4, 5, 1, 2,
	4, 2, 0, 1, 0, 1, 2, 2, 2, 3,
	5, 1, 2, 0, 2, 1, 0, 1, 1, 1,
	3, 3, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var yyChk = []int{

	-1000, -1, -2, -3, -4, -6, -5, 453, 331, -7,
	364, 404, 456, -24, -23, 390, 199, 138, 266, -3,
	-4, -12, -10, 28, 123, 457, -36, -58, 261, -59,
	5, -106, -107, 20, 21, 22, 23, 24, 25, 26,
	27, 29, 30, 31, 39, 40, 42, 43, 45, 46,
	47, 54, 55, 56, 57, 58, 61, 62, 65, 67,
	68, 69, 70, 75, 76, 77, 78, 80, 81, 82,
	84, 85, 86, 87, 88, 89, 92, 93, 94, 102,
	103, 104, 105, 106, 107, 110, 112, 114, 115, 116,
	117, 118, 120, 121, 122, 125, 126, 127, 128, 129,
	131, 132, 133, 135, 136, 137, 139, 140, 141, 142,
	144, 145, 146, 149, 151, 152, 154, 156, 158, 162,
	163, 164, 166, 170, 172, 173, 174, 175, 176, 178,
	179, 180, 181, 183, 184, 185, 186, 187, 188, 190,
	193, 194, 195, 196, 202, 205, 207, 208, 209, 210,
	211, 214, 217, 220, 221, 222, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 243, 244, 247, 248, 250, 253, 255, 256, 257,
	259, 262, 263, 264, 267, 270, 273, 274, 275, 276,
	277, 278, 279, 281, 282, 284, 287, 288, 286, 290,
	291, 292, 293, 294, 295, 296, 297, 299, 300, 301,
	302, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	313, 314, 316, 317, 319, 320, 321, 323, 324, 325,
	326, 327, 328, 329, 330, 332, 333, 334, 335, 336,
	338, 339, 341, 342, 344, 345, 347, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 362, 363,
	365, 367, 368, 369, 370, 371, 377, 378, 380, 383,
	384, 385, 386, 387, 388, 389, 392, 393, 394, 395,
	396, 399, 400, 401, 402, 403, 407, 409, 410, 411,
	412, 415, 418, 419, 420, 421, 422, 423, 433, 434,
	435, 48, 49, 51, 52, 63, 64, 71, 108, 109,
	143, 147, 153, 167, 169, 192, 197, 198, 200, 215,
	240, 242, 245, 252, 254, 268, 272, 283, 285, 298,
	322, 340, 346, 360, 373, 374, 379, 381, 404, 405,
	424, 425, 426, 427, 428, 429, 430, 431, 432, -84,
	453, -46, -37, -47, 155, -39, -40, -48, 219, 150,
	258, -49, -70, 28, 123, -70, -70, 54, 454, 454,
	-8, -9, -14, -15, 446, -17, 444, 445, -63, 246,
	436, -102, -74, 453, -77, -88, -4, 143, 36, 10,
	262, -59, -75, 6, -73, 382, 148, 251, 59, -85,
	-89, 5, -106, 11, 7, -111, 96, 99, 100, 223,
	224, 97, 101, 337, 397, 95, 98, 60, 71, 167,
	215, 425, -108, -109, 44, 50, 73, 79, 91, 159,
	161, 177, 191, 203, 204, 206, 216, 218, 241, 249,
	269, 271, 318, 343, 366, 408, -9, 260, -84, 446,
	-58, 453, -83, -82, -15, 111, -38, -37, -45, -46,
	-48, 155, 297, 396, 244, 341, 207, -40, -39, -41,
	-15, 28, -31, 152, 243, -42, -44, -15, -17, -51,
	256, -5, -6, -4, -5, -5, -25, -22, -15, -29,
	457, 13, 72, 42, 444, 445, 446, 447, 448, 449,
	440, 441, 442, 17, 18, 19, -63, 34, 265, 218,
	436, 177, 343, 203, 204, 249, 48, 37, 5, 262,
	-15, -15, -15, -15, -15, -15, -4, 404, -55, -54,
	455, 451, -4, -4, -100, 451, 453, -55, -78, -15,
	-35, 151, 453, 453, 453, 453, 453, 453, 453, 453,
	453, 453, -29, 453, -58, 457, 454, 261, 207, 341,
	-43, -72, 453, -75, -30, 322, 323, -50, 250, 345,
	-52, -58, 457, 398, -26, 38, 119, -18, 160, -14,
	-114, -115, 340, -112, -113, -116, -108, 197, 198, 346,
	49, 298, 153, 127, 109, 108, 254, 52, -117, -118,
	5, -106, -119, 98, 64, 63, 405, 240, 242, -103,
	-59, 373, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, -15, -15, 218, 177,
	343, 48, -15, 375, 251, 246, 382, 148, 392, 123,
	256, -33, 361, 41, -105, 5, -106, -107, -109, -110,
	28, 32, 33, 34, 35, 36, 37, 38, 41, 53,
	59, 60, 66, 72, 74, 83, 90, 95, 96, 97,
	99, 100, 101, 111, 113, 119, 123, 124, 130, 134,
	138, 148, 150, 155, 157, 160, 165, 168, 171, 182,
	189, 199, 201, 212, 213, 219, 223, 224, 246, 251,
	258, 260, 261, 265, 266, 280, 289, 303, 315, 331,
	337, 348, 361, 364, 372, 375, 376, 382, 390, 391,
	397, 398, 406, 413, 414, 416, 417, 454, -54, -57,
	446, -105, -15, -11, -101, 452, -15, -100, 4, -80,
	-81, 413, -94, 270, 453, 454, -86, 28, 123, 446,
	-87, -15, -61, -108, -75, -75, -75, -75, -15, -11,
	-11, -11, -11, -18, -11, 454, -82, 396, -30, -15,
	227, 457, -22, -64, -65, 262, 10, -62, 444, 445,
	446, 447, 448, 449, 440, 441, 442, 17, 18, 19,
	-27, 437, -21, 414, -13, -20, -15, -121, 36, -115,
	-34, 453, -76, 453, 285, -34, -34, -34, 453, -28,
	64, -71, 407, -71, 64, 63, -71, -104, 455, 435,
	136, -15, -15, 375, -33, 361, 136, -15, 251, 382,
	148, 392, 123, 256, 160, 453, -16, -17, 444, 445,
	-63, -16, -56, 452, 458, 457, 452, 452, 457, 454,
	-79, -81, 130, -15, -93, -59, 453, 414, -23, 457,
	-24, -86, -86, 454, 15, 16, 454, 454, 454, 454,
	37, 454, 454, 454, 454, -21, 454, 261, 454, -58,
	-27, 453, 152, 211, -66, 168, -15, 457, 91, 241,
	206, 37, 5, 451, 451, -121, 36, -11, -75, -75,
	338, -71, -71, 455, -57, -15, -15, 136, 136, -15,
	-16, -16, -15, 136, 160, 453, -15, -120, -114, 34,
	13, 444, 445, 446, 447, 448, 449, 440, 441, 442,
	17, 18, 19, -63, 203, -16, -16, -16, 34, -54,
	-15, -15, -100, 134, -15, 372, -95, -59, -15, 454,
	-87, -23, -23, -15, -15, -114, -66, 4, -69, 171,
	54, -13, 206, 206, -13, 5, 452, -75, -75, 451,
	454, 454, 454, -59, -57, -15, -15, 136, 34, 34,
	-15, -15, -120, 454, 457, -15, -114, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	123, 246, 256, -15, 452, -15, -96, 277, 454, 454,
	454, 454, -69, 454, -91, 416, -15, -67, -68, -15,
	-13, -13, 398, 260, 452, 452, -75, -28, -15, -15,
	-15, 454, -114, 160, 123, 256, 453, -23, 54, -91,
	-90, -92, -59, 457, 453, -15, 452, -16, 160, 453,
	-120, -97, 296, 323, -11, 457, 37, -68, -19, 5,
	-16, -120, 454, 454, -98, -99, 48, 387, 94, -15,
	-98, -92, -93, 457, 454, 454, -99, 284, 154, 322,
	284, 154, 5, 34, -99,
}
var yyDef = []int{

	0, -2, 1, 201, -2, -2, 227, 0, 225, 213,
	0, 0, 2, -2, 0, 221, 221, 221, 0, 0,
	210, 353, 0, 224, 222, 0, 214, 276, 0, 362,
	378, 379, 380, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 301,
	0, 285, 243, 240, 0, 282, 283, 244, 0, 0,
	0, 252, 0, 219, 220, 0, 0, 0, 203, 204,
	218, 352, 354, 358, 359, 59, 0, 0, 0, 0,
	0, 137, 138, 0, 140, 141, 142, 670, 0, 323,
	541, 335, 369, 370, 371, 372, 373, 374, 334, 308,
	153, -2, -2, 375, 376, 0, 154, 155, 157, 159,
	161, 163, 164, 165, 166, 167, -2, 0, 667, 673,
	679, 701, 367, 383, 709, 710, 711, 712, 713, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 218, 0, 302, 277,
	278, 0, 0, 349, 347, 348, 207, 284, 208, 242,
	245, 0, 0, 247, 0, 249, 0, 280, 281, 286,
	290, 291, 295, 299, 300, 288, 0, 292, -2, 186,
	0, 215, 209, 210, 216, 217, 228, 229, 5, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 97, 99, 346, 0, 357, 0,
	63, 64, 78, 82, 83, 0, -2, 698, 143, 341,
	0, 0, 144, 145, 146, 0, 0, -2, 0, 333,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 351, 241, 0, 250,
	0, 293, 0, 377, 289, 297, 298, 246, 184, 0,
	251, 360, 0, 0, 8, 3, 4, 304, 0, 355,
	60, 25, 0, 26, 27, 28, 31, 32, 33, 34,
	35, 36, 44, 457, 31, 31, 31, 42, 45, 46,
	381, 382, 58, 714, 56, 56, 51, 0, 56, 61,
	13, 0, 65, 66, 67, 68, 69, 70, -2, -2,
	-2, -2, -2, -2, 77, 80, 81, -2, 0, 0,
	0, 346, -2, 0, 96, 0, 100, 102, 104, 0,
	0, 0, 0, 345, 356, 388, 389, 390, 391, 392,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 803, 804, 805, 806, 807, 808, 343, 342, 337,
	338, 366, 0, 0, 0, 198, 187, 199, 0, 332,
	328, 0, 152, 0, 0, 147, 227, 0, 0, 0,
	189, 191, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 279, 350, 248, 0, 0,
	185, 0, 230, 8, 325, 0, 309, 310, 311, 312,
	313, 314, 315, 316, 317, 318, 319, 320, 321, 322,
	232, 0, 234, 0, 181, 182, 10, 17, 21, 25,
	29, 0, 37, 0, 38, 39, 40, 41, 0, 48,
	0, 49, 55, 50, 56, 56, 54, 14, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 98, 101,
	103, 105, 0, 0, 0, 0, 0, 114, 0, 0,
	0, 0, 139, 339, 0, 0, 196, 197, 0, 324,
	0, 329, 0, 0, 258, 259, 263, 0, 0, 0,
	226, 227, 227, 151, 0, 0, 156, 158, 160, 162,
	0, 170, 171, 172, 173, 234, 223, 287, 294, 361,
	231, 0, 6, 7, 239, 0, 303, 0, 0, 0,
	0, 0, 12, 0, 0, 18, 22, 0, 0, 0,
	0, 52, 53, 0, 15, 62, -2, 0, 0, -2,
	0, 0, -2, 0, 0, 0, -2, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 0, 116, 117, 131, 0, 344,
	0, 188, 200, 327, 331, 0, 265, 262, 0, 148,
	190, 0, 0, 192, 193, 0, 239, 0, 254, 0,
	0, 176, 0, 0, 0, 11, 23, 0, 0, 0,
	30, 43, 58, 57, 16, -2, -2, 0, 0, 0,
	-2, -2, 0, 108, 0, -2, 115, 118, 119, 120,
	121, 122, 123, -2, -2, -2, -2, -2, -2, 130,
	0, 0, 0, -2, 340, 330, 227, 0, 307, 149,
	150, 169, 254, 326, 211, 0, 238, 233, 235, 237,
	177, 178, 0, 0, 24, 19, 0, 47, -2, -2,
	-2, 109, 195, 0, 0, 0, 0, 268, 0, 212,
	253, 255, 0, 0, 0, 180, 20, -2, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 236, 0, 174,
	-2, 0, 135, 261, 266, 269, -2, 633, 438, 0,
	267, 256, 257, 0, 179, 136, 0, 271, 272, 273,
	274, 275, 175, 0, 270,
}
var yyTok1 = []int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 448, 3, 3,
	453, 454, 446, 444, 457, 445, 455, 447, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 458, 456,
	440, 442, 441, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 451, 3, 452, 449,
}
var yyTok2 = []int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = []int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 443, 57783, 450, 0,
}

//line yaccpar:1

/*	parser for yacc output	*/

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

const yyFlag = -1000

func yyTokname(c int) string {
	// 4 is TOKSTART above
	if c >= 4 && c-4 < len(yyToknames) {
		if yyToknames[c-4] != "" {
			return yyToknames[c-4]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yylex1(lex yyLexer, lval *yySymType) int {
	c := 0
	char := lex.Lex(lval)
	if char <= 0 {
		c = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		c = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			c = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		c = yyTok3[i+0]
		if c == char {
			c = yyTok3[i+1]
			goto out
		}
	}

out:
	if c == 0 {
		c = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(c), uint(char))
	}
	return c
}

func yyParse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yychar), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar = yylex1(yylex, &yylval)
	}
	yyn += yychar
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yychar { /* valid shift */
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yychar {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error("syntax error")
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yychar))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}
			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		//line sql.y:356
		{
			yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
			yylex.(*sqlLex).stmt = yyS[yypt-0].sqlSelect
		}
	case 2:
		//line sql.y:361
		{
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
			yyVAL.sqlSelect.Semicolon = true
			yylex.(*sqlLex).stmt = yyS[yypt-1].sqlSelect
		}
	case 3:
		//line sql.y:368
		{
			yyVAL.str = "asc"
		}
	case 4:
		//line sql.y:369
		{
			yyVAL.str = "desc"
		}
	case 5:
		//line sql.y:370
		{
			yyVAL.str = ""
		}
	case 6:
		//line sql.y:373
		{
			yyVAL.str = "first"
		}
	case 7:
		//line sql.y:374
		{
			yyVAL.str = "last"
		}
	case 8:
		//line sql.y:375
		{
			yyVAL.str = ""
		}
	case 9:
		yyVAL.str = yyS[yypt-0].str
	case 10:
		//line sql.y:384
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 11:
		//line sql.y:388
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 12:
		//line sql.y:392
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 13:
		//line sql.y:399
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 14:
		//line sql.y:403
		{
			yyVAL.anyName = AnyName{yyS[yypt-1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyS[yypt-0].anyName...)
		}
	case 15:
		//line sql.y:410
		{
			yyVAL.anyName = AnyName{yyS[yypt-0].str}
		}
	case 16:
		//line sql.y:414
		{
			yyVAL.anyName = append(yyS[yypt-2].anyName, yyS[yypt-0].str)
		}
	case 17:
		//line sql.y:431
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 18:
		//line sql.y:436
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyS[yypt-0].optArrayBounds
		}
	case 19:
		//line sql.y:443
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerLiteral{yyS[yypt-1].iconst}
		}
	case 20:
		//line sql.y:449
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerLiteral{yyS[yypt-1].iconst}
		}
	case 21:
		//line sql.y:456
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 22:
		//line sql.y:461
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 23:
		//line sql.y:469
		{
			yyVAL.optArrayBounds = append(yyS[yypt-2].optArrayBounds, "")
		}
	case 24:
		//line sql.y:473
		{
			yyVAL.optArrayBounds = append(yyS[yypt-3].optArrayBounds, yyS[yypt-1].iconst)
		}
	case 25:
		//line sql.y:477
		{
			yyVAL.optArrayBounds = nil
		}
	case 26:
		//line sql.y:480
		{
			yyVAL.pgType = yyS[yypt-0].pgType
		}
	case 27:
		//line sql.y:481
		{
			yyVAL.pgType = yyS[yypt-0].pgType
		}
	case 28:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 29:
		//line sql.y:529
		{
			yyVAL.pgType = PgType{Name: yyS[yypt-1].str, TypeMods: yyS[yypt-0].fields}
		}
	case 30:
		//line sql.y:540
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 31:
		//line sql.y:541
		{
			yyVAL.fields = nil
		}
	case 32:
		//line sql.y:548
		{
			yyVAL.pgType = PgType{Name: "int"}
		}
	case 33:
		//line sql.y:552
		{
			yyVAL.pgType = PgType{Name: "integer"}
		}
	case 34:
		//line sql.y:556
		{
			yyVAL.pgType = PgType{Name: "smallint"}
		}
	case 35:
		//line sql.y:560
		{
			yyVAL.pgType = PgType{Name: "bigint"}
		}
	case 36:
		//line sql.y:564
		{
			yyVAL.pgType = PgType{Name: "real"}
		}
	case 37:
		//line sql.y:568
		{
			yyVAL.pgType = PgType{Name: "float"}
			if yyS[yypt-0].iconst != IntegerLiteral("") {
				yyVAL.pgType.TypeMods = []Expr{yyS[yypt-0].iconst}
			}
		}
	case 38:
		//line sql.y:575
		{
			yyVAL.pgType = PgType{Name: "double precision"}
		}
	case 39:
		//line sql.y:579
		{
			yyVAL.pgType = PgType{Name: "decimal", TypeMods: yyS[yypt-0].fields}
		}
	case 40:
		//line sql.y:583
		{
			yyVAL.pgType = PgType{Name: "dec", TypeMods: yyS[yypt-0].fields}
		}
	case 41:
		//line sql.y:587
		{
			yyVAL.pgType = PgType{Name: "numeric", TypeMods: yyS[yypt-0].fields}
		}
	case 42:
		//line sql.y:591
		{
			yyVAL.pgType = PgType{Name: "bool"}
		}
	case 43:
		//line sql.y:597
		{
			yyVAL.iconst = yyS[yypt-1].iconst
		}
	case 44:
		//line sql.y:601
		{
			yyVAL.iconst = IntegerLiteral("")
		}
	case 45:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 46:
		yyVAL.pgType = yyS[yypt-0].pgType
	case 47:
		//line sql.y:626
		{
			yyVAL.pgType = yyS[yypt-4].pgType
			yyVAL.pgType.TypeMods = []Expr{yyS[yypt-2].iconst}
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 48:
		//line sql.y:634
		{
			yyVAL.pgType = yyS[yypt-1].pgType
			yyVAL.pgType.CharSet = yyS[yypt-0].str
		}
	case 49:
		//line sql.y:641
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 50:
		//line sql.y:649
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 51:
		//line sql.y:657
		{
			yyVAL.pgType = PgType{Name: "varchar"}
		}
	case 52:
		//line sql.y:661
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 53:
		//line sql.y:669
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 54:
		//line sql.y:677
		{
			if yyS[yypt-0].boolean {
				yyVAL.pgType = PgType{Name: "varchar"}
			} else {
				yyVAL.pgType = PgType{Name: "char"}
			}
		}
	case 55:
		//line sql.y:687
		{
			yyVAL.boolean = true
		}
	case 56:
		//line sql.y:691
		{
			yyVAL.boolean = false
		}
	case 57:
		//line sql.y:697
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 58:
		//line sql.y:701
		{
			yyVAL.str = ""
		}
	case 59:
		yyVAL.expr = yyS[yypt-0].expr
	case 60:
		//line sql.y:745
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 61:
		//line sql.y:749
		{
			yyVAL.expr = CollateExpr{Expr: yyS[yypt-2].expr, Collation: yyS[yypt-0].anyName}
		}
	case 62:
		//line sql.y:753
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyS[yypt-4].expr, TimeZone: yyS[yypt-0].expr}
		}
	case 63:
		//line sql.y:766
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyS[yypt-0].expr}
		}
	case 64:
		//line sql.y:770
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyS[yypt-0].expr}
		}
	case 65:
		//line sql.y:774
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "+", Right: yyS[yypt-0].expr}
		}
	case 66:
		//line sql.y:778
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "-", Right: yyS[yypt-0].expr}
		}
	case 67:
		//line sql.y:782
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "*", Right: yyS[yypt-0].expr}
		}
	case 68:
		//line sql.y:786
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "/", Right: yyS[yypt-0].expr}
		}
	case 69:
		//line sql.y:790
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "%", Right: yyS[yypt-0].expr}
		}
	case 70:
		//line sql.y:794
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "^", Right: yyS[yypt-0].expr}
		}
	case 71:
		//line sql.y:798
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<", Right: yyS[yypt-0].expr}
		}
	case 72:
		//line sql.y:802
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">", Right: yyS[yypt-0].expr}
		}
	case 73:
		//line sql.y:806
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "=", Right: yyS[yypt-0].expr}
		}
	case 74:
		//line sql.y:810
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<=", Right: yyS[yypt-0].expr}
		}
	case 75:
		//line sql.y:814
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">=", Right: yyS[yypt-0].expr}
		}
	case 76:
		//line sql.y:818
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "!=", Right: yyS[yypt-0].expr}
		}
	case 77:
		//line sql.y:822
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].str, Right: yyS[yypt-0].expr}
		}
	case 78:
		//line sql.y:826
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].str, Expr: yyS[yypt-0].expr}
		}
	case 79:
		//line sql.y:830
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].str}
		}
	case 80:
		//line sql.y:834
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "and", Right: yyS[yypt-0].expr}
		}
	case 81:
		//line sql.y:838
		{
			yyVAL.expr = BooleanExpr{Left: yyS[yypt-2].expr, Operator: "or", Right: yyS[yypt-0].expr}
		}
	case 82:
		//line sql.y:842
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 83:
		//line sql.y:846
		{
			yyVAL.expr = NotExpr{Expr: yyS[yypt-0].expr}
		}
	case 84:
		//line sql.y:850
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "like", Right: yyS[yypt-0].expr}
		}
	case 85:
		//line sql.y:854
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 86:
		//line sql.y:858
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not like", Right: yyS[yypt-0].expr}
		}
	case 87:
		//line sql.y:862
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not like", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 88:
		//line sql.y:866
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-2].expr, Operator: "ilike", Right: yyS[yypt-0].expr}
		}
	case 89:
		//line sql.y:870
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 90:
		//line sql.y:874
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "not ilike", Right: yyS[yypt-0].expr}
		}
	case 91:
		//line sql.y:878
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "not ilike", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 92:
		//line sql.y:883
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-3].expr, Operator: "similar to", Right: yyS[yypt-0].expr}
		}
	case 93:
		//line sql.y:887
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-5].expr, Operator: "similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 94:
		//line sql.y:891
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-4].expr, Operator: "not similar to", Right: yyS[yypt-0].expr}
		}
	case 95:
		//line sql.y:895
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyS[yypt-6].expr, Operator: "not similar to", Right: yyS[yypt-2].expr, Escape: yyS[yypt-0].expr}
		}
	case 96:
		//line sql.y:908
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-2].expr}
		}
	case 97:
		//line sql.y:912
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr}
		}
	case 98:
		//line sql.y:916
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-3].expr, Not: true}
		}
	case 99:
		//line sql.y:920
		{
			yyVAL.expr = IsNullExpr{Expr: yyS[yypt-1].expr, Not: true}
		}
	case 100:
		//line sql.y:927
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "true"}
		}
	case 101:
		//line sql.y:931
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "true"}
		}
	case 102:
		//line sql.y:935
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "false"}
		}
	case 103:
		//line sql.y:939
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "false"}
		}
	case 104:
		//line sql.y:943
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-2].expr, Op: "unknown"}
		}
	case 105:
		//line sql.y:947
		{
			yyVAL.expr = IsBoolOpExpr{Expr: yyS[yypt-3].expr, Not: true, Op: "unknown"}
		}
	case 106:
		//line sql.y:951
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: "is distinct from", Right: yyS[yypt-0].expr}
		}
	case 107:
		//line sql.y:955
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: "is not distinct from", Right: yyS[yypt-0].expr}
		}
	case 108:
		//line sql.y:959
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 109:
		//line sql.y:963
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 110:
		//line sql.y:967
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 111:
		//line sql.y:971
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 112:
		//line sql.y:975
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-5].expr, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 113:
		//line sql.y:979
		{
			yyVAL.expr = BetweenExpr{Expr: yyS[yypt-6].expr, Not: true, Symmetric: true, Left: yyS[yypt-2].expr, Right: yyS[yypt-0].expr}
		}
	case 114:
		//line sql.y:1002
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 115:
		//line sql.y:1006
		{
			yyVAL.expr = TypecastExpr{Expr: yyS[yypt-2].expr, Typename: yyS[yypt-0].pgType}
		}
	case 116:
		//line sql.y:1010
		{
			yyVAL.expr = UnaryExpr{Operator: "+", Expr: yyS[yypt-0].expr}
		}
	case 117:
		//line sql.y:1014
		{
			yyVAL.expr = UnaryExpr{Operator: "-", Expr: yyS[yypt-0].expr}
		}
	case 118:
		//line sql.y:1018
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "+", Right: yyS[yypt-0].expr}
		}
	case 119:
		//line sql.y:1022
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "-", Right: yyS[yypt-0].expr}
		}
	case 120:
		//line sql.y:1026
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "*", Right: yyS[yypt-0].expr}
		}
	case 121:
		//line sql.y:1030
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "/", Right: yyS[yypt-0].expr}
		}
	case 122:
		//line sql.y:1034
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "%", Right: yyS[yypt-0].expr}
		}
	case 123:
		//line sql.y:1038
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "^", Right: yyS[yypt-0].expr}
		}
	case 124:
		//line sql.y:1042
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<", Right: yyS[yypt-0].expr}
		}
	case 125:
		//line sql.y:1046
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">", Right: yyS[yypt-0].expr}
		}
	case 126:
		//line sql.y:1050
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "=", Right: yyS[yypt-0].expr}
		}
	case 127:
		//line sql.y:1054
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "<=", Right: yyS[yypt-0].expr}
		}
	case 128:
		//line sql.y:1058
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: ">=", Right: yyS[yypt-0].expr}
		}
	case 129:
		//line sql.y:1062
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: "!=", Right: yyS[yypt-0].expr}
		}
	case 130:
		//line sql.y:1066
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-2].expr, Operator: yyS[yypt-1].str, Right: yyS[yypt-0].expr}
		}
	case 131:
		//line sql.y:1070
		{
			yyVAL.expr = UnaryExpr{Operator: yyS[yypt-1].str, Expr: yyS[yypt-0].expr}
		}
	case 132:
		//line sql.y:1074
		{
			yyVAL.expr = PostfixExpr{Expr: yyS[yypt-1].expr, Operator: yyS[yypt-0].str}
		}
	case 133:
		//line sql.y:1078
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-4].expr, Operator: "is distinct from", Right: yyS[yypt-0].expr}
		}
	case 134:
		//line sql.y:1082
		{
			yyVAL.expr = BinaryExpr{Left: yyS[yypt-5].expr, Operator: "is not distinct from", Right: yyS[yypt-0].expr}
		}
	case 135:
		//line sql.y:1086
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-5].expr, Types: yyS[yypt-1].pgTypes}
		}
	case 136:
		//line sql.y:1090
		{
			yyVAL.expr = IsOfExpr{Expr: yyS[yypt-6].expr, Not: true, Types: yyS[yypt-1].pgTypes}
		}
	case 137:
		//line sql.y:1116
		{
			yyVAL.expr = yyS[yypt-0].columnRef
		}
	case 138:
		//line sql.y:1117
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 139:
		//line sql.y:1123
		{
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-2].expr, Indirection: yyS[yypt-0].indirection}
		}
	case 140:
		//line sql.y:1126
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 141:
		//line sql.y:1127
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 142:
		//line sql.y:1129
		{
			yyVAL.expr = yyS[yypt-0].sqlSelect
		}
	case 143:
		//line sql.y:1133
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyS[yypt-1].sqlSelect, Indirection: yyS[yypt-0].indirection}
		}
	case 144:
		//line sql.y:1138
		{
			yyVAL.expr = ExistsExpr(*yyS[yypt-0].sqlSelect)
		}
	case 145:
		//line sql.y:1142
		{
			yyVAL.expr = ArraySubselect(*yyS[yypt-0].sqlSelect)
		}
	case 146:
		//line sql.y:1145
		{
			yyVAL.expr = ArrayConstructorExpr(yyS[yypt-0].arrayExpr)
		}
	case 147:
		//line sql.y:1158
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-2].str}
		}
	case 148:
		//line sql.y:1162
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-4].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 149:
		//line sql.y:1170
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 150:
		//line sql.y:1174
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-5].str, Distinct: true, Args: yyS[yypt-2].funcArgs, OrderClause: yyS[yypt-1].orderClause}
		}
	case 151:
		//line sql.y:1178
		{
			yyVAL.funcApplication = FuncApplication{Name: yyS[yypt-3].str, Star: true}
		}
	case 152:
		//line sql.y:1194
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyS[yypt-2].funcApplication, FilterClause: yyS[yypt-1].filterClause, OverClause: yyS[yypt-0].overClause}
		}
	case 153:
		//line sql.y:1198
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 154:
		//line sql.y:1213
		{
			yyVAL.expr = FuncExprNoParens("current_date")
		}
	case 155:
		//line sql.y:1217
		{
			yyVAL.expr = FuncExprNoParens("current_time")
		}
	case 156:
		//line sql.y:1221
		{
			yyVAL.expr = FuncApplication{Name: "current_time", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 157:
		//line sql.y:1225
		{
			yyVAL.expr = FuncExprNoParens("current_timestamp")
		}
	case 158:
		//line sql.y:1229
		{
			yyVAL.expr = FuncApplication{Name: "current_timestamp", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 159:
		//line sql.y:1233
		{
			yyVAL.expr = FuncExprNoParens("localtime")
		}
	case 160:
		//line sql.y:1237
		{
			yyVAL.expr = FuncApplication{Name: "localtime", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 161:
		//line sql.y:1241
		{
			yyVAL.expr = FuncExprNoParens("localtimestamp")
		}
	case 162:
		//line sql.y:1245
		{
			yyVAL.expr = FuncApplication{Name: "localtimestamp", Args: []FuncArg{{Expr: yyS[yypt-1].iconst}}}
		}
	case 163:
		//line sql.y:1249
		{
			yyVAL.expr = FuncExprNoParens("current_role")
		}
	case 164:
		//line sql.y:1253
		{
			yyVAL.expr = FuncExprNoParens("current_user")
		}
	case 165:
		//line sql.y:1257
		{
			yyVAL.expr = FuncExprNoParens("session_user")
		}
	case 166:
		//line sql.y:1261
		{
			yyVAL.expr = FuncExprNoParens("user")
		}
	case 167:
		//line sql.y:1265
		{
			yyVAL.expr = FuncExprNoParens("current_catalog")
		}
	case 168:
		//line sql.y:1269
		{
			yyVAL.expr = FuncExprNoParens("current_schema")
		}
	case 169:
		//line sql.y:1273
		{
			yyVAL.expr = CastFunc{Expr: yyS[yypt-3].expr, Type: yyS[yypt-1].pgType}
		}
	case 170:
		//line sql.y:1289
		{
			fa := FuncApplication{Name: "coalesce"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 171:
		//line sql.y:1297
		{
			fa := FuncApplication{Name: "greatest"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 172:
		//line sql.y:1305
		{
			fa := FuncApplication{Name: "least"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 173:
		//line sql.y:1313
		{
			fa := FuncApplication{Name: "xmlconcat"}
			for _, e := range yyS[yypt-1].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 174:
		//line sql.y:1339
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 175:
		//line sql.y:1343
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 176:
		//line sql.y:1349
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-2].expr, Join: ",", Right: yyS[yypt-0].expr}
		}
	case 177:
		//line sql.y:1353
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "cross join", Right: yyS[yypt-0].expr}
		}
	case 178:
		//line sql.y:1357
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-3].expr, Join: "natural join", Right: yyS[yypt-0].expr}
		}
	case 179:
		//line sql.y:1361
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-6].expr, Join: "join", Right: yyS[yypt-4].expr, Using: yyS[yypt-1].identifiers}
		}
	case 180:
		//line sql.y:1365
		{
			yyVAL.expr = JoinExpr{Left: yyS[yypt-4].expr, Join: "join", Right: yyS[yypt-2].expr, On: yyS[yypt-0].expr}
		}
	case 181:
		//line sql.y:1371
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 182:
		//line sql.y:1375
		{
			yyVAL.fromClause = &FromClause{Expr: yyS[yypt-0].expr}
		}
	case 183:
		//line sql.y:1378
		{
			yyVAL.fromClause = nil
		}
	case 184:
		//line sql.y:1382
		{
			yyVAL.str = "nowait"
		}
	case 185:
		//line sql.y:1383
		{
			yyVAL.str = "skip locked"
		}
	case 186:
		//line sql.y:1384
		{
			yyVAL.str = ""
		}
	case 187:
		//line sql.y:1389
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 188:
		//line sql.y:1393
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 189:
		//line sql.y:1400
		{
			yyVAL.funcArgs = []FuncArg{yyS[yypt-0].funcArg}
		}
	case 190:
		//line sql.y:1404
		{
			yyVAL.funcArgs = append(yyS[yypt-2].funcArgs, yyS[yypt-0].funcArg)
		}
	case 191:
		//line sql.y:1410
		{
			yyVAL.funcArg = FuncArg{Expr: yyS[yypt-0].expr}
		}
	case 192:
		//line sql.y:1414
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: ":=", Expr: yyS[yypt-0].expr}
		}
	case 193:
		//line sql.y:1418
		{
			yyVAL.funcArg = FuncArg{Name: yyS[yypt-2].str, NameOp: "=>", Expr: yyS[yypt-0].expr}
		}
	case 194:
		//line sql.y:1424
		{
			yyVAL.pgTypes = []PgType{yyS[yypt-0].pgType}
		}
	case 195:
		//line sql.y:1428
		{
			yyVAL.pgTypes = append(yyS[yypt-2].pgTypes, yyS[yypt-0].pgType)
		}
	case 196:
		//line sql.y:1434
		{
			yyVAL.arrayExpr = ArrayExpr(yyS[yypt-1].fields)
		}
	case 197:
		//line sql.y:1438
		{
			yyVAL.arrayExpr = yyS[yypt-1].arrayExpr
		}
	case 198:
		//line sql.y:1442
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 199:
		//line sql.y:1448
		{
			yyVAL.arrayExpr = ArrayExpr{yyS[yypt-0].arrayExpr}
		}
	case 200:
		//line sql.y:1452
		{
			yyVAL.arrayExpr = append(yyS[yypt-2].arrayExpr, yyS[yypt-0].arrayExpr)
		}
	case 201:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 202:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 203:
		//line sql.y:1508
		{
			yyS[yypt-1].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 204:
		//line sql.y:1512
		{
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 205:
		//line sql.y:1516
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 206:
		//line sql.y:1522
		{
			yyS[yypt-1].sqlSelect.OrderClause = yyS[yypt-0].orderClause
			yyVAL.sqlSelect = yyS[yypt-1].sqlSelect
		}
	case 207:
		//line sql.y:1527
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-1].lockingClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-0].limitClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 208:
		//line sql.y:1534
		{
			yyS[yypt-3].sqlSelect.OrderClause = yyS[yypt-2].orderClause
			yyS[yypt-3].sqlSelect.LimitClause = yyS[yypt-1].limitClause
			yyS[yypt-3].sqlSelect.LockingClause = yyS[yypt-0].lockingClause
			yyVAL.sqlSelect = yyS[yypt-3].sqlSelect
		}
	case 209:
		//line sql.y:1543
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyS[yypt-0].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 210:
		yyVAL.sqlSelect = yyS[yypt-0].sqlSelect
	case 211:
		//line sql.y:1577
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 212:
		//line sql.y:1590
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyS[yypt-7].fields
			ss.TargetList = yyS[yypt-6].fields
			ss.FromClause = yyS[yypt-4].fromClause
			ss.WhereClause = yyS[yypt-3].whereClause
			ss.GroupByClause = yyS[yypt-2].groupByClause
			ss.HavingClause = yyS[yypt-1].expr
			ss.WindowClause = yyS[yypt-0].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 213:
		//line sql.y:1602
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyS[yypt-0].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 214:
		//line sql.y:1608
		{
			ss := &SimpleSelect{}
			ss.Table = yyS[yypt-0].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 215:
		//line sql.y:1614
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 216:
		//line sql.y:1623
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 217:
		//line sql.y:1632
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyS[yypt-3].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyS[yypt-1].boolean
			ss.RightSelect = yyS[yypt-0].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 218:
		//line sql.y:1656
		{
			yyVAL.placeholder = nil
		}
	case 219:
		//line sql.y:1661
		{
			yyVAL.boolean = true
		}
	case 220:
		//line sql.y:1662
		{
			yyVAL.boolean = false
		}
	case 221:
		//line sql.y:1663
		{
			yyVAL.boolean = false
		}
	case 222:
		//line sql.y:1668
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 223:
		//line sql.y:1669
		{
			yyVAL.fields = yyS[yypt-1].fields
		}
	case 224:
		//line sql.y:1672
		{
			yyVAL.placeholder = nil
		}
	case 225:
		//line sql.y:1673
		{
			yyVAL.placeholder = nil
		}
	case 226:
		//line sql.y:1676
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 227:
		//line sql.y:1677
		{
			yyVAL.orderClause = nil
		}
	case 228:
		//line sql.y:1680
		{
			yyVAL.orderClause = yyS[yypt-0].orderClause
		}
	case 229:
		//line sql.y:1684
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyS[yypt-0].orderExpr}}
		}
	case 230:
		//line sql.y:1688
		{
			yyS[yypt-2].orderClause.Exprs = append(yyS[yypt-2].orderClause.Exprs, yyS[yypt-0].orderExpr)
			yyVAL.orderClause = yyS[yypt-2].orderClause
		}
	case 231:
		//line sql.y:1696
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-3].expr, Using: yyS[yypt-1].str, Nulls: yyS[yypt-0].str}
		}
	case 232:
		//line sql.y:1700
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyS[yypt-2].expr, Order: yyS[yypt-1].str, Nulls: yyS[yypt-0].str}
		}
	case 233:
		//line sql.y:1725
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyS[yypt-0].fields}
		}
	case 234:
		//line sql.y:1726
		{
			yyVAL.groupByClause = nil
		}
	case 235:
		//line sql.y:1730
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 236:
		//line sql.y:1734
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 237:
		yyVAL.expr = yyS[yypt-0].expr
	case 238:
		//line sql.y:1747
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 239:
		//line sql.y:1748
		{
			yyVAL.expr = nil
		}
	case 240:
		//line sql.y:1751
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 241:
		//line sql.y:1752
		{
			yyVAL.lockingClause = nil
		}
	case 242:
		//line sql.y:1755
		{
			yyVAL.lockingClause = yyS[yypt-0].lockingClause
		}
	case 243:
		//line sql.y:1756
		{
			yyVAL.lockingClause = nil
		}
	case 244:
		//line sql.y:1760
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyS[yypt-0].lockingItem}}
		}
	case 245:
		//line sql.y:1764
		{
			yyS[yypt-1].lockingClause.Locks = append(yyS[yypt-1].lockingClause.Locks, yyS[yypt-0].lockingItem)
			yyVAL.lockingClause = yyS[yypt-1].lockingClause
		}
	case 246:
		//line sql.y:1771
		{
			yyVAL.lockingItem = LockingItem{Strength: yyS[yypt-2].str, LockedRels: yyS[yypt-1].identifiers, WaitPolicy: yyS[yypt-0].str}
		}
	case 247:
		//line sql.y:1776
		{
			yyVAL.str = "update"
		}
	case 248:
		//line sql.y:1777
		{
			yyVAL.str = "no key update"
		}
	case 249:
		//line sql.y:1778
		{
			yyVAL.str = "share"
		}
	case 250:
		//line sql.y:1779
		{
			yyVAL.str = "key share"
		}
	case 251:
		//line sql.y:1782
		{
			yyVAL.identifiers = yyS[yypt-0].identifiers
		}
	case 252:
		//line sql.y:1783
		{
			yyVAL.identifiers = nil
		}
	case 253:
		//line sql.y:1791
		{
			yyVAL.windowDefinitions = yyS[yypt-0].windowDefinitions
		}
	case 254:
		//line sql.y:1794
		{
			yyVAL.windowDefinitions = nil
		}
	case 255:
		//line sql.y:1798
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyS[yypt-0].windowDefinition}
		}
	case 256:
		//line sql.y:1802
		{
			yyVAL.windowDefinitions = append(yyS[yypt-2].windowDefinitions, yyS[yypt-0].windowDefinition)
		}
	case 257:
		//line sql.y:1808
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyS[yypt-2].str, Specification: yyS[yypt-0].windowSpecification}
		}
	case 258:
		//line sql.y:1814
		{
			spec := yyS[yypt-0].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 259:
		//line sql.y:1819
		{
			yyVAL.overClause = &OverClause{Name: yyS[yypt-0].str}
		}
	case 260:
		//line sql.y:1822
		{
			yyVAL.overClause = nil
		}
	case 261:
		//line sql.y:1826
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyS[yypt-4].str, PartitionClause: yyS[yypt-3].partitionClause, OrderClause: yyS[yypt-2].orderClause, FrameClause: yyS[yypt-1].frameClause}
		}
	case 262:
		//line sql.y:1841
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 263:
		//line sql.y:1842
		{
			yyVAL.str = ""
		}
	case 264:
		//line sql.y:1845
		{
			yyVAL.partitionClause = PartitionClause(yyS[yypt-0].fields)
		}
	case 265:
		//line sql.y:1846
		{
			yyVAL.partitionClause = nil
		}
	case 266:
		//line sql.y:1857
		{
			yyS[yypt-0].frameClause.Mode = "range"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 267:
		//line sql.y:1862
		{
			yyS[yypt-0].frameClause.Mode = "rows"
			yyVAL.frameClause = yyS[yypt-0].frameClause
		}
	case 268:
		//line sql.y:1867
		{
			yyVAL.frameClause = nil
		}
	case 269:
		//line sql.y:1873
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-0].frameBound}
		}
	case 270:
		//line sql.y:1877
		{
			yyVAL.frameClause = &FrameClause{Start: yyS[yypt-2].frameBound, End: yyS[yypt-0].frameBound}
		}
	case 271:
		//line sql.y:1888
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 272:
		//line sql.y:1892
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 273:
		//line sql.y:1896
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 274:
		//line sql.y:1900
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "preceding"}
		}
	case 275:
		//line sql.y:1904
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyS[yypt-1].expr, Direction: "following"}
		}
	case 276:
		//line sql.y:1912
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str}
		}
	case 277:
		//line sql.y:1916
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Star: true}
		}
	case 278:
		//line sql.y:1920
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-0].str, Only: true}
		}
	case 279:
		//line sql.y:1924
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyS[yypt-1].str, Only: true}
		}
	case 280:
		//line sql.y:1932
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-1].expr, Offset: yyS[yypt-0].expr}
		}
	case 281:
		//line sql.y:1936
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr, Offset: yyS[yypt-1].expr}
		}
	case 282:
		//line sql.y:1940
		{
			yyVAL.limitClause = &LimitClause{Limit: yyS[yypt-0].expr}
		}
	case 283:
		//line sql.y:1944
		{
			yyVAL.limitClause = &LimitClause{Offset: yyS[yypt-0].expr}
		}
	case 284:
		yyVAL.limitClause = yyS[yypt-0].limitClause
	case 285:
		//line sql.y:1951
		{
			yyVAL.limitClause = nil
		}
	case 286:
		//line sql.y:1955
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 287:
		//line sql.y:1960
		{
			yyVAL.expr = yyS[yypt-2].expr
		}
	case 288:
		//line sql.y:1966
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 289:
		//line sql.y:1971
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 290:
		//line sql.y:1976
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 291:
		//line sql.y:1978
		{
			yyVAL.expr = nil
		}
	case 292:
		//line sql.y:1983
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 293:
		//line sql.y:1992
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 294:
		//line sql.y:1993
		{
			yyVAL.expr = yyS[yypt-1].expr
		}
	case 295:
		//line sql.y:1994
		{
			yyVAL.expr = IntegerLiteral("1")
		}
	case 296:
		//line sql.y:2001
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 297:
		//line sql.y:2005
		{
			yyVAL.placeholder = 0
		}
	case 298:
		//line sql.y:2006
		{
			yyVAL.placeholder = 0
		}
	case 299:
		//line sql.y:2009
		{
			yyVAL.placeholder = 0
		}
	case 300:
		//line sql.y:2010
		{
			yyVAL.placeholder = 0
		}
	case 301:
		//line sql.y:2014
		{
			yyVAL.valuesClause = ValuesClause{yyS[yypt-0].valuesRow}
		}
	case 302:
		//line sql.y:2018
		{
			yyVAL.valuesClause = append(yyS[yypt-2].valuesClause, yyS[yypt-0].valuesRow)
		}
	case 303:
		//line sql.y:2035
		{
			yyVAL.whereClause = &WhereClause{Expr: yyS[yypt-0].expr}
		}
	case 304:
		//line sql.y:2036
		{
			yyVAL.whereClause = nil
		}
	case 305:
		//line sql.y:2045
		{
			panic("TODO")
		}
	case 306:
		//line sql.y:2046
		{
			yyVAL.placeholder = nil
		}
	case 307:
		//line sql.y:2051
		{
			yyVAL.filterClause = &FilterClause{Expr: yyS[yypt-1].expr}
		}
	case 308:
		//line sql.y:2054
		{
			yyVAL.filterClause = nil
		}
	case 309:
		//line sql.y:2058
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 310:
		//line sql.y:2059
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 311:
		//line sql.y:2062
		{
			yyVAL.str = "+"
		}
	case 312:
		//line sql.y:2063
		{
			yyVAL.str = "-"
		}
	case 313:
		//line sql.y:2064
		{
			yyVAL.str = "*"
		}
	case 314:
		//line sql.y:2065
		{
			yyVAL.str = "/"
		}
	case 315:
		//line sql.y:2066
		{
			yyVAL.str = "%"
		}
	case 316:
		//line sql.y:2067
		{
			yyVAL.str = "^"
		}
	case 317:
		//line sql.y:2068
		{
			yyVAL.str = "<"
		}
	case 318:
		//line sql.y:2069
		{
			yyVAL.str = ">"
		}
	case 319:
		//line sql.y:2070
		{
			yyVAL.str = "="
		}
	case 320:
		//line sql.y:2071
		{
			yyVAL.str = "<="
		}
	case 321:
		//line sql.y:2072
		{
			yyVAL.str = ">="
		}
	case 322:
		//line sql.y:2073
		{
			yyVAL.str = "<>"
		}
	case 323:
		//line sql.y:2076
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 324:
		//line sql.y:2077
		{
			yyVAL.str = yyS[yypt-1].str
		}
	case 325:
		//line sql.y:2080
		{
			yyVAL.str = string(yyS[yypt-0].str)
		}
	case 326:
		//line sql.y:2081
		{
			yyVAL.str = yyS[yypt-1].str
		}
	case 327:
		//line sql.y:2093
		{
			yyVAL.expr = CaseExpr{CaseArg: yyS[yypt-3].expr, WhenClauses: yyS[yypt-2].whenClauses, Default: yyS[yypt-1].expr}
		}
	case 328:
		//line sql.y:2100
		{
			yyVAL.whenClauses = []WhenClause{yyS[yypt-0].whenClause}
		}
	case 329:
		//line sql.y:2104
		{
			yyVAL.whenClauses = append(yyS[yypt-1].whenClauses, yyS[yypt-0].whenClause)
		}
	case 330:
		//line sql.y:2110
		{
			yyVAL.whenClause = WhenClause{When: yyS[yypt-2].expr, Then: yyS[yypt-0].expr}
		}
	case 331:
		//line sql.y:2115
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 332:
		//line sql.y:2116
		{
			yyVAL.expr = nil
		}
	case 333:
		//line sql.y:2119
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 334:
		//line sql.y:2120
		{
			yyVAL.expr = nil
		}
	case 335:
		//line sql.y:2124
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-0].str}
		}
	case 336:
		//line sql.y:2128
		{
			yyVAL.columnRef = ColumnRef{Name: yyS[yypt-1].str, Indirection: yyS[yypt-0].indirection}
		}
	case 337:
		//line sql.y:2136
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyS[yypt-0].str}
		}
	case 338:
		//line sql.y:2140
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 339:
		//line sql.y:2144
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-1].expr}
		}
	case 340:
		//line sql.y:2148
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyS[yypt-3].expr, UpperSubscript: yyS[yypt-1].expr}
		}
	case 341:
		//line sql.y:2153
		{
			yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
		}
	case 342:
		//line sql.y:2154
		{
			yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
		}
	case 343:
		//line sql.y:2157
		{
			yyVAL.indirection = nil
		}
	case 344:
		//line sql.y:2159
		{
			if yyS[yypt-1].indirection != nil {
				yyVAL.indirection = append(yyS[yypt-1].indirection, yyS[yypt-0].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyS[yypt-0].indirectionEl}
			}
		}
	case 345:
		//line sql.y:2169
		{
			yyVAL.placeholder = nil
		}
	case 346:
		//line sql.y:2173
		{
			yyVAL.placeholder = nil
		}
	case 347:
		//line sql.y:2185
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 348:
		//line sql.y:2186
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 349:
		//line sql.y:2190
		{
			yyVAL.valuesRow = ValuesRow{yyS[yypt-0].expr}
		}
	case 350:
		//line sql.y:2194
		{
			yyVAL.valuesRow = append(yyS[yypt-2].valuesRow, yyS[yypt-0].expr)
		}
	case 351:
		//line sql.y:2205
		{
			yyVAL.valuesRow = yyS[yypt-1].valuesRow
		}
	case 352:
		//line sql.y:2216
		{
			yyVAL.fields = yyS[yypt-0].fields
		}
	case 353:
		//line sql.y:2217
		{
			yyVAL.fields = nil
		}
	case 354:
		//line sql.y:2220
		{
			yyVAL.fields = []Expr{yyS[yypt-0].expr}
		}
	case 355:
		//line sql.y:2222
		{
			yyVAL.fields = append(yyS[yypt-2].fields, yyS[yypt-0].expr)
		}
	case 356:
		//line sql.y:2228
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-2].expr, Alias: yyS[yypt-0].str}
		}
	case 357:
		//line sql.y:2232
		{
			yyVAL.expr = AliasedExpr{Expr: yyS[yypt-1].expr, Alias: yyS[yypt-0].str}
		}
	case 358:
		yyVAL.expr = yyS[yypt-0].expr
	case 359:
		//line sql.y:2237
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 360:
		//line sql.y:2251
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 361:
		//line sql.y:2255
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 362:
		//line sql.y:2268
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 363:
		//line sql.y:2300
		{
			yyVAL.identifiers = []string{yyS[yypt-0].str}
		}
	case 364:
		//line sql.y:2302
		{
			yyVAL.identifiers = append(yyS[yypt-2].identifiers, yyS[yypt-0].str)
		}
	case 365:
		//line sql.y:2307
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 366:
		//line sql.y:2310
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 367:
		//line sql.y:2323
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 368:
		//line sql.y:2327
		{
			panic("TODO")
		}
	case 369:
		//line sql.y:2337
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 370:
		//line sql.y:2341
		{
			yyVAL.expr = FloatConst(yyS[yypt-0].str)
		}
	case 371:
		//line sql.y:2345
		{
			yyVAL.expr = yyS[yypt-0].expr
		}
	case 372:
		//line sql.y:2358
		{
			yyVAL.expr = BoolLiteral(true)
		}
	case 373:
		//line sql.y:2362
		{
			yyVAL.expr = BoolLiteral(false)
		}
	case 374:
		//line sql.y:2366
		{
			yyVAL.expr = NullLiteral{}
		}
	case 375:
		//line sql.y:2370
		{
			yyVAL.iconst = IntegerLiteral(yyS[yypt-0].str)
		}
	case 376:
		//line sql.y:2371
		{
			yyVAL.expr = StringLiteral(yyS[yypt-0].str)
		}
	case 377:
		//line sql.y:2374
		{
			yyVAL.expr = yyS[yypt-0].iconst
		}
	case 378:
		yyVAL.str = yyS[yypt-0].str
	case 379:
		yyVAL.str = yyS[yypt-0].str
	case 380:
		yyVAL.str = yyS[yypt-0].str
	case 381:
		yyVAL.str = yyS[yypt-0].str
	case 382:
		yyVAL.str = yyS[yypt-0].str
	case 383:
		yyVAL.str = yyS[yypt-0].str
	case 388:
		//line sql.y:2417
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 389:
		//line sql.y:2418
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 390:
		//line sql.y:2419
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 391:
		//line sql.y:2420
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 392:
		//line sql.y:2421
		{
			yyVAL.str = yyS[yypt-0].str
		}
	case 393:
		yyVAL.str = yyS[yypt-0].str
	case 394:
		yyVAL.str = yyS[yypt-0].str
	case 395:
		yyVAL.str = yyS[yypt-0].str
	case 396:
		yyVAL.str = yyS[yypt-0].str
	case 397:
		yyVAL.str = yyS[yypt-0].str
	case 398:
		yyVAL.str = yyS[yypt-0].str
	case 399:
		yyVAL.str = yyS[yypt-0].str
	case 400:
		yyVAL.str = yyS[yypt-0].str
	case 401:
		yyVAL.str = yyS[yypt-0].str
	case 402:
		yyVAL.str = yyS[yypt-0].str
	case 403:
		yyVAL.str = yyS[yypt-0].str
	case 404:
		yyVAL.str = yyS[yypt-0].str
	case 405:
		yyVAL.str = yyS[yypt-0].str
	case 406:
		yyVAL.str = yyS[yypt-0].str
	case 407:
		yyVAL.str = yyS[yypt-0].str
	case 408:
		yyVAL.str = yyS[yypt-0].str
	case 409:
		yyVAL.str = yyS[yypt-0].str
	case 410:
		yyVAL.str = yyS[yypt-0].str
	case 411:
		yyVAL.str = yyS[yypt-0].str
	case 412:
		yyVAL.str = yyS[yypt-0].str
	case 413:
		yyVAL.str = yyS[yypt-0].str
	case 414:
		yyVAL.str = yyS[yypt-0].str
	case 415:
		yyVAL.str = yyS[yypt-0].str
	case 416:
		yyVAL.str = yyS[yypt-0].str
	case 417:
		yyVAL.str = yyS[yypt-0].str
	case 418:
		yyVAL.str = yyS[yypt-0].str
	case 419:
		yyVAL.str = yyS[yypt-0].str
	case 420:
		yyVAL.str = yyS[yypt-0].str
	case 421:
		yyVAL.str = yyS[yypt-0].str
	case 422:
		yyVAL.str = yyS[yypt-0].str
	case 423:
		yyVAL.str = yyS[yypt-0].str
	case 424:
		yyVAL.str = yyS[yypt-0].str
	case 425:
		yyVAL.str = yyS[yypt-0].str
	case 426:
		yyVAL.str = yyS[yypt-0].str
	case 427:
		yyVAL.str = yyS[yypt-0].str
	case 428:
		yyVAL.str = yyS[yypt-0].str
	case 429:
		yyVAL.str = yyS[yypt-0].str
	case 430:
		yyVAL.str = yyS[yypt-0].str
	case 431:
		yyVAL.str = yyS[yypt-0].str
	case 432:
		yyVAL.str = yyS[yypt-0].str
	case 433:
		yyVAL.str = yyS[yypt-0].str
	case 434:
		yyVAL.str = yyS[yypt-0].str
	case 435:
		yyVAL.str = yyS[yypt-0].str
	case 436:
		yyVAL.str = yyS[yypt-0].str
	case 437:
		yyVAL.str = yyS[yypt-0].str
	case 438:
		yyVAL.str = yyS[yypt-0].str
	case 439:
		yyVAL.str = yyS[yypt-0].str
	case 440:
		yyVAL.str = yyS[yypt-0].str
	case 441:
		yyVAL.str = yyS[yypt-0].str
	case 442:
		yyVAL.str = yyS[yypt-0].str
	case 443:
		yyVAL.str = yyS[yypt-0].str
	case 444:
		yyVAL.str = yyS[yypt-0].str
	case 445:
		yyVAL.str = yyS[yypt-0].str
	case 446:
		yyVAL.str = yyS[yypt-0].str
	case 447:
		yyVAL.str = yyS[yypt-0].str
	case 448:
		yyVAL.str = yyS[yypt-0].str
	case 449:
		yyVAL.str = yyS[yypt-0].str
	case 450:
		yyVAL.str = yyS[yypt-0].str
	case 451:
		yyVAL.str = yyS[yypt-0].str
	case 452:
		yyVAL.str = yyS[yypt-0].str
	case 453:
		yyVAL.str = yyS[yypt-0].str
	case 454:
		yyVAL.str = yyS[yypt-0].str
	case 455:
		yyVAL.str = yyS[yypt-0].str
	case 456:
		yyVAL.str = yyS[yypt-0].str
	case 457:
		yyVAL.str = yyS[yypt-0].str
	case 458:
		yyVAL.str = yyS[yypt-0].str
	case 459:
		yyVAL.str = yyS[yypt-0].str
	case 460:
		yyVAL.str = yyS[yypt-0].str
	case 461:
		yyVAL.str = yyS[yypt-0].str
	case 462:
		yyVAL.str = yyS[yypt-0].str
	case 463:
		yyVAL.str = yyS[yypt-0].str
	case 464:
		yyVAL.str = yyS[yypt-0].str
	case 465:
		yyVAL.str = yyS[yypt-0].str
	case 466:
		yyVAL.str = yyS[yypt-0].str
	case 467:
		yyVAL.str = yyS[yypt-0].str
	case 468:
		yyVAL.str = yyS[yypt-0].str
	case 469:
		yyVAL.str = yyS[yypt-0].str
	case 470:
		yyVAL.str = yyS[yypt-0].str
	case 471:
		yyVAL.str = yyS[yypt-0].str
	case 472:
		yyVAL.str = yyS[yypt-0].str
	case 473:
		yyVAL.str = yyS[yypt-0].str
	case 474:
		yyVAL.str = yyS[yypt-0].str
	case 475:
		yyVAL.str = yyS[yypt-0].str
	case 476:
		yyVAL.str = yyS[yypt-0].str
	case 477:
		yyVAL.str = yyS[yypt-0].str
	case 478:
		yyVAL.str = yyS[yypt-0].str
	case 479:
		yyVAL.str = yyS[yypt-0].str
	case 480:
		yyVAL.str = yyS[yypt-0].str
	case 481:
		yyVAL.str = yyS[yypt-0].str
	case 482:
		yyVAL.str = yyS[yypt-0].str
	case 483:
		yyVAL.str = yyS[yypt-0].str
	case 484:
		yyVAL.str = yyS[yypt-0].str
	case 485:
		yyVAL.str = yyS[yypt-0].str
	case 486:
		yyVAL.str = yyS[yypt-0].str
	case 487:
		yyVAL.str = yyS[yypt-0].str
	case 488:
		yyVAL.str = yyS[yypt-0].str
	case 489:
		yyVAL.str = yyS[yypt-0].str
	case 490:
		yyVAL.str = yyS[yypt-0].str
	case 491:
		yyVAL.str = yyS[yypt-0].str
	case 492:
		yyVAL.str = yyS[yypt-0].str
	case 493:
		yyVAL.str = yyS[yypt-0].str
	case 494:
		yyVAL.str = yyS[yypt-0].str
	case 495:
		yyVAL.str = yyS[yypt-0].str
	case 496:
		yyVAL.str = yyS[yypt-0].str
	case 497:
		yyVAL.str = yyS[yypt-0].str
	case 498:
		yyVAL.str = yyS[yypt-0].str
	case 499:
		yyVAL.str = yyS[yypt-0].str
	case 500:
		yyVAL.str = yyS[yypt-0].str
	case 501:
		yyVAL.str = yyS[yypt-0].str
	case 502:
		yyVAL.str = yyS[yypt-0].str
	case 503:
		yyVAL.str = yyS[yypt-0].str
	case 504:
		yyVAL.str = yyS[yypt-0].str
	case 505:
		yyVAL.str = yyS[yypt-0].str
	case 506:
		yyVAL.str = yyS[yypt-0].str
	case 507:
		yyVAL.str = yyS[yypt-0].str
	case 508:
		yyVAL.str = yyS[yypt-0].str
	case 509:
		yyVAL.str = yyS[yypt-0].str
	case 510:
		yyVAL.str = yyS[yypt-0].str
	case 511:
		yyVAL.str = yyS[yypt-0].str
	case 512:
		yyVAL.str = yyS[yypt-0].str
	case 513:
		yyVAL.str = yyS[yypt-0].str
	case 514:
		yyVAL.str = yyS[yypt-0].str
	case 515:
		yyVAL.str = yyS[yypt-0].str
	case 516:
		yyVAL.str = yyS[yypt-0].str
	case 517:
		yyVAL.str = yyS[yypt-0].str
	case 518:
		yyVAL.str = yyS[yypt-0].str
	case 519:
		yyVAL.str = yyS[yypt-0].str
	case 520:
		yyVAL.str = yyS[yypt-0].str
	case 521:
		yyVAL.str = yyS[yypt-0].str
	case 522:
		yyVAL.str = yyS[yypt-0].str
	case 523:
		yyVAL.str = yyS[yypt-0].str
	case 524:
		yyVAL.str = yyS[yypt-0].str
	case 525:
		yyVAL.str = yyS[yypt-0].str
	case 526:
		yyVAL.str = yyS[yypt-0].str
	case 527:
		yyVAL.str = yyS[yypt-0].str
	case 528:
		yyVAL.str = yyS[yypt-0].str
	case 529:
		yyVAL.str = yyS[yypt-0].str
	case 530:
		yyVAL.str = yyS[yypt-0].str
	case 531:
		yyVAL.str = yyS[yypt-0].str
	case 532:
		yyVAL.str = yyS[yypt-0].str
	case 533:
		yyVAL.str = yyS[yypt-0].str
	case 534:
		yyVAL.str = yyS[yypt-0].str
	case 535:
		yyVAL.str = yyS[yypt-0].str
	case 536:
		yyVAL.str = yyS[yypt-0].str
	case 537:
		yyVAL.str = yyS[yypt-0].str
	case 538:
		yyVAL.str = yyS[yypt-0].str
	case 539:
		yyVAL.str = yyS[yypt-0].str
	case 540:
		yyVAL.str = yyS[yypt-0].str
	case 541:
		yyVAL.str = yyS[yypt-0].str
	case 542:
		yyVAL.str = yyS[yypt-0].str
	case 543:
		yyVAL.str = yyS[yypt-0].str
	case 544:
		yyVAL.str = yyS[yypt-0].str
	case 545:
		yyVAL.str = yyS[yypt-0].str
	case 546:
		yyVAL.str = yyS[yypt-0].str
	case 547:
		yyVAL.str = yyS[yypt-0].str
	case 548:
		yyVAL.str = yyS[yypt-0].str
	case 549:
		yyVAL.str = yyS[yypt-0].str
	case 550:
		yyVAL.str = yyS[yypt-0].str
	case 551:
		yyVAL.str = yyS[yypt-0].str
	case 552:
		yyVAL.str = yyS[yypt-0].str
	case 553:
		yyVAL.str = yyS[yypt-0].str
	case 554:
		yyVAL.str = yyS[yypt-0].str
	case 555:
		yyVAL.str = yyS[yypt-0].str
	case 556:
		yyVAL.str = yyS[yypt-0].str
	case 557:
		yyVAL.str = yyS[yypt-0].str
	case 558:
		yyVAL.str = yyS[yypt-0].str
	case 559:
		yyVAL.str = yyS[yypt-0].str
	case 560:
		yyVAL.str = yyS[yypt-0].str
	case 561:
		yyVAL.str = yyS[yypt-0].str
	case 562:
		yyVAL.str = yyS[yypt-0].str
	case 563:
		yyVAL.str = yyS[yypt-0].str
	case 564:
		yyVAL.str = yyS[yypt-0].str
	case 565:
		yyVAL.str = yyS[yypt-0].str
	case 566:
		yyVAL.str = yyS[yypt-0].str
	case 567:
		yyVAL.str = yyS[yypt-0].str
	case 568:
		yyVAL.str = yyS[yypt-0].str
	case 569:
		yyVAL.str = yyS[yypt-0].str
	case 570:
		yyVAL.str = yyS[yypt-0].str
	case 571:
		yyVAL.str = yyS[yypt-0].str
	case 572:
		yyVAL.str = yyS[yypt-0].str
	case 573:
		yyVAL.str = yyS[yypt-0].str
	case 574:
		yyVAL.str = yyS[yypt-0].str
	case 575:
		yyVAL.str = yyS[yypt-0].str
	case 576:
		yyVAL.str = yyS[yypt-0].str
	case 577:
		yyVAL.str = yyS[yypt-0].str
	case 578:
		yyVAL.str = yyS[yypt-0].str
	case 579:
		yyVAL.str = yyS[yypt-0].str
	case 580:
		yyVAL.str = yyS[yypt-0].str
	case 581:
		yyVAL.str = yyS[yypt-0].str
	case 582:
		yyVAL.str = yyS[yypt-0].str
	case 583:
		yyVAL.str = yyS[yypt-0].str
	case 584:
		yyVAL.str = yyS[yypt-0].str
	case 585:
		yyVAL.str = yyS[yypt-0].str
	case 586:
		yyVAL.str = yyS[yypt-0].str
	case 587:
		yyVAL.str = yyS[yypt-0].str
	case 588:
		yyVAL.str = yyS[yypt-0].str
	case 589:
		yyVAL.str = yyS[yypt-0].str
	case 590:
		yyVAL.str = yyS[yypt-0].str
	case 591:
		yyVAL.str = yyS[yypt-0].str
	case 592:
		yyVAL.str = yyS[yypt-0].str
	case 593:
		yyVAL.str = yyS[yypt-0].str
	case 594:
		yyVAL.str = yyS[yypt-0].str
	case 595:
		yyVAL.str = yyS[yypt-0].str
	case 596:
		yyVAL.str = yyS[yypt-0].str
	case 597:
		yyVAL.str = yyS[yypt-0].str
	case 598:
		yyVAL.str = yyS[yypt-0].str
	case 599:
		yyVAL.str = yyS[yypt-0].str
	case 600:
		yyVAL.str = yyS[yypt-0].str
	case 601:
		yyVAL.str = yyS[yypt-0].str
	case 602:
		yyVAL.str = yyS[yypt-0].str
	case 603:
		yyVAL.str = yyS[yypt-0].str
	case 604:
		yyVAL.str = yyS[yypt-0].str
	case 605:
		yyVAL.str = yyS[yypt-0].str
	case 606:
		yyVAL.str = yyS[yypt-0].str
	case 607:
		yyVAL.str = yyS[yypt-0].str
	case 608:
		yyVAL.str = yyS[yypt-0].str
	case 609:
		yyVAL.str = yyS[yypt-0].str
	case 610:
		yyVAL.str = yyS[yypt-0].str
	case 611:
		yyVAL.str = yyS[yypt-0].str
	case 612:
		yyVAL.str = yyS[yypt-0].str
	case 613:
		yyVAL.str = yyS[yypt-0].str
	case 614:
		yyVAL.str = yyS[yypt-0].str
	case 615:
		yyVAL.str = yyS[yypt-0].str
	case 616:
		yyVAL.str = yyS[yypt-0].str
	case 617:
		yyVAL.str = yyS[yypt-0].str
	case 618:
		yyVAL.str = yyS[yypt-0].str
	case 619:
		yyVAL.str = yyS[yypt-0].str
	case 620:
		yyVAL.str = yyS[yypt-0].str
	case 621:
		yyVAL.str = yyS[yypt-0].str
	case 622:
		yyVAL.str = yyS[yypt-0].str
	case 623:
		yyVAL.str = yyS[yypt-0].str
	case 624:
		yyVAL.str = yyS[yypt-0].str
	case 625:
		yyVAL.str = yyS[yypt-0].str
	case 626:
		yyVAL.str = yyS[yypt-0].str
	case 627:
		yyVAL.str = yyS[yypt-0].str
	case 628:
		yyVAL.str = yyS[yypt-0].str
	case 629:
		yyVAL.str = yyS[yypt-0].str
	case 630:
		yyVAL.str = yyS[yypt-0].str
	case 631:
		yyVAL.str = yyS[yypt-0].str
	case 632:
		yyVAL.str = yyS[yypt-0].str
	case 633:
		yyVAL.str = yyS[yypt-0].str
	case 634:
		yyVAL.str = yyS[yypt-0].str
	case 635:
		yyVAL.str = yyS[yypt-0].str
	case 636:
		yyVAL.str = yyS[yypt-0].str
	case 637:
		yyVAL.str = yyS[yypt-0].str
	case 638:
		yyVAL.str = yyS[yypt-0].str
	case 639:
		yyVAL.str = yyS[yypt-0].str
	case 640:
		yyVAL.str = yyS[yypt-0].str
	case 641:
		yyVAL.str = yyS[yypt-0].str
	case 642:
		yyVAL.str = yyS[yypt-0].str
	case 643:
		yyVAL.str = yyS[yypt-0].str
	case 644:
		yyVAL.str = yyS[yypt-0].str
	case 645:
		yyVAL.str = yyS[yypt-0].str
	case 646:
		yyVAL.str = yyS[yypt-0].str
	case 647:
		yyVAL.str = yyS[yypt-0].str
	case 648:
		yyVAL.str = yyS[yypt-0].str
	case 649:
		yyVAL.str = yyS[yypt-0].str
	case 650:
		yyVAL.str = yyS[yypt-0].str
	case 651:
		yyVAL.str = yyS[yypt-0].str
	case 652:
		yyVAL.str = yyS[yypt-0].str
	case 653:
		yyVAL.str = yyS[yypt-0].str
	case 654:
		yyVAL.str = yyS[yypt-0].str
	case 655:
		yyVAL.str = yyS[yypt-0].str
	case 656:
		yyVAL.str = yyS[yypt-0].str
	case 657:
		yyVAL.str = yyS[yypt-0].str
	case 658:
		yyVAL.str = yyS[yypt-0].str
	case 659:
		yyVAL.str = yyS[yypt-0].str
	case 660:
		yyVAL.str = yyS[yypt-0].str
	case 661:
		yyVAL.str = yyS[yypt-0].str
	case 662:
		yyVAL.str = yyS[yypt-0].str
	case 663:
		yyVAL.str = yyS[yypt-0].str
	case 664:
		yyVAL.str = yyS[yypt-0].str
	case 665:
		yyVAL.str = yyS[yypt-0].str
	case 666:
		yyVAL.str = yyS[yypt-0].str
	case 667:
		yyVAL.str = yyS[yypt-0].str
	case 668:
		yyVAL.str = yyS[yypt-0].str
	case 669:
		yyVAL.str = yyS[yypt-0].str
	case 670:
		yyVAL.str = yyS[yypt-0].str
	case 671:
		yyVAL.str = yyS[yypt-0].str
	case 672:
		yyVAL.str = yyS[yypt-0].str
	case 673:
		yyVAL.str = yyS[yypt-0].str
	case 674:
		yyVAL.str = yyS[yypt-0].str
	case 675:
		yyVAL.str = yyS[yypt-0].str
	case 676:
		yyVAL.str = yyS[yypt-0].str
	case 677:
		yyVAL.str = yyS[yypt-0].str
	case 678:
		yyVAL.str = yyS[yypt-0].str
	case 679:
		yyVAL.str = yyS[yypt-0].str
	case 680:
		yyVAL.str = yyS[yypt-0].str
	case 681:
		yyVAL.str = yyS[yypt-0].str
	case 682:
		yyVAL.str = yyS[yypt-0].str
	case 683:
		yyVAL.str = yyS[yypt-0].str
	case 684:
		yyVAL.str = yyS[yypt-0].str
	case 685:
		yyVAL.str = yyS[yypt-0].str
	case 686:
		yyVAL.str = yyS[yypt-0].str
	case 687:
		yyVAL.str = yyS[yypt-0].str
	case 688:
		yyVAL.str = yyS[yypt-0].str
	case 689:
		yyVAL.str = yyS[yypt-0].str
	case 690:
		yyVAL.str = yyS[yypt-0].str
	case 691:
		yyVAL.str = yyS[yypt-0].str
	case 692:
		yyVAL.str = yyS[yypt-0].str
	case 693:
		yyVAL.str = yyS[yypt-0].str
	case 694:
		yyVAL.str = yyS[yypt-0].str
	case 695:
		yyVAL.str = yyS[yypt-0].str
	case 696:
		yyVAL.str = yyS[yypt-0].str
	case 697:
		yyVAL.str = yyS[yypt-0].str
	case 698:
		yyVAL.str = yyS[yypt-0].str
	case 699:
		yyVAL.str = yyS[yypt-0].str
	case 700:
		yyVAL.str = yyS[yypt-0].str
	case 701:
		yyVAL.str = yyS[yypt-0].str
	case 702:
		yyVAL.str = yyS[yypt-0].str
	case 703:
		yyVAL.str = yyS[yypt-0].str
	case 704:
		yyVAL.str = yyS[yypt-0].str
	case 705:
		yyVAL.str = yyS[yypt-0].str
	case 706:
		yyVAL.str = yyS[yypt-0].str
	case 707:
		yyVAL.str = yyS[yypt-0].str
	case 708:
		yyVAL.str = yyS[yypt-0].str
	case 709:
		yyVAL.str = yyS[yypt-0].str
	case 710:
		yyVAL.str = yyS[yypt-0].str
	case 711:
		yyVAL.str = yyS[yypt-0].str
	case 712:
		yyVAL.str = yyS[yypt-0].str
	case 713:
		yyVAL.str = yyS[yypt-0].str
	case 714:
		yyVAL.str = yyS[yypt-0].str
	case 715:
		yyVAL.str = yyS[yypt-0].str
	case 716:
		yyVAL.str = yyS[yypt-0].str
	case 717:
		yyVAL.str = yyS[yypt-0].str
	case 718:
		yyVAL.str = yyS[yypt-0].str
	case 719:
		yyVAL.str = yyS[yypt-0].str
	case 720:
		yyVAL.str = yyS[yypt-0].str
	case 721:
		yyVAL.str = yyS[yypt-0].str
	case 722:
		yyVAL.str = yyS[yypt-0].str
	case 723:
		yyVAL.str = yyS[yypt-0].str
	case 724:
		yyVAL.str = yyS[yypt-0].str
	case 725:
		yyVAL.str = yyS[yypt-0].str
	case 726:
		yyVAL.str = yyS[yypt-0].str
	case 727:
		yyVAL.str = yyS[yypt-0].str
	case 728:
		yyVAL.str = yyS[yypt-0].str
	case 729:
		yyVAL.str = yyS[yypt-0].str
	case 730:
		yyVAL.str = yyS[yypt-0].str
	case 731:
		yyVAL.str = yyS[yypt-0].str
	case 732:
		yyVAL.str = yyS[yypt-0].str
	case 733:
		yyVAL.str = yyS[yypt-0].str
	case 734:
		yyVAL.str = yyS[yypt-0].str
	case 735:
		yyVAL.str = yyS[yypt-0].str
	case 736:
		yyVAL.str = yyS[yypt-0].str
	case 737:
		yyVAL.str = yyS[yypt-0].str
	case 738:
		yyVAL.str = yyS[yypt-0].str
	case 739:
		yyVAL.str = yyS[yypt-0].str
	case 740:
		yyVAL.str = yyS[yypt-0].str
	case 741:
		yyVAL.str = yyS[yypt-0].str
	case 742:
		yyVAL.str = yyS[yypt-0].str
	case 743:
		yyVAL.str = yyS[yypt-0].str
	case 744:
		yyVAL.str = yyS[yypt-0].str
	case 745:
		yyVAL.str = yyS[yypt-0].str
	case 746:
		yyVAL.str = yyS[yypt-0].str
	case 747:
		yyVAL.str = yyS[yypt-0].str
	case 748:
		yyVAL.str = yyS[yypt-0].str
	case 749:
		yyVAL.str = yyS[yypt-0].str
	case 750:
		yyVAL.str = yyS[yypt-0].str
	case 751:
		yyVAL.str = yyS[yypt-0].str
	case 752:
		yyVAL.str = yyS[yypt-0].str
	case 753:
		yyVAL.str = yyS[yypt-0].str
	case 754:
		yyVAL.str = yyS[yypt-0].str
	case 755:
		yyVAL.str = yyS[yypt-0].str
	case 756:
		yyVAL.str = yyS[yypt-0].str
	case 757:
		yyVAL.str = yyS[yypt-0].str
	case 758:
		yyVAL.str = yyS[yypt-0].str
	case 759:
		yyVAL.str = yyS[yypt-0].str
	case 760:
		yyVAL.str = yyS[yypt-0].str
	case 761:
		yyVAL.str = yyS[yypt-0].str
	case 762:
		yyVAL.str = yyS[yypt-0].str
	case 763:
		yyVAL.str = yyS[yypt-0].str
	case 764:
		yyVAL.str = yyS[yypt-0].str
	case 765:
		yyVAL.str = yyS[yypt-0].str
	case 766:
		yyVAL.str = yyS[yypt-0].str
	case 767:
		yyVAL.str = yyS[yypt-0].str
	case 768:
		yyVAL.str = yyS[yypt-0].str
	case 769:
		yyVAL.str = yyS[yypt-0].str
	case 770:
		yyVAL.str = yyS[yypt-0].str
	case 771:
		yyVAL.str = yyS[yypt-0].str
	case 772:
		yyVAL.str = yyS[yypt-0].str
	case 773:
		yyVAL.str = yyS[yypt-0].str
	case 774:
		yyVAL.str = yyS[yypt-0].str
	case 775:
		yyVAL.str = yyS[yypt-0].str
	case 776:
		yyVAL.str = yyS[yypt-0].str
	case 777:
		yyVAL.str = yyS[yypt-0].str
	case 778:
		yyVAL.str = yyS[yypt-0].str
	case 779:
		yyVAL.str = yyS[yypt-0].str
	case 780:
		yyVAL.str = yyS[yypt-0].str
	case 781:
		yyVAL.str = yyS[yypt-0].str
	case 782:
		yyVAL.str = yyS[yypt-0].str
	case 783:
		yyVAL.str = yyS[yypt-0].str
	case 784:
		yyVAL.str = yyS[yypt-0].str
	case 785:
		yyVAL.str = yyS[yypt-0].str
	case 786:
		yyVAL.str = yyS[yypt-0].str
	case 787:
		yyVAL.str = yyS[yypt-0].str
	case 788:
		yyVAL.str = yyS[yypt-0].str
	case 789:
		yyVAL.str = yyS[yypt-0].str
	case 790:
		yyVAL.str = yyS[yypt-0].str
	case 791:
		yyVAL.str = yyS[yypt-0].str
	case 792:
		yyVAL.str = yyS[yypt-0].str
	case 793:
		yyVAL.str = yyS[yypt-0].str
	case 794:
		yyVAL.str = yyS[yypt-0].str
	case 795:
		yyVAL.str = yyS[yypt-0].str
	case 796:
		yyVAL.str = yyS[yypt-0].str
	case 797:
		yyVAL.str = yyS[yypt-0].str
	case 798:
		yyVAL.str = yyS[yypt-0].str
	case 799:
		yyVAL.str = yyS[yypt-0].str
	case 800:
		yyVAL.str = yyS[yypt-0].str
	case 801:
		yyVAL.str = yyS[yypt-0].str
	case 802:
		yyVAL.str = yyS[yypt-0].str
	case 803:
		yyVAL.str = yyS[yypt-0].str
	case 804:
		yyVAL.str = yyS[yypt-0].str
	case 805:
		yyVAL.str = yyS[yypt-0].str
	case 806:
		yyVAL.str = yyS[yypt-0].str
	case 807:
		yyVAL.str = yyS[yypt-0].str
	case 808:
		yyVAL.str = yyS[yypt-0].str
	}
	goto yystack /* stack new state and value */
}

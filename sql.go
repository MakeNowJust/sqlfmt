//line sql.y:2
package sqlfmt

import __yyfmt__ "fmt"

//line sql.y:3
//line sql.y:7
type yySymType struct {
	yys                 int
	sqlSelect           *SelectStmt
	simpleSelect        *SimpleSelect
	fields              []Expr
	expr                Expr
	str                 string
	identifiers         []string
	fromClause          *FromClause
	whereClause         *WhereClause
	orderExpr           OrderExpr
	orderClause         *OrderClause
	groupByClause       *GroupByClause
	limitClause         *LimitClause
	lockingClause       *LockingClause
	lockingItem         LockingItem
	boolean             bool
	placeholder         interface{}
	columnRef           ColumnRef
	whenClauses         []WhenClause
	whenClause          WhenClause
	pgType              PgType
	pgTypes             []PgType
	row                 Row
	valuesRow           ValuesRow
	valuesClause        ValuesClause
	funcApplication     FuncApplication
	funcArgs            []FuncArg
	funcArg             FuncArg
	filterClause        *FilterClause
	relationExpr        *RelationExpr
	windowDefinitions   []WindowDefinition
	windowDefinition    WindowDefinition
	windowSpecification WindowSpecification
	overClause          *OverClause
	partitionClause     PartitionClause
	frameClause         *FrameClause
	frameBound          *FrameBound
	arrayExpr           ArrayExpr
	anyName             AnyName
	indirectionEl       IndirectionEl
	indirection         Indirection
	iconst              IntegerConst
	optArrayBounds      []IntegerConst
	optInterval         *OptInterval
	intervalSecond      *IntervalSecond
	subqueryOp          SubqueryOp
	extractList         *ExtractList
	overlayList         OverlayList
}

const IDENT = 57346
const FCONST = 57347
const SCONST = 57348
const BCONST = 57349
const XCONST = 57350
const Op = 57351
const ICONST = 57352
const PARAM = 57353
const TYPECAST = 57354
const DOT_DOT = 57355
const COLON_EQUALS = 57356
const EQUALS_GREATER = 57357
const LESS_EQUALS = 57358
const GREATER_EQUALS = 57359
const NOT_EQUALS = 57360
const ABORT_P = 57361
const ABSOLUTE_P = 57362
const ACCESS = 57363
const ACTION = 57364
const ADD_P = 57365
const ADMIN = 57366
const AFTER = 57367
const AGGREGATE = 57368
const ALL = 57369
const ALSO = 57370
const ALTER = 57371
const ALWAYS = 57372
const ANALYSE = 57373
const ANALYZE = 57374
const AND = 57375
const ANY = 57376
const ARRAY = 57377
const AS = 57378
const ASC = 57379
const ASSERTION = 57380
const ASSIGNMENT = 57381
const ASYMMETRIC = 57382
const AT = 57383
const ATTRIBUTE = 57384
const AUTHORIZATION = 57385
const BACKWARD = 57386
const BEFORE = 57387
const BEGIN_P = 57388
const BETWEEN = 57389
const BIGINT = 57390
const BINARY = 57391
const BIT = 57392
const BOOLEAN_P = 57393
const BOTH = 57394
const BY = 57395
const CACHE = 57396
const CALLED = 57397
const CASCADE = 57398
const CASCADED = 57399
const CASE = 57400
const CAST = 57401
const CATALOG_P = 57402
const CHAIN = 57403
const CHAR_P = 57404
const CHARACTER = 57405
const CHARACTERISTICS = 57406
const CHECK = 57407
const CHECKPOINT = 57408
const CLASS = 57409
const CLOSE = 57410
const CLUSTER = 57411
const COALESCE = 57412
const COLLATE = 57413
const COLLATION = 57414
const COLUMN = 57415
const COMMENT = 57416
const COMMENTS = 57417
const COMMIT = 57418
const COMMITTED = 57419
const CONCURRENTLY = 57420
const CONFIGURATION = 57421
const CONFLICT = 57422
const CONNECTION = 57423
const CONSTRAINT = 57424
const CONSTRAINTS = 57425
const CONTENT_P = 57426
const CONTINUE_P = 57427
const CONVERSION_P = 57428
const COPY = 57429
const COST = 57430
const CREATE = 57431
const CROSS = 57432
const CSV = 57433
const CUBE = 57434
const CURRENT_P = 57435
const CURRENT_CATALOG = 57436
const CURRENT_DATE = 57437
const CURRENT_ROLE = 57438
const CURRENT_SCHEMA = 57439
const CURRENT_TIME = 57440
const CURRENT_TIMESTAMP = 57441
const CURRENT_USER = 57442
const CURSOR = 57443
const CYCLE = 57444
const DATA_P = 57445
const DATABASE = 57446
const DAY_P = 57447
const DEALLOCATE = 57448
const DEC = 57449
const DECIMAL_P = 57450
const DECLARE = 57451
const DEFAULT = 57452
const DEFAULTS = 57453
const DEFERRABLE = 57454
const DEFERRED = 57455
const DEFINER = 57456
const DELETE_P = 57457
const DELIMITER = 57458
const DELIMITERS = 57459
const DESC = 57460
const DICTIONARY = 57461
const DISABLE_P = 57462
const DISCARD = 57463
const DISTINCT = 57464
const DO = 57465
const DOCUMENT_P = 57466
const DOMAIN_P = 57467
const DOUBLE_P = 57468
const DROP = 57469
const EACH = 57470
const ELSE = 57471
const ENABLE_P = 57472
const ENCODING = 57473
const ENCRYPTED = 57474
const END_P = 57475
const ENUM_P = 57476
const ESCAPE = 57477
const EVENT = 57478
const EXCEPT = 57479
const EXCLUDE = 57480
const EXCLUDING = 57481
const EXCLUSIVE = 57482
const EXECUTE = 57483
const EXISTS = 57484
const EXPLAIN = 57485
const EXTENSION = 57486
const EXTERNAL = 57487
const EXTRACT = 57488
const FALSE_P = 57489
const FAMILY = 57490
const FETCH = 57491
const FILTER = 57492
const FIRST_P = 57493
const FLOAT_P = 57494
const FOLLOWING = 57495
const FOR = 57496
const FORCE = 57497
const FOREIGN = 57498
const FORWARD = 57499
const FREEZE = 57500
const FROM = 57501
const FULL = 57502
const FUNCTION = 57503
const FUNCTIONS = 57504
const GLOBAL = 57505
const GRANT = 57506
const GRANTED = 57507
const GREATEST = 57508
const GROUP_P = 57509
const GROUPING = 57510
const HANDLER = 57511
const HAVING = 57512
const HEADER_P = 57513
const HOLD = 57514
const HOUR_P = 57515
const IDENTITY_P = 57516
const IF_P = 57517
const ILIKE = 57518
const IMMEDIATE = 57519
const IMMUTABLE = 57520
const IMPLICIT_P = 57521
const IMPORT_P = 57522
const IN_P = 57523
const INCLUDING = 57524
const INCREMENT = 57525
const INDEX = 57526
const INDEXES = 57527
const INHERIT = 57528
const INHERITS = 57529
const INITIALLY = 57530
const INLINE_P = 57531
const INNER_P = 57532
const INOUT = 57533
const INPUT_P = 57534
const INSENSITIVE = 57535
const INSERT = 57536
const INSTEAD = 57537
const INT_P = 57538
const INTEGER = 57539
const INTERSECT = 57540
const INTERVAL = 57541
const INTO = 57542
const INVOKER = 57543
const IS = 57544
const ISNULL = 57545
const ISOLATION = 57546
const JOIN = 57547
const KEY = 57548
const LABEL = 57549
const LANGUAGE = 57550
const LARGE_P = 57551
const LAST_P = 57552
const LATERAL_P = 57553
const LEADING = 57554
const LEAKPROOF = 57555
const LEAST = 57556
const LEFT = 57557
const LEVEL = 57558
const LIKE = 57559
const LIMIT = 57560
const LISTEN = 57561
const LOAD = 57562
const LOCAL = 57563
const LOCALTIME = 57564
const LOCALTIMESTAMP = 57565
const LOCATION = 57566
const LOCK_P = 57567
const LOCKED = 57568
const LOGGED = 57569
const MAPPING = 57570
const MATCH = 57571
const MATERIALIZED = 57572
const MAXVALUE = 57573
const MINUTE_P = 57574
const MINVALUE = 57575
const MODE = 57576
const MONTH_P = 57577
const MOVE = 57578
const NAME_P = 57579
const NAMES = 57580
const NATIONAL = 57581
const NATURAL = 57582
const NCHAR = 57583
const NEXT = 57584
const NO = 57585
const NONE = 57586
const NOT = 57587
const NOTHING = 57588
const NOTIFY = 57589
const NOTNULL = 57590
const NOWAIT = 57591
const NULL_P = 57592
const NULLIF = 57593
const NULLS_P = 57594
const NUMERIC = 57595
const OBJECT_P = 57596
const OF = 57597
const OFF = 57598
const OFFSET = 57599
const OIDS = 57600
const ON = 57601
const ONLY = 57602
const OPERATOR = 57603
const OPTION = 57604
const OPTIONS = 57605
const OR = 57606
const ORDER = 57607
const ORDINALITY = 57608
const OUT_P = 57609
const OUTER_P = 57610
const OVER = 57611
const OVERLAPS = 57612
const OVERLAY = 57613
const OWNED = 57614
const OWNER = 57615
const PARSER = 57616
const PARTIAL = 57617
const PARTITION = 57618
const PASSING = 57619
const PASSWORD = 57620
const PLACING = 57621
const PLANS = 57622
const POLICY = 57623
const POSITION = 57624
const PRECEDING = 57625
const PRECISION = 57626
const PRESERVE = 57627
const PREPARE = 57628
const PREPARED = 57629
const PRIMARY = 57630
const PRIOR = 57631
const PRIVILEGES = 57632
const PROCEDURAL = 57633
const PROCEDURE = 57634
const PROGRAM = 57635
const QUOTE = 57636
const RANGE = 57637
const READ = 57638
const REAL = 57639
const REASSIGN = 57640
const RECHECK = 57641
const RECURSIVE = 57642
const REF = 57643
const REFERENCES = 57644
const REFRESH = 57645
const REINDEX = 57646
const RELATIVE_P = 57647
const RELEASE = 57648
const RENAME = 57649
const REPEATABLE = 57650
const REPLACE = 57651
const REPLICA = 57652
const RESET = 57653
const RESTART = 57654
const RESTRICT = 57655
const RETURNING = 57656
const RETURNS = 57657
const REVOKE = 57658
const RIGHT = 57659
const ROLE = 57660
const ROLLBACK = 57661
const ROLLUP = 57662
const ROW = 57663
const ROWS = 57664
const RULE = 57665
const SAVEPOINT = 57666
const SCHEMA = 57667
const SCROLL = 57668
const SEARCH = 57669
const SECOND_P = 57670
const SECURITY = 57671
const SELECT = 57672
const SEQUENCE = 57673
const SEQUENCES = 57674
const SERIALIZABLE = 57675
const SERVER = 57676
const SESSION = 57677
const SESSION_USER = 57678
const SET = 57679
const SETS = 57680
const SETOF = 57681
const SHARE = 57682
const SHOW = 57683
const SIMILAR = 57684
const SIMPLE = 57685
const SKIP = 57686
const SMALLINT = 57687
const SNAPSHOT = 57688
const SOME = 57689
const SQL_P = 57690
const STABLE = 57691
const STANDALONE_P = 57692
const START = 57693
const STATEMENT = 57694
const STATISTICS = 57695
const STDIN = 57696
const STDOUT = 57697
const STORAGE = 57698
const STRICT_P = 57699
const STRIP_P = 57700
const SUBSTRING = 57701
const SYMMETRIC = 57702
const SYSID = 57703
const SYSTEM_P = 57704
const TABLE = 57705
const TABLES = 57706
const TABLESAMPLE = 57707
const TABLESPACE = 57708
const TEMP = 57709
const TEMPLATE = 57710
const TEMPORARY = 57711
const TEXT_P = 57712
const THEN = 57713
const TIME = 57714
const TIMESTAMP = 57715
const TO = 57716
const TRAILING = 57717
const TRANSACTION = 57718
const TRANSFORM = 57719
const TREAT = 57720
const TRIGGER = 57721
const TRIM = 57722
const TRUE_P = 57723
const TRUNCATE = 57724
const TRUSTED = 57725
const TYPE_P = 57726
const TYPES_P = 57727
const UNBOUNDED = 57728
const UNCOMMITTED = 57729
const UNENCRYPTED = 57730
const UNION = 57731
const UNIQUE = 57732
const UNKNOWN = 57733
const UNLISTEN = 57734
const UNLOGGED = 57735
const UNTIL = 57736
const UPDATE = 57737
const USER = 57738
const USING = 57739
const VACUUM = 57740
const VALID = 57741
const VALIDATE = 57742
const VALIDATOR = 57743
const VALUE_P = 57744
const VALUES = 57745
const VARCHAR = 57746
const VARIADIC = 57747
const VARYING = 57748
const VERBOSE = 57749
const VERSION_P = 57750
const VIEW = 57751
const VIEWS = 57752
const VOLATILE = 57753
const WHEN = 57754
const WHERE = 57755
const WHITESPACE_P = 57756
const WINDOW = 57757
const WITH = 57758
const WITHIN = 57759
const WITHOUT = 57760
const WORK = 57761
const WRAPPER = 57762
const WRITE = 57763
const XML_P = 57764
const XMLATTRIBUTES = 57765
const XMLCONCAT = 57766
const XMLELEMENT = 57767
const XMLEXISTS = 57768
const XMLFOREST = 57769
const XMLPARSE = 57770
const XMLPI = 57771
const XMLROOT = 57772
const XMLSERIALIZE = 57773
const YEAR_P = 57774
const YES_P = 57775
const ZONE = 57776
const NOT_LA = 57777
const NULLS_LA = 57778
const WITH_LA = 57779
const OP = 57780
const POSTFIXOP = 57781
const UMINUS = 57782

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"FCONST",
	"SCONST",
	"BCONST",
	"XCONST",
	"Op",
	"ICONST",
	"PARAM",
	"TYPECAST",
	"DOT_DOT",
	"COLON_EQUALS",
	"EQUALS_GREATER",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"ABORT_P",
	"ABSOLUTE_P",
	"ACCESS",
	"ACTION",
	"ADD_P",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALSO",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ARRAY",
	"AS",
	"ASC",
	"ASSERTION",
	"ASSIGNMENT",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"BACKWARD",
	"BEFORE",
	"BEGIN_P",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BOOLEAN_P",
	"BOTH",
	"BY",
	"CACHE",
	"CALLED",
	"CASCADE",
	"CASCADED",
	"CASE",
	"CAST",
	"CATALOG_P",
	"CHAIN",
	"CHAR_P",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECKPOINT",
	"CLASS",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTENT_P",
	"CONTINUE_P",
	"CONVERSION_P",
	"COPY",
	"COST",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT_P",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_SCHEMA",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA_P",
	"DATABASE",
	"DAY_P",
	"DEALLOCATE",
	"DEC",
	"DECIMAL_P",
	"DECLARE",
	"DEFAULT",
	"DEFAULTS",
	"DEFERRABLE",
	"DEFERRED",
	"DEFINER",
	"DELETE_P",
	"DELIMITER",
	"DELIMITERS",
	"DESC",
	"DICTIONARY",
	"DISABLE_P",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOCUMENT_P",
	"DOMAIN_P",
	"DOUBLE_P",
	"DROP",
	"EACH",
	"ELSE",
	"ENABLE_P",
	"ENCODING",
	"ENCRYPTED",
	"END_P",
	"ENUM_P",
	"ESCAPE",
	"EVENT",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXCLUSIVE",
	"EXECUTE",
	"EXISTS",
	"EXPLAIN",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"FALSE_P",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST_P",
	"FLOAT_P",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GLOBAL",
	"GRANT",
	"GRANTED",
	"GREATEST",
	"GROUP_P",
	"GROUPING",
	"HANDLER",
	"HAVING",
	"HEADER_P",
	"HOLD",
	"HOUR_P",
	"IDENTITY_P",
	"IF_P",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPLICIT_P",
	"IMPORT_P",
	"IN_P",
	"INCLUDING",
	"INCREMENT",
	"INDEX",
	"INDEXES",
	"INHERIT",
	"INHERITS",
	"INITIALLY",
	"INLINE_P",
	"INNER_P",
	"INOUT",
	"INPUT_P",
	"INSENSITIVE",
	"INSERT",
	"INSTEAD",
	"INT_P",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVOKER",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOIN",
	"KEY",
	"LABEL",
	"LANGUAGE",
	"LARGE_P",
	"LAST_P",
	"LATERAL_P",
	"LEADING",
	"LEAKPROOF",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LISTEN",
	"LOAD",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCATION",
	"LOCK_P",
	"LOCKED",
	"LOGGED",
	"MAPPING",
	"MATCH",
	"MATERIALIZED",
	"MAXVALUE",
	"MINUTE_P",
	"MINVALUE",
	"MODE",
	"MONTH_P",
	"MOVE",
	"NAME_P",
	"NAMES",
	"NATIONAL",
	"NATURAL",
	"NCHAR",
	"NEXT",
	"NO",
	"NONE",
	"NOT",
	"NOTHING",
	"NOTIFY",
	"NOTNULL",
	"NOWAIT",
	"NULL_P",
	"NULLIF",
	"NULLS_P",
	"NUMERIC",
	"OBJECT_P",
	"OF",
	"OFF",
	"OFFSET",
	"OIDS",
	"ON",
	"ONLY",
	"OPERATOR",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT_P",
	"OUTER_P",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"PARSER",
	"PARTIAL",
	"PARTITION",
	"PASSING",
	"PASSWORD",
	"PLACING",
	"PLANS",
	"POLICY",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PRESERVE",
	"PREPARE",
	"PREPARED",
	"PRIMARY",
	"PRIOR",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROGRAM",
	"QUOTE",
	"RANGE",
	"READ",
	"REAL",
	"REASSIGN",
	"RECHECK",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REINDEX",
	"RELATIVE_P",
	"RELEASE",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICA",
	"RESET",
	"RESTART",
	"RESTRICT",
	"RETURNING",
	"RETURNS",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RULE",
	"SAVEPOINT",
	"SCHEMA",
	"SCROLL",
	"SEARCH",
	"SECOND_P",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETOF",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SNAPSHOT",
	"SOME",
	"SQL_P",
	"STABLE",
	"STANDALONE_P",
	"START",
	"STATEMENT",
	"STATISTICS",
	"STDIN",
	"STDOUT",
	"STORAGE",
	"STRICT_P",
	"STRIP_P",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSID",
	"SYSTEM_P",
	"TABLE",
	"TABLES",
	"TABLESAMPLE",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TEXT_P",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TO",
	"TRAILING",
	"TRANSACTION",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE_P",
	"TRUNCATE",
	"TRUSTED",
	"TYPE_P",
	"TYPES_P",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNENCRYPTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNTIL",
	"UPDATE",
	"USER",
	"USING",
	"VACUUM",
	"VALID",
	"VALIDATE",
	"VALIDATOR",
	"VALUE_P",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VARYING",
	"VERBOSE",
	"VERSION_P",
	"VIEW",
	"VIEWS",
	"VOLATILE",
	"WHEN",
	"WHERE",
	"WHITESPACE_P",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRAPPER",
	"WRITE",
	"XML_P",
	"XMLATTRIBUTES",
	"XMLCONCAT",
	"XMLELEMENT",
	"XMLEXISTS",
	"XMLFOREST",
	"XMLPARSE",
	"XMLPI",
	"XMLROOT",
	"XMLSERIALIZE",
	"YEAR_P",
	"YES_P",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"OP",
	"'<'",
	"'>'",
	"'='",
	"POSTFIXOP",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"';'",
	"','",
	"':'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyMaxDepth = 200

//line sql.y:3227

// The parser expects the lexer to return 0 on EOF.  Give it a name
// for clarity.
const eof = 0

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	1, 280,
	455, 280,
	-2, 288,
	-1, 5,
	1, 283,
	453, 283,
	455, 283,
	-2, 287,
	-1, 13,
	1, 284,
	453, 284,
	455, 284,
	-2, 304,
	-1, 408,
	6, 477,
	14, 477,
	15, 477,
	452, 477,
	-2, 474,
	-1, 409,
	6, 478,
	14, 478,
	15, 478,
	452, 478,
	-2, 475,
	-1, 417,
	6, 82,
	452, 82,
	-2, 774,
	-1, 429,
	6, 810,
	14, 810,
	15, 810,
	452, 810,
	-2, 223,
	-1, 438,
	6, 46,
	-2, 758,
	-1, 439,
	6, 75,
	452, 75,
	-2, 759,
	-1, 440,
	6, 53,
	-2, 760,
	-1, 441,
	6, 75,
	63, 75,
	452, 75,
	-2, 761,
	-1, 442,
	6, 75,
	63, 75,
	452, 75,
	-2, 762,
	-1, 443,
	6, 42,
	-2, 764,
	-1, 444,
	6, 42,
	-2, 765,
	-1, 445,
	6, 55,
	-2, 768,
	-1, 446,
	6, 43,
	-2, 772,
	-1, 447,
	6, 44,
	-2, 773,
	-1, 449,
	6, 75,
	63, 75,
	452, 75,
	-2, 777,
	-1, 450,
	6, 42,
	-2, 780,
	-1, 451,
	6, 47,
	-2, 785,
	-1, 452,
	6, 45,
	-2, 788,
	-1, 453,
	6, 85,
	-2, 790,
	-1, 454,
	6, 85,
	-2, 791,
	-1, 455,
	6, 70,
	63, 70,
	452, 70,
	-2, 795,
	-1, 515,
	321, 374,
	322, 374,
	-2, 102,
	-1, 558,
	27, 396,
	34, 396,
	347, 396,
	-2, 410,
	-1, 569,
	137, 288,
	149, 288,
	154, 288,
	198, 288,
	218, 288,
	257, 288,
	265, 288,
	389, 288,
	-2, 194,
	-1, 582,
	6, 457,
	452, 457,
	-2, 425,
	-1, 703,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 114,
	-1, 704,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 115,
	-1, 705,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 116,
	-1, 706,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 117,
	-1, 707,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 118,
	-1, 708,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 119,
	-1, 712,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 127,
	-1, 718,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 131,
	-1, 854,
	270, 388,
	-2, 391,
	-1, 863,
	14, 9,
	15, 9,
	-2, 456,
	-1, 945,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 129,
	-1, 946,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 133,
	-1, 952,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 135,
	-1, 986,
	270, 387,
	-2, 390,
	-1, 1060,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 128,
	-1, 1063,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 137,
	-1, 1066,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 132,
	-1, 1070,
	202, 0,
	203, 0,
	248, 0,
	-2, 150,
	-1, 1098,
	27, 245,
	34, 245,
	347, 245,
	-2, 411,
	-1, 1103,
	270, 389,
	-2, 392,
	-1, 1155,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 130,
	-1, 1156,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 134,
	-1, 1160,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 136,
	-1, 1161,
	202, 0,
	203, 0,
	248, 0,
	-2, 151,
	-1, 1165,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 154,
	-1, 1173,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 174,
	-1, 1174,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 175,
	-1, 1175,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 176,
	-1, 1176,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 177,
	-1, 1177,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 178,
	-1, 1178,
	16, 0,
	17, 0,
	18, 0,
	439, 0,
	440, 0,
	441, 0,
	-2, 179,
	-1, 1187,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 156,
	-1, 1219,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 138,
	-1, 1220,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 155,
	-1, 1221,
	47, 0,
	176, 0,
	181, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 157,
	-1, 1243,
	202, 0,
	-2, 183,
	-1, 1257,
	202, 0,
	-2, 184,
	-1, 1263,
	47, 0,
	176, 0,
	217, 0,
	342, 0,
	435, 0,
	-2, 757,
}

const yyNprod = 905
const yyPrivate = 57344

var yyTokenNames []string
var yyStates []string

const yyLast = 14913

var yyAct = [...]int{

	378, 1005, 1141, 1261, 1237, 1071, 395, 14, 1206, 837,
	1262, 560, 1210, 931, 609, 828, 456, 29, 398, 1042,
	625, 27, 860, 870, 934, 1072, 927, 929, 874, 573,
	856, 578, 32, 731, 658, 29, 728, 605, 940, 524,
	641, 490, 654, 372, 830, 387, 4, 381, 864, 526,
	487, 1046, 1272, 20, 980, 1164, 1271, 867, 1259, 1270,
	1230, 1164, 558, 980, 1222, 528, 1189, 1164, 1163, 980,
	1135, 1164, 18, 980, 1096, 401, 1252, 980, 1034, 619,
	1025, 980, 392, 980, 1023, 1074, 1239, 980, 1184, 1084,
	1085, 1086, 1022, 1021, 530, 980, 980, 1101, 1020, 986,
	553, 980, 980, 982, 981, 922, 1159, 631, 983, 980,
	630, 558, 826, 575, 528, 649, 369, 574, 540, 541,
	542, 527, 25, 575, 529, 868, 610, 574, 1056, 610,
	12, 941, 1056, 985, 8, 544, 941, 621, 621, 1260,
	1205, 1200, 1195, 530, 558, 1194, 1193, 528, 1153, 553,
	1108, 540, 541, 542, 1098, 1031, 620, 620, 1030, 1027,
	1026, 1017, 1015, 410, 1013, 1012, 1048, 10, 544, 1011,
	1010, 618, 622, 529, 1000, 992, 530, 984, 914, 626,
	369, 823, 553, 579, 869, 7, 1007, 866, 368, 411,
	1245, 416, 1240, 1228, 580, 558, 1094, 1069, 528, 1039,
	410, 1047, 540, 541, 542, 999, 529, 11, 392, 411,
	974, 1074, 972, 961, 570, 1084, 1085, 1086, 733, 610,
	613, 901, 558, 458, 879, 528, 878, 530, 350, 548,
	528, 821, 1158, 553, 554, 628, 603, 602, 412, 601,
	600, 457, 599, 598, 1074, 460, 597, 596, 595, 594,
	593, 1074, 375, 581, 530, 7, 7, 529, 1152, 530,
	1242, 1217, 1216, 988, 1051, 579, 1052, 486, 621, 928,
	546, 1029, 1028, 943, 1207, 1088, 930, 1008, 548, 459,
	871, 1074, 962, 554, 529, 875, 528, 620, 606, 529,
	1215, 916, 503, 998, 1003, 572, 997, 996, 995, 947,
	719, 908, 907, 558, 550, 551, 528, 696, 413, 634,
	558, 548, 824, 528, 559, 530, 554, 730, 355, 546,
	392, 645, 911, 1074, 871, 1276, 1118, 1115, 730, 501,
	5, 642, 643, 1275, 1089, 530, 503, 550, 551, 351,
	604, 17, 530, 1249, 1198, 529, 567, 877, 1157, 737,
	552, 392, 546, 18, 1074, 1035, 735, 632, 1084, 1085,
	1086, 357, 548, 559, 359, 529, 545, 554, 528, 356,
	1250, 352, 529, 501, 543, 1095, 484, 360, 1225, 517,
	1227, 1114, 499, 552, 865, 510, 1116, 921, 633, 359,
	1146, 16, 887, 1145, 411, 549, 559, 530, 1040, 545,
	1142, 1088, 16, 546, 938, 6, 1202, 1180, 520, 1183,
	1043, 520, 520, 1244, 1224, 592, 646, 1045, 584, 585,
	586, 558, 871, 1133, 528, 1068, 502, 529, 1214, 1067,
	569, 1016, 960, 358, 576, 577, 1062, 655, 498, 591,
	354, 1123, 626, 392, 549, 528, 1074, 559, 615, 614,
	1084, 1085, 1086, 530, 1233, 1143, 363, 1041, 358, 611,
	1089, 367, 23, 1274, 1253, 617, 1054, 1073, 349, 18,
	502, 935, 360, 409, 559, 1280, 511, 549, 1074, 607,
	608, 500, 871, 529, 31, 528, 371, 616, 547, 362,
	993, 994, 543, 890, 485, 29, 531, 532, 533, 534,
	535, 536, 31, 410, 529, 411, 365, 366, 543, 483,
	629, 1226, 1081, 1082, 1083, 543, 1075, 1076, 1077, 1078,
	1079, 1080, 989, 1279, 29, 500, 543, 528, 549, 13,
	1181, 1256, 1148, 627, 623, 415, 695, 547, 414, 648,
	1182, 537, 538, 539, 1088, 531, 532, 533, 534, 535,
	536, 364, 400, 978, 657, 559, 530, 24, 662, 979,
	482, 891, 559, 543, 543, 543, 543, 543, 624, 543,
	547, 656, 1089, 742, 537, 538, 539, 875, 531, 532,
	533, 534, 535, 536, 19, 3, 529, 839, 1247, 741,
	543, 742, 838, 15, 663, 660, 639, 640, 399, 743,
	732, 738, 827, 1089, 665, 637, 867, 741, 555, 694,
	382, 836, 827, 515, 833, 822, 1248, 894, 1197, 1126,
	892, 547, 876, 889, 1236, 537, 538, 539, 407, 531,
	532, 533, 534, 535, 536, 587, 1088, 949, 1081, 1082,
	1083, 1149, 1075, 1076, 1077, 1078, 1079, 1080, 729, 386,
	406, 391, 904, 905, 390, 583, 531, 532, 533, 534,
	535, 536, 925, 533, 534, 535, 536, 489, 873, 736,
	912, 1001, 915, 559, 868, 505, 917, 1077, 1078, 1079,
	1080, 939, 1075, 1076, 1077, 1078, 1079, 1080, 611, 923,
	617, 582, 496, 519, 936, 1089, 519, 519, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 937, 497, 893, 1080, 588, 543,
	664, 385, 536, 494, 612, 504, 383, 608, 607, 966,
	966, 616, 636, 869, 942, 665, 866, 531, 532, 533,
	534, 535, 536, 835, 531, 532, 533, 534, 535, 536,
	1209, 950, 678, 948, 1075, 1076, 1077, 1078, 1079, 1080,
	924, 623, 716, 732, 734, 373, 373, 666, 518, 561,
	677, 521, 522, 862, 680, 976, 647, 516, 644, 569,
	971, 1081, 1082, 1083, 361, 1075, 1076, 1077, 1078, 1079,
	1080, 353, 359, 495, 832, 513, 853, 354, 635, 531,
	532, 533, 534, 535, 536, 512, 506, 493, 679, 1201,
	1132, 1018, 895, 886, 885, 897, 898, 899, 900, 26,
	888, 590, 863, 509, 651, 902, 523, 932, 839, 871,
	1255, 973, 543, 838, 21, 22, 543, 661, 370, 9,
	2, 1, 0, 913, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 358, 543, 0, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 1081, 1082, 1083, 0, 1075, 1076, 1077,
	1078, 1079, 1080, 678, 1006, 543, 0, 0, 990, 991,
	0, 714, 0, 0, 0, 0, 717, 543, 666, 0,
	360, 677, 1002, 0, 0, 680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 1032, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 29,
	0, 0, 713, 865, 543, 0, 0, 0, 0, 679,
	1033, 0, 0, 0, 1037, 0, 543, 543, 970, 966,
	966, 1038, 0, 543, 0, 1057, 0, 1058, 742, 0,
	0, 1053, 31, 1087, 0, 966, 966, 966, 661, 0,
	1087, 0, 0, 0, 741, 0, 0, 0, 543, 0,
	0, 963, 963, 0, 0, 0, 0, 0, 0, 0,
	0, 31, 839, 0, 0, 1107, 0, 838, 1110, 1111,
	0, 0, 685, 31, 0, 543, 1102, 0, 0, 0,
	543, 1109, 969, 569, 1127, 1106, 0, 0, 569, 1122,
	1117, 1119, 1120, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 0, 0, 0, 665, 0, 975,
	1130, 0, 0, 0, 0, 543, 839, 0, 740, 1140,
	0, 838, 1138, 1139, 31, 0, 0, 715, 0, 1144,
	543, 543, 1147, 0, 543, 1087, 1087, 543, 0, 0,
	0, 543, 1154, 742, 0, 1162, 966, 966, 966, 966,
	966, 966, 966, 966, 966, 966, 966, 966, 966, 741,
	665, 1087, 1087, 1087, 491, 0, 863, 863, 543, 0,
	1166, 0, 507, 0, 514, 543, 543, 1136, 0, 0,
	1137, 525, 0, 543, 543, 0, 1024, 0, 0, 0,
	562, 563, 564, 565, 566, 543, 0, 1192, 568, 543,
	840, 0, 543, 685, 0, 543, 0, 850, 851, 852,
	0, 0, 1204, 0, 0, 665, 0, 0, 0, 589,
	665, 0, 0, 664, 0, 0, 543, 543, 0, 1212,
	1213, 543, 543, 0, 0, 0, 543, 0, 1087, 1087,
	1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087,
	1087, 0, 1093, 0, 0, 678, 0, 0, 543, 1099,
	1223, 543, 0, 0, 0, 0, 0, 543, 0, 0,
	666, 963, 963, 677, 543, 1232, 664, 680, 0, 543,
	0, 0, 543, 1235, 1238, 0, 0, 963, 963, 963,
	543, 543, 543, 0, 0, 966, 0, 863, 0, 0,
	543, 1064, 1065, 0, 1246, 543, 0, 0, 678, 0,
	665, 679, 543, 0, 1087, 966, 0, 1090, 1091, 1092,
	0, 1258, 1254, 666, 1267, 1269, 677, 1268, 1087, 1238,
	680, 664, 0, 0, 0, 0, 664, 543, 0, 0,
	661, 373, 0, 0, 1273, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 1281, 718, 678, 679, 31, 0, 0, 678, 0,
	0, 0, 0, 0, 665, 0, 0, 0, 666, 1185,
	0, 677, 0, 666, 0, 680, 677, 0, 0, 831,
	680, 665, 0, 661, 0, 0, 0, 861, 963, 963,
	963, 963, 963, 963, 963, 963, 963, 963, 963, 963,
	963, 884, 0, 896, 0, 0, 0, 0, 0, 679,
	0, 31, 0, 0, 679, 0, 664, 0, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 0, 0, 0, 491, 0, 0, 0, 661, 0,
	0, 918, 926, 661, 0, 31, 0, 957, 678, 959,
	0, 0, 0, 525, 0, 0, 31, 0, 558, 933,
	0, 528, 0, 666, 0, 0, 677, 0, 0, 0,
	680, 0, 955, 558, 0, 740, 528, 0, 0, 0,
	664, 0, 0, 0, 725, 638, 727, 0, 0, 0,
	530, 0, 0, 0, 0, 685, 0, 664, 0, 0,
	0, 0, 0, 0, 679, 530, 0, 0, 1251, 723,
	0, 0, 678, 0, 0, 0, 0, 945, 946, 31,
	529, 558, 0, 952, 528, 0, 0, 666, 0, 678,
	677, 0, 0, 661, 680, 529, 0, 963, 0, 0,
	0, 31, 0, 0, 666, 0, 0, 677, 685, 0,
	0, 680, 0, 530, 0, 0, 0, 963, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 1243, 679, 880,
	881, 882, 883, 31, 0, 953, 0, 0, 0, 0,
	958, 0, 0, 529, 1061, 679, 0, 1257, 0, 903,
	740, 0, 0, 0, 906, 0, 0, 661, 909, 951,
	910, 0, 392, 685, 0, 1074, 0, 721, 685, 1084,
	1085, 1086, 720, 0, 661, 919, 920, 726, 0, 0,
	847, 848, 849, 0, 841, 842, 843, 844, 845, 846,
	977, 0, 0, 0, 558, 0, 0, 528, 0, 0,
	0, 540, 541, 542, 0, 0, 0, 944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 0,
	0, 861, 861, 0, 0, 0, 530, 558, 0, 0,
	528, 0, 553, 0, 540, 541, 542, 0, 0, 1004,
	0, 0, 0, 1009, 0, 0, 0, 0, 0, 0,
	0, 544, 0, 0, 0, 0, 529, 0, 685, 530,
	0, 0, 0, 0, 0, 553, 954, 0, 0, 0,
	559, 0, 0, 0, 0, 0, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 529,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 31, 0, 722, 0, 0, 0, 1059, 1060, 0,
	0, 1063, 0, 724, 0, 1066, 0, 0, 0, 0,
	0, 0, 685, 0, 1070, 0, 0, 0, 0, 0,
	0, 568, 0, 559, 0, 0, 1097, 0, 0, 685,
	0, 0, 0, 1104, 1105, 0, 31, 0, 0, 0,
	0, 0, 861, 0, 0, 0, 0, 1112, 1113, 0,
	0, 548, 0, 0, 0, 0, 554, 1124, 0, 0,
	0, 0, 1128, 0, 0, 0, 0, 0, 0, 0,
	1131, 0, 0, 1134, 0, 0, 0, 550, 551, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 554,
	0, 0, 546, 0, 0, 0, 0, 0, 0, 933,
	0, 0, 933, 0, 1089, 0, 0, 0, 0, 0,
	550, 551, 0, 0, 0, 1155, 1156, 0, 0, 0,
	0, 1160, 1161, 552, 0, 546, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 545,
	0, 0, 531, 532, 533, 534, 535, 536, 0, 1187,
	0, 0, 0, 0, 0, 1190, 552, 531, 532, 533,
	534, 535, 536, 0, 1055, 0, 0, 0, 0, 559,
	0, 0, 545, 0, 0, 0, 0, 0, 0, 1196,
	0, 0, 0, 0, 0, 0, 0, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 1211, 0, 933,
	933, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 1219, 1220, 1221, 0, 0, 0, 549, 0, 0,
	0, 0, 0, 0, 0, 1121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 0, 1234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 1150, 1151, 0,
	0, 0, 1081, 1082, 1083, 0, 1075, 1076, 1077, 1078,
	1079, 1080, 0, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1266, 1266, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 537, 538, 539, 1266, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 1231, 0,
	0, 0, 0, 0, 1266, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 0, 0, 0, 537, 538, 539,
	0, 531, 532, 533, 534, 535, 536, 0, 0, 0,
	0, 1199, 0, 0, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1218, 33,
	34, 35, 36, 37, 38, 39, 40, 744, 41, 42,
	43, 745, 746, 747, 748, 749, 750, 751, 44, 45,
	752, 46, 47, 461, 48, 49, 50, 301, 302, 462,
	303, 304, 753, 51, 52, 53, 54, 55, 754, 755,
	56, 57, 305, 306, 58, 756, 59, 60, 61, 62,
	307, 757, 687, 758, 63, 64, 65, 66, 463, 67,
	68, 69, 759, 70, 71, 72, 73, 74, 75, 760,
	464, 76, 77, 78, 761, 762, 763, 688, 764, 765,
	766, 79, 80, 81, 82, 83, 84, 308, 309, 85,
	767, 86, 768, 87, 88, 89, 90, 91, 769, 92,
	93, 94, 770, 771, 95, 96, 97, 98, 99, 772,
	100, 101, 102, 773, 103, 104, 105, 774, 106, 107,
	108, 109, 310, 110, 111, 112, 311, 775, 113, 776,
	114, 115, 312, 116, 777, 117, 778, 118, 465, 779,
	466, 119, 120, 121, 780, 122, 313, 781, 314, 123,
	782, 124, 125, 126, 127, 128, 467, 129, 130, 131,
	132, 783, 133, 134, 135, 136, 137, 138, 784, 139,
	468, 315, 140, 141, 142, 143, 316, 317, 785, 318,
	786, 144, 469, 470, 145, 471, 146, 147, 148, 149,
	150, 787, 788, 151, 319, 472, 152, 473, 789, 153,
	154, 155, 790, 791, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 320,
	474, 321, 171, 172, 322, 792, 173, 174, 475, 175,
	793, 323, 176, 324, 177, 178, 179, 794, 180, 795,
	796, 181, 182, 183, 797, 798, 184, 325, 476, 185,
	477, 326, 186, 187, 188, 189, 190, 191, 192, 799,
	193, 194, 327, 195, 328, 198, 196, 197, 800, 199,
	200, 201, 202, 203, 204, 205, 206, 329, 207, 208,
	209, 210, 801, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 802, 222, 223, 478, 224, 225,
	226, 330, 227, 228, 229, 230, 231, 232, 233, 234,
	803, 235, 236, 237, 238, 239, 804, 240, 241, 331,
	242, 243, 479, 244, 245, 332, 246, 805, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 333,
	806, 258, 259, 807, 260, 480, 261, 262, 263, 264,
	265, 808, 334, 335, 809, 810, 266, 267, 336, 268,
	337, 811, 269, 270, 271, 272, 273, 274, 275, 812,
	813, 276, 277, 278, 279, 280, 814, 815, 281, 282,
	283, 284, 285, 338, 339, 816, 286, 481, 287, 288,
	289, 290, 817, 818, 291, 819, 820, 292, 293, 294,
	295, 296, 297, 340, 341, 342, 343, 344, 345, 346,
	347, 348, 298, 299, 300, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 829, 0, 0, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 744, 41,
	42, 43, 745, 746, 747, 748, 749, 750, 751, 44,
	45, 752, 46, 47, 461, 48, 49, 50, 301, 302,
	462, 303, 304, 753, 51, 52, 53, 54, 55, 754,
	755, 56, 57, 305, 306, 58, 756, 59, 60, 61,
	62, 307, 757, 687, 758, 63, 64, 65, 66, 463,
	67, 68, 69, 759, 70, 71, 72, 73, 74, 75,
	760, 464, 76, 77, 78, 761, 762, 763, 688, 764,
	765, 766, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 767, 86, 768, 87, 88, 89, 90, 91, 769,
	92, 93, 94, 770, 771, 95, 96, 97, 98, 99,
	772, 100, 101, 102, 773, 103, 104, 105, 774, 106,
	107, 108, 109, 310, 110, 111, 112, 311, 775, 113,
	776, 114, 115, 312, 116, 777, 117, 778, 118, 465,
	779, 466, 119, 120, 121, 780, 122, 313, 781, 314,
	123, 782, 124, 125, 126, 127, 128, 467, 129, 130,
	131, 132, 783, 133, 134, 135, 136, 137, 138, 784,
	139, 468, 315, 140, 141, 142, 143, 316, 317, 785,
	318, 786, 144, 469, 470, 145, 471, 146, 147, 148,
	149, 150, 787, 788, 151, 319, 472, 152, 473, 789,
	153, 154, 155, 790, 791, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 474, 321, 171, 172, 322, 792, 173, 174, 475,
	175, 793, 323, 176, 324, 177, 178, 179, 794, 180,
	795, 796, 181, 182, 183, 797, 798, 184, 325, 476,
	185, 477, 326, 186, 187, 188, 189, 190, 191, 192,
	799, 193, 194, 327, 195, 328, 198, 196, 197, 800,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 801, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 802, 222, 223, 478, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 803, 235, 236, 237, 238, 239, 804, 240, 241,
	331, 242, 243, 479, 244, 245, 332, 246, 805, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 806, 258, 259, 807, 260, 480, 261, 262, 263,
	264, 265, 808, 334, 335, 809, 810, 266, 267, 336,
	268, 337, 811, 269, 270, 271, 272, 273, 274, 275,
	812, 813, 276, 277, 278, 279, 280, 814, 815, 281,
	282, 283, 284, 285, 338, 339, 816, 286, 481, 287,
	288, 289, 290, 817, 818, 291, 819, 820, 292, 293,
	294, 295, 296, 297, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 408, 397, 411, 0,
	0, 392, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 33, 34, 35, 36, 37, 38, 39, 40, 857,
	41, 42, 43, 0, 0, 0, 0, 389, 0, 0,
	44, 45, 0, 46, 47, 461, 48, 49, 50, 301,
	438, 462, 439, 440, 0, 51, 52, 53, 54, 55,
	405, 430, 56, 57, 441, 442, 58, 0, 59, 60,
	61, 62, 433, 0, 418, 0, 63, 64, 65, 66,
	463, 67, 68, 69, 0, 70, 71, 72, 73, 74,
	75, 0, 464, 76, 77, 78, 428, 419, 424, 429,
	420, 421, 425, 79, 80, 81, 82, 83, 84, 443,
	444, 85, 0, 86, 0, 87, 88, 89, 90, 91,
	0, 92, 93, 94, 858, 0, 95, 96, 437, 98,
	99, 0, 100, 101, 102, 0, 103, 104, 105, 0,
	106, 107, 108, 109, 388, 110, 111, 112, 431, 403,
	113, 0, 114, 115, 445, 116, 0, 117, 0, 118,
	465, 0, 466, 119, 120, 121, 0, 122, 434, 0,
	314, 123, 0, 124, 125, 126, 127, 128, 467, 129,
	130, 131, 132, 0, 133, 134, 135, 136, 137, 138,
	0, 139, 468, 315, 140, 141, 142, 143, 446, 447,
	0, 417, 0, 144, 469, 470, 145, 471, 146, 147,
	148, 149, 150, 0, 0, 151, 435, 472, 152, 473,
	0, 153, 154, 155, 422, 423, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 448, 474, 449, 171, 172, 322, 379, 173, 174,
	475, 175, 404, 323, 176, 450, 177, 178, 179, 0,
	180, 0, 0, 393, 182, 183, 0, 0, 184, 325,
	476, 185, 477, 432, 186, 187, 188, 189, 190, 191,
	192, 0, 193, 194, 327, 195, 328, 198, 196, 197,
	0, 199, 200, 201, 202, 203, 204, 205, 206, 451,
	207, 208, 209, 210, 0, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 222, 223, 478,
	224, 225, 226, 394, 227, 228, 229, 230, 231, 232,
	233, 234, 0, 235, 236, 237, 238, 239, 426, 240,
	241, 331, 242, 243, 479, 244, 245, 452, 246, 0,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 333, 0, 258, 259, 0, 260, 480, 261, 262,
	263, 264, 265, 0, 453, 454, 0, 0, 266, 267,
	336, 268, 337, 402, 269, 270, 271, 272, 273, 274,
	275, 0, 0, 276, 277, 278, 279, 280, 427, 0,
	281, 282, 283, 284, 285, 338, 455, 0, 286, 481,
	287, 288, 289, 290, 0, 0, 291, 0, 0, 292,
	293, 294, 295, 296, 297, 340, 436, 342, 343, 344,
	345, 346, 347, 348, 298, 299, 300, 380, 0, 0,
	0, 0, 0, 0, 0, 376, 377, 859, 0, 0,
	0, 408, 397, 411, 384, 855, 392, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	461, 48, 49, 50, 301, 438, 462, 439, 440, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 441,
	442, 58, 0, 59, 60, 61, 62, 433, 0, 418,
	0, 63, 64, 65, 66, 463, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 464, 76, 77,
	78, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 443, 444, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 437, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 445,
	116, 0, 117, 0, 118, 465, 0, 466, 119, 120,
	121, 0, 122, 434, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 467, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 468, 315, 140,
	141, 142, 143, 446, 447, 0, 417, 0, 144, 469,
	470, 145, 471, 146, 147, 148, 149, 150, 0, 0,
	151, 435, 472, 152, 473, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 448, 474, 449, 171,
	172, 322, 379, 173, 174, 475, 175, 404, 323, 176,
	450, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 476, 185, 477, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 451, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 478, 224, 225, 226, 394, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 479,
	244, 245, 452, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 480, 261, 262, 263, 264, 265, 0, 453,
	454, 0, 0, 266, 267, 336, 268, 337, 402, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	338, 455, 0, 286, 481, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 436, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 380, 0, 0, 0, 0, 408, 397, 411,
	376, 377, 392, 410, 0, 0, 0, 0, 0, 384,
	1186, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 461, 48, 49, 50,
	301, 438, 462, 439, 440, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 441, 442, 58, 0, 59,
	60, 61, 62, 433, 0, 418, 0, 63, 64, 65,
	66, 463, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 464, 76, 77, 78, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	443, 444, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 437,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 445, 116, 0, 117, 0,
	118, 465, 0, 466, 119, 120, 121, 0, 122, 434,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 467,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 468, 315, 140, 141, 142, 143, 446,
	447, 0, 417, 0, 144, 469, 470, 145, 471, 146,
	147, 148, 149, 150, 0, 0, 151, 435, 472, 152,
	473, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 448, 474, 449, 171, 172, 322, 379, 173,
	174, 475, 175, 404, 323, 176, 450, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 476, 185, 477, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	451, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	478, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 479, 244, 245, 452, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 480, 261,
	262, 263, 264, 265, 0, 453, 454, 0, 0, 266,
	267, 336, 268, 337, 402, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 455, 0, 286,
	481, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 436, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 380, 0,
	0, 0, 0, 408, 397, 411, 376, 377, 392, 410,
	0, 0, 0, 0, 0, 384, 1100, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 461, 48, 49, 50, 301, 438, 462, 439,
	440, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 441, 442, 58, 0, 59, 60, 61, 62, 433,
	0, 418, 0, 63, 64, 65, 66, 463, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 464,
	76, 77, 78, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 443, 444, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 437, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 445, 116, 0, 117, 0, 118, 465, 0, 466,
	119, 120, 121, 0, 122, 434, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 467, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 468,
	315, 140, 141, 142, 143, 446, 447, 0, 417, 0,
	144, 469, 470, 145, 471, 146, 147, 148, 149, 150,
	0, 0, 151, 435, 472, 152, 473, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 448, 474,
	449, 171, 172, 322, 379, 173, 174, 475, 175, 404,
	323, 176, 450, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 476, 185, 477,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 451, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 478, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 8,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 479, 244, 245, 452, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 10, 260, 480, 261, 262, 263, 264, 265,
	0, 453, 454, 0, 0, 266, 267, 336, 268, 337,
	402, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 571, 455, 0, 286, 481, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 436, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 380, 0, 0, 0, 0, 408,
	397, 411, 376, 377, 392, 410, 0, 0, 0, 0,
	0, 384, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 461, 48,
	49, 50, 301, 438, 462, 439, 440, 0, 51, 52,
	53, 54, 55, 405, 430, 56, 57, 441, 442, 58,
	0, 59, 60, 61, 62, 433, 0, 418, 0, 63,
	64, 65, 66, 463, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 464, 76, 77, 78, 428,
	419, 424, 429, 420, 421, 425, 79, 80, 81, 82,
	83, 84, 443, 444, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 437, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 431, 403, 113, 0, 114, 115, 445, 116, 0,
	117, 0, 118, 465, 0, 466, 119, 120, 121, 0,
	122, 434, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 467, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 468, 315, 140, 141, 142,
	143, 446, 447, 0, 417, 0, 144, 469, 470, 145,
	471, 146, 147, 148, 149, 150, 0, 0, 151, 435,
	472, 152, 473, 0, 153, 154, 155, 422, 423, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 448, 474, 449, 171, 172, 322,
	379, 173, 174, 475, 175, 404, 323, 176, 450, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 476, 185, 477, 432, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 451, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 478, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 426, 240, 241, 331, 242, 243, 479, 244, 245,
	452, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	480, 261, 262, 263, 264, 265, 0, 453, 454, 0,
	0, 266, 267, 336, 268, 337, 402, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 427, 0, 281, 282, 283, 284, 285, 338, 455,
	0, 286, 481, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 436,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	380, 0, 0, 0, 0, 408, 397, 411, 376, 377,
	392, 410, 0, 0, 0, 0, 0, 384, 854, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 461, 48, 49, 50, 301, 438,
	462, 439, 440, 0, 51, 52, 53, 54, 55, 405,
	430, 56, 57, 441, 442, 58, 0, 59, 60, 61,
	62, 433, 0, 418, 0, 63, 64, 65, 66, 463,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 464, 76, 77, 78, 428, 419, 424, 429, 420,
	421, 425, 79, 80, 81, 82, 83, 84, 443, 444,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 437, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 431, 403, 113,
	0, 114, 115, 445, 116, 0, 117, 0, 118, 465,
	0, 466, 119, 120, 121, 0, 122, 434, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 467, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 468, 315, 140, 141, 142, 143, 446, 447, 0,
	417, 0, 144, 469, 470, 145, 471, 146, 147, 148,
	149, 150, 0, 0, 151, 435, 472, 152, 473, 0,
	153, 154, 155, 422, 423, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	448, 474, 449, 171, 172, 322, 379, 173, 174, 475,
	175, 404, 323, 176, 450, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 476,
	185, 477, 432, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 451, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 478, 224,
	225, 226, 394, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 426, 240, 241,
	331, 242, 243, 479, 244, 245, 452, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 480, 261, 262, 263,
	264, 265, 0, 453, 454, 0, 0, 266, 267, 336,
	268, 337, 402, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 427, 0, 281,
	282, 283, 284, 285, 338, 455, 0, 286, 481, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 436, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 380, 0, 0, 0,
	0, 408, 397, 411, 376, 377, 392, 410, 0, 0,
	0, 579, 834, 384, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	461, 48, 49, 50, 301, 438, 462, 439, 440, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 441,
	442, 58, 0, 59, 60, 61, 62, 433, 0, 418,
	0, 63, 64, 65, 66, 463, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 464, 76, 77,
	78, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 443, 444, 85, 492, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 437, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 445,
	116, 0, 117, 0, 118, 465, 0, 466, 119, 120,
	121, 0, 122, 434, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 467, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 468, 315, 140,
	141, 142, 143, 446, 447, 0, 417, 0, 144, 469,
	470, 145, 471, 146, 147, 148, 149, 150, 0, 0,
	151, 435, 472, 152, 473, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 448, 474, 449, 171,
	172, 322, 379, 173, 174, 475, 175, 404, 323, 176,
	450, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 476, 185, 477, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 451, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 478, 224, 225, 226, 394, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 479,
	244, 245, 452, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 480, 261, 262, 263, 264, 265, 0, 453,
	454, 0, 0, 266, 267, 336, 268, 337, 402, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	338, 455, 0, 286, 481, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 436, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 380, 0, 0, 0, 0, 408, 397, 411,
	376, 377, 392, 410, 0, 0, 0, 0, 0, 384,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 461, 48, 49, 50,
	301, 438, 462, 439, 440, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 441, 442, 58, 0, 59,
	60, 61, 62, 433, 0, 418, 0, 63, 64, 65,
	66, 463, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 464, 76, 77, 78, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	443, 444, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 437,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 445, 116, 0, 117, 0,
	118, 465, 0, 466, 119, 120, 121, 0, 122, 434,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 467,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 468, 315, 140, 141, 142, 143, 446,
	447, 0, 417, 0, 144, 469, 470, 145, 471, 146,
	147, 148, 149, 150, 0, 0, 151, 435, 472, 152,
	473, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 448, 474, 449, 171, 172, 322, 379, 173,
	174, 475, 175, 404, 323, 176, 450, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 476, 185, 477, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	451, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	478, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 479, 244, 245, 452, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 480, 261,
	262, 263, 264, 265, 0, 453, 454, 0, 0, 266,
	267, 336, 268, 337, 402, 269, 270, 271, 272, 273,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 455, 0, 286,
	481, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 436, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 380, 0,
	0, 0, 0, 0, 0, 0, 376, 377, 374, 0,
	0, 408, 397, 411, 0, 384, 392, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 508, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	461, 48, 49, 50, 301, 438, 462, 439, 440, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 441,
	442, 58, 0, 59, 60, 61, 62, 433, 0, 418,
	0, 63, 64, 65, 66, 463, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 464, 76, 77,
	78, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 443, 444, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 437, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 445,
	116, 0, 117, 0, 118, 465, 0, 466, 119, 120,
	121, 0, 122, 434, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 467, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 468, 315, 140,
	141, 142, 143, 446, 447, 0, 417, 0, 144, 469,
	470, 145, 471, 146, 147, 148, 149, 150, 0, 0,
	151, 435, 472, 152, 473, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 448, 474, 449, 171,
	172, 322, 379, 173, 174, 475, 175, 404, 323, 176,
	450, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 476, 185, 477, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 451, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 478, 224, 225, 226, 394, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 479,
	244, 245, 452, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 480, 261, 262, 263, 264, 265, 0, 453,
	454, 0, 0, 266, 267, 336, 268, 337, 402, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	338, 455, 0, 286, 481, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 436, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 380, 0, 0, 0, 0, 408, 397, 411,
	376, 377, 392, 410, 0, 0, 0, 0, 0, 384,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 461, 48, 49, 50,
	301, 438, 462, 439, 440, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 441, 442, 58, 0, 59,
	60, 61, 62, 433, 0, 418, 0, 63, 64, 65,
	66, 463, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 464, 76, 77, 1265, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	443, 444, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 437,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 445, 116, 0, 117, 0,
	118, 465, 0, 466, 119, 120, 121, 0, 122, 434,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 467,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 468, 315, 140, 141, 142, 143, 446,
	447, 0, 417, 0, 144, 469, 470, 145, 471, 146,
	147, 148, 149, 150, 0, 0, 151, 435, 472, 152,
	473, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 448, 474, 449, 171, 172, 322, 379, 173,
	174, 475, 175, 404, 323, 176, 450, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 476, 185, 477, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	451, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	478, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 479, 244, 245, 452, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 480, 261,
	262, 263, 264, 265, 0, 453, 454, 0, 0, 266,
	267, 336, 268, 337, 402, 269, 270, 271, 272, 1264,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 455, 0, 286,
	481, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 436, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 380, 0,
	0, 0, 0, 408, 397, 411, 376, 377, 392, 410,
	0, 0, 0, 0, 0, 384, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 461, 48, 49, 50, 1263, 438, 462, 439,
	440, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 441, 442, 58, 0, 59, 60, 61, 62, 433,
	0, 418, 0, 63, 64, 65, 66, 463, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 464,
	76, 77, 1265, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 443, 444, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 437, 98, 99, 0, 100,
	101, 102, 0, 103, 104, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 445, 116, 0, 117, 0, 118, 465, 0, 466,
	119, 120, 121, 0, 122, 434, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 467, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 468,
	315, 140, 141, 142, 143, 446, 447, 0, 417, 0,
	144, 469, 470, 145, 471, 146, 147, 148, 149, 150,
	0, 0, 151, 435, 472, 152, 473, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 448, 474,
	449, 171, 172, 322, 379, 173, 174, 475, 175, 404,
	323, 176, 450, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 476, 185, 477,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 451, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 478, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 479, 244, 245, 452, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 480, 261, 262, 263, 264, 265,
	0, 453, 454, 0, 0, 266, 267, 336, 268, 337,
	402, 269, 270, 271, 272, 1264, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 455, 0, 286, 481, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 436, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 380, 0, 0, 0, 0, 408,
	397, 411, 376, 377, 392, 410, 0, 0, 0, 0,
	0, 384, 0, 0, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	389, 0, 0, 44, 45, 0, 46, 47, 461, 48,
	49, 50, 301, 438, 462, 439, 440, 0, 51, 52,
	53, 54, 55, 405, 430, 56, 57, 441, 442, 58,
	0, 59, 60, 61, 62, 433, 0, 418, 0, 63,
	64, 65, 66, 463, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 464, 76, 77, 78, 428,
	419, 424, 429, 420, 421, 425, 79, 80, 81, 82,
	83, 84, 443, 444, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 437, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 388, 110, 111,
	112, 431, 403, 113, 0, 114, 115, 445, 116, 0,
	117, 0, 118, 465, 0, 466, 119, 120, 121, 0,
	122, 434, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 467, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 468, 315, 140, 141, 142,
	143, 446, 447, 0, 417, 0, 144, 469, 470, 145,
	471, 146, 147, 148, 149, 150, 0, 0, 151, 435,
	472, 152, 473, 0, 153, 154, 155, 422, 423, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 448, 474, 449, 171, 172, 322,
	379, 173, 174, 475, 175, 404, 323, 176, 450, 177,
	178, 179, 0, 180, 0, 0, 393, 182, 183, 0,
	0, 184, 325, 476, 185, 477, 432, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 451, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 478, 224, 225, 226, 394, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 426, 240, 241, 331, 242, 243, 479, 244, 245,
	452, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	480, 261, 262, 263, 264, 265, 0, 453, 454, 0,
	0, 266, 267, 336, 268, 337, 402, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 427, 0, 281, 282, 283, 284, 285, 338, 455,
	0, 286, 481, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 436,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	380, 0, 0, 0, 0, 408, 397, 411, 376, 377,
	392, 410, 0, 0, 0, 0, 0, 384, 0, 0,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 389, 0, 0, 44,
	45, 0, 46, 47, 461, 48, 49, 50, 301, 438,
	462, 439, 440, 0, 51, 52, 53, 54, 55, 405,
	430, 56, 57, 441, 442, 58, 0, 59, 60, 61,
	62, 433, 0, 418, 0, 63, 64, 65, 66, 463,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 464, 76, 77, 78, 428, 419, 424, 429, 420,
	421, 425, 79, 80, 81, 82, 83, 84, 443, 444,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 437, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 388, 110, 111, 112, 431, 403, 113,
	0, 114, 115, 445, 116, 0, 117, 0, 118, 465,
	0, 466, 119, 120, 121, 0, 122, 434, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 467, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 468, 315, 140, 141, 142, 143, 446, 447, 0,
	417, 0, 144, 469, 470, 145, 471, 146, 147, 148,
	149, 150, 0, 0, 151, 435, 472, 152, 473, 0,
	153, 154, 155, 422, 423, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	448, 474, 449, 171, 172, 322, 0, 173, 174, 475,
	175, 404, 323, 176, 450, 177, 178, 179, 0, 180,
	0, 0, 393, 182, 183, 0, 0, 184, 325, 476,
	185, 477, 432, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 451, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 478, 224,
	225, 226, 968, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 426, 240, 241,
	331, 242, 243, 479, 244, 245, 452, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 480, 261, 262, 263,
	264, 265, 0, 453, 454, 0, 0, 266, 267, 336,
	268, 337, 402, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 427, 0, 281,
	282, 283, 284, 285, 338, 455, 0, 286, 481, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 436, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 0, 0, 0, 0,
	0, 408, 397, 411, 964, 965, 392, 410, 0, 0,
	0, 0, 0, 967, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 389, 0, 0, 44, 45, 0, 46, 47,
	461, 48, 49, 50, 301, 438, 462, 439, 440, 0,
	51, 52, 53, 54, 55, 405, 430, 56, 57, 441,
	442, 58, 0, 59, 60, 61, 62, 433, 0, 418,
	0, 63, 64, 65, 66, 463, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 464, 76, 77,
	78, 428, 419, 424, 429, 420, 421, 425, 79, 80,
	81, 82, 83, 84, 443, 444, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 437, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 388,
	110, 111, 112, 431, 403, 113, 0, 114, 115, 445,
	116, 0, 117, 0, 118, 465, 0, 466, 119, 120,
	121, 0, 122, 434, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 467, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 468, 315, 140,
	141, 142, 143, 446, 447, 0, 417, 0, 144, 0,
	470, 145, 471, 146, 147, 148, 149, 150, 0, 0,
	151, 435, 472, 152, 473, 0, 153, 154, 155, 422,
	423, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 448, 474, 449, 171,
	172, 322, 0, 173, 174, 475, 175, 404, 323, 176,
	450, 177, 178, 179, 0, 180, 0, 0, 393, 182,
	183, 0, 0, 184, 325, 476, 185, 477, 432, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 451, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 478, 224, 225, 226, 968, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 426, 240, 241, 331, 242, 243, 479,
	244, 245, 452, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 480, 261, 262, 263, 264, 265, 0, 453,
	454, 0, 0, 266, 267, 336, 268, 337, 402, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 427, 0, 281, 282, 283, 284, 285,
	338, 455, 0, 286, 481, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 436, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 0, 0, 0, 0, 0, 408, 397, 411,
	964, 965, 392, 410, 0, 0, 0, 0, 0, 967,
	0, 0, 33, 34, 35, 36, 37, 38, 39, 40,
	0, 41, 42, 43, 0, 0, 0, 0, 389, 0,
	0, 44, 45, 0, 46, 47, 461, 48, 49, 50,
	0, 438, 462, 439, 440, 0, 51, 52, 53, 54,
	55, 405, 430, 56, 57, 441, 442, 58, 0, 59,
	60, 61, 62, 433, 0, 418, 0, 63, 64, 65,
	66, 463, 67, 68, 69, 0, 70, 71, 72, 73,
	74, 75, 0, 464, 76, 77, 1265, 428, 419, 424,
	429, 420, 421, 425, 79, 80, 81, 82, 83, 84,
	443, 444, 85, 0, 86, 0, 87, 88, 89, 90,
	91, 0, 92, 93, 94, 0, 0, 95, 96, 437,
	98, 99, 0, 100, 101, 102, 0, 103, 104, 105,
	0, 106, 107, 108, 109, 388, 110, 111, 112, 431,
	403, 113, 0, 114, 115, 445, 116, 0, 117, 0,
	118, 465, 0, 466, 119, 120, 121, 0, 122, 434,
	0, 314, 123, 0, 124, 125, 126, 127, 128, 0,
	129, 130, 131, 132, 0, 133, 134, 135, 136, 137,
	138, 0, 139, 468, 315, 140, 141, 142, 143, 446,
	447, 0, 417, 0, 144, 0, 0, 145, 471, 146,
	147, 148, 149, 150, 0, 0, 151, 435, 472, 152,
	0, 0, 153, 154, 155, 422, 423, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 448, 474, 449, 171, 172, 322, 379, 173,
	174, 0, 175, 404, 323, 176, 450, 177, 178, 179,
	0, 180, 0, 0, 393, 182, 183, 0, 0, 184,
	325, 476, 185, 477, 432, 186, 187, 188, 189, 190,
	191, 192, 0, 193, 194, 327, 195, 328, 198, 196,
	197, 0, 199, 200, 201, 202, 203, 204, 205, 206,
	451, 207, 208, 209, 210, 0, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 0, 222, 223,
	478, 224, 225, 226, 394, 227, 228, 229, 230, 231,
	232, 233, 234, 0, 235, 236, 237, 238, 239, 426,
	240, 241, 331, 242, 243, 0, 244, 245, 452, 246,
	0, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 333, 0, 258, 259, 0, 260, 480, 261,
	262, 263, 264, 265, 0, 453, 454, 0, 0, 266,
	267, 336, 268, 337, 402, 269, 270, 271, 272, 1264,
	274, 275, 0, 0, 276, 277, 278, 279, 280, 427,
	0, 281, 282, 283, 284, 285, 338, 455, 0, 286,
	481, 287, 288, 289, 290, 0, 0, 291, 0, 0,
	292, 293, 294, 295, 296, 297, 340, 436, 342, 343,
	344, 345, 346, 347, 348, 298, 299, 300, 0, 0,
	0, 0, 0, 408, 397, 411, 376, 377, 392, 410,
	0, 0, 0, 0, 0, 384, 0, 0, 33, 34,
	35, 36, 37, 38, 39, 40, 0, 41, 42, 43,
	0, 0, 0, 0, 389, 0, 0, 44, 45, 0,
	46, 47, 461, 48, 49, 50, 0, 438, 462, 439,
	440, 0, 51, 52, 53, 54, 55, 405, 430, 56,
	57, 441, 442, 58, 0, 59, 60, 61, 62, 433,
	0, 418, 0, 63, 64, 65, 66, 463, 67, 68,
	69, 0, 70, 71, 72, 73, 74, 75, 0, 464,
	76, 77, 78, 428, 419, 424, 429, 420, 421, 425,
	79, 80, 81, 82, 83, 84, 443, 444, 85, 0,
	86, 0, 87, 88, 89, 90, 91, 0, 92, 93,
	94, 0, 0, 95, 96, 437, 98, 99, 0, 100,
	101, 102, 0, 103, 0, 105, 0, 106, 107, 108,
	109, 388, 110, 111, 112, 431, 403, 113, 0, 114,
	115, 445, 116, 0, 117, 0, 118, 465, 0, 466,
	119, 120, 121, 0, 122, 434, 0, 314, 123, 0,
	124, 125, 126, 127, 128, 0, 129, 130, 131, 132,
	0, 133, 134, 135, 136, 137, 138, 0, 139, 468,
	315, 140, 141, 142, 143, 446, 447, 0, 417, 0,
	144, 0, 0, 145, 471, 146, 147, 148, 149, 150,
	0, 0, 151, 435, 472, 152, 0, 0, 153, 154,
	155, 422, 423, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 448, 474,
	449, 171, 172, 322, 379, 173, 174, 0, 175, 404,
	323, 176, 450, 177, 178, 179, 0, 180, 0, 0,
	393, 182, 183, 0, 0, 184, 325, 476, 185, 477,
	432, 186, 187, 188, 189, 190, 191, 192, 0, 193,
	194, 327, 195, 328, 198, 196, 197, 0, 199, 200,
	201, 202, 203, 204, 205, 206, 451, 207, 208, 209,
	210, 0, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 0, 222, 223, 478, 224, 225, 226,
	394, 227, 228, 229, 230, 231, 232, 233, 234, 0,
	235, 236, 237, 238, 239, 426, 240, 241, 331, 242,
	243, 0, 244, 245, 452, 246, 0, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 333, 0,
	258, 259, 0, 260, 480, 261, 262, 263, 264, 265,
	0, 453, 454, 0, 0, 266, 267, 336, 268, 337,
	402, 269, 270, 271, 272, 273, 274, 275, 0, 0,
	276, 277, 278, 279, 280, 427, 0, 281, 282, 283,
	284, 285, 338, 455, 0, 286, 481, 287, 288, 289,
	290, 0, 0, 291, 0, 0, 292, 293, 294, 295,
	296, 297, 340, 436, 342, 343, 344, 345, 346, 347,
	348, 298, 299, 300, 0, 0, 0, 0, 0, 0,
	30, 0, 376, 377, 0, 840, 0, 0, 0, 0,
	0, 384, 850, 851, 852, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 0, 0, 0, 44, 45, 0, 46, 47, 0,
	48, 49, 50, 301, 302, 0, 303, 304, 0, 51,
	52, 53, 54, 55, 0, 0, 56, 57, 305, 306,
	58, 0, 59, 60, 61, 62, 307, 0, 0, 0,
	63, 64, 65, 66, 0, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 0, 76, 77, 78,
	0, 0, 0, 0, 0, 0, 0, 79, 80, 81,
	82, 83, 84, 308, 309, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 97, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 310, 110,
	111, 112, 311, 0, 113, 0, 114, 115, 312, 116,
	0, 117, 0, 118, 0, 0, 0, 119, 120, 121,
	0, 122, 313, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 0, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 0, 315, 140, 141,
	142, 143, 316, 317, 0, 318, 0, 144, 0, 0,
	145, 0, 146, 147, 148, 149, 150, 0, 0, 151,
	319, 0, 152, 0, 0, 153, 154, 155, 0, 0,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 320, 0, 321, 171, 172,
	322, 0, 173, 174, 0, 175, 0, 323, 176, 324,
	177, 178, 179, 0, 180, 0, 0, 181, 182, 183,
	0, 0, 184, 325, 0, 185, 0, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 329, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 0, 224, 225, 226, 330, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 0, 240, 241, 331, 242, 243, 0, 244,
	245, 332, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 0, 261, 262, 263, 264, 265, 0, 334, 335,
	0, 0, 266, 267, 336, 268, 337, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 0, 0, 281, 282, 283, 284, 285, 338,
	339, 0, 286, 0, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	341, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 30, 0, 0, 0, 847, 848, 849, 0, 841,
	842, 843, 844, 845, 846, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 0, 46, 47,
	0, 48, 49, 50, 301, 302, 0, 303, 304, 0,
	51, 52, 53, 54, 55, 0, 0, 56, 57, 305,
	306, 58, 0, 59, 60, 61, 62, 307, 0, 0,
	0, 63, 64, 65, 66, 0, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 0, 76, 77,
	78, 0, 0, 0, 0, 0, 0, 0, 79, 80,
	81, 82, 83, 84, 308, 309, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 97, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 310,
	110, 111, 112, 311, 0, 113, 0, 114, 115, 312,
	116, 0, 117, 0, 118, 0, 0, 0, 119, 120,
	121, 0, 122, 313, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 0, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 0, 315, 140,
	141, 142, 143, 316, 317, 0, 318, 0, 144, 0,
	0, 145, 0, 146, 147, 148, 149, 150, 0, 0,
	151, 319, 0, 152, 0, 0, 153, 154, 155, 0,
	0, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 320, 0, 321, 171,
	172, 322, 0, 173, 174, 0, 175, 0, 323, 176,
	324, 177, 178, 179, 0, 180, 0, 0, 181, 182,
	183, 0, 0, 184, 325, 0, 185, 0, 326, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 329, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 0, 224, 225, 226, 330, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 0, 240, 241, 331, 242, 243, 0,
	244, 245, 332, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 0, 261, 262, 263, 264, 265, 0, 334,
	335, 0, 0, 266, 267, 336, 268, 337, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 0, 0, 281, 282, 283, 284, 285,
	338, 339, 0, 286, 0, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 341, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 0, 0, 0, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1007,
	33, 34, 35, 36, 37, 38, 39, 40, 0, 41,
	42, 43, 0, 0, 0, 0, 0, 0, 0, 44,
	45, 0, 46, 47, 0, 48, 49, 50, 301, 302,
	0, 303, 304, 0, 51, 52, 53, 54, 55, 0,
	0, 56, 57, 305, 306, 58, 0, 59, 60, 61,
	62, 307, 0, 0, 0, 63, 64, 65, 66, 0,
	67, 68, 69, 0, 70, 71, 72, 73, 74, 75,
	0, 0, 76, 77, 78, 0, 0, 0, 0, 0,
	0, 0, 79, 80, 81, 82, 83, 84, 308, 309,
	85, 0, 86, 0, 87, 88, 89, 90, 91, 0,
	92, 93, 94, 0, 0, 95, 96, 97, 98, 99,
	0, 100, 101, 102, 0, 103, 104, 105, 0, 106,
	107, 108, 109, 310, 110, 111, 112, 311, 0, 113,
	0, 114, 115, 312, 116, 0, 117, 0, 118, 0,
	0, 0, 119, 120, 121, 0, 122, 313, 0, 314,
	123, 0, 124, 125, 126, 127, 128, 0, 129, 130,
	131, 132, 0, 133, 134, 135, 136, 137, 138, 0,
	139, 0, 315, 140, 141, 142, 143, 316, 317, 0,
	318, 0, 144, 0, 0, 145, 0, 146, 147, 148,
	149, 150, 0, 0, 151, 319, 0, 152, 0, 0,
	153, 154, 155, 0, 0, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	320, 0, 321, 171, 172, 322, 0, 173, 174, 0,
	175, 0, 323, 176, 324, 177, 178, 179, 0, 180,
	0, 0, 181, 182, 183, 0, 0, 184, 325, 0,
	185, 0, 326, 186, 187, 188, 189, 190, 191, 192,
	0, 193, 194, 327, 195, 328, 198, 196, 197, 0,
	199, 200, 201, 202, 203, 204, 205, 206, 329, 207,
	208, 209, 210, 0, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 0, 222, 223, 0, 224,
	225, 226, 330, 227, 228, 229, 230, 231, 232, 233,
	234, 0, 235, 236, 237, 238, 239, 0, 240, 241,
	331, 242, 243, 0, 244, 245, 332, 246, 0, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	333, 0, 258, 259, 0, 260, 0, 261, 262, 263,
	264, 265, 0, 334, 335, 0, 0, 266, 267, 336,
	268, 337, 0, 269, 270, 271, 272, 273, 274, 275,
	0, 0, 276, 277, 278, 279, 280, 0, 0, 281,
	282, 283, 284, 285, 338, 339, 0, 286, 0, 287,
	288, 289, 290, 0, 0, 291, 0, 0, 292, 293,
	294, 295, 296, 297, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 298, 299, 300, 0, 0, 0, 30,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 488, 33, 34, 35, 36, 37, 38,
	39, 40, 0, 41, 42, 43, 0, 0, 0, 0,
	0, 0, 0, 44, 45, 0, 46, 47, 0, 48,
	49, 50, 301, 302, 0, 303, 304, 0, 51, 52,
	53, 54, 55, 0, 0, 56, 57, 305, 306, 58,
	0, 59, 60, 61, 62, 307, 0, 0, 0, 63,
	64, 65, 66, 0, 67, 68, 69, 0, 70, 71,
	72, 73, 74, 75, 0, 0, 76, 77, 78, 0,
	0, 0, 0, 0, 0, 0, 79, 80, 81, 82,
	83, 84, 308, 309, 85, 0, 86, 0, 87, 88,
	89, 90, 91, 0, 92, 93, 94, 0, 0, 95,
	96, 97, 98, 99, 0, 100, 101, 102, 0, 103,
	104, 105, 0, 106, 107, 108, 109, 310, 110, 111,
	112, 311, 0, 113, 0, 114, 115, 312, 116, 0,
	117, 0, 118, 0, 0, 0, 119, 120, 121, 0,
	122, 313, 0, 314, 123, 0, 124, 125, 126, 127,
	128, 0, 129, 130, 131, 132, 0, 133, 134, 135,
	136, 137, 138, 0, 139, 0, 315, 140, 141, 142,
	143, 316, 317, 0, 318, 0, 144, 0, 0, 145,
	0, 146, 147, 148, 149, 150, 0, 0, 151, 319,
	0, 152, 0, 0, 153, 154, 155, 0, 0, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 320, 0, 321, 171, 172, 322,
	0, 173, 174, 0, 175, 0, 323, 176, 324, 177,
	178, 179, 0, 180, 0, 28, 181, 182, 183, 0,
	0, 184, 325, 0, 185, 0, 326, 186, 187, 188,
	189, 190, 191, 192, 0, 193, 194, 327, 195, 328,
	198, 196, 197, 0, 199, 200, 201, 202, 203, 204,
	205, 206, 329, 207, 208, 209, 210, 0, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	222, 223, 0, 224, 225, 226, 330, 227, 228, 229,
	230, 231, 232, 233, 234, 0, 235, 236, 237, 238,
	239, 0, 240, 241, 331, 242, 243, 0, 244, 245,
	332, 246, 0, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 333, 0, 258, 259, 0, 260,
	0, 261, 262, 263, 264, 265, 0, 334, 335, 0,
	0, 266, 267, 336, 268, 337, 0, 269, 270, 271,
	272, 273, 274, 275, 0, 0, 276, 277, 278, 279,
	280, 0, 0, 281, 282, 283, 284, 285, 338, 339,
	0, 286, 0, 287, 288, 289, 290, 0, 0, 291,
	0, 0, 292, 293, 294, 295, 296, 297, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 298, 299, 300,
	30, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 33, 34, 35, 36, 37,
	38, 39, 40, 0, 41, 42, 43, 0, 0, 0,
	0, 0, 0, 0, 44, 45, 0, 46, 47, 0,
	48, 49, 50, 301, 302, 0, 303, 304, 0, 51,
	52, 53, 54, 55, 0, 0, 56, 57, 305, 306,
	58, 0, 59, 60, 61, 62, 307, 0, 0, 0,
	63, 64, 65, 66, 0, 67, 68, 69, 0, 70,
	71, 72, 73, 74, 75, 0, 0, 76, 77, 78,
	0, 0, 0, 0, 0, 0, 0, 79, 80, 81,
	82, 83, 84, 308, 309, 85, 0, 86, 0, 87,
	88, 89, 90, 91, 0, 92, 93, 94, 0, 0,
	95, 96, 97, 98, 99, 0, 100, 101, 102, 0,
	103, 104, 105, 0, 106, 107, 108, 109, 310, 110,
	111, 112, 311, 0, 113, 0, 114, 115, 312, 116,
	0, 117, 0, 118, 0, 0, 0, 119, 120, 121,
	0, 122, 313, 0, 314, 123, 0, 124, 125, 126,
	127, 128, 0, 129, 130, 131, 132, 0, 133, 134,
	135, 136, 137, 138, 0, 139, 0, 315, 140, 141,
	142, 143, 316, 317, 0, 318, 0, 144, 0, 0,
	145, 0, 146, 147, 148, 149, 150, 0, 0, 151,
	319, 0, 152, 0, 0, 153, 154, 155, 0, 0,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 320, 0, 321, 171, 172,
	322, 0, 173, 174, 0, 175, 0, 323, 176, 324,
	177, 178, 179, 0, 180, 0, 0, 181, 182, 183,
	0, 0, 184, 325, 0, 185, 0, 326, 186, 187,
	188, 189, 190, 191, 192, 0, 193, 194, 327, 195,
	328, 198, 196, 197, 0, 199, 200, 201, 202, 203,
	204, 205, 206, 329, 207, 208, 209, 210, 0, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	0, 222, 223, 0, 224, 225, 226, 330, 227, 228,
	229, 230, 231, 232, 233, 234, 0, 235, 236, 237,
	238, 239, 0, 240, 241, 331, 242, 243, 0, 244,
	245, 332, 246, 0, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 333, 0, 258, 259, 0,
	260, 0, 261, 262, 263, 264, 265, 0, 334, 335,
	0, 0, 266, 267, 336, 268, 337, 0, 269, 270,
	271, 272, 273, 274, 275, 0, 0, 276, 277, 278,
	279, 280, 0, 0, 281, 282, 283, 284, 285, 338,
	339, 0, 286, 0, 287, 288, 289, 290, 0, 0,
	291, 0, 0, 292, 293, 294, 295, 296, 297, 340,
	341, 342, 343, 344, 345, 346, 347, 348, 298, 299,
	300, 30, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 0, 46, 47,
	0, 48, 49, 50, 301, 302, 0, 303, 304, 0,
	51, 52, 53, 54, 55, 0, 0, 56, 57, 305,
	306, 58, 0, 59, 60, 61, 62, 307, 0, 0,
	0, 63, 64, 65, 66, 0, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 0, 76, 77,
	78, 0, 0, 0, 0, 0, 0, 0, 79, 80,
	81, 82, 83, 84, 308, 309, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 97, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 310,
	110, 111, 112, 311, 0, 113, 0, 114, 115, 312,
	116, 0, 117, 0, 118, 0, 0, 0, 119, 120,
	121, 0, 122, 313, 0, 314, 123, 0, 124, 125,
	126, 127, 128, 0, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 0, 315, 140,
	141, 142, 143, 316, 317, 0, 318, 0, 144, 0,
	0, 145, 0, 146, 147, 148, 149, 150, 0, 0,
	151, 319, 0, 152, 0, 0, 153, 154, 155, 0,
	0, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 320, 0, 321, 171,
	172, 322, 0, 173, 174, 0, 175, 0, 323, 176,
	324, 177, 178, 179, 0, 180, 0, 0, 181, 182,
	183, 0, 0, 184, 325, 0, 185, 0, 326, 186,
	187, 188, 189, 0, 191, 192, 0, 193, 194, 327,
	195, 328, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 0, 206, 329, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 0, 224, 225, 226, 330, 0,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 0, 240, 241, 331, 242, 243, 0,
	244, 245, 332, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 333, 0, 258, 259,
	0, 260, 0, 261, 262, 263, 264, 265, 0, 334,
	335, 0, 0, 266, 267, 336, 268, 337, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 0, 0, 281, 282, 283, 284, 285,
	338, 339, 0, 286, 0, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	340, 341, 342, 343, 344, 345, 346, 347, 348, 298,
	299, 300, 684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 33, 34, 35,
	36, 37, 38, 39, 40, 0, 41, 42, 43, 0,
	0, 0, 0, 0, 0, 0, 44, 45, 0, 46,
	47, 461, 48, 49, 50, 0, 670, 462, 686, 676,
	0, 51, 52, 53, 54, 55, 0, 0, 56, 57,
	690, 689, 58, 0, 59, 60, 61, 62, 0, 0,
	687, 0, 63, 64, 65, 66, 463, 67, 68, 69,
	0, 70, 71, 72, 73, 74, 75, 0, 464, 76,
	77, 78, 0, 0, 0, 688, 0, 0, 0, 79,
	80, 81, 82, 83, 84, 674, 673, 85, 0, 86,
	0, 87, 88, 89, 90, 91, 0, 92, 93, 94,
	0, 0, 95, 96, 437, 98, 99, 0, 100, 101,
	102, 0, 103, 104, 105, 0, 106, 107, 108, 109,
	0, 110, 111, 112, 0, 0, 113, 0, 114, 115,
	672, 116, 0, 117, 0, 118, 465, 0, 466, 119,
	120, 121, 0, 122, 0, 0, 0, 123, 0, 124,
	125, 126, 127, 128, 467, 129, 130, 131, 132, 0,
	133, 134, 135, 136, 137, 138, 0, 139, 468, 0,
	140, 141, 142, 143, 667, 668, 0, 683, 0, 144,
	469, 470, 145, 471, 146, 147, 148, 149, 150, 0,
	0, 151, 0, 472, 152, 473, 0, 153, 154, 155,
	0, 0, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 692, 474, 693,
	171, 172, 0, 0, 173, 174, 475, 175, 0, 0,
	176, 675, 177, 178, 179, 0, 180, 0, 0, 181,
	182, 183, 0, 0, 184, 0, 476, 185, 477, 0,
	186, 187, 188, 189, 190, 191, 192, 0, 193, 194,
	0, 195, 0, 198, 196, 197, 0, 199, 200, 201,
	202, 203, 204, 205, 206, 671, 207, 208, 209, 210,
	0, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 222, 223, 478, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 0, 235,
	236, 237, 238, 239, 0, 240, 241, 659, 242, 243,
	479, 244, 245, 669, 246, 0, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 0, 0, 258,
	259, 0, 260, 480, 261, 262, 263, 264, 265, 0,
	682, 681, 0, 0, 266, 267, 0, 268, 0, 0,
	269, 270, 271, 272, 273, 274, 275, 0, 0, 276,
	277, 278, 279, 280, 0, 0, 281, 282, 283, 284,
	285, 0, 691, 0, 286, 481, 287, 288, 289, 290,
	0, 0, 291, 0, 0, 292, 293, 294, 295, 296,
	297, 684, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 299, 300, 0, 0, 0, 33, 34, 35, 36,
	37, 38, 39, 40, 0, 41, 42, 43, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 0, 46, 47,
	461, 48, 49, 50, 0, 670, 462, 686, 676, 0,
	51, 52, 53, 54, 55, 0, 0, 56, 57, 690,
	689, 58, 0, 59, 60, 61, 62, 0, 0, 687,
	0, 63, 64, 65, 66, 463, 67, 68, 69, 0,
	70, 71, 72, 73, 74, 75, 0, 464, 76, 77,
	78, 0, 0, 0, 688, 0, 0, 0, 79, 80,
	81, 82, 83, 84, 674, 673, 85, 0, 86, 0,
	87, 88, 89, 90, 91, 0, 92, 93, 94, 0,
	0, 95, 96, 437, 98, 99, 0, 100, 101, 102,
	0, 103, 104, 105, 0, 106, 107, 108, 109, 0,
	110, 111, 112, 0, 0, 113, 0, 114, 115, 672,
	116, 0, 117, 0, 118, 465, 0, 466, 119, 120,
	121, 0, 122, 0, 0, 0, 123, 0, 124, 125,
	126, 127, 128, 467, 129, 130, 131, 132, 0, 133,
	134, 135, 136, 137, 138, 0, 139, 468, 0, 140,
	141, 142, 143, 667, 668, 0, 683, 0, 144, 469,
	470, 145, 471, 146, 147, 148, 149, 150, 0, 0,
	151, 0, 472, 152, 473, 0, 153, 154, 155, 0,
	0, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 692, 474, 693, 171,
	172, 0, 0, 173, 174, 475, 175, 0, 0, 176,
	675, 177, 178, 179, 0, 180, 0, 0, 181, 182,
	183, 0, 0, 184, 0, 476, 185, 477, 0, 186,
	187, 188, 189, 190, 191, 192, 0, 193, 194, 0,
	195, 0, 198, 196, 197, 0, 199, 200, 201, 202,
	203, 204, 205, 206, 671, 207, 208, 209, 210, 0,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 0, 222, 223, 478, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 0, 235, 236,
	237, 238, 239, 0, 240, 241, 0, 242, 243, 479,
	244, 245, 669, 246, 0, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 0, 0, 258, 259,
	0, 260, 480, 261, 262, 263, 264, 265, 0, 682,
	681, 0, 0, 266, 267, 0, 268, 0, 0, 269,
	270, 271, 272, 273, 274, 275, 0, 0, 276, 277,
	278, 279, 280, 0, 0, 281, 282, 283, 284, 285,
	0, 691, 0, 286, 481, 287, 288, 289, 290, 0,
	0, 291, 0, 0, 292, 293, 294, 295, 296, 297,
	0, 0, 0, 0, 0, 558, 0, 0, 528, 298,
	299, 300, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 528, 0, 544,
	0, 540, 541, 542, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 553, 558, 0, 0, 528, 544, 0,
	0, 540, 541, 542, 0, 0, 530, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 0, 529, 544, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 558, 553, 0, 528, 0, 529, 0, 540, 541,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 0, 0, 528, 0, 544, 529, 540, 541, 542,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 553,
	558, 0, 0, 528, 544, 0, 0, 540, 541, 542,
	0, 0, 530, 0, 0, 0, 0, 0, 553, 0,
	0, 0, 0, 529, 544, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 558, 553, 0,
	528, 0, 529, 0, 540, 541, 542, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 554, 0, 0,
	0, 544, 529, 0, 0, 652, 0, 0, 0, 530,
	0, 548, 0, 0, 0, 553, 554, 0, 550, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 546, 0, 0, 554, 550, 551, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 550, 551, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 548, 0,
	0, 0, 546, 554, 0, 0, 0, 559, 0, 0,
	545, 0, 0, 552, 0, 0, 653, 548, 0, 0,
	0, 0, 554, 0, 550, 551, 559, 0, 0, 545,
	0, 0, 0, 552, 0, 0, 0, 548, 0, 546,
	0, 0, 554, 550, 551, 0, 559, 0, 0, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 550, 551, 0, 0, 0, 0, 0,
	552, 0, 0, 0, 548, 0, 0, 0, 546, 554,
	0, 0, 0, 559, 0, 0, 545, 0, 549, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	550, 551, 559, 0, 0, 545, 0, 549, 0, 552,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 545, 0, 549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 545, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 0, 549, 0, 537, 538, 539, 0, 531,
	532, 533, 534, 535, 536, 0, 0, 0, 0, 1188,
	547, 0, 0, 549, 537, 538, 539, 0, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 1129, 0,
	547, 0, 0, 0, 537, 538, 539, 0, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 1103, 0,
	549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 0, 0,
	0, 537, 538, 539, 0, 531, 532, 533, 534, 535,
	536, 0, 0, 0, 0, 1036, 547, 0, 0, 0,
	537, 538, 539, 0, 531, 532, 533, 534, 535, 536,
	558, 0, 0, 528, 825, 650, 547, 540, 541, 542,
	537, 538, 539, 0, 531, 532, 533, 534, 535, 536,
	0, 0, 1191, 0, 544, 0, 0, 0, 1050, 0,
	0, 0, 530, 558, 0, 0, 528, 0, 553, 0,
	540, 541, 542, 547, 0, 0, 0, 537, 538, 539,
	0, 531, 532, 533, 534, 535, 536, 544, 0, 0,
	1049, 0, 529, 0, 0, 530, 0, 0, 557, 0,
	0, 553, 0, 558, 0, 0, 528, 0, 0, 0,
	540, 541, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 544, 0, 0,
	556, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 553, 0, 0, 0, 558, 0, 0, 528, 0,
	0, 0, 540, 541, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 0, 529, 528, 0, 0, 544,
	540, 541, 542, 0, 1278, 0, 0, 530, 0, 0,
	0, 0, 558, 553, 0, 528, 0, 544, 0, 540,
	541, 542, 0, 0, 0, 530, 0, 548, 0, 0,
	0, 553, 554, 0, 0, 0, 544, 529, 0, 1014,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	553, 0, 0, 550, 551, 529, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 554, 0, 0, 546, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 550, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	548, 546, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 550, 551, 0, 0,
	0, 0, 552, 0, 1277, 0, 0, 0, 0, 0,
	0, 546, 548, 0, 0, 559, 0, 554, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 554, 0, 0, 550, 551,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 546, 554, 559, 550, 551, 545, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 0, 0, 549, 559, 0, 0,
	545, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 545, 0,
	0, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1019, 559, 0, 549, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 0, 0,
	537, 538, 539, 0, 531, 532, 533, 534, 535, 536,
	0, 0, 0, 0, 558, 0, 0, 528, 549, 0,
	0, 540, 541, 542, 0, 0, 0, 0, 0, 547,
	0, 0, 0, 537, 538, 539, 549, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 530, 1125, 0, 0,
	0, 0, 553, 0, 0, 549, 0, 0, 0, 0,
	0, 0, 0, 558, 0, 0, 528, 0, 0, 547,
	540, 541, 542, 537, 538, 539, 529, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 544, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 547, 0, 0, 0, 537, 538, 539, 0, 531,
	532, 533, 534, 535, 536, 529, 0, 0, 0, 547,
	0, 0, 0, 537, 538, 539, 0, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 0, 547, 0,
	0, 0, 537, 538, 539, 0, 531, 532, 533, 534,
	535, 536, 0, 558, 0, 0, 528, 0, 0, 0,
	540, 541, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 0, 0, 0, 554, 544, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 529, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 0, 550, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 0, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 0, 0, 0, 0, 550, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 537, 538, 539, 0, 531, 532,
	533, 534, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	0, 0, 0, 537, 538, 539, 549, 531, 532, 533,
	534, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 547,
	0, 0, 0, 537, 538, 539, 0, 531, 532, 533,
	534, 535, 536,
}
var yyPact = [...]int{

	-196, -1000, -325, -1000, -1000, -1000, 204, -196, 435, -334,
	11205, -224, -1000, -1000, 643, 429, 429, 429, 408, -265,
	-273, 5973, 5973, -1000, 117, -224, -1000, -178, 10771, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	5537, 215, 286, 284, 86, 120, 240, -1000, 6417, 234,
	7725, 124, -196, -1000, -1000, -196, -196, 7725, -1000, -1000,
	-1000, -335, -1000, 13944, -1000, -1000, 7725, 7725, 7725, 7725,
	7725, 76, -1000, -1000, 4229, -1000, -1000, -327, -197, -267,
	-1000, -1000, -1000, -258, -199, -327, -1000, -1000, -1000, 203,
	499, 183, -1000, -1000, -1000, 7725, 289, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 261, -1000,
	-202, -203, -204, -205, -1000, -1000, -1000, -1000, -1000, -1000,
	-206, -209, -210, -212, -213, -215, -216, 56, -1000, -118,
	-1000, -118, -118, -233, -233, -232, -1000, -1000, 386, -118,
	-233, -1000, -1000, -281, -280, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 116, -335, -217, -1000, -1000, -1000, 11636, -346,
	-1000, 14364, -1000, -1000, -1000, -1000, -1000, -1000, 130, 97,
	-1000, 182, -1000, -31, -1000, -1000, -1000, 14364, -1000, 153,
	-1000, -1000, -1000, 10, 14364, -1000, 72, 11636, 193, -1000,
	-1000, -1000, 193, -341, -1000, 13488, 278, 5973, 12498, 11636,
	-65, 7725, 7725, 7725, 7725, 7725, 7725, 7725, 7725, 7725,
	7725, 7725, 7725, 9469, 7725, 7725, 7725, 715, 7725, -74,
	1302, -1000, -1000, 288, -234, 322, 2481, -1000, -1000, -221,
	-1000, -1000, 473, 473, 356, 14315, 14315, -140, 13431, -337,
	-344, -224, -327, -1000, 2050, 7725, -1000, -1000, -1000, 5101,
	9906, 4665, -327, 2912, -1000, -1000, 501, 493, -127, 14364,
	78, -226, -228, 493, 493, 493, 493, 7725, 388, 7725,
	7725, 7725, 7725, 7725, -1000, -231, -1000, -1000, -1000, -1000,
	7725, -1000, -1000, 493, -118, -118, -1000, -1000, 493, -1000,
	-70, -71, 493, -1000, 493, -1000, -15, 278, 7725, -275,
	5537, -1000, -1000, -104, -1000, 10, -1000, 7725, -1000, 493,
	493, -1000, -1000, -1000, -1000, -1000, 161, -351, -1000, 7725,
	1121, -167, -1000, -1000, -137, 7725, -1000, -1000, 436, 12917,
	-1000, -1000, -1000, -1000, -1000, -48, -323, -1000, -1000, -1000,
	-1000, -1000, -232, -233, -233, -233, -1000, -1000, -1000, -1000,
	-1000, -280, -281, -1000, -1000, -1000, -118, -1000, -1000, -118,
	-118, -1000, 386, -118, -1000, -318, -161, 218, 218, 274,
	274, 274, 515, 53, 53, 53, 53, 53, 53, 356,
	14315, 14464, 1452, 7725, 7725, -75, 277, -234, 1404, 7725,
	-1000, 1265, -1000, -1000, -1000, 273, -239, -1000, 8161, 8161,
	-1000, -1000, -1000, 4229, -240, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 9906, -1000, -242, 7725, -1000, 7725, -1000, -1000, -1000,
	-1000, 102, -347, -348, -1000, 14364, -1000, -276, -1000, -321,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -354, -1000, -1000, -193, 7725, 7725, -278,
	-1000, 14364, 476, -1000, -1000, -76, -1000, -77, -78, -81,
	-1000, -247, -279, 165, -1000, 7725, -1000, 10337, -136, 7725,
	-283, -284, -288, -289, 14023, -291, 272, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -292, 14004, -355, -360, -361,
	-369, 7725, -373, -293, -1000, -1000, -294, -162, -163, -295,
	-298, 11636, -137, -375, -1000, -1000, -1000, 95, 13412, -1000,
	-1000, -1000, 11636, -1000, -167, -1000, -253, -1000, 247, 243,
	7725, -39, -1000, 13904, -186, -184, 431, -1000, 493, -1000,
	-326, 2481, -322, 7725, 7725, 1389, 301, 7725, 8161, 8161,
	-1000, 7725, 294, -1000, -1000, -1000, -1000, 266, -255, -1000,
	7725, 12498, 434, -1000, 8161, 8161, 8161, 4229, -256, 342,
	-379, -1000, 4229, -299, 3793, -359, -327, 13375, -1000, 7725,
	7725, -1000, -1000, -185, -1000, 9906, -1000, -303, 7725, -1000,
	-193, -193, -1000, 7725, 7725, 146, 154, 94, -4, 493,
	499, 308, -1000, 7725, 13986, -1000, -1000, 12067, 7725, 13355,
	-1000, -1000, -1000, -1000, 12498, -1000, 7725, -1000, 264, 7725,
	-1000, -1000, -1000, -1000, -383, -1000, -1000, -150, -1000, -1000,
	-150, 379, -1000, 243, -1000, -1000, -1000, -1000, -1000, 9906,
	-1000, -1000, 230, 402, 14364, 7725, 188, 185, 7725, 528,
	-1000, 190, 493, -186, -192, -305, 2481, -1000, -1000, 433,
	412, 7725, 7725, 213, 199, 73, 412, 7725, 7725, 12498,
	186, -385, -1000, 7725, 12498, 8161, 8161, 8161, 8161, 8161,
	8161, 8161, 8161, 8161, 8161, 8161, 8161, 8597, 285, -258,
	466, 466, 239, -368, 3357, 7725, -1000, 13336, -1000, -387,
	-1000, 7725, -1000, -1000, 13451, 14364, -1000, -1000, 499, -1000,
	-307, -308, 14364, 14364, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -311, -1000, -1000, 14364, 7725, 68, -1000, 1598, -1000,
	-312, 14364, 252, 7725, 14364, -1000, -1000, -1000, -1000, 230,
	-313, -141, 7725, 7725, -1000, 7725, 7725, 31, -1000, -1000,
	-189, -190, 493, -1000, -1000, 412, 412, 7725, 7725, 7725,
	412, 186, -389, -1000, 12498, 412, -1000, 232, 232, 269,
	269, 269, 466, 311, 311, 311, 311, 311, 311, 239,
	255, 256, -259, -1000, 7725, -393, -1000, 412, -1000, -1000,
	1565, -1000, -1000, -1000, -1000, -1000, 14364, 88, 401, -1000,
	-1000, -1000, 7725, 14364, -141, -1000, -1000, 11636, 14364, -370,
	-1000, 14364, -1000, -1000, -260, 7725, -1000, -1000, -191, 412,
	412, 412, -1000, -1000, 8161, 254, -262, -1000, 12498, 135,
	-1000, -1000, 48, 7725, 14364, -1000, -380, -1000, 428, 7725,
	527, 14364, -1000, 1533, 8161, 12498, -395, -1000, -314, 7289,
	7289, -402, 11636, -266, -1000, -397, -1000, 1533, -401, -1000,
	-1000, -1000, -1000, 9033, 180, 4, 13871, -1000, -1000, -1000,
	519, -1000, -1000, 442, -1000, -1000, -1000, -1000, -1000, -1000,
	6853, -1000,
}
var yyPgo = [...]int{

	0, 841, 840, 584, 45, 405, 330, 839, 838, 486,
	835, 214, 834, 13, 43, 743, 282, 252, 42, 830,
	827, 27, 39, 7, 522, 826, 824, 26, 20, 49,
	40, 823, 823, 36, 14, 821, 819, 814, 813, 812,
	811, 810, 809, 371, 807, 318, 369, 806, 805, 798,
	795, 793, 339, 791, 361, 784, 778, 777, 776, 776,
	29, 295, 775, 15, 21, 6, 775, 773, 769, 11,
	764, 0, 760, 19, 750, 12, 33, 2, 489, 37,
	79, 732, 18, 726, 915, 724, 721, 718, 671, 668,
	28, 41, 667, 468, 47, 654, 651, 650, 30, 22,
	649, 628, 624, 8, 4, 1, 622, 619, 618, 616,
	3, 10, 48, 23, 31, 614, 610, 609, 38, 9,
	608, 44, 473, 32, 238, 16, 599, 598, 595, 308,
	25, 34, 594, 279, 245, 560, 241, 223, 558, 552,
	538, 535, 191, 5, 24, 75, 535,
}
var yyR1 = [...]int{

	0, 1, 1, 26, 26, 26, 27, 27, 27, 67,
	13, 13, 13, 117, 117, 118, 118, 119, 119, 130,
	130, 130, 130, 130, 130, 144, 144, 144, 131, 131,
	131, 131, 131, 131, 131, 139, 139, 139, 139, 128,
	128, 34, 34, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 85, 85, 138, 138, 140, 140,
	136, 137, 132, 132, 141, 141, 133, 134, 135, 135,
	135, 135, 135, 135, 79, 79, 28, 28, 142, 142,
	142, 142, 145, 80, 80, 80, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	113, 113, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 97, 97, 97, 97, 97, 100, 100, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 19, 19, 20, 20, 20, 20, 20, 18, 18,
	18, 56, 56, 56, 120, 120, 120, 120, 120, 120,
	11, 11, 98, 98, 99, 99, 99, 143, 143, 114,
	114, 114, 115, 115, 37, 37, 38, 38, 38, 38,
	38, 38, 38, 38, 39, 39, 40, 41, 42, 2,
	2, 4, 4, 3, 3, 3, 3, 5, 5, 6,
	6, 6, 6, 6, 6, 6, 29, 78, 78, 78,
	10, 10, 12, 12, 23, 23, 24, 25, 25, 22,
	22, 73, 73, 74, 74, 75, 77, 77, 52, 52,
	51, 51, 53, 53, 54, 55, 55, 55, 55, 57,
	57, 103, 103, 102, 102, 104, 106, 106, 106, 105,
	107, 107, 108, 108, 109, 109, 109, 110, 110, 111,
	111, 111, 111, 111, 36, 36, 36, 36, 43, 43,
	43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
	48, 49, 49, 49, 50, 30, 30, 31, 31, 7,
	7, 21, 21, 32, 32, 35, 35, 94, 94, 94,
	95, 95, 96, 70, 70, 70, 69, 69, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	71, 71, 72, 72, 76, 76, 86, 89, 89, 90,
	88, 88, 87, 87, 116, 116, 60, 60, 60, 60,
	61, 61, 62, 62, 33, 33, 91, 91, 92, 92,
	93, 8, 8, 9, 9, 14, 14, 14, 14, 58,
	58, 64, 59, 59, 66, 63, 127, 127, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 84,
	82, 81, 81, 81, 65, 65, 65, 124, 124, 124,
	146, 146, 146, 146, 121, 121, 121, 121, 121, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 0, 2, 2, 0, 1,
	1, 3, 2, 1, 2, 2, 3, 1, 3, 2,
	3, 5, 6, 2, 3, 3, 4, 0, 1, 1,
	1, 1, 1, 2, 4, 1, 1, 1, 1, 2,
	3, 3, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 1, 1, 1, 1,
	5, 2, 1, 1, 1, 1, 5, 2, 2, 2,
	1, 3, 3, 2, 1, 0, 3, 0, 5, 2,
	5, 2, 1, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	1, 4, 1, 3, 3, 5, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 6, 3, 4, 1, 3, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 5, 6, 6, 7, 3, 4, 1,
	1, 4, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 3, 5, 6, 6, 4, 3, 1, 5, 1,
	1, 4, 1, 4, 1, 4, 1, 4, 1, 1,
	1, 1, 1, 1, 6, 4, 4, 4, 4, 4,
	4, 1, 3, 3, 4, 4, 7, 5, 2, 2,
	0, 1, 2, 0, 1, 4, 1, 2, 1, 2,
	1, 3, 1, 3, 1, 3, 3, 1, 3, 3,
	3, 2, 1, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 2, 2, 2, 1,
	1, 3, 3, 1, 2, 4, 4, 1, 1, 9,
	9, 1, 2, 4, 4, 4, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 3, 1, 3, 4,
	3, 3, 0, 1, 3, 1, 2, 0, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 2,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 2, 2, 0, 1, 4, 2,
	2, 2, 2, 2, 1, 2, 2, 4, 2, 2,
	1, 1, 1, 0, 2, 5, 2, 3, 1, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 0, 5, 0, 5, 0, 4, 3, 5,
	4, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 1, 4, 1, 3, 5, 1, 2, 4,
	2, 0, 1, 0, 1, 2, 2, 2, 3, 5,
	1, 2, 0, 2, 1, 0, 1, 1, 1, 3,
	3, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 2, 6, 2, 3, 5, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -2, -3, -4, -6, -5, 452, 330, -7,
	363, 403, 455, -24, -23, 389, 198, 137, 265, -3,
	-4, -12, -10, 27, 122, 456, -36, -64, 260, -65,
	4, -122, -123, 19, 20, 21, 22, 23, 24, 25,
	26, 28, 29, 30, 38, 39, 41, 42, 44, 45,
	46, 53, 54, 55, 56, 57, 60, 61, 64, 66,
	67, 68, 69, 74, 75, 76, 77, 79, 80, 81,
	83, 84, 85, 86, 87, 88, 91, 92, 93, 101,
	102, 103, 104, 105, 106, 109, 111, 113, 114, 115,
	116, 117, 119, 120, 121, 124, 125, 126, 127, 128,
	130, 131, 132, 134, 135, 136, 138, 139, 140, 141,
	143, 144, 145, 148, 150, 151, 153, 155, 157, 161,
	162, 163, 165, 169, 171, 172, 173, 174, 175, 177,
	178, 179, 180, 182, 183, 184, 185, 186, 187, 189,
	192, 193, 194, 195, 201, 204, 206, 207, 208, 209,
	210, 213, 216, 219, 220, 221, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 242, 243, 246, 247, 249, 252, 254, 255, 256,
	258, 261, 262, 263, 266, 269, 272, 273, 274, 275,
	276, 277, 278, 280, 281, 283, 286, 287, 285, 289,
	290, 291, 292, 293, 294, 295, 296, 298, 299, 300,
	301, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	312, 313, 315, 316, 318, 319, 320, 322, 323, 324,
	325, 326, 327, 328, 329, 331, 332, 333, 334, 335,
	337, 338, 340, 341, 343, 344, 346, 348, 349, 350,
	351, 352, 353, 354, 355, 356, 357, 358, 361, 362,
	364, 366, 367, 368, 369, 370, 376, 377, 379, 382,
	383, 384, 385, 386, 387, 388, 391, 392, 393, 394,
	395, 398, 399, 400, 401, 402, 406, 408, 409, 410,
	411, 414, 417, 418, 419, 420, 421, 422, 432, 433,
	434, 47, 48, 50, 51, 62, 63, 70, 107, 108,
	142, 146, 152, 166, 168, 191, 196, 197, 199, 214,
	239, 241, 244, 251, 253, 267, 271, 282, 284, 297,
	321, 339, 345, 359, 372, 373, 378, 380, 403, 404,
	423, 424, 425, 426, 427, 428, 429, 430, 431, -93,
	452, -52, -43, -53, 154, -45, -46, -54, 218, 149,
	257, -55, -78, 27, 122, -78, -78, 53, 453, 453,
	-8, -9, -14, -15, 445, -17, 443, 444, -71, 245,
	435, -94, -116, -83, 452, -86, -100, -4, 142, 35,
	-95, -96, 9, 261, 321, -65, -84, 5, -82, -127,
	-139, -145, 381, 147, 250, 58, -97, -101, 4, -122,
	10, 6, -124, -129, -140, -141, -142, 199, 72, 95,
	98, 99, 222, 223, 96, 100, 336, 396, 94, 97,
	59, 146, 271, 70, 166, 214, 424, 126, 48, 50,
	51, 62, 63, 107, 108, 152, 196, 197, 239, 241,
	253, 297, 345, 372, 373, 404, -125, -136, -137, -133,
	-134, 43, 49, 78, 90, 158, 160, 176, 190, 202,
	203, 205, 215, 217, 240, 248, 268, 270, 317, 342,
	365, 407, -135, -9, 259, -93, 445, -64, 452, -92,
	-91, -15, 110, -44, -43, -51, -52, -54, 154, 296,
	395, 243, 340, 206, -46, -45, -47, -15, 27, -31,
	151, 242, -48, -50, -15, -17, -57, 255, -5, -6,
	-4, -5, -5, -25, -22, -15, -29, 456, 12, 71,
	41, 443, 444, 445, 446, 447, 448, 439, 440, 441,
	16, 17, 18, -71, 33, 264, 217, 435, 176, 342,
	202, 203, 248, 47, 181, -120, 36, 4, 9, 261,
	-69, -68, -15, -15, -15, -15, -15, 270, -15, -4,
	-11, 403, -61, -60, 454, 450, -4, -4, -114, 450,
	452, 452, -61, 452, -82, -82, -82, 452, -87, -15,
	-35, 150, 154, 452, 452, 452, 452, 452, 452, 452,
	452, 452, 452, 452, 284, -79, 406, -79, -79, -34,
	452, -34, -85, 452, 63, 62, -79, -34, 452, -80,
	437, 418, 452, -80, 452, -28, 63, -29, 452, -64,
	456, 453, 260, 206, 340, -49, -81, 452, -84, 443,
	444, -30, 321, 322, -56, 249, 344, -58, -64, 456,
	397, -26, 37, 118, -18, 159, -14, -130, -131, 339,
	-128, -129, -138, -132, -142, -145, -124, 196, 197, 345,
	48, 297, 152, 108, 107, 253, 51, -136, -137, -133,
	-134, 373, 372, 199, 4, -122, 50, 72, 97, 63,
	62, 404, 239, 241, -117, -65, 372, -15, -15, -15,
	-15, -15, -15, -15, -15, -15, -15, -15, -15, -15,
	-15, -15, -15, 217, 176, 342, 47, 181, -15, 374,
	250, 245, 381, 147, 391, 122, 255, 124, -33, 360,
	40, -76, -4, 452, -70, 34, 347, 27, -121, 4,
	-122, -123, -125, -126, 27, 31, 32, 33, 34, 35,
	36, 37, 40, 52, 58, 59, 65, 71, 73, 82,
	89, 94, 95, 96, 98, 99, 100, 110, 112, 118,
	122, 123, 129, 133, 137, 147, 149, 154, 156, 159,
	164, 167, 170, 181, 188, 198, 200, 211, 212, 218,
	222, 223, 245, 250, 257, 259, 260, 264, 265, 279,
	288, 302, 314, 330, 336, 347, 360, 363, 371, 374,
	375, 381, 389, 390, 396, 397, 405, 412, 413, 415,
	416, 452, -94, 321, 452, 453, 456, -60, -63, 445,
	-121, -15, -11, -115, 451, -15, -114, -119, -69, -65,
	9, 443, 444, 445, 446, 447, 448, 439, 440, 441,
	16, 17, 18, -11, 453, 453, -98, 27, 122, 445,
	-99, -15, -67, -124, -112, 432, 235, 105, 173, 232,
	-113, 328, -84, -89, -90, 412, -106, 269, 452, 452,
	-84, -84, -84, -84, -15, -37, -38, 4, 432, 235,
	105, 173, 232, 328, -82, -39, -15, -11, -11, -11,
	-11, 452, -11, -84, -79, -79, -84, 372, 372, -84,
	-84, 337, -18, -11, 453, -91, 395, -30, -15, -84,
	-84, 226, 456, -22, -72, -69, 261, -27, 436, -21,
	413, -13, -20, -15, -144, 35, -131, -112, 452, -34,
	-118, 454, -118, 434, 135, -15, -15, 374, -33, 360,
	-76, 135, -15, 250, 381, 147, 391, 122, 255, 124,
	159, 452, -16, -17, 443, 444, -71, 452, 321, -16,
	-11, -4, 452, -119, 452, -11, -62, -15, 451, 457,
	456, 451, 451, 456, 453, 454, 453, -23, 456, -24,
	-98, -98, 453, 14, 15, 374, 374, 374, 374, 452,
	453, -88, -90, 129, -15, -105, -65, 452, 413, -15,
	453, 453, 453, 453, 36, 453, 159, 453, -40, 279,
	453, 453, 453, 453, -11, 453, 453, 453, 434, 434,
	453, 453, -65, -21, 453, 260, 453, -64, -27, 452,
	151, 210, -73, 167, -15, 456, 90, 240, 205, 36,
	4, 450, 450, -144, 35, -84, 454, -34, -63, -15,
	-15, 135, 135, -15, -16, -16, -15, 135, 159, 452,
	-15, -143, -130, 33, 12, 443, 444, 445, 446, 447,
	448, 439, 440, 441, 16, 17, 18, -71, 202, 261,
	-16, -16, -16, -11, 452, 33, 453, -15, 453, -11,
	453, 456, -60, 453, -15, -15, -114, -119, 453, -99,
	-23, -23, -15, -15, 235, 173, 232, -113, 232, -113,
	-113, -84, -82, 133, -15, 371, -107, -65, -15, 453,
	-130, -15, -41, 159, -15, 453, -80, -80, -28, -73,
	-119, -77, 170, 53, -13, 205, 205, -13, 4, 451,
	-84, -84, 450, 453, -63, -15, -15, 135, 33, 33,
	-15, -15, -143, 453, 456, -15, -130, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	122, 245, 255, 124, 456, -11, 453, -15, 453, 453,
	-15, 451, -82, 453, 453, 453, -15, -108, 276, 453,
	453, -42, 154, -15, -77, 453, -103, 415, -15, -74,
	-75, -15, -13, -13, 397, 259, 451, 451, -84, -15,
	-15, -15, 453, -130, 159, 122, 255, 124, 452, -15,
	453, 453, -23, 53, -15, -103, -102, -104, -65, 456,
	452, -15, 451, -16, 159, 452, -143, 453, -109, 295,
	322, -11, 456, 36, -75, -19, 4, -16, -143, 453,
	453, -110, -111, 47, 386, 93, -15, -110, -104, -105,
	456, 453, 453, -111, 283, 153, 321, 283, 153, 4,
	33, -111,
}
var yyDef = [...]int{

	0, -2, 1, 279, -2, -2, 305, 0, 303, 291,
	0, 0, 2, -2, 0, 299, 299, 299, 0, 0,
	288, 442, 0, 302, 300, 0, 292, 354, 0, 451,
	474, 475, 476, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 379,
	0, 363, 321, 318, 0, 360, 361, 322, 0, 0,
	0, 330, 0, 297, 298, 0, 0, 0, 281, 282,
	296, 441, 443, 447, 448, 102, 0, 0, 0, 0,
	0, 0, 189, 190, 0, 192, 193, 194, 766, 0,
	199, 200, 410, 637, 786, 424, 458, 459, 460, 0,
	0, 0, 466, 467, 468, 423, 386, 207, -2, -2,
	469, 470, 456, 35, 36, 37, 38, -2, 807, 209,
	210, 212, 214, 216, 218, 219, 220, 221, 222, -2,
	0, 767, 782, 763, 769, 775, 797, 553, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 776, -2,
	-2, -2, -2, -2, -2, -2, 479, 58, 59, 64,
	65, 805, 806, 808, 809, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 77, 296, 0, 380, 355, 356, 0, 0,
	438, 436, 437, 285, 362, 286, 320, 323, 0, 0,
	325, 0, 327, 0, 358, 359, 364, 368, 369, 373,
	377, 378, 366, 0, 370, -2, 243, 0, 293, 287,
	288, 294, 295, 306, 307, 5, 240, 0, 0, 0,
	0, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 122, 0, 0, 246, 0, 248, 0,
	0, 140, 142, 435, 0, 0, 0, 446, -2, 0,
	244, 397, 106, 107, 121, 125, 126, 0, 250, -2,
	0, 794, 195, 430, 0, 0, 196, 197, 198, 0,
	0, 0, -2, 0, 461, 463, 99, 0, 0, 422,
	338, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 49, 61, 74, 69, 68, 51,
	0, 50, 48, 0, 75, 75, 73, 52, 0, 81,
	0, 0, 0, 79, 0, 67, 0, 240, 0, 0,
	0, 440, 319, 0, 328, 0, 371, 0, 471, 0,
	0, 367, 375, 376, 324, 241, 0, 329, 449, 0,
	0, 8, 3, 4, 382, 0, 444, 103, 27, 0,
	28, 29, 30, 31, 32, 99, 42, 43, 44, 45,
	46, 47, 55, 42, 42, 42, 53, 56, 57, 62,
	63, 85, 85, 82, 477, 478, 75, 807, 810, 75,
	75, 70, 0, 75, 104, 13, 0, 108, 109, 110,
	111, 112, 113, -2, -2, -2, -2, -2, -2, 120,
	123, 124, -2, 247, 249, 0, 435, 0, -2, 0,
	139, 0, 144, 146, 148, 0, 0, 162, 0, 0,
	434, 158, 414, 0, 0, 393, 394, 395, 445, 484,
	485, 486, 487, 488, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 0, 143, 0, 0, 432, 0, 431, 426, 427,
	455, 0, 0, 0, 261, 250, 262, 0, 17, 0,
	396, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 0, -2, 201, 305, 0, 0, 0,
	252, 254, 0, -2, 464, 86, 87, 88, 89, 90,
	91, 100, 0, 421, 417, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 267, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 72, 0, 0, 0, 0,
	0, 0, 382, 0, 357, 439, 326, 0, 0, 472,
	473, 242, 0, 308, 8, 412, 0, 310, 0, 312,
	0, 238, 239, 10, 19, 23, 27, 33, 0, 39,
	42, 0, 14, 0, 0, -2, -2, 0, 0, 0,
	159, 0, -2, 141, 145, 147, 149, 0, 0, 163,
	0, 0, 0, 164, 0, 0, 0, 0, 786, 0,
	0, 160, 0, 0, 0, 0, 191, 251, 428, 0,
	0, 259, 260, 0, 411, 0, -2, 0, 0, 304,
	305, 305, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 336, 337, 341, 0, 0,
	211, 213, 215, 217, 0, 225, 0, 226, 0, 0,
	227, 228, 229, 230, 0, 41, 54, 85, 83, 84,
	85, 77, 76, 312, 301, 365, 372, 450, 309, 0,
	6, 7, 317, 0, 381, 0, 0, 0, 0, 0,
	12, 0, 0, 20, 24, 0, 0, 40, 15, 105,
	-2, 0, 0, -2, 0, 0, -2, 0, 0, 0,
	-2, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	166, 167, 181, 0, 0, 0, 415, 0, -2, 0,
	388, 0, 433, -2, 0, 251, 263, 18, 202, 253,
	0, 0, 255, 256, 92, 93, 94, 95, 96, 97,
	98, 0, 465, 416, 420, 0, 343, 340, 0, 208,
	0, 264, 275, 0, 276, 60, 80, 78, 66, 317,
	0, 332, 0, 0, 233, 0, 0, 0, 11, 25,
	0, 0, 0, 34, 16, -2, -2, 0, 0, 0,
	-2, -2, 0, 152, 0, -2, 165, 168, 169, 170,
	171, 172, 173, -2, -2, -2, -2, -2, -2, 180,
	0, 0, 0, 187, 0, 0, 391, -2, 161, 387,
	251, 429, 462, 203, 204, 101, 419, 305, 0, 385,
	224, 274, 0, 277, 332, 413, 289, 0, 316, 311,
	313, 315, 234, 235, 0, 0, 26, 21, 0, -2,
	-2, -2, 153, 258, 0, 0, 0, 188, 0, 251,
	390, 389, 346, 0, 278, 290, 331, 333, 0, 0,
	0, 237, 22, -2, 0, 0, 0, 392, 0, 0,
	0, 342, 0, 0, 314, 0, 231, -2, 0, 185,
	339, 344, 347, -2, 729, 534, 0, 345, 334, 335,
	0, 236, 186, 0, 349, 350, 351, 352, 353, 232,
	0, 348,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 447, 3, 3,
	452, 453, 445, 443, 456, 444, 454, 446, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 457, 455,
	439, 441, 440, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 450, 3, 451, 448,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var yyTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 442, 57782, 449, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lookahead func() int
}

func (p *yyParserImpl) Lookahead() int {
	return p.lookahead()
}

func yyNewParser() yyParser {
	p := &yyParserImpl{
		lookahead: func() int { return -1 },
	}
	return p
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := make([]yySymType, yyMaxDepth)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yychar := -1
	yytoken := -1 // yychar translated into internal numbering
	yyrcvr.lookahead = func() int { return yychar }
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yychar = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yychar < 0 {
		yychar, yytoken = yylex1(yylex, &yylval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yychar = -1
		yytoken = -1
		yyVAL = yylval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yychar < 0 {
			yychar, yytoken = yylex1(yylex, &yylval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yychar = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:378
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:383
		{
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
			yyVAL.sqlSelect.Semicolon = true
			yylex.(*sqlLex).stmt = yyDollar[1].sqlSelect
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:390
		{
			yyVAL.str = "asc"
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:391
		{
			yyVAL.str = "desc"
		}
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:392
		{
			yyVAL.str = ""
		}
	case 6:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:395
		{
			yyVAL.str = "first"
		}
	case 7:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:396
		{
			yyVAL.str = "last"
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:397
		{
			yyVAL.str = ""
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:406
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:410
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 12:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:414
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:421
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 14:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:425
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
			yyVAL.anyName = append(yyVAL.anyName, yyDollar[2].anyName...)
		}
	case 15:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:432
		{
			yyVAL.anyName = AnyName{yyDollar[2].str}
		}
	case 16:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:436
		{
			yyVAL.anyName = append(yyDollar[1].anyName, yyDollar[3].str)
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:442
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:446
		{
			yyVAL.anyName = append(AnyName{yyDollar[1].str}, yyDollar[3].anyName...)
		}
	case 19:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:462
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayBounds = yyDollar[2].optArrayBounds
		}
	case 20:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:467
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayBounds = yyDollar[3].optArrayBounds
		}
	case 21:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:474
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyDollar[4].iconst}
		}
	case 22:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:480
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
			yyVAL.pgType.ArrayBounds = []IntegerConst{yyDollar[5].iconst}
		}
	case 23:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:487
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.ArrayWord = true
		}
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:492
		{
			yyVAL.pgType = yyDollar[2].pgType
			yyVAL.pgType.Setof = true
			yyVAL.pgType.ArrayWord = true
		}
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:500
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, "")
		}
	case 26:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:504
		{
			yyVAL.optArrayBounds = append(yyDollar[1].optArrayBounds, yyDollar[3].iconst)
		}
	case 27:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:508
		{
			yyVAL.optArrayBounds = nil
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:517
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, OptInterval: yyDollar[2].optInterval}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:521
		{
			yyVAL.pgType = PgType{Name: AnyName{"interval"}, TypeMods: []Expr{yyDollar[3].iconst}}
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:552
		{
			yyVAL.pgType = PgType{Name: AnyName{yyDollar[1].str}, TypeMods: yyDollar[2].fields}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:556
		{
			yyVAL.pgType = PgType{Name: append(AnyName{yyDollar[1].str}, yyDollar[2].anyName...), TypeMods: yyDollar[3].fields}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:561
		{
			yyVAL.fields = yyDollar[2].fields
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:562
		{
			yyVAL.fields = nil
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:569
		{
			yyVAL.pgType = PgType{Name: AnyName{"int"}}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:573
		{
			yyVAL.pgType = PgType{Name: AnyName{"integer"}}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:577
		{
			yyVAL.pgType = PgType{Name: AnyName{"smallint"}}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:581
		{
			yyVAL.pgType = PgType{Name: AnyName{"bigint"}}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:585
		{
			yyVAL.pgType = PgType{Name: AnyName{"real"}}
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:589
		{
			yyVAL.pgType = PgType{Name: AnyName{"float"}}
			if yyDollar[2].iconst != IntegerConst("") {
				yyVAL.pgType.TypeMods = []Expr{yyDollar[2].iconst}
			}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:596
		{
			yyVAL.pgType = PgType{Name: AnyName{"double precision"}}
		}
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:600
		{
			yyVAL.pgType = PgType{Name: AnyName{"decimal"}, TypeMods: yyDollar[2].fields}
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:604
		{
			yyVAL.pgType = PgType{Name: AnyName{"dec"}, TypeMods: yyDollar[2].fields}
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:608
		{
			yyVAL.pgType = PgType{Name: AnyName{"numeric"}, TypeMods: yyDollar[2].fields}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:612
		{
			yyVAL.pgType = PgType{Name: AnyName{"bool"}}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:618
		{
			yyVAL.iconst = yyDollar[2].iconst
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:622
		{
			yyVAL.iconst = IntegerConst("")
		}
	case 60:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:636
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType.Name = AnyName{"varbit"}
			} else {
				yyVAL.pgType.Name = AnyName{"bit"}
			}
			yyVAL.pgType.TypeMods = yyDollar[4].fields
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:648
		{
			yyVAL.pgType = PgType{}
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varbit"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"bit"}}
			}
		}
	case 66:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:671
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.TypeMods = []Expr{yyDollar[3].iconst}
			yyVAL.pgType.CharSet = yyDollar[5].str
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:679
		{
			yyVAL.pgType = yyDollar[1].pgType
			yyVAL.pgType.CharSet = yyDollar[2].str
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:686
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:694
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:702
		{
			yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:706
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:714
		{
			if yyDollar[3].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:722
		{
			if yyDollar[2].boolean {
				yyVAL.pgType = PgType{Name: AnyName{"varchar"}}
			} else {
				yyVAL.pgType = PgType{Name: AnyName{"char"}}
			}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:732
		{
			yyVAL.boolean = true
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:736
		{
			yyVAL.boolean = false
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:742
		{
			yyVAL.str = yyDollar[3].str
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:746
		{
			yyVAL.str = ""
		}
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:755
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, TypeMods: []Expr{yyDollar[3].iconst}, WithTimeZone: yyDollar[5].boolean}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:759
		{
			yyVAL.pgType = PgType{Name: AnyName{"timestamp"}, WithTimeZone: yyDollar[2].boolean}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:763
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, TypeMods: []Expr{yyDollar[3].iconst}, WithTimeZone: yyDollar[5].boolean}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:767
		{
			yyVAL.pgType = PgType{Name: AnyName{"time"}, WithTimeZone: yyDollar[2].boolean}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:776
		{
			yyVAL.boolean = true
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:780
		{
			yyVAL.boolean = false
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:784
		{
			yyVAL.boolean = false
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:790
		{
			yyVAL.optInterval = &OptInterval{Left: "year"}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:794
		{
			yyVAL.optInterval = &OptInterval{Left: "month"}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:798
		{
			yyVAL.optInterval = &OptInterval{Left: "day"}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:802
		{
			yyVAL.optInterval = &OptInterval{Left: "hour"}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:806
		{
			yyVAL.optInterval = &OptInterval{Left: "minute"}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:810
		{
			yyVAL.optInterval = &OptInterval{Second: yyDollar[1].intervalSecond}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:814
		{
			yyVAL.optInterval = &OptInterval{Left: "year", Right: "month"}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:818
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "hour"}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:822
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Right: "minute"}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:826
		{
			yyVAL.optInterval = &OptInterval{Left: "day", Second: yyDollar[3].intervalSecond}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:830
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Right: "minute"}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:834
		{
			yyVAL.optInterval = &OptInterval{Left: "hour", Second: yyDollar[3].intervalSecond}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:838
		{
			yyVAL.optInterval = &OptInterval{Left: "minute", Second: yyDollar[3].intervalSecond}
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:842
		{
			yyVAL.optInterval = nil
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:848
		{
			yyVAL.intervalSecond = &IntervalSecond{}
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:852
		{
			yyVAL.intervalSecond = &IntervalSecond{Precision: yyDollar[3].iconst}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:888
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:892
		{
			yyVAL.expr = CollateExpr{Expr: yyDollar[1].expr, Collation: yyDollar[3].anyName}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:896
		{
			yyVAL.expr = AtTimeZoneExpr{Expr: yyDollar[1].expr, TimeZone: yyDollar[5].expr}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:909
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyDollar[2].expr}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:913
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyDollar[2].expr}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:917
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"+"}, Right: yyDollar[3].expr}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:921
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"-"}, Right: yyDollar[3].expr}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:925
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"*"}, Right: yyDollar[3].expr}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:929
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"/"}, Right: yyDollar[3].expr}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:933
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"%"}, Right: yyDollar[3].expr}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:937
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"^"}, Right: yyDollar[3].expr}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:941
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<"}, Right: yyDollar[3].expr}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:945
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">"}, Right: yyDollar[3].expr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:949
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"="}, Right: yyDollar[3].expr}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:953
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<="}, Right: yyDollar[3].expr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:957
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">="}, Right: yyDollar[3].expr}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:961
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"!="}, Right: yyDollar[3].expr}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:965
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].anyName, Right: yyDollar[3].expr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:969
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].anyName, Expr: yyDollar[2].expr}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:973
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].anyName}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:977
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "and", Right: yyDollar[3].expr}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:981
		{
			yyVAL.expr = BooleanExpr{Left: yyDollar[1].expr, Operator: "or", Right: yyDollar[3].expr}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:985
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:989
		{
			yyVAL.expr = NotExpr{Expr: yyDollar[2].expr}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:993
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:997
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "like", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1001
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr}
		}
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1005
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not like", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1009
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr}
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1013
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "ilike", Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1017
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1021
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not ilike", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1026
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1030
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "similar to", Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1034
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr}
		}
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1038
		{
			yyVAL.expr = TextOpWithEscapeExpr{Left: yyDollar[1].expr, Operator: "not similar to", Right: yyDollar[5].expr, Escape: yyDollar[7].expr}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1051
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "null"}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1055
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "null"}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1059
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "null"}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1063
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "null"}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1067
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].row, Operator: AnyName{"overlaps"}, Right: yyDollar[3].row}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1071
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "true"}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1075
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "true"}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1079
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "false"}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1083
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "false"}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1087
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "unknown"}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1091
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "unknown"}
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1095
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is distinct from"}, Right: yyDollar[5].expr}
		}
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1099
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is not distinct from"}, Right: yyDollar[6].expr}
		}
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1103
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1107
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1111
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1115
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1119
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Symmetric: true, Left: yyDollar[4].expr, Right: yyDollar[6].expr}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1123
		{
			yyVAL.expr = BetweenExpr{Expr: yyDollar[1].expr, Not: true, Symmetric: true, Left: yyDollar[5].expr, Right: yyDollar[7].expr}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1127
		{
			yyVAL.expr = InExpr{Value: yyDollar[1].expr, In: yyDollar[3].expr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1131
		{
			yyVAL.expr = InExpr{Value: yyDollar[1].expr, Not: true, In: yyDollar[4].expr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1135
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyDollar[1].expr, Op: yyDollar[2].subqueryOp, Type: yyDollar[3].str, Query: yyDollar[4].sqlSelect}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1139
		{
			yyVAL.expr = SubqueryOpExpr{Value: yyDollar[1].expr, Op: yyDollar[2].subqueryOp, Type: yyDollar[3].str, Query: ParenExpr{Expr: yyDollar[5].expr}}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1143
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "document"}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1147
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "document"}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1162
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1166
		{
			yyVAL.expr = TypecastExpr{Expr: yyDollar[1].expr, Typename: yyDollar[3].pgType}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1170
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"+"}, Expr: yyDollar[2].expr}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1174
		{
			yyVAL.expr = UnaryExpr{Operator: AnyName{"-"}, Expr: yyDollar[2].expr}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1178
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"+"}, Right: yyDollar[3].expr}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1182
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"-"}, Right: yyDollar[3].expr}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1186
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"*"}, Right: yyDollar[3].expr}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1190
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"/"}, Right: yyDollar[3].expr}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1194
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"%"}, Right: yyDollar[3].expr}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1198
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"^"}, Right: yyDollar[3].expr}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1202
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<"}, Right: yyDollar[3].expr}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1206
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">"}, Right: yyDollar[3].expr}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1210
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"="}, Right: yyDollar[3].expr}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1214
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"<="}, Right: yyDollar[3].expr}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1218
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{">="}, Right: yyDollar[3].expr}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1222
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"!="}, Right: yyDollar[3].expr}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1226
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].anyName, Right: yyDollar[3].expr}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1230
		{
			yyVAL.expr = UnaryExpr{Operator: yyDollar[1].anyName, Expr: yyDollar[2].expr}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1234
		{
			yyVAL.expr = PostfixExpr{Expr: yyDollar[1].expr, Operator: yyDollar[2].anyName}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1238
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is distinct from"}, Right: yyDollar[5].expr}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1242
		{
			yyVAL.expr = BinaryExpr{Left: yyDollar[1].expr, Operator: AnyName{"is not distinct from"}, Right: yyDollar[6].expr}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1246
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Types: yyDollar[5].pgTypes}
		}
	case 186:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1250
		{
			yyVAL.expr = IsOfExpr{Expr: yyDollar[1].expr, Not: true, Types: yyDollar[6].pgTypes}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1254
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Op: "document"}
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1258
		{
			yyVAL.expr = IsExpr{Expr: yyDollar[1].expr, Not: true, Op: "document"}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1271
		{
			yyVAL.expr = yyDollar[1].columnRef
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1272
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1280
		{
			yyVAL.expr = ParenExpr{Expr: yyDollar[2].expr, Indirection: yyDollar[4].indirection}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1283
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1284
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1286
		{
			yyVAL.expr = yyDollar[1].sqlSelect
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1290
		{
			yyDollar[1].sqlSelect.ParenWrapped = false
			yyVAL.expr = ParenExpr{Expr: yyDollar[1].sqlSelect, Indirection: yyDollar[2].indirection}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1295
		{
			yyVAL.expr = ExistsExpr(*yyDollar[2].sqlSelect)
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1299
		{
			yyVAL.expr = ArraySubselect(*yyDollar[2].sqlSelect)
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1302
		{
			yyVAL.expr = ArrayConstructorExpr(yyDollar[2].arrayExpr)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1306
		{
			yyVAL.expr = yyDollar[1].row
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1310
		{
			yyVAL.expr = yyDollar[1].row
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1321
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1325
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Args: yyDollar[3].funcArgs, OrderClause: yyDollar[4].orderClause}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1333
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 204:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1337
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Distinct: true, Args: yyDollar[4].funcArgs, OrderClause: yyDollar[5].orderClause}
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1341
		{
			yyVAL.funcApplication = FuncApplication{Name: yyDollar[1].str, Star: true}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1357
		{
			yyVAL.expr = &FuncExpr{FuncApplication: yyDollar[1].funcApplication, FilterClause: yyDollar[2].filterClause, OverClause: yyDollar[3].overClause}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1361
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1374
		{
			yyVAL.expr = FuncApplication{Name: "collation for", Args: []FuncArg{{Expr: yyDollar[4].expr}}}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1378
		{
			yyVAL.expr = FuncExprNoParens("current_date")
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1382
		{
			yyVAL.expr = FuncExprNoParens("current_time")
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1386
		{
			yyVAL.expr = FuncApplication{Name: "current_time", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1390
		{
			yyVAL.expr = FuncExprNoParens("current_timestamp")
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1394
		{
			yyVAL.expr = FuncApplication{Name: "current_timestamp", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1398
		{
			yyVAL.expr = FuncExprNoParens("localtime")
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1402
		{
			yyVAL.expr = FuncApplication{Name: "localtime", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1406
		{
			yyVAL.expr = FuncExprNoParens("localtimestamp")
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1410
		{
			yyVAL.expr = FuncApplication{Name: "localtimestamp", Args: []FuncArg{{Expr: yyDollar[3].iconst}}}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1414
		{
			yyVAL.expr = FuncExprNoParens("current_role")
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1418
		{
			yyVAL.expr = FuncExprNoParens("current_user")
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1422
		{
			yyVAL.expr = FuncExprNoParens("session_user")
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1426
		{
			yyVAL.expr = FuncExprNoParens("user")
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1430
		{
			yyVAL.expr = FuncExprNoParens("current_catalog")
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1434
		{
			yyVAL.expr = FuncExprNoParens("current_schema")
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1438
		{
			yyVAL.expr = CastFunc{Expr: yyDollar[3].expr, Type: yyDollar[5].pgType}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1442
		{
			yyVAL.expr = ExtractExpr(*yyDollar[3].extractList)
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1446
		{
			yyVAL.expr = OverlayExpr(yyDollar[3].overlayList)
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1460
		{
			fa := FuncApplication{Name: "coalesce"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1468
		{
			fa := FuncApplication{Name: "greatest"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1476
		{
			fa := FuncApplication{Name: "least"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1484
		{
			fa := FuncApplication{Name: "xmlconcat"}
			for _, e := range yyDollar[3].fields {
				fa.Args = append(fa.Args, FuncArg{Expr: e})
			}
			yyVAL.expr = fa
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1510
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1514
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1520
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: ",", Right: yyDollar[3].expr}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1524
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "cross join", Right: yyDollar[4].expr}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1528
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "natural join", Right: yyDollar[4].expr}
		}
	case 236:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1532
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, Using: yyDollar[6].identifiers}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1536
		{
			yyVAL.expr = JoinExpr{Left: yyDollar[1].expr, Join: "join", Right: yyDollar[3].expr, On: yyDollar[5].expr}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1542
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1546
		{
			yyVAL.fromClause = &FromClause{Expr: yyDollar[2].expr}
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1549
		{
			yyVAL.fromClause = nil
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1553
		{
			yyVAL.str = "nowait"
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1554
		{
			yyVAL.str = "skip locked"
		}
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1555
		{
			yyVAL.str = ""
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1559
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{yyDollar[1].str}}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1563
		{
			yyVAL.subqueryOp = SubqueryOp{Operator: true, Name: yyDollar[3].anyName}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1567
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"like"}}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1571
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not like"}}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1575
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"ilike"}}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1579
		{
			yyVAL.subqueryOp = SubqueryOp{Name: AnyName{"not ilike"}}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1593
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1597
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1604
		{
			yyVAL.funcArgs = []FuncArg{yyDollar[1].funcArg}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1608
		{
			yyVAL.funcArgs = append(yyDollar[1].funcArgs, yyDollar[3].funcArg)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1614
		{
			yyVAL.funcArg = FuncArg{Expr: yyDollar[1].expr}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1618
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: ":=", Expr: yyDollar[3].expr}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1622
		{
			yyVAL.funcArg = FuncArg{Name: yyDollar[1].str, NameOp: "=>", Expr: yyDollar[3].expr}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1628
		{
			yyVAL.pgTypes = []PgType{yyDollar[1].pgType}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1632
		{
			yyVAL.pgTypes = append(yyDollar[1].pgTypes, yyDollar[3].pgType)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1638
		{
			yyVAL.arrayExpr = ArrayExpr(yyDollar[2].fields)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1642
		{
			yyVAL.arrayExpr = yyDollar[2].arrayExpr
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1646
		{
			yyVAL.arrayExpr = ArrayExpr{}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1652
		{
			yyVAL.arrayExpr = ArrayExpr{yyDollar[1].arrayExpr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1656
		{
			yyVAL.arrayExpr = append(yyDollar[1].arrayExpr, yyDollar[3].arrayExpr)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1662
		{
			yyVAL.extractList = &ExtractList{Extract: yyDollar[1].expr, Time: yyDollar[3].expr}
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1666
		{
			yyVAL.extractList = nil
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1674
		{
			yyVAL.expr = AnyName{yyDollar[1].str}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1675
		{
			yyVAL.expr = AnyName{"year"}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1676
		{
			yyVAL.expr = AnyName{"month"}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1677
		{
			yyVAL.expr = AnyName{"day"}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1678
		{
			yyVAL.expr = AnyName{"hour"}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1679
		{
			yyVAL.expr = AnyName{"minute"}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1680
		{
			yyVAL.expr = AnyName{"second"}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1681
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1691
		{
			yyVAL.overlayList = OverlayList{Dest: yyDollar[1].expr, Placing: yyDollar[2].expr, From: yyDollar[3].expr, For: yyDollar[4].expr}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1695
		{
			yyVAL.overlayList = OverlayList{Dest: yyDollar[1].expr, Placing: yyDollar[2].expr, From: yyDollar[3].expr}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1701
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1708
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1714
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1770
		{
			yyDollar[2].sqlSelect.ParenWrapped = true
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1774
		{
			yyVAL.sqlSelect = yyDollar[2].sqlSelect
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1778
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1784
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1789
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[3].lockingClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[4].limitClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1796
		{
			yyDollar[1].sqlSelect.OrderClause = yyDollar[2].orderClause
			yyDollar[1].sqlSelect.LimitClause = yyDollar[3].limitClause
			yyDollar[1].sqlSelect.LockingClause = yyDollar[4].lockingClause
			yyVAL.sqlSelect = yyDollar[1].sqlSelect
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1805
		{
			ss := &SelectStmt{}
			ss.SimpleSelect = *yyDollar[1].simpleSelect
			yyVAL.sqlSelect = ss
		}
	case 289:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1839
		{
			ss := &SimpleSelect{}
			ss.TargetList = yyDollar[3].fields
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:1852
		{
			ss := &SimpleSelect{}
			ss.DistinctList = yyDollar[2].fields
			ss.TargetList = yyDollar[3].fields
			ss.FromClause = yyDollar[5].fromClause
			ss.WhereClause = yyDollar[6].whereClause
			ss.GroupByClause = yyDollar[7].groupByClause
			ss.HavingClause = yyDollar[8].expr
			ss.WindowClause = yyDollar[9].windowDefinitions
			yyVAL.simpleSelect = ss
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1864
		{
			ss := &SimpleSelect{}
			ss.ValuesClause = yyDollar[1].valuesClause
			yyVAL.simpleSelect = ss
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1870
		{
			ss := &SimpleSelect{}
			ss.Table = yyDollar[2].relationExpr
			yyVAL.simpleSelect = ss
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1876
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "union"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1885
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "intersect"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1894
		{
			ss := &SimpleSelect{}
			ss.LeftSelect = yyDollar[1].sqlSelect
			ss.SetOp = "except"
			ss.SetAll = yyDollar[3].boolean
			ss.RightSelect = yyDollar[4].sqlSelect
			yyVAL.simpleSelect = ss
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1918
		{
			yyVAL.placeholder = nil
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1923
		{
			yyVAL.boolean = true
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1924
		{
			yyVAL.boolean = false
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1925
		{
			yyVAL.boolean = false
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1930
		{
			yyVAL.fields = make([]Expr, 0)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1931
		{
			yyVAL.fields = yyDollar[4].fields
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1934
		{
			yyVAL.placeholder = nil
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1935
		{
			yyVAL.placeholder = nil
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1938
		{
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1939
		{
			yyVAL.orderClause = nil
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1942
		{
			yyVAL.orderClause = yyDollar[3].orderClause
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1946
		{
			yyVAL.orderClause = &OrderClause{Exprs: []OrderExpr{yyDollar[1].orderExpr}}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1950
		{
			yyDollar[1].orderClause.Exprs = append(yyDollar[1].orderClause.Exprs, yyDollar[3].orderExpr)
			yyVAL.orderClause = yyDollar[1].orderClause
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1958
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Using: yyDollar[3].anyName, Nulls: yyDollar[4].str}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1962
		{
			yyVAL.orderExpr = OrderExpr{Expr: yyDollar[1].expr, Order: yyDollar[2].str, Nulls: yyDollar[3].str}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1987
		{
			yyVAL.groupByClause = &GroupByClause{Exprs: yyDollar[3].fields}
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1988
		{
			yyVAL.groupByClause = nil
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1992
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1996
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2009
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2010
		{
			yyVAL.expr = nil
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2013
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2014
		{
			yyVAL.lockingClause = nil
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2017
		{
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2018
		{
			yyVAL.lockingClause = nil
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2022
		{
			yyVAL.lockingClause = &LockingClause{Locks: []LockingItem{yyDollar[1].lockingItem}}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2026
		{
			yyDollar[1].lockingClause.Locks = append(yyDollar[1].lockingClause.Locks, yyDollar[2].lockingItem)
			yyVAL.lockingClause = yyDollar[1].lockingClause
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2033
		{
			yyVAL.lockingItem = LockingItem{Strength: yyDollar[1].str, LockedRels: yyDollar[2].identifiers, WaitPolicy: yyDollar[3].str}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2038
		{
			yyVAL.str = "update"
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2039
		{
			yyVAL.str = "no key update"
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2040
		{
			yyVAL.str = "share"
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2041
		{
			yyVAL.str = "key share"
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2044
		{
			yyVAL.identifiers = yyDollar[2].identifiers
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2045
		{
			yyVAL.identifiers = nil
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2053
		{
			yyVAL.windowDefinitions = yyDollar[2].windowDefinitions
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2056
		{
			yyVAL.windowDefinitions = nil
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2060
		{
			yyVAL.windowDefinitions = []WindowDefinition{yyDollar[1].windowDefinition}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2064
		{
			yyVAL.windowDefinitions = append(yyDollar[1].windowDefinitions, yyDollar[3].windowDefinition)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2070
		{
			yyVAL.windowDefinition = WindowDefinition{Name: yyDollar[1].str, Specification: yyDollar[3].windowSpecification}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2076
		{
			spec := yyDollar[2].windowSpecification
			yyVAL.overClause = &OverClause{Specification: &spec}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2081
		{
			yyVAL.overClause = &OverClause{Name: yyDollar[2].str}
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2084
		{
			yyVAL.overClause = nil
		}
	case 339:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2088
		{
			yyVAL.windowSpecification = WindowSpecification{ExistingName: yyDollar[2].str, PartitionClause: yyDollar[3].partitionClause, OrderClause: yyDollar[4].orderClause, FrameClause: yyDollar[5].frameClause}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2103
		{
			yyVAL.str = yyDollar[1].str
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2104
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2107
		{
			yyVAL.partitionClause = PartitionClause(yyDollar[3].fields)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2108
		{
			yyVAL.partitionClause = nil
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2119
		{
			yyDollar[2].frameClause.Mode = "range"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2124
		{
			yyDollar[2].frameClause.Mode = "rows"
			yyVAL.frameClause = yyDollar[2].frameClause
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2129
		{
			yyVAL.frameClause = nil
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2135
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[1].frameBound}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2139
		{
			yyVAL.frameClause = &FrameClause{Start: yyDollar[2].frameBound, End: yyDollar[4].frameBound}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2150
		{
			yyVAL.frameBound = &FrameBound{Direction: "preceding"}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2154
		{
			yyVAL.frameBound = &FrameBound{Direction: "following"}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2158
		{
			yyVAL.frameBound = &FrameBound{CurrentRow: true}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2162
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "preceding"}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2166
		{
			yyVAL.frameBound = &FrameBound{BoundExpr: yyDollar[1].expr, Direction: "following"}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2174
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].str}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2178
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[1].str, Star: true}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2182
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[2].str, Only: true}
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2186
		{
			yyVAL.relationExpr = &RelationExpr{Name: yyDollar[3].str, Only: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2194
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr, Offset: yyDollar[2].expr}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2198
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[2].expr, Offset: yyDollar[1].expr}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2202
		{
			yyVAL.limitClause = &LimitClause{Limit: yyDollar[1].expr}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2206
		{
			yyVAL.limitClause = &LimitClause{Offset: yyDollar[1].expr}
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2213
		{
			yyVAL.limitClause = nil
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2217
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2222
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2228
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2233
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2238
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2240
		{
			yyVAL.expr = nil
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2245
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2254
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2255
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2256
		{
			yyVAL.expr = IntegerConst("1")
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2263
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2267
		{
			yyVAL.placeholder = 0
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2268
		{
			yyVAL.placeholder = 0
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2271
		{
			yyVAL.placeholder = 0
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2272
		{
			yyVAL.placeholder = 0
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2276
		{
			yyVAL.valuesClause = ValuesClause{yyDollar[2].valuesRow}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2280
		{
			yyVAL.valuesClause = append(yyDollar[1].valuesClause, yyDollar[3].valuesRow)
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2297
		{
			yyVAL.whereClause = &WhereClause{Expr: yyDollar[2].expr}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2298
		{
			yyVAL.whereClause = nil
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2307
		{
			panic("TODO")
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2308
		{
			yyVAL.placeholder = nil
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2313
		{
			yyVAL.filterClause = &FilterClause{Expr: yyDollar[4].expr}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2316
		{
			yyVAL.filterClause = nil
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2328
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyDollar[3].fields}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2332
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2336
		{
			yyVAL.row = Row{Exprs: append(yyDollar[2].fields, yyDollar[4].expr)}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2342
		{
			yyVAL.row = Row{RowWord: true, Exprs: yyDollar[3].fields}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2346
		{
			yyVAL.row = Row{RowWord: true, Exprs: nil}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2352
		{
			yyVAL.row = Row{Exprs: append(yyDollar[2].fields, yyDollar[4].expr)}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2357
		{
			yyVAL.str = "any"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2358
		{
			yyVAL.str = "some"
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2359
		{
			yyVAL.str = "all"
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2362
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2363
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2366
		{
			yyVAL.str = "+"
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2367
		{
			yyVAL.str = "-"
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2368
		{
			yyVAL.str = "*"
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2369
		{
			yyVAL.str = "/"
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2370
		{
			yyVAL.str = "%"
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2371
		{
			yyVAL.str = "^"
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2372
		{
			yyVAL.str = "<"
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2373
		{
			yyVAL.str = ">"
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2374
		{
			yyVAL.str = "="
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2375
		{
			yyVAL.str = "<="
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2376
		{
			yyVAL.str = ">="
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2377
		{
			yyVAL.str = "<>"
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2380
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2381
		{
			yyVAL.anyName = yyDollar[3].anyName
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2384
		{
			yyVAL.anyName = AnyName{yyDollar[1].str}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2385
		{
			yyVAL.anyName = yyDollar[3].anyName
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2389
		{
			yyVAL.expr = yyDollar[1].sqlSelect
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2393
		{
			yyVAL.expr = ValuesRow(yyDollar[2].fields)
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2406
		{
			yyVAL.expr = CaseExpr{CaseArg: yyDollar[2].expr, WhenClauses: yyDollar[3].whenClauses, Default: yyDollar[4].expr}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2413
		{
			yyVAL.whenClauses = []WhenClause{yyDollar[1].whenClause}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2417
		{
			yyVAL.whenClauses = append(yyDollar[1].whenClauses, yyDollar[2].whenClause)
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2423
		{
			yyVAL.whenClause = WhenClause{When: yyDollar[2].expr, Then: yyDollar[4].expr}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2428
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2429
		{
			yyVAL.expr = nil
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2432
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2433
		{
			yyVAL.expr = nil
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2437
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2441
		{
			yyVAL.columnRef = ColumnRef{Name: yyDollar[1].str, Indirection: yyDollar[2].indirection}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2449
		{
			yyVAL.indirectionEl = IndirectionEl{Name: yyDollar[2].str}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2453
		{
			yyVAL.indirectionEl = IndirectionEl{Name: "*"}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2457
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2461
		{
			yyVAL.indirectionEl = IndirectionEl{LowerSubscript: yyDollar[2].expr, UpperSubscript: yyDollar[4].expr}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2466
		{
			yyVAL.indirection = Indirection{yyDollar[1].indirectionEl}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2467
		{
			yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2470
		{
			yyVAL.indirection = nil
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2472
		{
			if yyDollar[1].indirection != nil {
				yyVAL.indirection = append(yyDollar[1].indirection, yyDollar[2].indirectionEl)
			} else {
				yyVAL.indirection = Indirection{yyDollar[2].indirectionEl}
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2482
		{
			yyVAL.placeholder = nil
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2486
		{
			yyVAL.placeholder = nil
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2498
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2499
		{
			yyVAL.expr = DefaultExpr(true)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2503
		{
			yyVAL.valuesRow = ValuesRow{yyDollar[1].expr}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2507
		{
			yyVAL.valuesRow = append(yyDollar[1].valuesRow, yyDollar[3].expr)
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2518
		{
			yyVAL.valuesRow = yyDollar[2].valuesRow
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2529
		{
			yyVAL.fields = yyDollar[1].fields
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2530
		{
			yyVAL.fields = nil
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2533
		{
			yyVAL.fields = []Expr{yyDollar[1].expr}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2535
		{
			yyVAL.fields = append(yyDollar[1].fields, yyDollar[3].expr)
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2541
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[3].str}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2545
		{
			yyVAL.expr = AliasedExpr{Expr: yyDollar[1].expr, Alias: yyDollar[2].str}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2550
		{
			yyVAL.expr = ColumnRef{Name: "*"}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2564
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2568
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2581
		{
			yyVAL.str = yyDollar[1].str
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2613
		{
			yyVAL.identifiers = []string{yyDollar[1].str}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2615
		{
			yyVAL.identifiers = append(yyDollar[1].identifiers, yyDollar[3].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2620
		{
			yyVAL.str = yyDollar[1].str
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2623
		{
			yyVAL.str = yyDollar[1].str
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2636
		{
			yyVAL.str = yyDollar[1].str
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2640
		{
			panic("TODO")
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2650
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2654
		{
			yyVAL.expr = FloatConst(yyDollar[1].str)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2658
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2666
		{
			yyVAL.expr = ConstTypeExpr{Typename: PgType{Name: AnyName{yyDollar[1].str}}, Expr: yyDollar[2].expr}
		}
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2670
		{
			pgType := PgType{Name: AnyName{yyDollar[1].str}}

			/*
			 * We must use func_arg_list and opt_sort_clause in the
			 * production to avoid reduce/reduce conflicts, but we
			 * don't actually wish to allow NamedArgExpr in this
			 * context, nor ORDER BY.
			 */

			for _, arg := range yyDollar[3].funcArgs {
				if arg.Name != "" {
					yylex.Error("type modifier cannot have parameter name")
				}

				pgType.TypeMods = append(pgType.TypeMods, Expr(arg))
			}

			if yyDollar[4].orderClause != nil {
				yylex.Error("type modifier cannot have ORDER BY")
			}

			yyVAL.expr = ConstTypeExpr{Typename: pgType, Expr: yyDollar[6].expr}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2694
		{
			yyVAL.expr = ConstTypeExpr{Typename: yyDollar[1].pgType, Expr: yyDollar[2].expr}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2698
		{
			yyVAL.expr = ConstIntervalExpr{Value: yyDollar[2].expr, OptInterval: yyDollar[3].optInterval}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2702
		{
			yyVAL.expr = ConstIntervalExpr{Precision: yyDollar[3].iconst, Value: yyDollar[5].expr}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2706
		{
			yyVAL.expr = BoolConst(true)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2710
		{
			yyVAL.expr = BoolConst(false)
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2714
		{
			yyVAL.expr = NullConst{}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2718
		{
			yyVAL.iconst = IntegerConst(yyDollar[1].str)
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2719
		{
			yyVAL.expr = StringConst(yyDollar[1].str)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2722
		{
			yyVAL.expr = yyDollar[1].iconst
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2723
		{
			yyVAL.expr = "+" + yyDollar[2].iconst
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2724
		{
			yyVAL.expr = "-" + yyDollar[2].iconst
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2763
		{
			yyVAL.str = yyDollar[1].str
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2764
		{
			yyVAL.str = yyDollar[1].str
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2765
		{
			yyVAL.str = yyDollar[1].str
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2766
		{
			yyVAL.str = yyDollar[1].str
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2767
		{
			yyVAL.str = yyDollar[1].str
		}
	}
	goto yystack /* stack new state and value */
}
